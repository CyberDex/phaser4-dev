{
  "version": 3,
  "sources": ["../../phaser-genesis/dist/Phaser.js", "../src/index.ts"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, {get: all[name], enumerable: true});\n};\n\n// src/camera/index.ts\nvar camera_exports = {};\n__export(camera_exports, {\n  Camera: () => Camera,\n  StaticCamera: () => StaticCamera\n});\n\n// src/GameInstance.ts\nvar instance;\nvar frame = 0;\nvar elapsed = 0;\nvar GameInstance = {\n  get: () => {\n    return instance;\n  },\n  set: (game) => {\n    instance = game;\n  },\n  getFrame: () => {\n    return frame;\n  },\n  setFrame: (current) => {\n    frame = current;\n  },\n  getElapsed: () => {\n    return elapsed;\n  },\n  setElapsed: (current) => {\n    elapsed = current;\n  }\n};\n\n// src/math/mat4/index.ts\nvar mat4_exports = {};\n__export(mat4_exports, {\n  GetMat4Determinant: () => GetMat4Determinant,\n  GetMat4Frobenius: () => GetMat4Frobenius,\n  Mat4Add: () => Mat4Add,\n  Mat4AddTranslationFromFloats: () => Mat4AddTranslationFromFloats,\n  Mat4Adjoint: () => Mat4Adjoint,\n  Mat4Clone: () => Mat4Clone,\n  Mat4CopyFrom: () => Mat4CopyFrom,\n  Mat4CopyPosition: () => Mat4CopyPosition,\n  Mat4Equals: () => Mat4Equals,\n  Mat4FromQuat: () => Mat4FromQuat,\n  Mat4FromRotation: () => Mat4FromRotation,\n  Mat4FromRotationTranslation: () => Mat4FromRotationTranslation,\n  Mat4FromRotationTranslationScale: () => Mat4FromRotationTranslationScale,\n  Mat4FromRotationTranslationScaleOrigin: () => Mat4FromRotationTranslationScaleOrigin,\n  Mat4FromRotationXYTranslation: () => Mat4FromRotationXYTranslation,\n  Mat4FromScaling: () => Mat4FromScaling,\n  Mat4FromTranslation: () => Mat4FromTranslation,\n  Mat4FromXRotation: () => Mat4FromXRotation,\n  Mat4FromYRotation: () => Mat4FromYRotation,\n  Mat4FromZRotation: () => Mat4FromZRotation,\n  Mat4Frustum: () => Mat4Frustum,\n  Mat4GetRotation: () => Mat4GetRotation,\n  Mat4GetScaling: () => Mat4GetScaling,\n  Mat4GetTranslation: () => Mat4GetTranslation,\n  Mat4Identity: () => Mat4Identity,\n  Mat4Invert: () => Mat4Invert,\n  Mat4LookAt: () => Mat4LookAt,\n  Mat4Multiply: () => Mat4Multiply,\n  Mat4MultiplyScalar: () => Mat4MultiplyScalar,\n  Mat4MultiplyScalarAndAdd: () => Mat4MultiplyScalarAndAdd,\n  Mat4Ortho: () => Mat4Ortho,\n  Mat4Perspective: () => Mat4Perspective,\n  Mat4PerspectiveFromFieldOfView: () => Mat4PerspectiveFromFieldOfView,\n  Mat4Rotate: () => Mat4Rotate,\n  Mat4RotateX: () => Mat4RotateX,\n  Mat4RotateY: () => Mat4RotateY,\n  Mat4RotateZ: () => Mat4RotateZ,\n  Mat4Scale: () => Mat4Scale,\n  Mat4SetTranslation: () => Mat4SetTranslation,\n  Mat4SetTranslationFromFloats: () => Mat4SetTranslationFromFloats,\n  Mat4Subtract: () => Mat4Subtract,\n  Mat4TargetTo: () => Mat4TargetTo,\n  Mat4Translate: () => Mat4Translate,\n  Mat4TranslateFromFloats: () => Mat4TranslateFromFloats,\n  Mat4Transpose: () => Mat4Transpose,\n  Mat4Zero: () => Mat4Zero,\n  Matrix4: () => Matrix4\n});\n\n// src/math/mat4/GetMat4Determinant.ts\nfunction GetMat4Determinant(matrix2) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = matrix2.data;\n  const det22x33 = m22 * m33 - m32 * m23;\n  const det21x33 = m21 * m33 - m31 * m23;\n  const det21x32 = m21 * m32 - m31 * m22;\n  const det20x33 = m20 * m33 - m30 * m23;\n  const det20x32 = m20 * m32 - m22 * m30;\n  const det20x31 = m20 * m31 - m30 * m21;\n  const cofact00 = +(m11 * det22x33 - m12 * det21x33 + m13 * det21x32);\n  const cofact01 = -(m10 * det22x33 - m12 * det20x33 + m13 * det20x32);\n  const cofact02 = +(m10 * det21x33 - m11 * det20x33 + m13 * det20x31);\n  const cofact03 = -(m10 * det21x32 - m11 * det20x32 + m12 * det20x31);\n  return m00 * cofact00 + m01 * cofact01 + m02 * cofact02 + m03 * cofact03;\n}\n\n// src/math/mat4/GetMat4Frobenius.ts\nfunction GetMat4Frobenius(matrix2) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = matrix2.data;\n  return Math.hypot(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n}\n\n// src/math/RoundAwayFromZero.ts\nfunction RoundAwayFromZero(value) {\n  return value > 0 ? Math.ceil(value) : Math.floor(value);\n}\n\n// src/utils/base64/Base64ToArrayBuffer.ts\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar lookup = new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n  lookup[chars.charCodeAt(i)] = i;\n}\n\n// src/utils/NOOP.ts\nfunction NOOP() {\n}\n\n// src/math/mat4/Matrix4.ts\nvar Matrix4 = class {\n  constructor(src) {\n    const data = new Float32Array(16);\n    this.data = data;\n    this.onChange = NOOP;\n    if (src) {\n      if (Array.isArray(src)) {\n        this.fromArray(src);\n      } else {\n        this.fromArray(src.data);\n      }\n    } else {\n      data[0] = 1;\n      data[5] = 1;\n      data[10] = 1;\n      data[15] = 1;\n    }\n  }\n  set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    const data = this.data;\n    data[0] = m00;\n    data[1] = m01;\n    data[2] = m02;\n    data[3] = m03;\n    data[4] = m10;\n    data[5] = m11;\n    data[6] = m12;\n    data[7] = m13;\n    data[8] = m20;\n    data[9] = m21;\n    data[10] = m22;\n    data[11] = m23;\n    data[12] = m30;\n    data[13] = m31;\n    data[14] = m32;\n    data[15] = m33;\n    this.onChange(this);\n    return this;\n  }\n  toArray(dst = [], index = 0) {\n    const data = this.data;\n    for (let i = 0; i < 16; i++) {\n      dst[index + i] = data[i];\n    }\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    const data = this.data;\n    for (let i = 0; i < 16; i++) {\n      data[i] = src[index + i];\n    }\n    this.onChange(this);\n    return this;\n  }\n  toString() {\n    return \"[ mat4=\" + this.data.join(\", \") + \" ]\";\n  }\n  destroy() {\n    this.onChange = NOOP;\n    this.data = null;\n  }\n};\n\n// src/math/mat4/Mat4Add.ts\nfunction Mat4Add(a, b, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = a.data;\n  const [b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33] = b.data;\n  return out.set(a00 + b00, a01 + b01, a02 + b02, a03 + b03, a10 + b10, a11 + b11, a12 + b12, a13 + b13, a20 + b20, a21 + b21, a22 + b22, a23 + b23, a30 + b30, a31 + b31, a32 + b32, a33 + b33);\n}\n\n// src/math/mat4/Mat4AddTranslationFromFloats.ts\nfunction Mat4AddTranslationFromFloats(matrix2, x, y, z) {\n  const data = matrix2.data;\n  data[12] += x;\n  data[13] += y;\n  data[14] += z;\n  matrix2.onChange(matrix2);\n  return matrix2;\n}\n\n// src/math/mat4/Mat4Adjoint.ts\nfunction Mat4Adjoint(matrix2, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix2.data;\n  const b00 = a00 * a11 - a01 * a10;\n  const b01 = a00 * a12 - a02 * a10;\n  const b02 = a00 * a13 - a03 * a10;\n  const b03 = a01 * a12 - a02 * a11;\n  const b04 = a01 * a13 - a03 * a11;\n  const b05 = a02 * a13 - a03 * a12;\n  const b06 = a20 * a31 - a21 * a30;\n  const b07 = a20 * a32 - a22 * a30;\n  const b08 = a20 * a33 - a23 * a30;\n  const b09 = a21 * a32 - a22 * a31;\n  const b10 = a21 * a33 - a23 * a31;\n  const b11 = a22 * a33 - a23 * a32;\n  return out.set(a11 * b11 - a12 * b10 + a13 * b09, a02 * b10 - a01 * b11 - a03 * b09, a31 * b05 - a32 * b04 + a33 * b03, a22 * b04 - a21 * b05 - a23 * b03, a12 * b08 - a10 * b11 - a13 * b07, a00 * b11 - a02 * b08 + a03 * b07, a32 * b02 - a30 * b05 - a33 * b01, a20 * b05 - a22 * b02 + a23 * b01, a10 * b10 - a11 * b08 + a13 * b06, a01 * b08 - a00 * b10 - a03 * b06, a30 * b04 - a31 * b02 + a33 * b00, a21 * b02 - a20 * b04 - a23 * b00, a11 * b07 - a10 * b09 - a12 * b06, a00 * b09 - a01 * b07 + a02 * b06, a31 * b01 - a30 * b03 - a32 * b00, a20 * b03 - a21 * b01 + a22 * b00);\n}\n\n// src/math/mat4/Mat4Clone.ts\nfunction Mat4Clone(src) {\n  return new Matrix4(src);\n}\n\n// src/math/mat4/Mat4CopyFrom.ts\nfunction Mat4CopyFrom(src, dest) {\n  return dest.fromArray(src.data);\n}\n\n// src/math/mat4/Mat4CopyPosition.ts\nfunction Mat4CopyPosition(src, dest) {\n  const srcData = src.data;\n  const destData = dest.data;\n  destData[12] = srcData[12];\n  destData[13] = srcData[13];\n  destData[14] = srcData[14];\n  dest.onChange(dest);\n  return dest;\n}\n\n// src/math/mat4/Mat4Equals.ts\nfunction Mat4Equals(a, b) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = a.data;\n  const [b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33] = b.data;\n  return a00 === b00 && a01 === b01 && a02 === b02 && a03 === b03 && a10 === b10 && a11 === b11 && a12 === b12 && a13 === b13 && a20 === b20 && a21 === b21 && a22 === b22 && a23 === b23 && a30 === b30 && a31 === b31 && a32 === b32 && a33 === b33;\n}\n\n// src/math/mat4/Mat4FromQuat.ts\nfunction Mat4FromQuat(q, out = new Matrix4()) {\n  const {x, y, z, w} = q;\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n  const xx = x * x2;\n  const yx = y * x2;\n  const yy = y * y2;\n  const zx = z * x2;\n  const zy = z * y2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n  return out.set(1 - yy - zz, yx + wz, zx - wy, 0, yx - wz, 1 - xx - zz, zy + wx, 0, zx + wy, zy - wx, 1 - xx - yy, 0, 0, 0, 0, 1);\n}\n\n// src/math/mat4/Mat4FromRotation.ts\nfunction Mat4FromRotation(angle, axis, out = new Matrix4()) {\n  let {x, y, z} = axis;\n  let len = Math.hypot(x, y, z);\n  if (len < 1e-5) {\n    return null;\n  }\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const t = 1 - c;\n  return out.set(x * x * t + c, y * x * t + z * s, z * x * t - y * s, 0, x * y * t - z * s, y * y * t + c, z * y * t + x * s, 0, x * z * t + y * s, y * z * t - x * s, z * z * t + c, 0, 0, 0, 0, 1);\n}\n\n// src/math/mat4/Mat4FromRotationTranslation.ts\nfunction Mat4FromRotationTranslation(q, v, out = new Matrix4()) {\n  const {x, y, z, w} = q;\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n  const xx = x * x2;\n  const xy = x * y2;\n  const xz = x * z2;\n  const yy = y * y2;\n  const yz = y * z2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n  const {x: vx, y: vy, z: vz} = v;\n  return out.set(1 - (yy + zz), xy + wz, xz - wy, 0, xy - wz, 1 - (xx + zz), yz + wx, 0, xz + wy, yz - wx, 1 - (xx + yy), 0, vx, vy, vz, 1);\n}\n\n// src/math/mat4/Mat4FromRotationTranslationScale.ts\nfunction Mat4FromRotationTranslationScale(q, v, s, out = new Matrix4()) {\n  const {x, y, z, w} = q;\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n  const xx = x * x2;\n  const xy = x * y2;\n  const xz = x * z2;\n  const yy = y * y2;\n  const yz = y * z2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n  const {x: sx, y: sy, z: sz} = s;\n  const {x: vx, y: vy, z: vz} = v;\n  return out.set((1 - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0, (xy - wz) * sy, (1 - (xx + zz)) * sy, (yz + wx) * sy, 0, (xz + wy) * sz, (yz - wx) * sz, (1 - (xx + yy)) * sz, 0, vx, vy, vz, 1);\n}\n\n// src/math/mat4/Mat4FromRotationTranslationScaleOrigin.ts\nfunction Mat4FromRotationTranslationScaleOrigin(q, v, s, o, out = new Matrix4()) {\n  const {x, y, z, w} = q;\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n  const xx = x * x2;\n  const xy = x * y2;\n  const xz = x * z2;\n  const yy = y * y2;\n  const yz = y * z2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n  const {x: sx, y: sy, z: sz} = s;\n  const {x: ox, y: oy, z: oz} = o;\n  const {x: vx, y: vy, z: vz} = v;\n  const out0 = (1 - (yy + zz)) * sx;\n  const out1 = (xy + wz) * sx;\n  const out2 = (xz - wy) * sx;\n  const out4 = (xy - wz) * sy;\n  const out5 = (1 - (xx + zz)) * sy;\n  const out6 = (yz + wx) * sy;\n  const out8 = (xz + wy) * sz;\n  const out9 = (yz - wx) * sz;\n  const out10 = (1 - (xx + yy)) * sz;\n  return out.set(out0, out1, out2, 0, out4, out5, out6, 0, out8, out9, out10, 0, vx + ox - (out0 * ox + out4 * oy + out8 * oz), vy + oy - (out1 * ox + out5 * oy + out9 * oz), vz + oz - (out2 * ox + out6 * oy + out10 * oz), 1);\n}\n\n// src/math/mat4/Mat4FromRotationXYTranslation.ts\nfunction Mat4FromRotationXYTranslation(rotation, position, translateFirst = true, out = new Matrix4()) {\n  const {x, y, z} = position;\n  const sx = Math.sin(rotation.x);\n  const cx = Math.cos(rotation.x);\n  const sy = Math.sin(rotation.y);\n  const cy = Math.cos(rotation.y);\n  let a30 = x;\n  let a31 = y;\n  let a32 = z;\n  const b21 = -sx;\n  const c01 = 0 - b21 * sy;\n  const c02 = 0 - cx * sy;\n  const c21 = b21 * cy;\n  const c22 = cx * cy;\n  if (!translateFirst) {\n    a30 = cy * x + sy * z;\n    a31 = c01 * x + cx * y + c21 * z;\n    a32 = c02 * x + sx * y + c22 * z;\n  }\n  return out.set(cy, c01, c02, 0, 0, cx, sx, 0, sy, c21, c22, 0, a30, a31, a32, 1);\n}\n\n// src/math/mat4/Mat4FromScaling.ts\nfunction Mat4FromScaling(vec3, out = new Matrix4()) {\n  const {x, y, z} = vec3;\n  return out.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n}\n\n// src/math/mat4/Mat4FromTranslation.ts\nfunction Mat4FromTranslation(vec3, out = new Matrix4()) {\n  const {x, y, z} = vec3;\n  return out.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x, y, z, 1);\n}\n\n// src/math/mat4/Mat4FromXRotation.ts\nfunction Mat4FromXRotation(angle, out = new Matrix4()) {\n  const c = Math.cos(angle);\n  const s = Math.sin(angle);\n  return out.set(1, 0, 0, 0, 0, c, s, 0, 0, -s, c, 0, 0, 0, 0, 1);\n}\n\n// src/math/mat4/Mat4FromYRotation.ts\nfunction Mat4FromYRotation(angle, out = new Matrix4()) {\n  const c = Math.cos(angle);\n  const s = Math.sin(angle);\n  return out.set(c, 0, -s, 0, 0, 1, 0, 0, s, 0, c, 0, 0, 0, 0, 1);\n}\n\n// src/math/mat4/Mat4FromZRotation.ts\nfunction Mat4FromZRotation(angle, out = new Matrix4()) {\n  const c = Math.cos(angle);\n  const s = Math.sin(angle);\n  return out.set(c, s, 0, 0, -s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n}\n\n// src/math/mat4/Mat4Frustum.ts\nfunction Mat4Frustum(left, right, bottom, top, near, far, out = new Matrix4()) {\n  const rl = 1 / (right - left);\n  const tb = 1 / (top - bottom);\n  const nf = 1 / (near - far);\n  return out.set(near * 2 * rl, 0, 0, 0, 0, near * 2 * tb, 0, 0, (right + left) * rl, (top + bottom) * tb, (far + near) * nf, -1, 0, 0, far * near * 2 * nf, 0);\n}\n\n// src/math/vec3/Vec3.ts\nvar Vec3 = class {\n  constructor(x = 0, y = 0, z = 0) {\n    this.set(x, y, z);\n  }\n  set(x = 0, y = 0, z = 0) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y, z} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    dst[index + 2] = z;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1], src[index + 2]);\n  }\n  toString() {\n    const {x, y, z} = this;\n    return `{ x=${x}, y=${y}, z=${z} }`;\n  }\n};\n\n// src/math/mat4/Mat4GetScaling.ts\nfunction Mat4GetScaling(matrix2, out = new Vec3()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22] = matrix2.data;\n  return out.set(Math.hypot(m00, m01, m02), Math.hypot(m10, m11, m12), Math.hypot(m20, m21, m22));\n}\n\n// src/math/quaternion/Quaternion.ts\nvar Quaternion = class {\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChange = NOOP;\n  }\n  set(x = 0, y = 0, z = 0, w = 1) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChange(this);\n    return this;\n  }\n  set x(value) {\n    const prev = this._x;\n    this._x = value;\n    if (value !== prev) {\n      this.onChange(this);\n    }\n  }\n  get x() {\n    return this._x;\n  }\n  set y(value) {\n    const prev = this._y;\n    this._y = value;\n    if (value !== prev) {\n      this.onChange(this);\n    }\n  }\n  get y() {\n    return this._y;\n  }\n  set z(value) {\n    const prev = this._z;\n    this._z = value;\n    if (value !== prev) {\n      this.onChange(this);\n    }\n  }\n  get z() {\n    return this._z;\n  }\n  set w(value) {\n    const prev = this._w;\n    this._w = value;\n    if (value !== prev) {\n      this.onChange(this);\n    }\n  }\n  get w() {\n    return this._w;\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y, z, w} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    dst[index + 2] = z;\n    dst[index + 3] = w;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1], src[index + 2], src[index + 3]);\n  }\n  destroy() {\n    this.onChange = NOOP;\n  }\n  toString() {\n    const {x, y, z, w} = this;\n    return `{ x=${x}, y=${y}, z=${z}, w=${w} }`;\n  }\n};\n\n// src/math/mat4/Mat4GetRotation.ts\nfunction Mat4GetRotation(matrix2, out = new Quaternion()) {\n  const scaling = Mat4GetScaling(matrix2);\n  const is1 = 1 / scaling.x;\n  const is2 = 1 / scaling.y;\n  const is3 = 1 / scaling.z;\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22] = matrix2.data;\n  const sm11 = m00 * is1;\n  const sm12 = m01 * is2;\n  const sm13 = m02 * is3;\n  const sm21 = m10 * is1;\n  const sm22 = m11 * is2;\n  const sm23 = m12 * is3;\n  const sm31 = m20 * is1;\n  const sm32 = m21 * is2;\n  const sm33 = m22 * is3;\n  const trace = sm11 + sm22 + sm33;\n  let S = 0;\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1) * 2;\n    return out.set((sm23 - sm32) / S, (sm31 - sm13) / S, (sm12 - sm21) / S, 0.25 * S);\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1 + sm11 - sm22 - sm33) * 2;\n    return out.set(0.25 * S, (sm12 + sm21) / S, (sm31 + sm13) / S, (sm23 - sm32) / S);\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1 + sm22 - sm11 - sm33) * 2;\n    return out.set((sm12 + sm21) / S, 0.25 * S, (sm23 + sm32) / S, (sm31 - sm13) / S);\n  } else {\n    S = Math.sqrt(1 + sm33 - sm11 - sm22) * 2;\n    return out.set((sm31 + sm13) / S, (sm23 + sm32) / S, 0.25 * S, (sm12 - sm21) / S);\n  }\n}\n\n// src/math/mat4/Mat4GetTranslation.ts\nfunction Mat4GetTranslation(matrix2, out = new Vec3()) {\n  const data = matrix2.data;\n  return out.set(data[12], data[13], data[14]);\n}\n\n// src/math/mat4/Mat4Identity.ts\nfunction Mat4Identity(matrix2 = new Matrix4()) {\n  return matrix2.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n}\n\n// src/math/mat4/Mat4Invert.ts\nfunction Mat4Invert(matrix2, out = new Matrix4()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = matrix2.data;\n  const det22x33 = m22 * m33 - m32 * m23;\n  const det21x33 = m21 * m33 - m31 * m23;\n  const det21x32 = m21 * m32 - m31 * m22;\n  const det20x33 = m20 * m33 - m30 * m23;\n  const det20x32 = m20 * m32 - m22 * m30;\n  const det20x31 = m20 * m31 - m30 * m21;\n  const cofact00 = +(m11 * det22x33 - m12 * det21x33 + m13 * det21x32);\n  const cofact01 = -(m10 * det22x33 - m12 * det20x33 + m13 * det20x32);\n  const cofact02 = +(m10 * det21x33 - m11 * det20x33 + m13 * det20x31);\n  const cofact03 = -(m10 * det21x32 - m11 * det20x32 + m12 * det20x31);\n  const det = m00 * cofact00 + m01 * cofact01 + m02 * cofact02 + m03 * cofact03;\n  if (det === 0) {\n    return out;\n  }\n  const detInv = 1 / det;\n  const det12x33 = m12 * m33 - m32 * m13;\n  const det11x33 = m11 * m33 - m31 * m13;\n  const det11x32 = m11 * m32 - m31 * m12;\n  const det10x33 = m10 * m33 - m30 * m13;\n  const det10x32 = m10 * m32 - m30 * m12;\n  const det10x31 = m10 * m31 - m30 * m11;\n  const det12x23 = m12 * m23 - m22 * m13;\n  const det11x23 = m11 * m23 - m21 * m13;\n  const det11x22 = m11 * m22 - m21 * m12;\n  const det10x23 = m10 * m23 - m20 * m13;\n  const det10x22 = m10 * m22 - m20 * m12;\n  const det10x21 = m10 * m21 - m20 * m11;\n  const cofact10 = -(m01 * det22x33 - m02 * det21x33 + m03 * det21x32);\n  const cofact11 = +(m00 * det22x33 - m02 * det20x33 + m03 * det20x32);\n  const cofact12 = -(m00 * det21x33 - m01 * det20x33 + m03 * det20x31);\n  const cofact13 = +(m00 * det21x32 - m01 * det20x32 + m02 * det20x31);\n  const cofact20 = +(m01 * det12x33 - m02 * det11x33 + m03 * det11x32);\n  const cofact21 = -(m00 * det12x33 - m02 * det10x33 + m03 * det10x32);\n  const cofact22 = +(m00 * det11x33 - m01 * det10x33 + m03 * det10x31);\n  const cofact23 = -(m00 * det11x32 - m01 * det10x32 + m02 * det10x31);\n  const cofact30 = -(m01 * det12x23 - m02 * det11x23 + m03 * det11x22);\n  const cofact31 = +(m00 * det12x23 - m02 * det10x23 + m03 * det10x22);\n  const cofact32 = -(m00 * det11x23 - m01 * det10x23 + m03 * det10x21);\n  const cofact33 = +(m00 * det11x22 - m01 * det10x22 + m02 * det10x21);\n  return out.set(cofact00 * detInv, cofact10 * detInv, cofact20 * detInv, cofact30 * detInv, cofact01 * detInv, cofact11 * detInv, cofact21 * detInv, cofact31 * detInv, cofact02 * detInv, cofact12 * detInv, cofact22 * detInv, cofact32 * detInv, cofact03 * detInv, cofact13 * detInv, cofact23 * detInv, cofact33 * detInv);\n}\n\n// src/math/mat4/Mat4LookAt.ts\nfunction Mat4LookAt(eye, center, up, out = new Matrix4()) {\n  const {x: eyex, y: eyey, z: eyez} = eye;\n  const {x: upx, y: upy, z: upz} = up;\n  const {x: centerx, y: centery, z: centerz} = center;\n  if (Math.abs(eyex - centerx) < 1e-5 && Math.abs(eyey - centery) < 1e-5 && Math.abs(eyez - centerz) < 1e-5) {\n    return Mat4Identity(out);\n  }\n  let z0 = eyex - centerx;\n  let z1 = eyey - centery;\n  let z2 = eyez - centerz;\n  let len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  let x0 = upy * z2 - upz * z1;\n  let x1 = upz * z0 - upx * z2;\n  let x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n  let y0 = z1 * x2 - z2 * x1;\n  let y1 = z2 * x0 - z0 * x2;\n  let y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n  return out.set(x0, y0, z0, 0, x1, y1, z1, 0, x2, y2, z2, 0, -(x0 * eyex + x1 * eyey + x2 * eyez), -(y0 * eyex + y1 * eyey + y2 * eyez), -(z0 * eyex + z1 * eyey + z2 * eyez), 1);\n}\n\n// src/math/mat4/Mat4Multiply.ts\nfunction Mat4Multiply(a, b, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = a.data;\n  const [b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33] = b.data;\n  return out.set(b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30, b01 * a01 + b01 * a11 + b02 * a21 + b03 * a31, b02 * a02 + b01 * a12 + b02 * a22 + b03 * a32, b03 * a03 + b01 * a13 + b02 * a23 + b03 * a33, b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30, b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31, b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32, b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33, b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30, b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31, b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32, b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33, b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30, b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31, b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32, b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33);\n}\n\n// src/math/mat4/Mat4MultiplyScalar.ts\nfunction Mat4MultiplyScalar(matrix2, scalar, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix2.data;\n  return out.set(a00 * scalar, a01 * scalar, a02 * scalar, a03 * scalar, a10 * scalar, a11 * scalar, a12 * scalar, a13 * scalar, a20 * scalar, a21 * scalar, a22 * scalar, a23 * scalar, a30 * scalar, a31 * scalar, a32 * scalar, a33 * scalar);\n}\n\n// src/math/mat4/Mat4MultiplyScalarAndAdd.ts\nfunction Mat4MultiplyScalarAndAdd(a, b, scalar, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = a.data;\n  const [b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33] = b.data;\n  return out.set(a00 + b00 * scalar, a01 + b01 * scalar, a02 + b02 * scalar, a03 + b03 * scalar, a10 + b10 * scalar, a11 + b11 * scalar, a12 + b12 * scalar, a13 + b13 * scalar, a20 + b20 * scalar, a21 + b21 * scalar, a22 + b22 * scalar, a23 + b23 * scalar, a30 + b30 * scalar, a31 + b31 * scalar, a32 + b32 * scalar, a33 + b33 * scalar);\n}\n\n// src/math/mat4/Mat4Ortho.ts\nfunction Mat4Ortho(left, right, bottom, top, near, far, out = new Matrix4()) {\n  const lr = 1 / (left - right);\n  const bt = 1 / (bottom - top);\n  const nf = 1 / (near - far);\n  return out.set(-2 * lr, 0, 0, 0, 0, -2 * bt, 0, 0, 0, 0, 2 * nf, 0, (left + right) * lr, (top + bottom) * bt, (far + near) * nf, 1);\n}\n\n// src/math/mat4/Mat4Perspective.ts\nfunction Mat4Perspective(fovY, aspect, near, far, out = new Matrix4()) {\n  const f = 1 / Math.tan(fovY / 2);\n  let m22 = -1;\n  let m32 = -2 * near;\n  if (far !== null && far !== Infinity) {\n    const nf = 1 / (near - far);\n    m22 = (far + near) * nf;\n    m32 = 2 * far * near * nf;\n  }\n  return out.set(f / aspect, 0, 0, 0, 0, f, 0, 0, 0, 0, m22, -1, 0, 0, m32, 0);\n}\n\n// src/math/mat4/Mat4PerspectiveFromFieldOfView.ts\nfunction Mat4PerspectiveFromFieldOfView(fov, near, far, out = new Matrix4()) {\n  const upTan = Math.tan(fov.upDegrees * Math.PI / 180);\n  const downTan = Math.tan(fov.downDegrees * Math.PI / 180);\n  const leftTan = Math.tan(fov.leftDegrees * Math.PI / 180);\n  const rightTan = Math.tan(fov.rightDegrees * Math.PI / 180);\n  const xScale = 2 / (leftTan + rightTan);\n  const yScale = 2 / (upTan + downTan);\n  return out.set(xScale, 0, 0, 0, 0, yScale, 0, 0, -((leftTan - rightTan) * xScale * 0.5), (upTan - downTan) * yScale * 0.5, far / (near - far), -1, 0, 0, far * near / (near - far), 0);\n}\n\n// src/math/mat4/Mat4Rotate.ts\nfunction Mat4Rotate(matrix2, angle, axis, out = new Matrix4()) {\n  let {x, y, z} = axis;\n  let len = Math.hypot(x, y, z);\n  if (len < 1e-5) {\n    return null;\n  }\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const t = 1 - c;\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix2.data;\n  const b00 = x * x * t + c;\n  const b01 = y * x * t + z * s;\n  const b02 = z * x * t - y * s;\n  const b10 = x * y * t - z * s;\n  const b11 = y * y * t + c;\n  const b12 = z * y * t + x * s;\n  const b20 = x * z * t + y * s;\n  const b21 = y * z * t - x * s;\n  const b22 = z * z * t + c;\n  return out.set(a00 * b00 + a10 * b01 + a20 * b02, a01 * b00 + a11 * b01 + a21 * b02, a02 * b00 + a12 * b01 + a22 * b02, a03 * b00 + a13 * b01 + a23 * b02, a00 * b10 + a10 * b11 + a20 * b12, a01 * b10 + a11 * b11 + a21 * b12, a02 * b10 + a12 * b11 + a22 * b12, a03 * b10 + a13 * b11 + a23 * b12, a00 * b20 + a10 * b21 + a20 * b22, a01 * b20 + a11 * b21 + a21 * b22, a02 * b20 + a12 * b21 + a22 * b22, a03 * b20 + a13 * b21 + a23 * b22, a30, a31, a32, a33);\n}\n\n// src/math/mat4/Mat4RotateX.ts\nfunction Mat4RotateX(matrix2, angle, out = new Matrix4()) {\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix2.data;\n  return out.set(a00, a01, a02, a03, a10 * c + a20 * s, a11 * c + a21 * s, a12 * c + a22 * s, a13 * c + a23 * s, a20 * c - a10 * s, a21 * c - a11 * s, a22 * c - a12 * s, a23 * c - a13 * s, a30, a31, a32, a33);\n}\n\n// src/math/mat4/Mat4RotateY.ts\nfunction Mat4RotateY(matrix2, angle, out = new Matrix4()) {\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix2.data;\n  return out.set(a00 * c - a20 * s, a01 * c - a21 * s, a02 * c - a22 * s, a03 * c - a23 * s, a10, a11, a12, a13, a00 * s + a20 * c, a01 * s + a21 * c, a02 * s + a22 * c, a03 * s + a23 * c, a30, a31, a32, a33);\n}\n\n// src/math/mat4/Mat4RotateZ.ts\nfunction Mat4RotateZ(matrix2, angle, out = new Matrix4()) {\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix2.data;\n  return out.set(a00 * c + a10 * s, a01 * c + a11 * s, a02 * c + a12 * s, a03 * c + a13 * s, a10 * c - a00 * s, a11 * c - a01 * s, a12 * c - a02 * s, a13 * c - a03 * s, a20, a21, a22, a23, a30, a31, a32, a33);\n}\n\n// src/math/mat4/Mat4Scale.ts\nfunction Mat4Scale(matrix2, v, out = new Matrix4()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = matrix2.data;\n  const {x, y, z} = v;\n  return out.set(m00 * x, m01 * x, m02 * x, m03 * x, m10 * y, m11 * y, m12 * y, m13 * y, m20 * z, m21 * z, m22 * z, m23 * z, m30, m31, m32, m33);\n}\n\n// src/math/mat4/Mat4SetTranslation.ts\nfunction Mat4SetTranslation(matrix2, vec3) {\n  const data = matrix2.data;\n  const {x, y, z} = vec3;\n  data[12] = x;\n  data[13] = y;\n  data[14] = z;\n  matrix2.onChange(matrix2);\n  return matrix2;\n}\n\n// src/math/mat4/Mat4SetTranslationFromFloats.ts\nfunction Mat4SetTranslationFromFloats(matrix2, x, y, z) {\n  const data = matrix2.data;\n  data[12] = x;\n  data[13] = y;\n  data[14] = z;\n  matrix2.onChange(matrix2);\n  return matrix2;\n}\n\n// src/math/mat4/Mat4Subtract.ts\nfunction Mat4Subtract(a, b, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = a.data;\n  const [b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33] = b.data;\n  return out.set(a00 - b00, a01 - b01, a02 - b02, a03 - b03, a10 - b10, a11 - b11, a12 - b12, a13 - b13, a20 - b20, a21 - b21, a22 - b22, a23 - b23, a30 - b30, a31 - b31, a32 - b32, a33 - b33);\n}\n\n// src/math/mat4/Mat4TargetTo.ts\nfunction Mat4TargetTo(eye, target, up, out = new Matrix4()) {\n  const {x: eyex, y: eyey, z: eyez} = eye;\n  const {x: upx, y: upy, z: upz} = up;\n  const {x: targetx, y: targety, z: targetz} = target;\n  let z0 = eyex - targetx;\n  let z1 = eyey - targety;\n  let z2 = eyez - targetz;\n  let len = z0 * z0 + z1 * z1 + z2 * z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n  let x0 = upy * z2 - upz * z1;\n  let x1 = upz * z0 - upx * z2;\n  let x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n  return out.set(x0, x1, x2, 0, z1 * x2 - z2 * x1, z2 * x0 - z0 * x2, z0 * x1 - z1 * x0, 0, z0, z1, z2, 0, eyex, eyey, eyez, 1);\n}\n\n// src/math/mat4/Mat4Translate.ts\nfunction Mat4Translate(matrix2, vec3, out = new Matrix4()) {\n  const {x, y, z} = vec3;\n  const data = matrix2.data;\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = data;\n  if (matrix2 === out) {\n    data[12] = a00 * x + a10 * y + a20 * z + a30;\n    data[13] = a01 * x + a11 * y + a21 * z + a31;\n    data[14] = a02 * x + a12 * y + a22 * z + a32;\n    data[15] = a03 * x + a13 * y + a23 * z + a33;\n  } else {\n    out.set(a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a00 * x + a10 * y + a20 * z + a30, a01 * x + a11 * y + a21 * z + a31, a02 * x + a12 * y + a22 * z + a32, a03 * x + a13 * y + a23 * z + a33);\n  }\n  return out;\n}\n\n// src/math/mat4/Mat4TranslateFromFloats.ts\nfunction Mat4TranslateFromFloats(matrix2, x, y, z, out = new Matrix4()) {\n  const data = matrix2.data;\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = data;\n  if (matrix2 === out) {\n    data[12] = a00 * x + a10 * y + a20 * z + a30;\n    data[13] = a01 * x + a11 * y + a21 * z + a31;\n    data[14] = a02 * x + a12 * y + a22 * z + a32;\n    data[15] = a03 * x + a13 * y + a23 * z + a33;\n  } else {\n    out.set(a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a00 * x + a10 * y + a20 * z + a30, a01 * x + a11 * y + a21 * z + a31, a02 * x + a12 * y + a22 * z + a32, a03 * x + a13 * y + a23 * z + a33);\n  }\n  return out;\n}\n\n// src/math/mat4/Mat4Transpose.ts\nfunction Mat4Transpose(matrix2, out = new Matrix4()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = matrix2.data;\n  return out.set(m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33);\n}\n\n// src/math/mat4/Mat4Zero.ts\nfunction Mat4Zero(matrix2) {\n  return matrix2.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n}\n\n// src/math/mat2d/Matrix2D.ts\nvar Matrix2D = class {\n  constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    this.set(a, b, c, d, tx, ty);\n  }\n  set(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    this.tx = tx;\n    this.ty = ty;\n    return this;\n  }\n  identity() {\n    return this.set();\n  }\n  toArray() {\n    const {a, b, c, d, tx, ty} = this;\n    return [a, b, c, d, tx, ty];\n  }\n  fromArray(src) {\n    return this.set(src[0], src[1], src[2], src[3], src[4], src[5]);\n  }\n};\n\n// src/geom/rectangle/RectangleContains.ts\nfunction RectangleContains(rect, x, y) {\n  if (rect.width <= 0 || rect.height <= 0) {\n    return false;\n  }\n  return rect.x <= x && rect.x + rect.width >= x && rect.y <= y && rect.y + rect.height >= y;\n}\n\n// src/geom/rectangle/Rectangle.ts\nvar Rectangle = class {\n  constructor(x = 0, y = 0, width = 0, height = 0) {\n    this.set(x, y, width, height);\n  }\n  set(x = 0, y = 0, width = 0, height = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    return this;\n  }\n  contains(x, y) {\n    return RectangleContains(this, x, y);\n  }\n  set right(value) {\n    if (value <= this.x) {\n      this.width = 0;\n    } else {\n      this.width = value - this.x;\n    }\n  }\n  get right() {\n    return this.x + this.width;\n  }\n  set bottom(value) {\n    if (value <= this.y) {\n      this.height = 0;\n    } else {\n      this.height = value - this.y;\n    }\n  }\n  get bottom() {\n    return this.y + this.height;\n  }\n};\n\n// src/math/vec2/Vec2Callback.ts\nvar Vec2Callback = class {\n  constructor(onChange, x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n    this.onChange = onChange;\n  }\n  destroy() {\n    this.onChange = NOOP;\n  }\n  set(x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n    if (this.onChange) {\n      this.onChange(this);\n    }\n    return this;\n  }\n  get x() {\n    return this._x;\n  }\n  set x(value) {\n    const prev = this._x;\n    this._x = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get y() {\n    return this._y;\n  }\n  set y(value) {\n    const prev = this._y;\n    this._y = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1]);\n  }\n  toString() {\n    const {x, y} = this;\n    return `{ x=${x}, y=${y} }`;\n  }\n};\n\n// src/math/angle/index.ts\nvar angle_exports = {};\n__export(angle_exports, {\n  AngleBetween: () => AngleBetween,\n  AngleBetweenY: () => AngleBetweenY,\n  CounterClockwise: () => CounterClockwise,\n  NormalizeAngle: () => NormalizeAngle,\n  ReverseAngle: () => ReverseAngle,\n  RotateAngleTo: () => RotateAngleTo,\n  ShortestAngleBetween: () => ShortestAngleBetween,\n  WrapAngle: () => WrapAngle,\n  WrapAngleDegrees: () => WrapAngleDegrees\n});\n\n// src/math/angle/AngleBetween.ts\nfunction AngleBetween(x1, y1, x2, y2) {\n  return Math.atan2(y2 - y1, x2 - x1);\n}\n\n// src/math/angle/AngleBetweenY.ts\nfunction AngleBetweenY(x1, y1, x2, y2) {\n  return Math.atan2(x2 - x1, y2 - y1);\n}\n\n// src/math/const.ts\nvar MATH_CONST = {\n  PI2: Math.PI * 2,\n  HALF_PI: Math.PI * 0.5,\n  EPSILON: 1e-6,\n  DEG_TO_RAD: Math.PI / 180,\n  RAD_TO_DEG: 180 / Math.PI,\n  MIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER || -9007199254740991,\n  MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991\n};\n\n// src/math/angle/CounterClockwise.ts\nfunction CounterClockwise(angle) {\n  if (angle > Math.PI) {\n    angle -= MATH_CONST.PI2;\n  }\n  return Math.abs(((angle + MATH_CONST.HALF_PI) % MATH_CONST.PI2 - MATH_CONST.PI2) % MATH_CONST.PI2);\n}\n\n// src/math/angle/NormalizeAngle.ts\nfunction NormalizeAngle(angle) {\n  angle = angle % MATH_CONST.PI2;\n  if (angle >= 0) {\n    return angle;\n  } else {\n    return angle + MATH_CONST.PI2;\n  }\n}\n\n// src/math/angle/ReverseAngle.ts\nfunction ReverseAngle(angle) {\n  return NormalizeAngle(angle + Math.PI);\n}\n\n// src/math/angle/RotateAngleTo.ts\nfunction RotateAngleTo(currentAngle, targetAngle, lerp = 0.05) {\n  if (currentAngle === targetAngle) {\n    return currentAngle;\n  }\n  if (Math.abs(targetAngle - currentAngle) <= lerp || Math.abs(targetAngle - currentAngle) >= MATH_CONST.PI2 - lerp) {\n    currentAngle = targetAngle;\n  } else {\n    if (Math.abs(targetAngle - currentAngle) > Math.PI) {\n      if (targetAngle < currentAngle) {\n        targetAngle += MATH_CONST.PI2;\n      } else {\n        targetAngle -= MATH_CONST.PI2;\n      }\n    }\n    if (targetAngle > currentAngle) {\n      currentAngle += lerp;\n    } else if (targetAngle < currentAngle) {\n      currentAngle -= lerp;\n    }\n  }\n  return currentAngle;\n}\n\n// src/math/angle/ShortestAngleBetween.ts\nfunction ShortestAngleBetween(angle1, angle2) {\n  const difference = angle2 - angle1;\n  if (difference === 0) {\n    return 0;\n  }\n  const times = Math.floor((difference - -180) / 360);\n  return difference - times * 360;\n}\n\n// src/math/Wrap.ts\nfunction Wrap(value, min, max) {\n  const range = max - min;\n  return min + ((value - min) % range + range) % range;\n}\n\n// src/math/angle/WrapAngle.ts\nfunction WrapAngle(angle) {\n  return Wrap(angle, -Math.PI, Math.PI);\n}\n\n// src/math/angle/WrapAngleDegrees.ts\nfunction WrapAngleDegrees(angle) {\n  return Wrap(angle, -180, 180);\n}\n\n// src/camera/Camera.ts\nvar Camera = class {\n  constructor() {\n    this._rotation = 0;\n    this.type = \"Camera\";\n    this.dirtyRender = true;\n    const game = GameInstance.get();\n    this.renderer = game.renderer;\n    this.matrix = Mat4Identity();\n    this.bounds = new Rectangle();\n    this.worldTransform = new Matrix2D();\n    this.position = new Vec2Callback(() => this.updateTransform(), 0, 0);\n    this.scale = new Vec2Callback(() => this.updateTransform(), 1, 1);\n    this.origin = new Vec2Callback(() => this.updateTransform(), 0.5, 0.5);\n    this.reset();\n  }\n  updateTransform() {\n    const matrix2 = this.matrix.data;\n    const px = this.position.x;\n    const py = this.position.y;\n    const sx = this.scale.x;\n    const sy = this.scale.y;\n    const ox = -px + this.width * this.origin.x;\n    const oy = -py + this.height * this.origin.y;\n    const z = Math.sin(this.rotation);\n    const w = Math.cos(this.rotation);\n    const z2 = z + z;\n    const zz = z * z2;\n    const wz = w * z2;\n    const out0 = (1 - zz) * sx;\n    const out1 = wz * sx;\n    const out4 = -wz * sy;\n    const out5 = (1 - zz) * sy;\n    matrix2[0] = out0;\n    matrix2[1] = out1;\n    matrix2[4] = out4;\n    matrix2[5] = out5;\n    matrix2[12] = px + ox - (out0 * ox + out4 * oy);\n    matrix2[13] = py + oy - (out1 * ox + out5 * oy);\n    this.worldTransform.set(w * sx, z * sx, -z * sy, w * sy, -px, -py);\n    const bw = this.width * (1 / sx);\n    const bh = this.height * (1 / sy);\n    this.bounds.set(ox - bw / 2, oy - bh / 2, bw, bh);\n    this.dirtyRender = true;\n  }\n  reset() {\n    const width = this.renderer.width;\n    const height = this.renderer.height;\n    this.width = width;\n    this.height = height;\n    this.bounds.set(0, 0, width, height);\n  }\n  set rotation(value) {\n    if (value !== this._rotation) {\n      this._rotation = WrapAngle(value);\n      this.updateTransform();\n    }\n  }\n  get rotation() {\n    return this._rotation;\n  }\n  destroy() {\n    this.position.destroy();\n    this.scale.destroy();\n    this.origin.destroy();\n    this.world = null;\n    this.worldTransform = null;\n    this.renderer = null;\n    this.matrix = null;\n    this.bounds = null;\n  }\n};\n\n// src/camera/StaticCamera.ts\nvar StaticCamera = class {\n  constructor() {\n    this.type = \"StaticCamera\";\n    this.dirtyRender = true;\n    const game = GameInstance.get();\n    this.renderer = game.renderer;\n    this.matrix = Mat4Identity();\n    this.bounds = new Rectangle();\n    this.worldTransform = new Matrix2D();\n    this.reset();\n  }\n  reset() {\n    const renderer = this.renderer;\n    if (renderer) {\n      const width = renderer.width;\n      const height = renderer.height;\n      this.width = width;\n      this.height = height;\n    }\n    this.bounds.set(0, 0, this.width, this.height);\n  }\n  destroy() {\n    this.world = null;\n    this.worldTransform = null;\n    this.renderer = null;\n    this.matrix = null;\n    this.bounds = null;\n  }\n};\n\n// src/camera3d/index.ts\nvar camera3d_exports = {};\n__export(camera3d_exports, {\n  Camera3D: () => Camera3D\n});\n\n// src/math/quaternion/index.ts\nvar quaternion_exports = {};\n__export(quaternion_exports, {\n  GetQuatAngle: () => GetQuatAngle,\n  GetQuatAngleTo: () => GetQuatAngleTo,\n  GetQuatAreClose: () => GetQuatAreClose,\n  GetQuatAxisAngle: () => GetQuatAxisAngle,\n  GetQuatLength: () => GetQuatLength,\n  GetQuatLengthSquared: () => GetQuatLengthSquared,\n  QuatAdd: () => QuatAdd,\n  QuatAddScalar: () => QuatAddScalar,\n  QuatClone: () => QuatClone,\n  QuatConjugate: () => QuatConjugate,\n  QuatCopyFrom: () => QuatCopyFrom,\n  QuatDot: () => QuatDot,\n  QuatEquals: () => QuatEquals,\n  QuatFromEulerAngles: () => QuatFromEulerAngles,\n  QuatFromEulerVector: () => QuatFromEulerVector,\n  QuatFromRotationAxis: () => QuatFromRotationAxis,\n  QuatFromRotationMatrix: () => QuatFromRotationMatrix,\n  QuatFuzzyEquals: () => QuatFuzzyEquals,\n  QuatHermite: () => QuatHermite,\n  QuatInvert: () => QuatInvert,\n  QuatMultiply: () => QuatMultiply,\n  QuatMultiplyByFloats: () => QuatMultiplyByFloats,\n  QuatNormalize: () => QuatNormalize,\n  QuatRotateTowards: () => QuatRotateTowards,\n  QuatRotateX: () => QuatRotateX,\n  QuatRotateY: () => QuatRotateY,\n  QuatRotateZ: () => QuatRotateZ,\n  QuatRotationAlphaBetaGamma: () => QuatRotationAlphaBetaGamma,\n  QuatRotationYawPitchRoll: () => QuatRotationYawPitchRoll,\n  QuatScale: () => QuatScale,\n  QuatScaleAndAdd: () => QuatScaleAndAdd,\n  QuatSetAxisAngle: () => QuatSetAxisAngle,\n  QuatSetFromUnitVectors: () => QuatSetFromUnitVectors,\n  QuatSlerp: () => QuatSlerp,\n  QuatSubtract: () => QuatSubtract,\n  QuatSubtractScalar: () => QuatSubtractScalar,\n  QuatToEulerAngles: () => QuatToEulerAngles,\n  QuatZero: () => QuatZero,\n  Quaternion: () => Quaternion\n});\n\n// src/math/quaternion/QuatDot.ts\nfunction QuatDot(a, b) {\n  return a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;\n}\n\n// src/math/quaternion/GetQuatAngle.ts\nfunction GetQuatAngle(a, b) {\n  const dot = QuatDot(a, b);\n  return Math.acos(2 * dot * dot - 1);\n}\n\n// src/math/Clamp.ts\nfunction Clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n\n// src/math/quaternion/GetQuatAngleTo.ts\nfunction GetQuatAngleTo(a, b) {\n  return 2 * Math.acos(Math.abs(Clamp(QuatDot(a, b), -1, 1)));\n}\n\n// src/math/quaternion/GetQuatAreClose.ts\nfunction GetQuatAreClose(a, b) {\n  return QuatDot(a, b) >= 0;\n}\n\n// src/math/quaternion/GetQuatAxisAngle.ts\nfunction GetQuatAxisAngle(a, out = new Quaternion()) {\n  const rad = Math.acos(a.w) * 2;\n  const s = Math.sin(rad / 2);\n  const epsilon = 1e-6;\n  if (s > epsilon) {\n    out.set(a.x / s, a.y / s, a.z / s);\n  } else {\n    out.set(1, 0, 0);\n  }\n  return rad;\n}\n\n// src/math/quaternion/GetQuatLength.ts\nfunction GetQuatLength(a) {\n  const {x, y, z, w} = a;\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n// src/math/quaternion/GetQuatLengthSquared.ts\nfunction GetQuatLengthSquared(a) {\n  const {x, y, z, w} = a;\n  return x * x + y * y + z * z + w * w;\n}\n\n// src/math/quaternion/QuatAdd.ts\nfunction QuatAdd(a, b, out = new Quaternion()) {\n  return out.set(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);\n}\n\n// src/math/quaternion/QuatAddScalar.ts\nfunction QuatAddScalar(a, scalar, out = new Quaternion()) {\n  return out.set(a.x + scalar, a.y + scalar, a.z + scalar, a.w + scalar);\n}\n\n// src/math/quaternion/QuatClone.ts\nfunction QuatClone(source) {\n  const {x, y, z, w} = source;\n  return new Quaternion(x, y, z, w);\n}\n\n// src/math/quaternion/QuatConjugate.ts\nfunction QuatConjugate(a, out = new Quaternion()) {\n  const {x, y, z, w} = a;\n  return out.set(x * -1, y * -1, z * -1, w);\n}\n\n// src/math/quaternion/QuatCopyFrom.ts\nfunction QuatCopyFrom(source, dest) {\n  const {x, y, z, w} = source;\n  return dest.set(x, y, z, w);\n}\n\n// src/math/quaternion/QuatEquals.ts\nfunction QuatEquals(a, b) {\n  return a.x === b.x && a.y === b.y && a.z === b.z && a.w === b.w;\n}\n\n// src/math/quaternion/QuatRotationYawPitchRoll.ts\nfunction QuatRotationYawPitchRoll(yaw, pitch, roll, out = new Quaternion()) {\n  const halfRoll = roll * 0.5;\n  const halfPitch = pitch * 0.5;\n  const halfYaw = yaw * 0.5;\n  const sinRoll = Math.sin(halfRoll);\n  const cosRoll = Math.cos(halfRoll);\n  const sinPitch = Math.sin(halfPitch);\n  const cosPitch = Math.cos(halfPitch);\n  const sinYaw = Math.sin(halfYaw);\n  const cosYaw = Math.cos(halfYaw);\n  return out.set(cosYaw * sinPitch * cosRoll + sinYaw * cosPitch * sinRoll, sinYaw * cosPitch * cosRoll - cosYaw * sinPitch * sinRoll, cosYaw * cosPitch * sinRoll - sinYaw * sinPitch * cosRoll, cosYaw * cosPitch * cosRoll + sinYaw * sinPitch * sinRoll);\n}\n\n// src/math/quaternion/QuatFromEulerAngles.ts\nfunction QuatFromEulerAngles(x, y, z, out = new Quaternion()) {\n  return QuatRotationYawPitchRoll(y, x, z, out);\n}\n\n// src/math/quaternion/QuatFromEulerVector.ts\nfunction QuatFromEulerVector(v, out = new Quaternion()) {\n  return QuatRotationYawPitchRoll(v.y, v.x, v.z, out);\n}\n\n// src/math/vec3/index.ts\nvar vec3_exports = {};\n__export(vec3_exports, {\n  BACKWARD: () => BACKWARD,\n  DOWN: () => DOWN,\n  FORWARD: () => FORWARD,\n  GetVec3Angle: () => GetVec3Angle,\n  GetVec3Distance: () => GetVec3Distance,\n  GetVec3DistanceSquared: () => GetVec3DistanceSquared,\n  GetVec3Length: () => GetVec3Length,\n  GetVec3LengthSquared: () => GetVec3LengthSquared,\n  GetVec3ManhattanDistance: () => GetVec3ManhattanDistance,\n  GetVec3ManhattanLength: () => GetVec3ManhattanLength,\n  LEFT: () => LEFT,\n  RGBCallback: () => RGBCallback,\n  RIGHT: () => RIGHT,\n  UP: () => UP,\n  Vec3: () => Vec3,\n  Vec3Abs: () => Vec3Abs,\n  Vec3Add: () => Vec3Add,\n  Vec3AddScalar: () => Vec3AddScalar,\n  Vec3Backward: () => Vec3Backward,\n  Vec3Bezier: () => Vec3Bezier,\n  Vec3Callback: () => Vec3Callback,\n  Vec3CatmullRom: () => Vec3CatmullRom,\n  Vec3Ceil: () => Vec3Ceil,\n  Vec3Center: () => Vec3Center,\n  Vec3Clamp: () => Vec3Clamp,\n  Vec3ClampLength: () => Vec3ClampLength,\n  Vec3ClampScalar: () => Vec3ClampScalar,\n  Vec3Clone: () => Vec3Clone,\n  Vec3CopyFrom: () => Vec3CopyFrom,\n  Vec3Cross: () => Vec3Cross,\n  Vec3CrossNormalize: () => Vec3CrossNormalize,\n  Vec3Divide: () => Vec3Divide,\n  Vec3DivideScalar: () => Vec3DivideScalar,\n  Vec3Dot: () => Vec3Dot,\n  Vec3Down: () => Vec3Down,\n  Vec3Equals: () => Vec3Equals,\n  Vec3Floor: () => Vec3Floor,\n  Vec3Forward: () => Vec3Forward,\n  Vec3Fract: () => Vec3Fract,\n  Vec3FromCylindricalCoords: () => Vec3FromCylindricalCoords,\n  Vec3FromSphericalCoords: () => Vec3FromSphericalCoords,\n  Vec3FuzzyEquals: () => Vec3FuzzyEquals,\n  Vec3Hermite: () => Vec3Hermite,\n  Vec3Inverse: () => Vec3Inverse,\n  Vec3IsNonUniform: () => Vec3IsNonUniform,\n  Vec3Left: () => Vec3Left,\n  Vec3Lerp: () => Vec3Lerp,\n  Vec3Max: () => Vec3Max,\n  Vec3Min: () => Vec3Min,\n  Vec3Multiply: () => Vec3Multiply,\n  Vec3MultiplyByFloats: () => Vec3MultiplyByFloats,\n  Vec3Negate: () => Vec3Negate,\n  Vec3Normalize: () => Vec3Normalize,\n  Vec3One: () => Vec3One,\n  Vec3Project: () => Vec3Project,\n  Vec3Random: () => Vec3Random,\n  Vec3Reflect: () => Vec3Reflect,\n  Vec3Right: () => Vec3Right,\n  Vec3RotateX: () => Vec3RotateX,\n  Vec3RotateY: () => Vec3RotateY,\n  Vec3RotateZ: () => Vec3RotateZ,\n  Vec3Round: () => Vec3Round,\n  Vec3RoundToZero: () => Vec3RoundToZero,\n  Vec3Scale: () => Vec3Scale,\n  Vec3ScaleAndAdd: () => Vec3ScaleAndAdd,\n  Vec3SetLength: () => Vec3SetLength,\n  Vec3Subtract: () => Vec3Subtract,\n  Vec3SubtractScalar: () => Vec3SubtractScalar,\n  Vec3TransformMat4: () => Vec3TransformMat4,\n  Vec3TransformMat4Zero: () => Vec3TransformMat4Zero,\n  Vec3TransformQuat: () => Vec3TransformQuat,\n  Vec3Unproject: () => Vec3Unproject,\n  Vec3Up: () => Vec3Up,\n  Vec3Zero: () => Vec3Zero,\n  ZERO: () => ZERO\n});\n\n// src/math/vec3/Vec3Backward.ts\nfunction Vec3Backward() {\n  return new Vec3(0, 0, -1);\n}\n\n// src/math/vec3/Vec3Down.ts\nfunction Vec3Down() {\n  return new Vec3(0, -1, 0);\n}\n\n// src/math/vec3/Vec3Forward.ts\nfunction Vec3Forward() {\n  return new Vec3(0, 0, 1);\n}\n\n// src/math/vec3/Vec3Left.ts\nfunction Vec3Left() {\n  return new Vec3(-1, 0, 0);\n}\n\n// src/math/vec3/Vec3Right.ts\nfunction Vec3Right() {\n  return new Vec3(1, 0, 0);\n}\n\n// src/math/vec3/Vec3Up.ts\nfunction Vec3Up() {\n  return new Vec3(0, 1, 0);\n}\n\n// src/math/vec3/Vec3Zero.ts\nfunction Vec3Zero() {\n  return new Vec3(0, 0, 0);\n}\n\n// src/math/vec3/const.ts\nvar UP = Vec3Up();\nvar DOWN = Vec3Down();\nvar LEFT = Vec3Left();\nvar RIGHT = Vec3Right();\nvar FORWARD = Vec3Forward();\nvar BACKWARD = Vec3Backward();\nvar ZERO = Vec3Zero();\n\n// src/math/vec3/Vec3Dot.ts\nfunction Vec3Dot(a, b) {\n  return a.x * b.x + a.y * b.y + a.z * b.z;\n}\n\n// src/math/vec3/GetVec3Angle.ts\nfunction GetVec3Angle(a, b) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = b;\n  const mag1 = Math.sqrt(ax * ax + ay * ay + az * az);\n  const mag2 = Math.sqrt(bx * bx + by * by + bz * bz);\n  const mag = mag1 * mag2;\n  const c = mag && Vec3Dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(c, -1), 1));\n}\n\n// src/math/vec3/GetVec3DistanceSquared.ts\nfunction GetVec3DistanceSquared(a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  const z = a.z - b.z;\n  return x * x + y * y + z * z;\n}\n\n// src/math/vec3/GetVec3Distance.ts\nfunction GetVec3Distance(a, b) {\n  return Math.sqrt(GetVec3DistanceSquared(a, b));\n}\n\n// src/math/vec3/GetVec3Length.ts\nfunction GetVec3Length(a) {\n  const {x, y, z} = a;\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n// src/math/vec3/GetVec3LengthSquared.ts\nfunction GetVec3LengthSquared(a) {\n  const {x, y, z} = a;\n  return x * x + y * y + z * z;\n}\n\n// src/math/vec3/GetVec3ManhattanDistance.ts\nfunction GetVec3ManhattanDistance(a, b) {\n  return Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z);\n}\n\n// src/math/vec3/GetVec3ManhattanLength.ts\nfunction GetVec3ManhattanLength(a) {\n  return Math.abs(a.x) + Math.abs(a.y) + Math.abs(a.z);\n}\n\n// src/math/vec3/Vec3Callback.ts\nvar Vec3Callback = class {\n  constructor(onChange, x = 0, y = 0, z = 0) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this.onChange = onChange;\n  }\n  destroy() {\n    this.onChange = NOOP;\n  }\n  set(x = 0, y = 0, z = 0) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    if (this.onChange) {\n      this.onChange(this);\n    }\n    return this;\n  }\n  get x() {\n    return this._x;\n  }\n  set x(value) {\n    const prev = this._x;\n    this._x = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get y() {\n    return this._y;\n  }\n  set y(value) {\n    const prev = this._y;\n    this._y = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get z() {\n    return this._z;\n  }\n  set z(value) {\n    const prev = this._z;\n    this._z = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y, z} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    dst[index + 2] = z;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1], src[index + 2]);\n  }\n  toString() {\n    const {x, y, z} = this;\n    return `{ x=${x}, y=${y}, z=${z} }`;\n  }\n};\n\n// src/math/vec3/RGBCallback.ts\nvar RGBCallback = class extends Vec3Callback {\n  constructor(onChange, r = 0, g = 0, b = 0) {\n    super(onChange, r, g, b);\n  }\n  set r(value) {\n    this.x = value;\n  }\n  get r() {\n    return this.x;\n  }\n  set g(value) {\n    this.y = value;\n  }\n  get g() {\n    return this.y;\n  }\n  set b(value) {\n    this.z = value;\n  }\n  get b() {\n    return this.z;\n  }\n  toString() {\n    const {x, y, z} = this;\n    return `[ r=${x}, g=${y}, b=${z} ]`;\n  }\n};\n\n// src/math/vec3/Vec3Abs.ts\nfunction Vec3Abs(a, out = new Vec3()) {\n  return out.set(Math.abs(a.x), Math.abs(a.y), Math.abs(a.z));\n}\n\n// src/math/vec3/Vec3Add.ts\nfunction Vec3Add(a, b, out = new Vec3()) {\n  return out.set(a.x + b.x, a.y + b.y, a.z + b.z);\n}\n\n// src/math/vec3/Vec3AddScalar.ts\nfunction Vec3AddScalar(a, scalar, out = new Vec3()) {\n  return out.set(a.x + scalar, a.y + scalar, a.z + scalar);\n}\n\n// src/math/Bezier.ts\nfunction Bezier(a, b, c, d, t) {\n  const inverseFactor = 1 - t;\n  const inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  const factorTimes2 = t * t;\n  const factor1 = inverseFactorTimesTwo * inverseFactor;\n  const factor2 = 3 * t * inverseFactorTimesTwo;\n  const factor3 = 3 * factorTimes2 * inverseFactor;\n  const factor4 = factorTimes2 * t;\n  return a * factor1 + b * factor2 + c * factor3 + d * factor4;\n}\n\n// src/math/vec3/Vec3Bezier.ts\nfunction Vec3Bezier(a, b, c, d, t, out = new Vec3()) {\n  return out.set(Bezier(t, a.x, b.x, c.x, d.x), Bezier(t, a.y, b.y, c.y, d.y), Bezier(t, a.z, b.z, c.z, d.z));\n}\n\n// src/math/CatmullRom.ts\nfunction CatmullRom(t, p0, p1, p2, p3) {\n  const v0 = (p2 - p0) * 0.5;\n  const v1 = (p3 - p1) * 0.5;\n  const t2 = t * t;\n  const t3 = t * t2;\n  return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\n// src/math/vec3/Vec3CatmullRom.ts\nfunction Vec3CatmullRom(p1, p2, p3, p4, t, out = new Vec3()) {\n  return out.set(CatmullRom(t, p1.x, p2.x, p3.x, p4.x), CatmullRom(t, p1.y, p2.y, p3.y, p4.y), CatmullRom(t, p1.z, p2.z, p3.z, p4.z));\n}\n\n// src/math/vec3/Vec3Ceil.ts\nfunction Vec3Ceil(a, out = new Vec3()) {\n  return out.set(Math.ceil(a.x), Math.ceil(a.y), Math.ceil(a.z));\n}\n\n// src/math/vec3/Vec3Scale.ts\nfunction Vec3Scale(a, scalar, out = new Vec3()) {\n  return out.set(a.x * scalar, a.y * scalar, a.z * scalar);\n}\n\n// src/math/vec3/Vec3Center.ts\nfunction Vec3Center(a, b, out = new Vec3()) {\n  Vec3Add(a, b, out);\n  return Vec3Scale(out, 0.5, out);\n}\n\n// src/math/vec3/Vec3Clamp.ts\nfunction Vec3Clamp(a, min, max, out = new Vec3()) {\n  return out.set(Clamp(a.x, min.x, max.x), Clamp(a.y, min.y, max.y), Clamp(a.z, min.z, max.z));\n}\n\n// src/math/vec3/Vec3DivideScalar.ts\nfunction Vec3DivideScalar(a, scalar, out = new Vec3()) {\n  const {x, y, z} = a;\n  return out.set(x / scalar, y / scalar, z / scalar);\n}\n\n// src/math/vec3/Vec3ClampLength.ts\nfunction Vec3ClampLength(a, min, max, out = new Vec3()) {\n  const length = GetVec3Length(a);\n  Vec3DivideScalar(a, length || 1, out);\n  return Vec3Scale(out, Clamp(min, max, length), out);\n}\n\n// src/math/vec3/Vec3ClampScalar.ts\nfunction Vec3ClampScalar(a, min, max, out = new Vec3()) {\n  return out.set(Clamp(a.x, min, max), Clamp(a.y, min, max), Clamp(a.z, min, max));\n}\n\n// src/math/vec3/Vec3Clone.ts\nfunction Vec3Clone(source) {\n  const {x, y, z} = source;\n  return new Vec3(x, y, z);\n}\n\n// src/math/vec3/Vec3CopyFrom.ts\nfunction Vec3CopyFrom(source, dest) {\n  const {x, y, z} = source;\n  return dest.set(x, y, z);\n}\n\n// src/math/vec3/Vec3Cross.ts\nfunction Vec3Cross(a, b, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = b;\n  return out.set(ay * bz - az * by, az * bx - ax * bz, ax * by - ay * bx);\n}\n\n// src/math/vec3/Vec3CrossNormalize.ts\nfunction Vec3CrossNormalize(a, b, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = b;\n  const x = ay * bz - az * by;\n  const y = az * bx - ax * bz;\n  const z = ax * by - ay * bx;\n  let len = x * x + y * y + z * z;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n  return out.set(x * len, y * len, z * len);\n}\n\n// src/math/vec3/Vec3Divide.ts\nfunction Vec3Divide(a, b, out = new Vec3()) {\n  return out.set(a.x / b.x, a.y / b.y, a.z / b.z);\n}\n\n// src/math/vec3/Vec3Equals.ts\nfunction Vec3Equals(a, b) {\n  return a.x === b.x && a.y === b.y && a.z === b.z;\n}\n\n// src/math/vec3/Vec3Floor.ts\nfunction Vec3Floor(a, out = new Vec3()) {\n  return out.set(Math.floor(a.x), Math.floor(a.y), Math.floor(a.z));\n}\n\n// src/math/vec3/Vec3Fract.ts\nfunction Vec3Fract(a, out = new Vec3()) {\n  return out.set(a.x - Math.floor(a.x), a.y - Math.floor(a.y), a.z - Math.floor(a.z));\n}\n\n// src/math/vec3/Vec3FromCylindricalCoords.ts\nfunction Vec3FromCylindricalCoords(radius, theta, y, out = new Vec3()) {\n  return out.set(radius * Math.sin(theta), y, radius * Math.cos(theta));\n}\n\n// src/math/vec3/Vec3FromSphericalCoords.ts\nfunction Vec3FromSphericalCoords(radius, phi, theta, out = new Vec3()) {\n  const sinPhiRadius = Math.sin(phi) * radius;\n  return out.set(sinPhiRadius * Math.sin(theta), Math.cos(phi) * radius, sinPhiRadius * Math.cos(theta));\n}\n\n// src/math/fuzzy/FuzzyEqual.ts\nfunction FuzzyEqual(a, b, epsilon = 1e-4) {\n  return Math.abs(a - b) < epsilon;\n}\n\n// src/math/vec3/Vec3FuzzyEquals.ts\nfunction Vec3FuzzyEquals(a, b, epsilon = 1e-4) {\n  return FuzzyEqual(a.x, b.x, epsilon) && FuzzyEqual(a.y, b.y, epsilon) && FuzzyEqual(a.z, b.z, epsilon);\n}\n\n// src/math/Hermite.ts\nfunction Hermite(a, b, c, d, t) {\n  const squared = t * t;\n  const factor1 = squared * (2 * t - 3) + 1;\n  const factor2 = squared * (t - 2) + t;\n  const factor3 = squared * (t - 1);\n  const factor4 = squared * (3 - 2 * t);\n  return a * factor1 + b * factor2 + c * factor3 + d * factor4;\n}\n\n// src/math/vec3/Vec3Hermite.ts\nfunction Vec3Hermite(a, b, c, d, t, out = new Vec3()) {\n  return out.set(Hermite(t, a.x, b.x, c.x, d.x), Hermite(t, a.y, b.y, c.y, d.y), Hermite(t, a.z, b.z, c.z, d.z));\n}\n\n// src/math/vec3/Vec3Inverse.ts\nfunction Vec3Inverse(a, out = new Vec3()) {\n  return out.set(1 / a.x, 1 / a.y, 1 / a.z);\n}\n\n// src/math/vec3/Vec3IsNonUniform.ts\nfunction Vec3IsNonUniform(a) {\n  const absX = Math.abs(a.x);\n  const absY = Math.abs(a.y);\n  const absZ = Math.abs(a.z);\n  return absX !== absY || absX !== absZ || absY !== absZ;\n}\n\n// src/math/vec3/Vec3Lerp.ts\nfunction Vec3Lerp(a, b, t, out = new Vec3()) {\n  const {x, y, z} = a;\n  return out.set(x + t * (b.x - x), y + t * (b.y - y), z + t * (b.z - z));\n}\n\n// src/math/vec3/Vec3Max.ts\nfunction Vec3Max(a, b, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = b;\n  return out.set(Math.max(ax, bx), Math.max(ay, by), Math.max(az, bz));\n}\n\n// src/math/vec3/Vec3Min.ts\nfunction Vec3Min(a, b, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = b;\n  return out.set(Math.min(ax, bx), Math.min(ay, by), Math.min(az, bz));\n}\n\n// src/math/vec3/Vec3Multiply.ts\nfunction Vec3Multiply(a, b, out = new Vec3()) {\n  return out.set(a.x * b.x, a.y * b.y, a.z * b.z);\n}\n\n// src/math/vec3/Vec3MultiplyByFloats.ts\nfunction Vec3MultiplyByFloats(a, x, y, z, out = new Vec3()) {\n  return out.set(a.x * x, a.y * y, a.z * z);\n}\n\n// src/math/vec3/Vec3Negate.ts\nfunction Vec3Negate(a, out = new Vec3()) {\n  return out.set(-a.x, -a.y, -a.z);\n}\n\n// src/math/vec3/Vec3Normalize.ts\nfunction Vec3Normalize(a, out = new Vec3()) {\n  const {x, y, z} = a;\n  let len = x * x + y * y + z * z;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n  return out.set(x * len, y * len, z * len);\n}\n\n// src/math/vec3/Vec3One.ts\nfunction Vec3One() {\n  return new Vec3(1, 1, 1);\n}\n\n// src/math/vec3/Vec3TransformMat4.ts\nfunction Vec3TransformMat4(a, m, out = new Vec3()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = m.data;\n  const {x, y, z} = a;\n  let w = m03 * x + m13 * y + m23 * z + m33;\n  w = w || 1;\n  return out.set((m00 * x + m10 * y + m20 * z + m30) / w, (m01 * x + m11 * y + m21 * z + m31) / w, (m02 * x + m12 * y + m22 * z + m32) / w);\n}\n\n// src/math/vec3/Vec3Project.ts\nvar tempMatrix1 = new Matrix4();\nvar tempMatrix2 = new Matrix4();\nfunction Vec3Project(v, world, transform, viewport, out = new Vec3()) {\n  const {x, y, width, height} = viewport;\n  tempMatrix1.set(width / 2, 0, 0, 0, 0, -height / 2, 0, 0, 0, 0, 0.5, 0, x + width / 2, height / 2 + y, 0.5, 1);\n  Mat4Multiply(world, transform, tempMatrix2);\n  Mat4Multiply(tempMatrix2, tempMatrix1, tempMatrix2);\n  return Vec3TransformMat4(v, tempMatrix2, out);\n}\n\n// src/math/vec3/Vec3Random.ts\nfunction Vec3Random(a, scale = 1, out = new Vec3()) {\n  const r = Math.random() * 2 * Math.PI;\n  const z = Math.random() * 2 - 1;\n  const zScale = Math.sqrt(1 - z * z) * scale;\n  return out.set(Math.cos(r) * zScale, Math.sin(r) * zScale, z * scale);\n}\n\n// src/math/vec3/Vec3Subtract.ts\nfunction Vec3Subtract(a, b, out = new Vec3()) {\n  return out.set(a.x - b.x, a.y - b.y, a.z - b.z);\n}\n\n// src/math/vec3/Vec3Reflect.ts\nfunction Vec3Reflect(a, normal, out = new Vec3()) {\n  Vec3Scale(normal, 2 * Vec3Dot(a, normal), out);\n  return Vec3Subtract(a, out, out);\n}\n\n// src/math/vec3/Vec3RotateX.ts\nfunction Vec3RotateX(a, origin, angle, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = origin;\n  const px = ax - bx;\n  const py = ay - by;\n  const pz = az - bz;\n  const rx = px;\n  const ry = py * Math.cos(angle) - pz * Math.sin(angle);\n  const rz = py * Math.sin(angle) + pz * Math.cos(angle);\n  return out.set(rx + bx, ry + by, rz + bz);\n}\n\n// src/math/vec3/Vec3RotateY.ts\nfunction Vec3RotateY(a, origin, angle, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = origin;\n  const px = ax - bx;\n  const py = ay - by;\n  const pz = az - bz;\n  const rx = pz * Math.sin(angle) + px * Math.cos(angle);\n  const ry = py;\n  const rz = pz * Math.cos(angle) - px * Math.sin(angle);\n  return out.set(rx + bx, ry + by, rz + bz);\n}\n\n// src/math/vec3/Vec3RotateZ.ts\nfunction Vec3RotateZ(a, origin, angle, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = origin;\n  const px = ax - bx;\n  const py = ay - by;\n  const pz = az - bz;\n  const rx = px * Math.cos(angle) - py * Math.sin(angle);\n  const ry = px * Math.sin(angle) + py * Math.cos(angle);\n  const rz = pz;\n  return out.set(rx + bx, ry + by, rz + bz);\n}\n\n// src/math/vec3/Vec3Round.ts\nfunction Vec3Round(a, out = new Vec3()) {\n  return out.set(Math.round(a.x), Math.round(a.y), Math.round(a.z));\n}\n\n// src/math/vec3/Vec3RoundToZero.ts\nfunction Vec3RoundToZero(a, out = new Vec3()) {\n  return out.set(a.x < 0 ? Math.ceil(a.x) : Math.floor(a.x), a.y < 0 ? Math.ceil(a.y) : Math.floor(a.y), a.z < 0 ? Math.ceil(a.z) : Math.floor(a.z));\n}\n\n// src/math/vec3/Vec3ScaleAndAdd.ts\nfunction Vec3ScaleAndAdd(a, b, scalar, out = new Vec3()) {\n  return out.set(a.x + b.x * scalar, a.y + b.y * scalar, a.z + b.z * scalar);\n}\n\n// src/math/vec3/Vec3SetLength.ts\nfunction Vec3SetLength(a, length, out = new Vec3()) {\n  Vec3Normalize(a, out);\n  return Vec3Scale(out, length, out);\n}\n\n// src/math/vec3/Vec3SubtractScalar.ts\nfunction Vec3SubtractScalar(a, scalar, out = new Vec3()) {\n  return out.set(a.x - scalar, a.y - scalar, a.z - scalar);\n}\n\n// src/math/vec3/Vec3TransformMat4Zero.ts\nfunction Vec3TransformMat4Zero(a, m, out = new Vec3()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22] = m.data;\n  const {x, y, z} = a;\n  return out.set(m00 * x + m10 * y + m20 * z, m01 * x + m11 * y + m21 * z, m02 * x + m12 * y + m22 * z);\n}\n\n// src/math/vec3/Vec3TransformQuat.ts\nfunction Vec3TransformQuat(a, q, out = new Vec3()) {\n  const {x: qx, y: qy, z: qz, w: qw} = q;\n  const {x, y, z} = a;\n  let uvx = qy * z - qz * y;\n  let uvy = qz * x - qx * z;\n  let uvz = qx * y - qy * x;\n  let uuvx = qy * uvz - qz * uvy;\n  let uuvy = qz * uvx - qx * uvz;\n  let uuvz = qx * uvy - qy * uvx;\n  const w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2;\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2;\n  return out.set(x + uvx + uuvx, y + uvy + uuvy, z + uvz + uuvz);\n}\n\n// src/math/vec3/Vec3Unproject.ts\nvar matrix = new Matrix4();\nvar screenSource = new Vec3();\nfunction Vec3Unproject(v, viewportWidth, viewportHeight, world, view, projection, out = new Vec3()) {\n  Mat4Multiply(world, view, matrix);\n  Mat4Multiply(matrix, projection, matrix);\n  Mat4Invert(matrix, matrix);\n  const {x, y, z} = v;\n  screenSource.set(x / viewportWidth * 2 - 1, -(y / viewportHeight * 2 - 1), 2 * z - 1);\n  Vec3TransformMat4(screenSource, matrix, out);\n  const data = matrix.data;\n  const num = screenSource.x * data[3] + screenSource.y * data[7] + screenSource.z * data[11] + data[15];\n  return Vec3Scale(out, 1 / num, out);\n}\n\n// src/math/quaternion/QuatFromRotationAxis.ts\nfunction QuatFromRotationAxis(axis, angle, out = new Quaternion()) {\n  const sin = Math.sin(angle / 2);\n  Vec3Normalize(axis, axis);\n  const {x, y, z} = axis;\n  return out.set(x * sin, y * sin, z * sin, Math.cos(angle / 2));\n}\n\n// src/math/quaternion/QuatFromRotationMatrix.ts\nfunction QuatFromRotationMatrix(matrix2, out = new Quaternion()) {\n  const [m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33] = matrix2.data;\n  const trace = m11 + m22 + m33;\n  let s;\n  if (trace > 0) {\n    s = 0.5 / Math.sqrt(trace + 1);\n    return out.set((m32 - m23) * s, (m13 - m31) * s, (m21 - m12) * s, 0.25 / s);\n  } else if (m11 > m22 && m11 > m33) {\n    s = 2 * Math.sqrt(1 + m11 - m22 - m33);\n    return out.set(0.25 * s, (m12 + m21) / s, (m13 + m31) / s, (m32 - m23) / s);\n  } else if (m22 > m33) {\n    s = 2 * Math.sqrt(1 + m22 - m11 - m33);\n    return out.set((m12 + m21) / s, 0.25 * s, (m23 + m32) / s, (m13 - m31) / s);\n  } else {\n    s = 2 * Math.sqrt(1 + m33 - m11 - m22);\n    return out.set((m13 + m31) / s, (m23 + m32) / s, 0.25 * s, (m21 - m12) / s);\n  }\n}\n\n// src/math/quaternion/QuatFuzzyEquals.ts\nfunction QuatFuzzyEquals(a, b, epsilon = 1e-4) {\n  return FuzzyEqual(a.x, b.x, epsilon) && FuzzyEqual(a.y, b.y, epsilon) && FuzzyEqual(a.z, b.z, epsilon) && FuzzyEqual(a.w, b.w, epsilon);\n}\n\n// src/math/quaternion/QuatHermite.ts\nfunction QuatHermite(a, b, c, d, t, out = new Quaternion()) {\n  return out.set(Hermite(t, a.x, b.x, c.x, d.x), Hermite(t, a.y, b.y, c.y, d.y), Hermite(t, a.z, b.z, c.z, d.z), Hermite(t, a.w, b.w, c.w, d.w));\n}\n\n// src/math/quaternion/QuatInvert.ts\nfunction QuatInvert(a, out = new Quaternion()) {\n  const {x, y, z, w} = a;\n  const dot = x * x + y * y + z * z + w * w;\n  const invDot = dot ? 1 / dot : 0;\n  return out.set(-x * invDot, -y * invDot, -z * invDot, w * invDot);\n}\n\n// src/math/quaternion/QuatMultiply.ts\nfunction QuatMultiply(a, b, out = new Quaternion()) {\n  const {x: ax, y: ay, z: az, w: aw} = a;\n  const {x: bx, y: by, z: bz, w: bw} = b;\n  return out.set(ax * bw + aw * bx + ay * bz - az * by, ay * bw + aw * by + az * bx - ax * bz, az * bw + aw * bz + ax * by - ay * bx, aw * bw - ax * bx - ay * by - az * bz);\n}\n\n// src/math/quaternion/QuatMultiplyByFloats.ts\nfunction QuatMultiplyByFloats(a, x, y, z, w, out = new Quaternion()) {\n  return out.set(a.x * x, a.y * y, a.z * z, a.w * w);\n}\n\n// src/math/quaternion/QuatScale.ts\nfunction QuatScale(a, scalar, out = new Quaternion()) {\n  const {x, y, z, w} = a;\n  return out.set(x * scalar, y * scalar, z * scalar, w * scalar);\n}\n\n// src/math/quaternion/QuatNormalize.ts\nfunction QuatNormalize(a, out = new Quaternion()) {\n  const length = GetQuatLength(a);\n  if (length === 0) {\n    return out.set(0, 0, 0, 1);\n  } else {\n    return QuatScale(a, length, out);\n  }\n}\n\n// src/math/quaternion/QuatSlerp.ts\nfunction QuatSlerp(a, b, t, out = new Quaternion()) {\n  if (t === 0) {\n    return QuatCopyFrom(a, out);\n  } else if (t === 1) {\n    return QuatCopyFrom(b, out);\n  }\n  const {x, y, z, w} = a;\n  const {x: bx, y: by, z: bz, w: bw} = b;\n  let cosHalfTheta = w * bw + x * bx + y * by + z * bz;\n  if (cosHalfTheta < 0) {\n    out.set(-bx, -by, -bz, -bw);\n    cosHalfTheta = -cosHalfTheta;\n  } else {\n    QuatCopyFrom(b, out);\n  }\n  if (cosHalfTheta >= 1) {\n    return out.set(x, y, z, w);\n  }\n  const sqrSinHalfTheta = 1 - cosHalfTheta * cosHalfTheta;\n  if (sqrSinHalfTheta <= Number.EPSILON) {\n    const s = 1 - t;\n    out.set(s * x + t * out.x, s * y + t * out.y, s * z + t * out.z, s * w + t * out.w);\n    return QuatNormalize(out, out);\n  }\n  const sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n  const halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n  const ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta;\n  const ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n  return out.set(x * ratioA + out.x * ratioB, y * ratioA + out.y * ratioB, z * ratioA + out.z * ratioB, w * ratioA + out.w * ratioB);\n}\n\n// src/math/quaternion/QuatRotateTowards.ts\nfunction QuatRotateTowards(a, b, step, out = new Quaternion()) {\n  const angle = GetQuatAngle(a, b);\n  if (angle === 0) {\n    return QuatCopyFrom(a, out);\n  }\n  const t = Math.min(1, step / angle);\n  return QuatSlerp(a, b, t, out);\n}\n\n// src/math/quaternion/QuatRotateX.ts\nfunction QuatRotateX(a, angle, out = new Quaternion()) {\n  angle *= 0.5;\n  const {x, y, z, w} = a;\n  const bx = Math.sin(angle);\n  const bw = Math.cos(angle);\n  return out.set(x * bw + w * bx, y * bw + z * bx, z * bw - y * bx, w * bw - x * bx);\n}\n\n// src/math/quaternion/QuatRotateY.ts\nfunction QuatRotateY(a, angle, out = new Quaternion()) {\n  angle *= 0.5;\n  const {x, y, z, w} = a;\n  const by = Math.sin(angle);\n  const bw = Math.cos(angle);\n  return out.set(x * bw - z * by, y * bw + w * by, z * bw + x * by, w * bw - y * by);\n}\n\n// src/math/quaternion/QuatRotateZ.ts\nfunction QuatRotateZ(a, angle, out = new Quaternion()) {\n  angle *= 0.5;\n  const {x, y, z, w} = a;\n  const bz = Math.sin(angle);\n  const bw = Math.cos(angle);\n  return out.set(x * bw + y * bz, y * bw - x * bz, z * bw + w * bz, w * bw - z * bz);\n}\n\n// src/math/quaternion/QuatRotationAlphaBetaGamma.ts\nfunction QuatRotationAlphaBetaGamma(alpha, beta, gamma, out = new Quaternion()) {\n  const halfGammaPlusAlpha = (gamma + alpha) * 0.5;\n  const halfGammaMinusAlpha = (gamma - alpha) * 0.5;\n  const halfBeta = beta * 0.5;\n  return out.set(Math.cos(halfGammaMinusAlpha) * Math.sin(halfBeta), Math.sin(halfGammaMinusAlpha) * Math.sin(halfBeta), Math.sin(halfGammaPlusAlpha) * Math.cos(halfBeta), Math.cos(halfGammaPlusAlpha) * Math.cos(halfBeta));\n}\n\n// src/math/quaternion/QuatScaleAndAdd.ts\nfunction QuatScaleAndAdd(a, b, scalar, out = new Quaternion()) {\n  return out.set(a.x + b.x * scalar, a.y + b.y * scalar, a.z + b.z * scalar, a.w + b.w * scalar);\n}\n\n// src/math/quaternion/QuatSetAxisAngle.ts\nfunction QuatSetAxisAngle(axis, angle, out = new Quaternion()) {\n  const {x, y, z} = axis;\n  angle *= 0.5;\n  const s = Math.sin(angle);\n  return out.set(x * s, y * s, z * s, Math.cos(angle));\n}\n\n// src/math/quaternion/QuatSetFromUnitVectors.ts\nfunction QuatSetFromUnitVectors(a, from, to, out = new Quaternion()) {\n  const {x: fx, y: fy, z: fz} = from;\n  const {x: tx, y: ty, z: tz} = to;\n  const epsilon = 1e-6;\n  let r = Vec3Dot(from, to) + 1;\n  if (r < epsilon) {\n    r = 0;\n    if (Math.abs(fx) > Math.abs(fz)) {\n      return out.set(-fy, fx, 0, r);\n    } else {\n      return out.set(0, -fz, fy, r);\n    }\n  } else {\n    return out.set(fy * tz - fz * ty, fz * tx - fx * tz, fx * ty - fy * tx, r);\n  }\n}\n\n// src/math/quaternion/QuatSubtract.ts\nfunction QuatSubtract(a, b, out = new Quaternion()) {\n  return out.set(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);\n}\n\n// src/math/quaternion/QuatSubtractScalar.ts\nfunction QuatSubtractScalar(a, scalar, out = new Quaternion()) {\n  const {x, y, z, w} = a;\n  return out.set(x - scalar, y - scalar, z - scalar, w - scalar);\n}\n\n// src/math/quaternion/QuatToEulerAngles.ts\nfunction QuatToEulerAngles(q, out = new Vec3()) {\n  const {x, y, z, w} = q;\n  const sqw = w * w;\n  const sqz = z * z;\n  const sqx = x * x;\n  const sqy = y * y;\n  const zAxisY = y * z - x * w;\n  const limit = 0.4999999;\n  if (zAxisY < -limit) {\n    return out.set(Math.PI / 2, 2 * Math.atan2(y, w), 0);\n  } else if (zAxisY > limit) {\n    return out.set(-Math.PI / 2, 2 * Math.atan2(y, w), 0);\n  } else {\n    return out.set(Math.asin(-2 * (z * y - x * w)), Math.atan2(2 * (z * x + y * w), sqz - sqx - sqy + sqw), Math.atan2(2 * (x * y + z * w), -sqz - sqx + sqy + sqw));\n  }\n}\n\n// src/math/quaternion/QuatZero.ts\nfunction QuatZero() {\n  return new Quaternion(0, 0, 0, 0);\n}\n\n// src/math/index.ts\nvar math_exports = {};\n__export(math_exports, {\n  Angle: () => angle_exports,\n  Average: () => Average,\n  Bernstein: () => Bernstein,\n  Between: () => Between,\n  Bezier: () => Bezier,\n  CatmullRom: () => CatmullRom,\n  CeilTo: () => CeilTo,\n  Clamp: () => Clamp,\n  DegToRad: () => DegToRad,\n  Difference: () => Difference,\n  Easing: () => easing_exports,\n  Factorial: () => Factorial,\n  FloatBetween: () => FloatBetween,\n  FloorTo: () => FloorTo,\n  FromPercent: () => FromPercent,\n  Fuzzy: () => fuzzy_exports,\n  GetSpeed: () => GetSpeed,\n  Hermite: () => Hermite,\n  Interpolation: () => interpolation_exports,\n  Linear: () => Linear2,\n  MATH_CONST: () => MATH_CONST,\n  Matrix2D: () => mat2d_exports,\n  Matrix4: () => mat4_exports,\n  MaxAdd: () => MaxAdd,\n  MinSub: () => MinSub,\n  Percent: () => Percent,\n  Pow2: () => pow2_exports,\n  Quaternion: () => quaternion_exports,\n  RadToDeg: () => RadToDeg,\n  RoundAwayFromZero: () => RoundAwayFromZero,\n  RoundTo: () => RoundTo,\n  SinCosTableGenerator: () => SinCosTableGenerator,\n  SmoothStep: () => SmoothStep,\n  SmootherStep: () => SmootherStep,\n  Snap: () => snap_exports,\n  Vec2: () => vec2_exports,\n  Vec3: () => vec3_exports,\n  Vec4: () => vec4_exports,\n  Within: () => Within,\n  Wrap: () => Wrap\n});\n\n// src/math/easing/index.ts\nvar easing_exports = {};\n__export(easing_exports, {\n  Back: () => back_exports,\n  Bounce: () => bounce_exports,\n  Circular: () => circular_exports,\n  Cubic: () => cubic_exports,\n  Elastic: () => elastic_exports,\n  Expo: () => expo_exports,\n  GetEase: () => GetEase_exports,\n  Linear: () => Linear_exports,\n  Quadratic: () => quadratic_exports,\n  Quartic: () => quartic_exports,\n  Quintic: () => quintic_exports,\n  Sine: () => sine_exports,\n  Stepped: () => Stepped_exports\n});\n\n// src/math/easing/back/index.ts\nvar back_exports = {};\n__export(back_exports, {\n  In: () => In,\n  InOut: () => InOut,\n  Out: () => Out\n});\n\n// src/math/easing/back/In.ts\nfunction In(v, overshoot = 1.70158) {\n  return v * v * ((overshoot + 1) * v - overshoot);\n}\n\n// src/math/easing/back/InOut.ts\nfunction InOut(v, overshoot = 1.70158) {\n  const s = overshoot * 1.525;\n  if ((v *= 2) < 1) {\n    return 0.5 * (v * v * ((s + 1) * v - s));\n  } else {\n    return 0.5 * ((v -= 2) * v * ((s + 1) * v + s) + 2);\n  }\n}\n\n// src/math/easing/back/Out.ts\nfunction Out(v, overshoot = 1.70158) {\n  return --v * v * ((overshoot + 1) * v + overshoot) + 1;\n}\n\n// src/math/easing/bounce/index.ts\nvar bounce_exports = {};\n__export(bounce_exports, {\n  In: () => In2,\n  InOut: () => InOut2,\n  Out: () => Out2\n});\n\n// src/math/easing/bounce/In.ts\nfunction In2(v) {\n  v = 1 - v;\n  if (v < 1 / 2.75) {\n    return 1 - 7.5625 * v * v;\n  } else if (v < 2 / 2.75) {\n    return 1 - (7.5625 * (v -= 1.5 / 2.75) * v + 0.75);\n  } else if (v < 2.5 / 2.75) {\n    return 1 - (7.5625 * (v -= 2.25 / 2.75) * v + 0.9375);\n  } else {\n    return 1 - (7.5625 * (v -= 2.625 / 2.75) * v + 0.984375);\n  }\n}\n\n// src/math/easing/bounce/InOut.ts\nfunction InOut2(v) {\n  let reverse = false;\n  if (v < 0.5) {\n    v = 1 - v * 2;\n    reverse = true;\n  } else {\n    v = v * 2 - 1;\n  }\n  if (v < 1 / 2.75) {\n    v = 7.5625 * v * v;\n  } else if (v < 2 / 2.75) {\n    v = 7.5625 * (v -= 1.5 / 2.75) * v + 0.75;\n  } else if (v < 2.5 / 2.75) {\n    v = 7.5625 * (v -= 2.25 / 2.75) * v + 0.9375;\n  } else {\n    v = 7.5625 * (v -= 2.625 / 2.75) * v + 0.984375;\n  }\n  if (reverse) {\n    return (1 - v) * 0.5;\n  } else {\n    return v * 0.5 + 0.5;\n  }\n}\n\n// src/math/easing/bounce/Out.ts\nfunction Out2(v) {\n  if (v < 1 / 2.75) {\n    return 7.5625 * v * v;\n  } else if (v < 2 / 2.75) {\n    return 7.5625 * (v -= 1.5 / 2.75) * v + 0.75;\n  } else if (v < 2.5 / 2.75) {\n    return 7.5625 * (v -= 2.25 / 2.75) * v + 0.9375;\n  } else {\n    return 7.5625 * (v -= 2.625 / 2.75) * v + 0.984375;\n  }\n}\n\n// src/math/easing/circular/index.ts\nvar circular_exports = {};\n__export(circular_exports, {\n  In: () => In3,\n  InOut: () => InOut3,\n  Out: () => Out3\n});\n\n// src/math/easing/circular/In.ts\nfunction In3(v) {\n  return 1 - Math.sqrt(1 - v * v);\n}\n\n// src/math/easing/circular/InOut.ts\nfunction InOut3(v) {\n  if ((v *= 2) < 1) {\n    return -0.5 * (Math.sqrt(1 - v * v) - 1);\n  } else {\n    return 0.5 * (Math.sqrt(1 - (v -= 2) * v) + 1);\n  }\n}\n\n// src/math/easing/circular/Out.ts\nfunction Out3(v) {\n  return Math.sqrt(1 - --v * v);\n}\n\n// src/math/easing/cubic/index.ts\nvar cubic_exports = {};\n__export(cubic_exports, {\n  In: () => In4,\n  InOut: () => InOut4,\n  Out: () => Out4\n});\n\n// src/math/easing/cubic/In.ts\nfunction In4(v) {\n  return v * v * v;\n}\n\n// src/math/easing/cubic/InOut.ts\nfunction InOut4(v) {\n  if ((v *= 2) < 1) {\n    return 0.5 * v * v * v;\n  } else {\n    return 0.5 * ((v -= 2) * v * v + 2);\n  }\n}\n\n// src/math/easing/cubic/Out.ts\nfunction Out4(v) {\n  return --v * v * v + 1;\n}\n\n// src/math/easing/elastic/index.ts\nvar elastic_exports = {};\n__export(elastic_exports, {\n  In: () => In5,\n  InOut: () => InOut5,\n  Out: () => Out5\n});\n\n// src/math/easing/elastic/In.ts\nfunction In5(v, amplitude = 0.1, period = 0.1) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    let s = period / 4;\n    if (amplitude < 1) {\n      amplitude = 1;\n    } else {\n      s = period * Math.asin(1 / amplitude) / (2 * Math.PI);\n    }\n    return -(amplitude * Math.pow(2, 10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period));\n  }\n}\n\n// src/math/easing/elastic/InOut.ts\nfunction InOut5(v, amplitude = 0.1, period = 0.1) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    let s = period / 4;\n    if (amplitude < 1) {\n      amplitude = 1;\n    } else {\n      s = period * Math.asin(1 / amplitude) / (2 * Math.PI);\n    }\n    if ((v *= 2) < 1) {\n      return -0.5 * (amplitude * Math.pow(2, 10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period));\n    } else {\n      return amplitude * Math.pow(2, -10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period) * 0.5 + 1;\n    }\n  }\n}\n\n// src/math/easing/elastic/Out.ts\nfunction Out5(v, amplitude = 0.1, period = 0.1) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    let s = period / 4;\n    if (amplitude < 1) {\n      amplitude = 1;\n    } else {\n      s = period * Math.asin(1 / amplitude) / (2 * Math.PI);\n    }\n    return amplitude * Math.pow(2, -10 * v) * Math.sin((v - s) * (2 * Math.PI) / period) + 1;\n  }\n}\n\n// src/math/easing/expo/index.ts\nvar expo_exports = {};\n__export(expo_exports, {\n  In: () => In6,\n  InOut: () => InOut6,\n  Out: () => Out6\n});\n\n// src/math/easing/expo/In.ts\nfunction In6(v) {\n  return Math.pow(2, 10 * (v - 1)) - 1e-3;\n}\n\n// src/math/easing/expo/InOut.ts\nfunction InOut6(v) {\n  if (v == 0) {\n    return 0;\n  }\n  if (v == 1) {\n    return 1;\n  }\n  if ((v *= 2) < 1) {\n    return 0.5 * Math.pow(2, 10 * (v - 1));\n  } else {\n    return 0.5 * (2 - Math.pow(2, -10 * (v - 1)));\n  }\n}\n\n// src/math/easing/expo/Out.ts\nfunction Out6(v) {\n  return 1 - Math.pow(2, -10 * v);\n}\n\n// src/math/easing/GetEase.ts\nvar GetEase_exports = {};\n__export(GetEase_exports, {\n  GetEase: () => GetEase\n});\n\n// src/math/easing/quadratic/index.ts\nvar quadratic_exports = {};\n__export(quadratic_exports, {\n  In: () => In7,\n  InOut: () => InOut7,\n  Out: () => Out7\n});\n\n// src/math/easing/quadratic/In.ts\nfunction In7(v) {\n  return v * v;\n}\n\n// src/math/easing/quadratic/InOut.ts\nfunction InOut7(v) {\n  if ((v *= 2) < 1) {\n    return 0.5 * v * v;\n  } else {\n    return -0.5 * (--v * (v - 2) - 1);\n  }\n}\n\n// src/math/easing/quadratic/Out.ts\nfunction Out7(v) {\n  return v * (2 - v);\n}\n\n// src/math/easing/quartic/index.ts\nvar quartic_exports = {};\n__export(quartic_exports, {\n  In: () => In8,\n  InOut: () => InOut8,\n  Out: () => Out8\n});\n\n// src/math/easing/quartic/In.ts\nfunction In8(v) {\n  return v * v * v * v;\n}\n\n// src/math/easing/quartic/InOut.ts\nfunction InOut8(v) {\n  if ((v *= 2) < 1) {\n    return 0.5 * v * v * v * v;\n  } else {\n    return -0.5 * ((v -= 2) * v * v * v - 2);\n  }\n}\n\n// src/math/easing/quartic/Out.ts\nfunction Out8(v) {\n  return -(--v * v * v * v - 1);\n}\n\n// src/math/easing/quintic/index.ts\nvar quintic_exports = {};\n__export(quintic_exports, {\n  In: () => In9,\n  InOut: () => InOut9,\n  Out: () => Out9\n});\n\n// src/math/easing/quintic/In.ts\nfunction In9(v) {\n  return v * v * v * v * v;\n}\n\n// src/math/easing/quintic/InOut.ts\nfunction InOut9(v) {\n  if ((v *= 2) < 1) {\n    return 0.5 * v * v * v * v * v;\n  } else {\n    return 0.5 * ((v -= 2) * v * v * v * v + 2);\n  }\n}\n\n// src/math/easing/quintic/Out.ts\nfunction Out9(v) {\n  return (v = v - 1) * v * v * v * v + 1;\n}\n\n// src/math/easing/sine/index.ts\nvar sine_exports = {};\n__export(sine_exports, {\n  In: () => In10,\n  InOut: () => InOut10,\n  Out: () => Out10\n});\n\n// src/math/easing/sine/In.ts\nfunction In10(v) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    return 1 - Math.cos(v * Math.PI / 2);\n  }\n}\n\n// src/math/easing/sine/InOut.ts\nfunction InOut10(v) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    return 0.5 * (1 - Math.cos(Math.PI * v));\n  }\n}\n\n// src/math/easing/sine/Out.ts\nfunction Out10(v) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    return Math.sin(v * Math.PI / 2);\n  }\n}\n\n// src/math/easing/Linear.ts\nvar Linear_exports = {};\n__export(Linear_exports, {\n  Linear: () => Linear\n});\nfunction Linear(v) {\n  return v;\n}\n\n// src/math/easing/Stepped.ts\nvar Stepped_exports = {};\n__export(Stepped_exports, {\n  Stepped: () => Stepped\n});\nfunction Stepped(v, steps = 1) {\n  if (v <= 0) {\n    return 0;\n  } else if (v >= 1) {\n    return 1;\n  } else {\n    return ((steps * v | 0) + 1) * (1 / steps);\n  }\n}\n\n// src/math/easing/GetEase.ts\nvar EaseMap = new Map([\n  [\"power0\", Linear],\n  [\"power1\", Out7],\n  [\"power2\", Out4],\n  [\"power3\", Out8],\n  [\"power4\", Out9],\n  [\"linear\", Linear],\n  [\"quad\", Out7],\n  [\"cubic\", Out4],\n  [\"quart\", Out8],\n  [\"quint\", Out9],\n  [\"sine\", Out10],\n  [\"expo\", Out6],\n  [\"circ\", Out3],\n  [\"elastic\", Out5],\n  [\"back\", Out],\n  [\"bounce\", Out2],\n  [\"stepped\", Stepped],\n  [\"quad.in\", In7],\n  [\"cubic.in\", In4],\n  [\"quart.in\", In8],\n  [\"quint.in\", In9],\n  [\"sine.in\", In10],\n  [\"expo.in\", In6],\n  [\"circ.in\", In3],\n  [\"elastic.in\", In5],\n  [\"back.in\", In],\n  [\"bounce.in\", In2],\n  [\"quad.out\", Out7],\n  [\"cubic.out\", Out4],\n  [\"quart.out\", Out8],\n  [\"quint.out\", Out9],\n  [\"sine.out\", Out10],\n  [\"expo.out\", Out6],\n  [\"circ.out\", Out3],\n  [\"elastic.out\", Out5],\n  [\"back.out\", Out],\n  [\"bounce.out\", Out2],\n  [\"quad.inout\", InOut7],\n  [\"cubic.inout\", InOut4],\n  [\"quart.inout\", InOut8],\n  [\"quint.inout\", InOut9],\n  [\"sine.inout\", InOut10],\n  [\"expo.inout\", InOut6],\n  [\"circ.inout\", InOut3],\n  [\"elastic.inout\", InOut5],\n  [\"back.inout\", InOut],\n  [\"bounce.inout\", InOut2]\n]);\nfunction GetEase(name) {\n  name = name.toLowerCase();\n  name = name.replace(\"ease\", \"\");\n  if (EaseMap.has(name)) {\n    return EaseMap.get(name);\n  } else {\n    return Linear;\n  }\n}\n\n// src/math/fuzzy/index.ts\nvar fuzzy_exports = {};\n__export(fuzzy_exports, {\n  FuzzyCeil: () => FuzzyCeil,\n  FuzzyEqual: () => FuzzyEqual,\n  FuzzyFloor: () => FuzzyFloor,\n  FuzzyGreaterThan: () => FuzzyGreaterThan,\n  FuzzyLessThan: () => FuzzyLessThan\n});\n\n// src/math/fuzzy/FuzzyCeil.ts\nfunction FuzzyCeil(value, epsilon = 1e-4) {\n  return Math.ceil(value - epsilon);\n}\n\n// src/math/fuzzy/FuzzyFloor.ts\nfunction FuzzyFloor(value, epsilon = 1e-4) {\n  return Math.floor(value + epsilon);\n}\n\n// src/math/fuzzy/FuzzyGreaterThan.ts\nfunction FuzzyGreaterThan(a, b, epsilon = 1e-4) {\n  return a > b - epsilon;\n}\n\n// src/math/fuzzy/FuzzyLessThan.ts\nfunction FuzzyLessThan(a, b, epsilon = 1e-4) {\n  return a < b + epsilon;\n}\n\n// src/math/interpolation/index.ts\nvar interpolation_exports = {};\n__export(interpolation_exports, {\n  BezierInterpolation: () => BezierInterpolation,\n  CatmullRomInterpolation: () => CatmullRomInterpolation,\n  CubicBezierInterpolation: () => CubicBezierInterpolation,\n  LinearInterpolation: () => LinearInterpolation,\n  QuadraticBezierInterpolation: () => QuadraticBezierInterpolation,\n  SmoothStepInterpolation: () => SmoothStepInterpolation,\n  SmootherStepInterpolation: () => SmootherStepInterpolation\n});\n\n// src/math/Factorial.ts\nfunction Factorial(value) {\n  if (value === 0) {\n    return 1;\n  }\n  let res = value;\n  while (--value) {\n    res *= value;\n  }\n  return res;\n}\n\n// src/math/Bernstein.ts\nfunction Bernstein(n, i) {\n  return Factorial(n) / Factorial(i) / Factorial(n - i);\n}\n\n// src/math/interpolation/BezierInterpolation.ts\nfunction BezierInterpolation(v, k) {\n  let b = 0;\n  const n = v.length - 1;\n  for (let i = 0; i <= n; i++) {\n    b += Math.pow(1 - k, n - i) * Math.pow(k, i) * v[i] * Bernstein(n, i);\n  }\n  return b;\n}\n\n// src/math/interpolation/CatmullRomInterpolation.ts\nfunction CatmullRomInterpolation(v, k) {\n  const m = v.length - 1;\n  let f = m * k;\n  let i = Math.floor(f);\n  if (v[0] === v[m]) {\n    if (k < 0) {\n      i = Math.floor(f = m * (1 + k));\n    }\n    return CatmullRom(f - i, v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m]);\n  } else {\n    if (k < 0) {\n      return v[0] - (CatmullRom(-f, v[0], v[0], v[1], v[1]) - v[0]);\n    }\n    if (k > 1) {\n      return v[m] - (CatmullRom(f - m, v[m], v[m], v[m - 1], v[m - 1]) - v[m]);\n    }\n    return CatmullRom(f - i, v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2]);\n  }\n}\n\n// src/math/interpolation/CubicBezierInterpolation.ts\nfunction P0(t, p) {\n  const k = 1 - t;\n  return k * k * k * p;\n}\nfunction P1(t, p) {\n  const k = 1 - t;\n  return 3 * k * k * t * p;\n}\nfunction P2(t, p) {\n  return 3 * (1 - t) * t * t * p;\n}\nfunction P3(t, p) {\n  return t * t * t * p;\n}\nfunction CubicBezierInterpolation(t, p0, p1, p2, p3) {\n  return P0(t, p0) + P1(t, p1) + P2(t, p2) + P3(t, p3);\n}\n\n// src/math/Linear.ts\nfunction Linear2(p0, p1, t) {\n  return (p1 - p0) * t + p0;\n}\n\n// src/math/interpolation/LinearInterpolation.ts\nfunction LinearInterpolation(v, k) {\n  const m = v.length - 1;\n  const f = m * k;\n  const i = Math.floor(f);\n  if (k < 0) {\n    return Linear2(v[0], v[1], f);\n  } else if (k > 1) {\n    return Linear2(v[m], v[m - 1], m - f);\n  } else {\n    return Linear2(v[i], v[i + 1 > m ? m : i + 1], f - i);\n  }\n}\n\n// src/math/interpolation/QuadraticBezierInterpolation.ts\nfunction P02(t, p) {\n  const k = 1 - t;\n  return k * k * p;\n}\nfunction P12(t, p) {\n  return 2 * (1 - t) * t * p;\n}\nfunction P22(t, p) {\n  return t * t * p;\n}\nfunction QuadraticBezierInterpolation(t, p0, p1, p2) {\n  return P02(t, p0) + P12(t, p1) + P22(t, p2);\n}\n\n// src/math/SmoothStep.ts\nfunction SmoothStep(x, min, max) {\n  if (x <= min) {\n    return 0;\n  }\n  if (x >= max) {\n    return 1;\n  }\n  x = (x - min) / (max - min);\n  return x * x * (3 - 2 * x);\n}\n\n// src/math/interpolation/SmoothStepInterpolation.ts\nfunction SmoothStepInterpolation(t, min, max) {\n  return min + (max - min) * SmoothStep(t, 0, 1);\n}\n\n// src/math/SmootherStep.ts\nfunction SmootherStep(x, min, max) {\n  x = Math.max(0, Math.min(1, (x - min) / (max - min)));\n  return x * x * x * (x * (x * 6 - 15) + 10);\n}\n\n// src/math/interpolation/SmootherStepInterpolation.ts\nfunction SmootherStepInterpolation(t, min, max) {\n  return min + (max - min) * SmootherStep(t, 0, 1);\n}\n\n// src/math/mat2d/index.ts\nvar mat2d_exports = {};\n__export(mat2d_exports, {\n  GetMat2dDeterminant: () => GetMat2dDeterminant,\n  GetMat2dFrobenius: () => GetMat2dFrobenius,\n  Mat2dAdd: () => Mat2dAdd,\n  Mat2dAppend: () => Mat2dAppend,\n  Mat2dClone: () => Mat2dClone,\n  Mat2dCopyFrom: () => Mat2dCopyFrom,\n  Mat2dCopyToContext: () => Mat2dCopyToContext,\n  Mat2dEquals: () => Mat2dEquals,\n  Mat2dFromRotation: () => Mat2dFromRotation,\n  Mat2dFromScaling: () => Mat2dFromScaling,\n  Mat2dFromTranslation: () => Mat2dFromTranslation,\n  Mat2dFuzzyEquals: () => Mat2dFuzzyEquals,\n  Mat2dGlobalToLocal: () => Mat2dGlobalToLocal,\n  Mat2dITRS: () => Mat2dITRS,\n  Mat2dITRSS: () => Mat2dITRSS,\n  Mat2dIdentity: () => Mat2dIdentity,\n  Mat2dInvert: () => Mat2dInvert,\n  Mat2dLocalToGlobal: () => Mat2dLocalToGlobal,\n  Mat2dMultiply: () => Mat2dMultiply,\n  Mat2dMultiplyScalar: () => Mat2dMultiplyScalar,\n  Mat2dMultiplyScalarAndAdd: () => Mat2dMultiplyScalarAndAdd,\n  Mat2dRotate: () => Mat2dRotate,\n  Mat2dScale: () => Mat2dScale,\n  Mat2dSetToContext: () => Mat2dSetToContext,\n  Mat2dSkew: () => Mat2dSkew,\n  Mat2dSubtract: () => Mat2dSubtract,\n  Mat2dTranslate: () => Mat2dTranslate,\n  Mat2dZero: () => Mat2dZero,\n  Matrix2D: () => Matrix2D\n});\n\n// src/math/mat2d/GetMat2dDeterminant.ts\nfunction GetMat2dDeterminant(src) {\n  const {a, b, c, d} = src;\n  return a * d - b * c;\n}\n\n// src/math/mat2d/GetMat2dFrobenius.ts\nfunction GetMat2dFrobenius(src) {\n  return Math.hypot(src.a, src.b, src.c, src.d, src.tx, src.ty, 1);\n}\n\n// src/math/mat2d/Mat2dAdd.ts\nfunction Mat2dAdd(a, b, out = new Matrix2D()) {\n  return out.set(a.a + b.a, a.b + b.b, a.c + b.c, a.d + b.d, a.tx + b.tx, a.ty + b.ty);\n}\n\n// src/math/mat2d/Mat2dAppend.ts\nfunction Mat2dAppend(mat1, mat2, out = new Matrix2D()) {\n  const {a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1} = mat1;\n  const {a: a2, b: b2, c: c2, d: d2, tx: tx2, ty: ty2} = mat2;\n  return out.set(a2 * a1 + b2 * c1, a2 * b1 + b2 * d1, c2 * a1 + d2 * c1, c2 * b1 + d2 * d1, tx2 * a1 + ty2 * c1 + tx1, tx2 * b1 + ty2 * d1 + ty1);\n}\n\n// src/math/mat2d/Mat2dClone.ts\nfunction Mat2dClone(src) {\n  return new Matrix2D(src.a, src.b, src.c, src.d, src.tx, src.ty);\n}\n\n// src/math/mat2d/Mat2dCopyFrom.ts\nfunction Mat2dCopyFrom(src, target) {\n  const {a, b, c, d, tx, ty} = src;\n  return target.set(a, b, c, d, tx, ty);\n}\n\n// src/math/mat2d/Mat2dCopyToContext.ts\nfunction Mat2dCopyToContext(src, context) {\n  const {a, b, c, d, tx, ty} = src;\n  context.transform(a, b, c, d, tx, ty);\n  return context;\n}\n\n// src/math/mat2d/Mat2dEquals.ts\nfunction Mat2dEquals(a, b) {\n  return a.a === b.a && a.b === b.b && a.c === b.c && a.d === b.d && a.tx === b.tx && a.ty === b.ty;\n}\n\n// src/math/mat2d/Mat2dRotate.ts\nfunction Mat2dRotate(target, angle, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  return out.set(a * cos + c * sin, b * cos + d * sin, a * -sin + c * cos, b * -sin + d * cos, tx, ty);\n}\n\n// src/math/mat2d/Mat2dFromRotation.ts\nfunction Mat2dFromRotation(angle) {\n  const target = new Matrix2D();\n  return Mat2dRotate(target, angle, target);\n}\n\n// src/math/mat2d/Mat2dScale.ts\nfunction Mat2dScale(target, scaleX, scaleY, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  return out.set(a * scaleX, b * scaleX, c * scaleY, d * scaleY, tx, ty);\n}\n\n// src/math/mat2d/Mat2dFromScaling.ts\nfunction Mat2dFromScaling(scaleX, scaleY = scaleX) {\n  const target = new Matrix2D();\n  return Mat2dScale(target, scaleX, scaleY, target);\n}\n\n// src/math/mat2d/Mat2dTranslate.ts\nfunction Mat2dTranslate(target, x, y, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  out.tx = a * x + c * y + tx;\n  out.ty = b * x + d * y + ty;\n  return out;\n}\n\n// src/math/mat2d/Mat2dFromTranslation.ts\nfunction Mat2dFromTranslation(x, y) {\n  const target = new Matrix2D();\n  return Mat2dTranslate(target, x, y, target);\n}\n\n// src/math/mat2d/Mat2dFuzzyEquals.ts\nfunction Mat2dFuzzyEquals(a, b, epsilon = 1e-6) {\n  const {a: a0, b: b0, c: c0, d: d0, tx: tx0, ty: ty0} = a;\n  const {a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1} = b;\n  return Math.abs(a0 - a1) <= epsilon * Math.max(1, Math.abs(a0), Math.abs(a1)) && Math.abs(b0 - b1) <= epsilon * Math.max(1, Math.abs(b0), Math.abs(b1)) && Math.abs(c0 - c1) <= epsilon * Math.max(1, Math.abs(c0), Math.abs(c1)) && Math.abs(d0 - d1) <= epsilon * Math.max(1, Math.abs(d0), Math.abs(d1)) && Math.abs(tx0 - tx1) <= epsilon * Math.max(1, Math.abs(tx0), Math.abs(tx1)) && Math.abs(ty0 - ty1) <= epsilon * Math.max(1, Math.abs(ty0), Math.abs(ty1));\n}\n\n// src/math/vec2/Vec2.ts\nvar Vec2 = class {\n  constructor(x = 0, y = 0) {\n    this.set(x, y);\n  }\n  set(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1]);\n  }\n  toString() {\n    const {x, y} = this;\n    return `{ x=${x}, y=${y} }`;\n  }\n};\n\n// src/math/mat2d/Mat2dGlobalToLocal.ts\nfunction Mat2dGlobalToLocal(mat, x, y, out = new Vec2()) {\n  const {a, b, c, d, tx, ty} = mat;\n  const id = 1 / (a * d + c * -b);\n  return out.set(d * id * x + -c * id * y + (ty * c - tx * d) * id, a * id * y + -b * id * x + (-ty * a + tx * b) * id);\n}\n\n// src/math/mat2d/Mat2dITRS.ts\nfunction Mat2dITRS(target, x, y, angle, scaleX, scaleY) {\n  if (angle === 0) {\n    return target.set(1, 0, 0, 1, x, y);\n  } else {\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n    return target.set(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n  }\n}\n\n// src/math/mat2d/Mat2dITRSS.ts\nfunction Mat2dITRSS(target, x, y, angle = 0, scaleX = 1, scaleY = 1, skewX = 0, skewY = 0) {\n  if (angle === 0) {\n    return target.set(1, 0, 0, 1, x, y);\n  } else {\n    return target.set(Math.cos(angle + skewY) * scaleX, Math.sin(angle + skewY) * scaleX, -Math.sin(angle - skewX) * scaleY, Math.cos(angle - skewX) * scaleY, x, y);\n  }\n}\n\n// src/math/mat2d/Mat2dIdentity.ts\nfunction Mat2dIdentity() {\n  return new Matrix2D();\n}\n\n// src/math/mat2d/Mat2dInvert.ts\nfunction Mat2dInvert(target, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  let determinant = a * d - b * c;\n  if (determinant) {\n    determinant = 1 / determinant;\n    out.set(d * determinant, -b * determinant, -c * determinant, a * determinant, (c * ty - d * tx) * determinant, (b * tx - a * ty) * determinant);\n  }\n  return out;\n}\n\n// src/math/mat2d/Mat2dLocalToGlobal.ts\nfunction Mat2dLocalToGlobal(mat, x, y, out = new Vec2()) {\n  const {a, b, c, d, tx, ty} = mat;\n  return out.set(a * x + c * y + tx, b * x + d * y + ty);\n}\n\n// src/math/mat2d/Mat2dMultiply.ts\nfunction Mat2dMultiply(target, src, out = new Matrix2D()) {\n  const {a: a0, b: b0, c: c0, d: d0, tx: tx0, ty: ty0} = target;\n  const {a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1} = src;\n  return out.set(a0 * a1 + c0 * b1, b0 * a1 + d0 * b1, a0 * c1 + c0 * d1, b0 * c1 + d0 * d1, a0 * tx1 + c0 * ty1 + tx0, b0 * tx1 + d0 * ty1 + ty0);\n}\n\n// src/math/mat2d/Mat2dMultiplyScalar.ts\nfunction Mat2dMultiplyScalar(target, scalar, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  return out.set(a * scalar, b * scalar, c * scalar, d * scalar, tx * scalar, ty * scalar);\n}\n\n// src/math/mat2d/Mat2dMultiplyScalarAndAdd.ts\nfunction Mat2dMultiplyScalarAndAdd(target, src, scalar, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = src;\n  const {a: ta, b: tb, c: tc, d: td, tx: ttx, ty: tty} = target;\n  return out.set(ta + a * scalar, tb + b * scalar, tc + c * scalar, td + d * scalar, ttx + tx * scalar, tty + ty * scalar);\n}\n\n// src/math/mat2d/Mat2dSetToContext.ts\nfunction Mat2dSetToContext(src, context) {\n  const {a, b, c, d, tx, ty} = src;\n  context.setTransform(a, b, c, d, tx, ty);\n  return context;\n}\n\n// src/math/mat2d/Mat2dSkew.ts\nfunction Mat2dSkew(target, angleX, angleY, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  return out.set(a, b + Math.tan(angleX), c + Math.tan(angleY), d, tx, ty);\n}\n\n// src/math/mat2d/Mat2dSubtract.ts\nfunction Mat2dSubtract(a, b, out = new Matrix2D()) {\n  return out.set(a.a - b.a, a.b - b.b, a.c - b.c, a.d - b.d, a.tx - b.tx, a.ty - b.ty);\n}\n\n// src/math/mat2d/Mat2dZero.ts\nfunction Mat2dZero(target) {\n  return target.set(0, 0, 0, 0, 0, 0);\n}\n\n// src/math/pow2/index.ts\nvar pow2_exports = {};\n__export(pow2_exports, {\n  GetPowerOfTwo: () => GetPowerOfTwo,\n  IsSizePowerOfTwo: () => IsSizePowerOfTwo,\n  IsValuePowerOfTwo: () => IsValuePowerOfTwo\n});\n\n// src/math/pow2/GetPowerOfTwo.ts\nfunction GetPowerOfTwo(value) {\n  const index = Math.log(value) / 0.6931471805599453;\n  return 1 << Math.ceil(index);\n}\n\n// src/math/pow2/IsSizePowerOfTwo.ts\nfunction IsSizePowerOfTwo(width, height) {\n  if (width < 1 || height < 1) {\n    return false;\n  }\n  return (width & width - 1) === 0 && (height & height - 1) === 0;\n}\n\n// src/math/pow2/IsValuePowerOfTwo.ts\nfunction IsValuePowerOfTwo(value) {\n  return value > 0 && (value & value - 1) === 0;\n}\n\n// src/math/snap/index.ts\nvar snap_exports = {};\n__export(snap_exports, {\n  SnapCeil: () => SnapCeil,\n  SnapFloor: () => SnapFloor,\n  SnapTo: () => SnapTo\n});\n\n// src/math/snap/SnapCeil.ts\nfunction SnapCeil(value, gap, start = 0, divide = false) {\n  if (gap === 0) {\n    return value;\n  }\n  value -= start;\n  value = gap * Math.ceil(value / gap);\n  return divide ? (start + value) / gap : start + value;\n}\n\n// src/math/snap/SnapFloor.ts\nfunction SnapFloor(value, gap, start = 0, divide = false) {\n  if (gap === 0) {\n    return value;\n  }\n  value -= start;\n  value = gap * Math.floor(value / gap);\n  return divide ? (start + value) / gap : start + value;\n}\n\n// src/math/snap/SnapTo.ts\nfunction SnapTo(value, gap, start = 0, divide = false) {\n  if (gap === 0) {\n    return value;\n  }\n  value -= start;\n  value = gap * Math.round(value / gap);\n  return divide ? (start + value) / gap : start + value;\n}\n\n// src/math/vec2/index.ts\nvar vec2_exports = {};\n__export(vec2_exports, {\n  GetChebyshevDistance: () => GetChebyshevDistance,\n  GetDistanceFromSegment: () => GetDistanceFromSegment,\n  GetVec2Angle: () => GetVec2Angle,\n  GetVec2AngleY: () => GetVec2AngleY,\n  GetVec2Distance: () => GetVec2Distance,\n  GetVec2DistancePower: () => GetVec2DistancePower,\n  GetVec2DistanceSquared: () => GetVec2DistanceSquared,\n  GetVec2Length: () => GetVec2Length,\n  GetVec2LengthSquared: () => GetVec2LengthSquared,\n  GetVec2ManhattanDistance: () => GetVec2ManhattanDistance,\n  GetVec2ManhattanLength: () => GetVec2ManhattanLength,\n  Vec2: () => Vec2,\n  Vec2Abs: () => Vec2Abs,\n  Vec2Add: () => Vec2Add,\n  Vec2AddScalar: () => Vec2AddScalar,\n  Vec2Bezier: () => Vec2Bezier,\n  Vec2Callback: () => Vec2Callback,\n  Vec2CatmullRom: () => Vec2CatmullRom,\n  Vec2Ceil: () => Vec2Ceil,\n  Vec2Center: () => Vec2Center,\n  Vec2Clamp: () => Vec2Clamp,\n  Vec2ClampScalar: () => Vec2ClampScalar,\n  Vec2Clone: () => Vec2Clone,\n  Vec2CopyFrom: () => Vec2CopyFrom,\n  Vec2Cross: () => Vec2Cross,\n  Vec2Divide: () => Vec2Divide,\n  Vec2DivideScalar: () => Vec2DivideScalar,\n  Vec2Dot: () => Vec2Dot,\n  Vec2Equals: () => Vec2Equals,\n  Vec2Floor: () => Vec2Floor,\n  Vec2Fract: () => Vec2Fract,\n  Vec2FromGridIndex: () => Vec2FromGridIndex,\n  Vec2FromTransform: () => Vec2FromTransform,\n  Vec2FuzzyEquals: () => Vec2FuzzyEquals,\n  Vec2Hermite: () => Vec2Hermite,\n  Vec2Inverse: () => Vec2Inverse,\n  Vec2Lerp: () => Vec2Lerp,\n  Vec2Max: () => Vec2Max,\n  Vec2Min: () => Vec2Min,\n  Vec2Multiply: () => Vec2Multiply,\n  Vec2MultiplyByFloats: () => Vec2MultiplyByFloats,\n  Vec2Negate: () => Vec2Negate,\n  Vec2Normalize: () => Vec2Normalize,\n  Vec2One: () => Vec2One,\n  Vec2PerpDot: () => Vec2PerpDot,\n  Vec2Random: () => Vec2Random,\n  Vec2Rotate: () => Vec2Rotate,\n  Vec2Round: () => Vec2Round,\n  Vec2RoundToZero: () => Vec2RoundToZero,\n  Vec2Scale: () => Vec2Scale,\n  Vec2ScaleAndAdd: () => Vec2ScaleAndAdd,\n  Vec2SetLength: () => Vec2SetLength,\n  Vec2Subtract: () => Vec2Subtract,\n  Vec2SubtractScalar: () => Vec2SubtractScalar,\n  Vec2Transform: () => Vec2Transform,\n  Vec2TransformMat2d: () => Vec2TransformMat2d,\n  Vec2TransformMat4: () => Vec2TransformMat4,\n  Vec2Zero: () => Vec2Zero\n});\n\n// src/math/vec2/GetChebyshevDistance.ts\nfunction GetChebyshevDistance(a, b) {\n  return Math.max(Math.abs(a.x - b.x), Math.abs(a.y - b.y));\n}\n\n// src/math/vec2/GetVec2DistanceSquared.ts\nfunction GetVec2DistanceSquared(a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  return x * x + y * y;\n}\n\n// src/math/vec2/GetVec2Distance.ts\nfunction GetVec2Distance(a, b) {\n  return Math.sqrt(GetVec2DistanceSquared(a, b));\n}\n\n// src/math/vec2/Vec2Add.ts\nfunction Vec2Add(a, b, out = new Vec2()) {\n  return out.set(a.x + b.x, a.y + b.y);\n}\n\n// src/math/vec2/Vec2Dot.ts\nfunction Vec2Dot(a, b) {\n  return a.x * b.x + a.y * b.y;\n}\n\n// src/math/vec2/Vec2MultiplyByFloats.ts\nfunction Vec2MultiplyByFloats(a, x, y, out = new Vec2()) {\n  return out.set(a.x * x, a.y * y);\n}\n\n// src/math/vec2/Vec2Subtract.ts\nfunction Vec2Subtract(a, b, out = new Vec2()) {\n  return out.set(a.x - b.x, a.y - b.y);\n}\n\n// src/math/vec2/GetDistanceFromSegment.ts\nfunction GetDistanceFromSegment(p, a, b) {\n  const d = GetVec2DistanceSquared(a, b);\n  if (d === 0) {\n    return GetVec2Distance(p, a);\n  }\n  const v = Vec2Subtract(b, a);\n  Vec2Subtract(p, a, p);\n  const t = Math.max(0, Math.min(1, Vec2Dot(p, v) / 12));\n  const proj = Vec2Add(a, Vec2MultiplyByFloats(v, t, t, v));\n  return GetVec2Distance(p, proj);\n}\n\n// src/math/vec2/GetVec2Angle.ts\nfunction GetVec2Angle(a, b) {\n  return Math.atan2(b.y - a.y, b.x - a.x);\n}\n\n// src/math/vec2/GetVec2AngleY.ts\nfunction GetVec2AngleY(a, b) {\n  return Math.atan2(b.x - a.x, b.y - a.y);\n}\n\n// src/math/vec2/GetVec2DistancePower.ts\nfunction GetVec2DistancePower(a, b, pow = 2) {\n  return Math.sqrt(Math.pow(b.x - a.x, pow) + Math.pow(b.y - a.y, pow));\n}\n\n// src/math/vec2/GetVec2Length.ts\nfunction GetVec2Length(a) {\n  return Math.sqrt(a.x * a.x + a.y * a.y);\n}\n\n// src/math/vec2/GetVec2LengthSquared.ts\nfunction GetVec2LengthSquared(a) {\n  return a.x * a.x + a.y * a.y;\n}\n\n// src/math/vec2/GetVec2ManhattanDistance.ts\nfunction GetVec2ManhattanDistance(a, b) {\n  return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n}\n\n// src/math/vec2/GetVec2ManhattanLength.ts\nfunction GetVec2ManhattanLength(a) {\n  return Math.abs(a.x) + Math.abs(a.y);\n}\n\n// src/math/vec2/Vec2Abs.ts\nfunction Vec2Abs(a, out = new Vec2()) {\n  return out.set(Math.abs(a.x), Math.abs(a.y));\n}\n\n// src/math/vec2/Vec2AddScalar.ts\nfunction Vec2AddScalar(a, scalar, out = new Vec2()) {\n  return out.set(a.x + scalar, a.y + scalar);\n}\n\n// src/math/vec2/Vec2Bezier.ts\nfunction Vec2Bezier(a, b, c, d, t, out = new Vec2()) {\n  return out.set(Bezier(t, a.x, b.x, c.x, d.x), Bezier(t, a.y, b.y, c.y, d.y));\n}\n\n// src/math/vec2/Vec2CatmullRom.ts\nfunction Vec2CatmullRom(p1, p2, p3, p4, t, out = new Vec2()) {\n  return out.set(CatmullRom(t, p1.x, p2.x, p3.x, p4.x), CatmullRom(t, p1.y, p2.y, p3.y, p4.y));\n}\n\n// src/math/vec2/Vec2Ceil.ts\nfunction Vec2Ceil(a, out = new Vec2()) {\n  return out.set(Math.ceil(a.x), Math.ceil(a.y));\n}\n\n// src/math/vec2/Vec2Scale.ts\nfunction Vec2Scale(a, scalar, out = new Vec2()) {\n  return out.set(a.x * scalar, a.y * scalar);\n}\n\n// src/math/vec2/Vec2Center.ts\nfunction Vec2Center(a, b, out = new Vec2()) {\n  Vec2Add(a, b, out);\n  return Vec2Scale(out, 0.5, out);\n}\n\n// src/math/vec2/Vec2Clamp.ts\nfunction Vec2Clamp(a, min, max, out = new Vec2()) {\n  return out.set(Clamp(a.x, min.x, max.x), Clamp(a.y, min.y, max.y));\n}\n\n// src/math/vec2/Vec2ClampScalar.ts\nfunction Vec2ClampScalar(a, min, max, out = new Vec2()) {\n  return out.set(Clamp(a.x, min, max), Clamp(a.y, min, max));\n}\n\n// src/math/vec2/Vec2Clone.ts\nfunction Vec2Clone(source) {\n  return new Vec2(source.x, source.y);\n}\n\n// src/math/vec2/Vec2CopyFrom.ts\nfunction Vec2CopyFrom(source, dest) {\n  return dest.set(source.x, source.y);\n}\n\n// src/math/vec2/Vec2Cross.ts\nfunction Vec2Cross(a, b) {\n  return a.x * b.y - a.y * b.x;\n}\n\n// src/math/vec2/Vec2Divide.ts\nfunction Vec2Divide(a, b, out = new Vec2()) {\n  return out.set(a.x / b.x, a.y / b.y);\n}\n\n// src/math/vec2/Vec2DivideScalar.ts\nfunction Vec2DivideScalar(a, scalar, out = new Vec2()) {\n  return out.set(a.x / scalar, a.y / scalar);\n}\n\n// src/math/vec2/Vec2Equals.ts\nfunction Vec2Equals(a, b) {\n  return a.x === b.x && a.y === b.y;\n}\n\n// src/math/vec2/Vec2Floor.ts\nfunction Vec2Floor(a, out = new Vec2()) {\n  return out.set(Math.floor(a.x), Math.floor(a.y));\n}\n\n// src/math/vec2/Vec2Fract.ts\nfunction Vec2Fract(a, out = new Vec2()) {\n  return out.set(a.x - Math.floor(a.x), a.y - Math.floor(a.y));\n}\n\n// src/math/vec2/Vec2FromGridIndex.ts\nfunction Vec2FromGridIndex(index, width, height, out = new Vec2()) {\n  let x = 0;\n  let y = 0;\n  const total = width * height;\n  if (index > 0 && index <= total) {\n    if (index > width - 1) {\n      y = Math.floor(index / width);\n      x = index - y * width;\n    } else {\n      x = index;\n    }\n    out.set(x, y);\n  }\n  return out;\n}\n\n// src/math/vec2/Vec2FromTransform.ts\nfunction Vec2FromTransform(x, y, positionX, positionY, rotation, scaleX, scaleY, out = new Vec2()) {\n  const sin = Math.sin(rotation);\n  const cos = Math.cos(rotation);\n  const a = cos * scaleX;\n  const b = sin * scaleX;\n  const c = -sin * scaleY;\n  const d = cos * scaleY;\n  const id = 1 / (a * d + c * -b);\n  return out.set(d * id * x + -c * id * y + (positionY * c - positionX * d) * id, a * id * y + -b * id * x + (-positionY * a + positionX * b) * id);\n}\n\n// src/math/vec2/Vec2FuzzyEquals.ts\nfunction Vec2FuzzyEquals(a, b, epsilon = 1e-4) {\n  return FuzzyEqual(a.x, b.x, epsilon) && FuzzyEqual(a.y, b.y, epsilon);\n}\n\n// src/math/vec2/Vec2Hermite.ts\nfunction Vec2Hermite(a, b, c, d, t, out = new Vec2()) {\n  return out.set(Hermite(t, a.x, b.x, c.x, d.x), Hermite(t, a.y, b.y, c.y, d.y));\n}\n\n// src/math/vec2/Vec2Inverse.ts\nfunction Vec2Inverse(a, out = new Vec2()) {\n  return out.set(1 / a.x, 1 / a.y);\n}\n\n// src/math/vec2/Vec2Lerp.ts\nfunction Vec2Lerp(a, b, t, out = new Vec2()) {\n  const x = a.x;\n  const y = a.y;\n  return out.set(x + t * (b.x - x), y + t * (b.y - y));\n}\n\n// src/math/vec2/Vec2Max.ts\nfunction Vec2Max(a, b, out = new Vec2()) {\n  const {x: ax, y: ay} = a;\n  const {x: bx, y: by} = b;\n  return out.set(Math.max(ax, bx), Math.max(ay, by));\n}\n\n// src/math/vec2/Vec2Min.ts\nfunction Vec2Min(a, b, out = new Vec2()) {\n  const {x: ax, y: ay} = a;\n  const {x: bx, y: by} = b;\n  return out.set(Math.min(ax, bx), Math.min(ay, by));\n}\n\n// src/math/vec2/Vec2Multiply.ts\nfunction Vec2Multiply(a, b, out = new Vec2()) {\n  return out.set(a.x * b.x, a.y * b.y);\n}\n\n// src/math/vec2/Vec2Negate.ts\nfunction Vec2Negate(a, out = new Vec2()) {\n  return out.set(-a.x, -a.y);\n}\n\n// src/math/vec2/Vec2Normalize.ts\nfunction Vec2Normalize(a, out = new Vec2()) {\n  return Vec2DivideScalar(a, GetVec2Length(a) || 1, out);\n}\n\n// src/math/vec2/Vec2One.ts\nfunction Vec2One() {\n  return new Vec2(1, 1);\n}\n\n// src/math/vec2/Vec2PerpDot.ts\nfunction Vec2PerpDot(a, b) {\n  return a.x * b.y - a.y * b.x;\n}\n\n// src/math/vec2/Vec2Random.ts\nfunction Vec2Random(a, scale = 1, out = new Vec2()) {\n  const r = Math.random() * 2 * Math.PI;\n  return out.set(Math.cos(r) * scale, Math.sin(r) * scale);\n}\n\n// src/math/vec2/Vec2Rotate.ts\nfunction Vec2Rotate(a, origin, angle, out = new Vec2()) {\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const x = a.x - origin.x;\n  const y = a.y - origin.y;\n  return out.set(x * c - y * s + origin.x, x * s + y * c + origin.y);\n}\n\n// src/math/vec2/Vec2Round.ts\nfunction Vec2Round(a, out = new Vec2()) {\n  return out.set(Math.round(a.x), Math.round(a.y));\n}\n\n// src/math/vec2/Vec2RoundToZero.ts\nfunction Vec2RoundToZero(a, out = new Vec2()) {\n  return out.set(a.x < 0 ? Math.ceil(a.x) : Math.floor(a.x), a.y < 0 ? Math.ceil(a.y) : Math.floor(a.y));\n}\n\n// src/math/vec2/Vec2ScaleAndAdd.ts\nfunction Vec2ScaleAndAdd(a, b, scalar, out = new Vec2()) {\n  return out.set(a.x + b.x * scalar, a.y + b.y * scalar);\n}\n\n// src/math/vec2/Vec2SetLength.ts\nfunction Vec2SetLength(a, length, out = new Vec2()) {\n  Vec2Normalize(a, out);\n  return Vec2Scale(out, length, out);\n}\n\n// src/math/vec2/Vec2SubtractScalar.ts\nfunction Vec2SubtractScalar(a, scalar, out = new Vec2()) {\n  return out.set(a.x - scalar, a.y - scalar);\n}\n\n// src/math/vec2/Vec2Transform.ts\nfunction Vec2Transform(v, positionX, positionY, rotation, scaleX, scaleY, out = new Vec2()) {\n  return Vec2FromTransform(v.x, v.y, positionX, positionY, rotation, scaleX, scaleY, out);\n}\n\n// src/math/vec2/Vec2TransformMat2d.ts\nfunction Vec2TransformMat2d(v, m, out = new Vec2()) {\n  const {a, b, c, d, tx, ty} = m;\n  return out.set(a * v.x + c * v.y + tx, b * v.x + d * v.y + ty);\n}\n\n// src/math/vec2/Vec2TransformMat4.ts\nfunction Vec2TransformMat4(v, m, out = new Vec2()) {\n  const data = m.data;\n  return out.set(data[0] * v.x + data[4] * v.y + data[12], data[1] * v.x + data[5] * v.y + data[13]);\n}\n\n// src/math/vec2/Vec2Zero.ts\nfunction Vec2Zero() {\n  return new Vec2(0, 0);\n}\n\n// src/math/vec4/index.ts\nvar vec4_exports = {};\n__export(vec4_exports, {\n  GetVec4Distance: () => GetVec4Distance,\n  GetVec4DistanceSquared: () => GetVec4DistanceSquared,\n  GetVec4Length: () => GetVec4Length,\n  GetVec4LengthSquared: () => GetVec4LengthSquared,\n  GetVec4ManhattanDistance: () => GetVec4ManhattanDistance,\n  GetVec4ManhattanLength: () => GetVec4ManhattanLength,\n  RGBACallback: () => RGBACallback,\n  Vec4: () => Vec4,\n  Vec4Abs: () => Vec4Abs,\n  Vec4Add: () => Vec4Add,\n  Vec4AddScalar: () => Vec4AddScalar,\n  Vec4Bezier: () => Vec4Bezier,\n  Vec4Callback: () => Vec4Callback,\n  Vec4CatmullRom: () => Vec4CatmullRom,\n  Vec4Ceil: () => Vec4Ceil,\n  Vec4Center: () => Vec4Center,\n  Vec4Clamp: () => Vec4Clamp,\n  Vec4ClampLength: () => Vec4ClampLength,\n  Vec4ClampScalar: () => Vec4ClampScalar,\n  Vec4Clone: () => Vec4Clone,\n  Vec4CopyFrom: () => Vec4CopyFrom,\n  Vec4Cross: () => Vec4Cross,\n  Vec4Divide: () => Vec4Divide,\n  Vec4DivideScalar: () => Vec4DivideScalar,\n  Vec4Dot: () => Vec4Dot,\n  Vec4Equals: () => Vec4Equals,\n  Vec4Floor: () => Vec4Floor,\n  Vec4Fract: () => Vec4Fract,\n  Vec4FuzzyEquals: () => Vec4FuzzyEquals,\n  Vec4Hermite: () => Vec4Hermite,\n  Vec4Lerp: () => Vec4Lerp,\n  Vec4Max: () => Vec4Max,\n  Vec4Min: () => Vec4Min,\n  Vec4Multiply: () => Vec4Multiply,\n  Vec4MultiplyByFloats: () => Vec4MultiplyByFloats,\n  Vec4Negate: () => Vec4Negate,\n  Vec4Normalize: () => Vec4Normalize,\n  Vec4One: () => Vec4One,\n  Vec4Random: () => Vec4Random,\n  Vec4Round: () => Vec4Round,\n  Vec4RoundToZero: () => Vec4RoundToZero,\n  Vec4Scale: () => Vec4Scale,\n  Vec4ScaleAndAdd: () => Vec4ScaleAndAdd,\n  Vec4SetLength: () => Vec4SetLength,\n  Vec4Subtract: () => Vec4Subtract,\n  Vec4SubtractScalar: () => Vec4SubtractScalar,\n  Vec4TransformMat4: () => Vec4TransformMat4,\n  Vec4Zero: () => Vec4Zero\n});\n\n// src/math/vec4/GetVec4DistanceSquared.ts\nfunction GetVec4DistanceSquared(a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  const z = a.z - b.z;\n  const w = a.w - b.w;\n  return x * x + y * y + z * z + w * w;\n}\n\n// src/math/vec4/GetVec4Distance.ts\nfunction GetVec4Distance(a, b) {\n  return Math.sqrt(GetVec4DistanceSquared(a, b));\n}\n\n// src/math/vec4/GetVec4Length.ts\nfunction GetVec4Length(a) {\n  const {x, y, z, w} = a;\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n// src/math/vec4/GetVec4LengthSquared.ts\nfunction GetVec4LengthSquared(a) {\n  const {x, y, z, w} = a;\n  return x * x + y * y + z * z + w * w;\n}\n\n// src/math/vec4/GetVec4ManhattanDistance.ts\nfunction GetVec4ManhattanDistance(a, b) {\n  return Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z) + Math.abs(a.w - b.w);\n}\n\n// src/math/vec4/GetVec4ManhattanLength.ts\nfunction GetVec4ManhattanLength(a) {\n  const {x, y, z, w} = a;\n  return Math.abs(x) + Math.abs(y) + Math.abs(z) + Math.abs(w);\n}\n\n// src/math/vec4/Vec4Callback.ts\nvar Vec4Callback = class {\n  constructor(onChange, x = 0, y = 0, z = 0, w = 0) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChange = onChange;\n  }\n  destroy() {\n    this.onChange = NOOP;\n  }\n  set(x = 0, y = 0, z = 0, w = 0) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    if (this.onChange) {\n      this.onChange(this);\n    }\n    return this;\n  }\n  get x() {\n    return this._x;\n  }\n  set x(value) {\n    const prev = this._x;\n    this._x = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get y() {\n    return this._y;\n  }\n  set y(value) {\n    const prev = this._y;\n    this._y = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get z() {\n    return this._z;\n  }\n  set z(value) {\n    const prev = this._z;\n    this._z = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get w() {\n    return this._w;\n  }\n  set w(value) {\n    const prev = this._w;\n    this._w = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y, z, w} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    dst[index + 2] = z;\n    dst[index + 3] = w;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1], src[index + 2], src[index + 3]);\n  }\n  toString() {\n    const {x, y, z, w} = this;\n    return `{ x=${x}, y=${y}, z=${z}, w=${w} }`;\n  }\n};\n\n// src/math/vec4/RGBACallback.ts\nvar RGBACallback = class extends Vec4Callback {\n  constructor(onChange, r = 0, g = 0, b = 0, a = 1) {\n    super(onChange, r, g, b, a);\n  }\n  set r(value) {\n    this.x = value;\n  }\n  get r() {\n    return this.x;\n  }\n  set g(value) {\n    this.y = value;\n  }\n  get g() {\n    return this.y;\n  }\n  set b(value) {\n    this.z = value;\n  }\n  get b() {\n    return this.z;\n  }\n  set a(value) {\n    this.w = value;\n  }\n  get a() {\n    return this.w;\n  }\n  toString() {\n    const {x, y, z, w} = this;\n    return `[ r=${x}, g=${y}, b=${z}, a=${w} ]`;\n  }\n};\n\n// src/math/vec4/Vec4.ts\nvar Vec4 = class {\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    this.set(x, y, z, w);\n  }\n  set(x = 0, y = 0, z = 0, w = 1) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y, z, w} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    dst[index + 2] = z;\n    dst[index + 3] = w;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1], src[index + 2], src[index + 3]);\n  }\n  toString() {\n    const {x, y, z, w} = this;\n    return `{ x=${x}, y=${y}, z=${z}, w=${w} }`;\n  }\n};\n\n// src/math/vec4/Vec4Abs.ts\nfunction Vec4Abs(a, out = new Vec4()) {\n  return out.set(Math.abs(a.x), Math.abs(a.y), Math.abs(a.z), Math.abs(a.w));\n}\n\n// src/math/vec4/Vec4Add.ts\nfunction Vec4Add(a, b, out = new Vec4()) {\n  return out.set(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);\n}\n\n// src/math/vec4/Vec4AddScalar.ts\nfunction Vec4AddScalar(a, scalar, out = new Vec4()) {\n  return out.set(a.x + scalar, a.y + scalar, a.z + scalar, a.w + scalar);\n}\n\n// src/math/vec4/Vec4Bezier.ts\nfunction Vec4Bezier(a, b, c, d, t, out = new Vec4()) {\n  return out.set(Bezier(t, a.x, b.x, c.x, d.x), Bezier(t, a.y, b.y, c.y, d.y), Bezier(t, a.z, b.z, c.z, d.z), Bezier(t, a.w, b.w, c.w, d.w));\n}\n\n// src/math/vec4/Vec4CatmullRom.ts\nfunction Vec4CatmullRom(p1, p2, p3, p4, t, out = new Vec4()) {\n  return out.set(CatmullRom(t, p1.x, p2.x, p3.x, p4.x), CatmullRom(t, p1.y, p2.y, p3.y, p4.y), CatmullRom(t, p1.z, p2.z, p3.z, p4.z), CatmullRom(t, p1.w, p2.w, p3.w, p4.w));\n}\n\n// src/math/vec4/Vec4Ceil.ts\nfunction Vec4Ceil(a, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(Math.ceil(x), Math.ceil(y), Math.ceil(z), Math.ceil(w));\n}\n\n// src/math/vec4/Vec4Scale.ts\nfunction Vec4Scale(a, scalar, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(x * scalar, y * scalar, z * scalar, w * scalar);\n}\n\n// src/math/vec4/Vec4Center.ts\nfunction Vec4Center(a, b, out = new Vec4()) {\n  Vec4Add(a, b, out);\n  return Vec4Scale(out, 0.5, out);\n}\n\n// src/math/vec4/Vec4Clamp.ts\nfunction Vec4Clamp(a, min, max, out = new Vec4()) {\n  return out.set(Clamp(a.x, min.x, max.x), Clamp(a.y, min.y, max.y), Clamp(a.z, min.z, max.z), Clamp(a.w, min.w, max.w));\n}\n\n// src/math/vec4/Vec4DivideScalar.ts\nfunction Vec4DivideScalar(a, scalar, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(x / scalar, y / scalar, z / scalar, w / scalar);\n}\n\n// src/math/vec4/Vec4ClampLength.ts\nfunction Vec4ClampLength(a, min, max, out = new Vec4()) {\n  const length = GetVec4Length(a);\n  Vec4DivideScalar(a, length || 1, out);\n  return Vec4Scale(out, Clamp(min, max, length), out);\n}\n\n// src/math/vec4/Vec4ClampScalar.ts\nfunction Vec4ClampScalar(a, min, max, out = new Vec4()) {\n  return out.set(Clamp(a.x, min, max), Clamp(a.y, min, max), Clamp(a.z, min, max), Clamp(a.w, min, max));\n}\n\n// src/math/vec4/Vec4Clone.ts\nfunction Vec4Clone(source) {\n  const {x, y, z, w} = source;\n  return new Vec4(x, y, z, w);\n}\n\n// src/math/vec4/Vec4CopyFrom.ts\nfunction Vec4CopyFrom(source, dest) {\n  const {x, y, z, w} = source;\n  return dest.set(x, y, z, w);\n}\n\n// src/math/vec4/Vec4Cross.ts\nfunction Vec4Cross(u, v, w, out = new Vec4()) {\n  const {x: ux, y: uy, z: uz, w: uw} = u;\n  const {x: vx, y: vy, z: vz, w: vw} = v;\n  const {x: wx, y: wy, z: wz, w: ww} = w;\n  const A = vx * wy - vy * wx;\n  const B = vx * wz - vz * wx;\n  const C = vx * ww - vw * wx;\n  const D = vy * wz - vz * wy;\n  const E = vy * ww - vw * wy;\n  const F = vz * ww - vw * wz;\n  const G = ux;\n  const H = uy;\n  const I = uz;\n  const J = uw;\n  return out.set(H * F - I * E + J * D, -(G * F) + I * C - J * B, G * E - H * C + J * A, -(G * D) + H * B - I * A);\n}\n\n// src/math/vec4/Vec4Divide.ts\nfunction Vec4Divide(a, b, out = new Vec4()) {\n  return out.set(a.x / b.x, a.y / b.y, a.z / b.z, a.w / b.w);\n}\n\n// src/math/vec4/Vec4Dot.ts\nfunction Vec4Dot(a, b) {\n  return a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;\n}\n\n// src/math/vec4/Vec4Equals.ts\nfunction Vec4Equals(a, b) {\n  return a.x === b.x && a.y === b.y && a.z === b.z && a.w === b.w;\n}\n\n// src/math/vec4/Vec4Floor.ts\nfunction Vec4Floor(a, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(Math.floor(x), Math.floor(y), Math.floor(z), Math.floor(w));\n}\n\n// src/math/vec4/Vec4Fract.ts\nfunction Vec4Fract(a, out = new Vec4()) {\n  return out.set(a.x - Math.floor(a.x), a.y - Math.floor(a.y), a.z - Math.floor(a.z), a.w - Math.floor(a.w));\n}\n\n// src/math/vec4/Vec4FuzzyEquals.ts\nfunction Vec4FuzzyEquals(a, b, epsilon = 1e-4) {\n  return FuzzyEqual(a.x, b.x, epsilon) && FuzzyEqual(a.y, b.y, epsilon) && FuzzyEqual(a.z, b.z, epsilon) && FuzzyEqual(a.w, b.w, epsilon);\n}\n\n// src/math/vec4/Vec4Hermite.ts\nfunction Vec4Hermite(a, b, c, d, t, out = new Vec4()) {\n  return out.set(Hermite(t, a.x, b.x, c.x, d.x), Hermite(t, a.y, b.y, c.y, d.y), Hermite(t, a.z, b.z, c.z, d.z), Hermite(t, a.w, b.w, c.w, d.w));\n}\n\n// src/math/vec4/Vec4Lerp.ts\nfunction Vec4Lerp(a, b, t, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(x + t * (b.x - x), y + t * (b.y - y), z + t * (b.z - z), w + t * (b.w - w));\n}\n\n// src/math/vec4/Vec4Max.ts\nfunction Vec4Max(a, b, out = new Vec4()) {\n  const {x: ax, y: ay, z: az, w: aw} = a;\n  const {x: bx, y: by, z: bz, w: bw} = b;\n  return out.set(Math.max(ax, bx), Math.max(ay, by), Math.max(az, bz), Math.max(aw, bw));\n}\n\n// src/math/vec4/Vec4Min.ts\nfunction Vec4Min(a, b, out = new Vec4()) {\n  const {x: ax, y: ay, z: az, w: aw} = a;\n  const {x: bx, y: by, z: bz, w: bw} = b;\n  return out.set(Math.min(ax, bx), Math.min(ay, by), Math.min(az, bz), Math.min(aw, bw));\n}\n\n// src/math/vec4/Vec4Multiply.ts\nfunction Vec4Multiply(a, b, out = new Vec4()) {\n  return out.set(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);\n}\n\n// src/math/vec4/Vec4MultiplyByFloats.ts\nfunction Vec4MultiplyByFloats(a, x, y, z, w, out = new Vec4()) {\n  return out.set(a.x * x, a.y * y, a.z * z, a.w * w);\n}\n\n// src/math/vec4/Vec4Negate.ts\nfunction Vec4Negate(a, out = new Vec4()) {\n  return out.set(-a.x, -a.y, -a.z, -a.w);\n}\n\n// src/math/vec4/Vec4Normalize.ts\nfunction Vec4Normalize(a, out = new Vec4()) {\n  return Vec4DivideScalar(a, GetVec4Length(a) || 1, out);\n}\n\n// src/math/vec4/Vec4One.ts\nfunction Vec4One() {\n  return new Vec4(1, 1, 1, 1);\n}\n\n// src/math/vec4/Vec4Random.ts\nfunction Vec4Random(a, scale = 1, out = new Vec4()) {\n  let v1;\n  let v2;\n  let v3;\n  let v4;\n  let s1;\n  let s2;\n  do {\n    v1 = Math.random() * 2 - 1;\n    v2 = Math.random() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n  do {\n    v3 = Math.random() * 2 - 1;\n    v4 = Math.random() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n  const d = Math.sqrt((1 - s1) / s2);\n  return out.set(scale * v1, scale * v2, scale * v3 * d, scale * v4 * d);\n}\n\n// src/math/vec4/Vec4Round.ts\nfunction Vec4Round(a, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(Math.round(x), Math.round(y), Math.round(z), Math.round(w));\n}\n\n// src/math/vec4/Vec4RoundToZero.ts\nfunction Vec4RoundToZero(a, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(x < 0 ? Math.ceil(x) : Math.floor(x), y < 0 ? Math.ceil(y) : Math.floor(y), z < 0 ? Math.ceil(z) : Math.floor(z), w < 0 ? Math.ceil(w) : Math.floor(w));\n}\n\n// src/math/vec4/Vec4ScaleAndAdd.ts\nfunction Vec4ScaleAndAdd(a, b, scalar, out = new Vec4()) {\n  return out.set(a.x + b.x * scalar, a.y + b.y * scalar, a.z + b.z * scalar, a.w + b.w * scalar);\n}\n\n// src/math/vec4/Vec4SetLength.ts\nfunction Vec4SetLength(a, length, out = new Vec4()) {\n  Vec4Normalize(a, out);\n  return Vec4Scale(out, length, out);\n}\n\n// src/math/vec4/Vec4Subtract.ts\nfunction Vec4Subtract(a, b, out = new Vec4()) {\n  return out.set(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);\n}\n\n// src/math/vec4/Vec4SubtractScalar.ts\nfunction Vec4SubtractScalar(a, scalar, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(x - scalar, y - scalar, z - scalar, w - scalar);\n}\n\n// src/math/vec4/Vec4TransformMat4.ts\nfunction Vec4TransformMat4(a, m, out = new Vec4()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = m.data;\n  const {x, y, z, w} = a;\n  return out.set(m00 * x + m10 * y + m20 * z + m30 * w, m01 * x + m11 * y + m21 * z + m31 * w, m02 * x + m12 * y + m22 * z + m32 * w, m03 * x + m13 * y + m23 * z + m33 * w);\n}\n\n// src/math/vec4/Vec4Zero.ts\nfunction Vec4Zero() {\n  return new Vec4(0, 0, 0, 0);\n}\n\n// src/math/Average.ts\nfunction Average(values) {\n  let sum = 0;\n  for (let i = 0; i < values.length; i++) {\n    sum += +values[i];\n  }\n  return sum / values.length;\n}\n\n// src/math/Between.ts\nfunction Between(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n// src/math/CeilTo.ts\nfunction CeilTo(value, place = 0, base = 10) {\n  const p = Math.pow(base, -place);\n  return Math.ceil(value * p) / p;\n}\n\n// src/math/DegToRad.ts\nfunction DegToRad(degrees) {\n  return degrees * MATH_CONST.DEG_TO_RAD;\n}\n\n// src/math/Difference.ts\nfunction Difference(a, b) {\n  return Math.abs(a - b);\n}\n\n// src/math/FloatBetween.ts\nfunction FloatBetween(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\n// src/math/FloorTo.ts\nfunction FloorTo(value, place = 0, base = 10) {\n  const p = Math.pow(base, -place);\n  return Math.floor(value * p) / p;\n}\n\n// src/math/FromPercent.ts\nfunction FromPercent(percent, min, max) {\n  percent = Clamp(percent, 0, 1);\n  return (max - min) * percent;\n}\n\n// src/math/GetSpeed.ts\nfunction GetSpeed(distance, time) {\n  return distance / time / 1e3;\n}\n\n// src/math/MaxAdd.ts\nfunction MaxAdd(value, amount, max) {\n  return Math.min(value + amount, max);\n}\n\n// src/math/MinSub.ts\nfunction MinSub(value, amount, min) {\n  return Math.max(value - amount, min);\n}\n\n// src/math/Percent.ts\nfunction Percent(value, min, max, upperMax) {\n  if (max === void 0) {\n    max = min + 1;\n  }\n  let percentage = (value - min) / (max - min);\n  if (percentage > 1) {\n    if (upperMax !== void 0) {\n      percentage = (upperMax - value) / (upperMax - max);\n      if (percentage < 0) {\n        percentage = 0;\n      }\n    } else {\n      percentage = 1;\n    }\n  } else if (percentage < 0) {\n    percentage = 0;\n  }\n  return percentage;\n}\n\n// src/math/RadToDeg.ts\nfunction RadToDeg(radians) {\n  return radians * MATH_CONST.RAD_TO_DEG;\n}\n\n// src/math/RoundTo.ts\nfunction RoundTo(value, place = 0, base = 10) {\n  const p = Math.pow(base, -place);\n  return Math.round(value * p) / p;\n}\n\n// src/math/SinCosTableGenerator.ts\nfunction SinCosTableGenerator(length, sinAmp = 1, cosAmp = 1, frequency = 1) {\n  frequency *= Math.PI / length;\n  const cos = [];\n  const sin = [];\n  for (let c = 0; c < length; c++) {\n    cosAmp -= sinAmp * frequency;\n    sinAmp += cosAmp * frequency;\n    cos[c] = cosAmp;\n    sin[c] = sinAmp;\n  }\n  return {\n    sin,\n    cos,\n    length\n  };\n}\n\n// src/math/Within.ts\nfunction Within(a, b, tolerance) {\n  return Math.abs(a - b) <= tolerance;\n}\n\n// src/camera3d/Camera3D.ts\nvar Camera3D = class {\n  constructor(x = 0, y = 0, z = 0, fov = 45, near = 0.1, far = 1e3) {\n    this.dirtyRender = true;\n    this.type = \"Camera3D\";\n    const game = GameInstance.get();\n    this.renderer = game.renderer;\n    this.position = new Vec3Callback(() => this.update(), x, y, z);\n    this.direction = new Vec3Callback(() => this.update(), 0, 1, 0);\n    this._lookAtPosition = new Vec3();\n    this._lookAtView = new Matrix4();\n    this._axis = new Quaternion();\n    this.up = Vec3Up();\n    this.left = Vec3Left();\n    this._fov = fov;\n    this._near = near;\n    this._far = far;\n    this.aspectRatio = this.renderer.width / this.renderer.height;\n    this.viewMatrix = new Matrix4();\n    this.projectionMatrix = Mat4Perspective(DegToRad(fov), this.aspectRatio, near, far);\n    this.lookAt(new Vec3());\n  }\n  updateProjectionMatrix() {\n    Mat4Perspective(DegToRad(this._fov), this.aspectRatio, this._near, this._far, this.projectionMatrix);\n    return this;\n  }\n  lookAt(point) {\n    const pos = this.position;\n    const dir = this.direction;\n    const left = this.left;\n    Vec3Subtract(point, pos, dir);\n    Vec3Normalize(dir, dir);\n    Vec3CrossNormalize(UP, dir, left);\n    Vec3CrossNormalize(dir, left, this.up);\n    return this.update();\n  }\n  rotateOnAxis(axisVec, angle) {\n    const dir = this.direction;\n    const left = this.left;\n    const up = this.up;\n    const q = QuatSetAxisAngle(axisVec, angle, this._axis);\n    Vec3TransformQuat(dir, q, dir);\n    Vec3TransformQuat(left, q, left);\n    Vec3TransformQuat(up, q, up);\n    Vec3Normalize(up, up);\n    Vec3Normalize(left, left);\n    Vec3Normalize(dir, dir);\n    return this.update();\n  }\n  yaw(angle) {\n    return this.rotateOnAxis(this.up, angle);\n  }\n  pitch(angle) {\n    return this.rotateOnAxis(this.left, angle);\n  }\n  roll(angle) {\n    return this.rotateOnAxis(this.direction, angle);\n  }\n  forward(s) {\n    const pos = this.position;\n    const {x: px, y: py, z: pz} = pos;\n    const {x: dx, y: dy, z: dz} = this.direction;\n    pos.set(px - s * dx, py - s * dy, pz - s * dz);\n    return this.update();\n  }\n  update() {\n    const lookPosition = this._lookAtPosition;\n    const lookView = this._lookAtView;\n    const pos = this.position;\n    Vec3Add(pos, this.direction, lookPosition);\n    Mat4LookAt(pos, lookPosition, this.up, lookView);\n    Mat4TranslateFromFloats(lookView, -pos.x, -pos.y, -pos.z, this.viewMatrix);\n    return this;\n  }\n  reset() {\n  }\n  destroy() {\n    this.position.destroy();\n    this.direction.destroy();\n    this.up = null;\n    this.left = null;\n    this.viewMatrix = null;\n    this.projectionMatrix = null;\n    this._lookAtPosition = null;\n    this._lookAtView = null;\n    this._axis = null;\n  }\n  get fov() {\n    return this._fov;\n  }\n  set fov(value) {\n    if (value > 0 && value < 180) {\n      this._fov = value;\n      this.updateProjectionMatrix();\n    }\n  }\n  get near() {\n    return this._near;\n  }\n  set near(value) {\n    if (value > 0) {\n      this._near = value;\n      this.updateProjectionMatrix();\n    }\n  }\n  get far() {\n    return this._far;\n  }\n  set far(value) {\n    if (value > 0) {\n      this._far = value;\n      this.updateProjectionMatrix();\n    }\n  }\n};\n\n// src/config/index.ts\nvar config_exports = {};\n__export(config_exports, {\n  BackgroundColor: () => BackgroundColor,\n  Banner: () => Banner,\n  BatchSize: () => BatchSize,\n  Canvas: () => Canvas,\n  CanvasContext: () => CanvasContext,\n  DefaultOrigin: () => DefaultOrigin,\n  MaxTextures: () => MaxTextures,\n  Parent: () => Parent,\n  Scenes: () => Scenes,\n  Size: () => Size,\n  WebGL: () => WebGL,\n  WebGLContext: () => WebGLContext\n});\n\n// src/config/const.ts\nvar CONFIG_DEFAULTS = {\n  BACKGROUND_COLOR: \"BackgroundColor\",\n  BATCH_SIZE: \"BatchSize\",\n  DEFAULT_ORIGIN: \"DefaultOrigin\",\n  MAX_TEXTURES: \"MaxTextures\",\n  PARENT: \"Parent\",\n  SIZE: \"Size\",\n  SCENES: \"Scenes\",\n  RENDERER: \"Renderer\",\n  AUTO: \"Auto\",\n  WEBGL: \"WebGL\",\n  CANVAS: \"Canvas\",\n  WEBGL_CONTEXT: \"WebGLContext\",\n  CANVAS_CONTEXT: \"CanvasContext\",\n  BANNER: \"Banner\"\n};\n\n// src/config/ConfigStore.ts\nvar ConfigStore = new Map();\n\n// src/config/backgroundcolor/SetBackgroundColor.ts\nfunction SetBackgroundColor(color) {\n  ConfigStore.set(CONFIG_DEFAULTS.BACKGROUND_COLOR, color);\n}\n\n// src/config/backgroundcolor/BackgroundColor.ts\nfunction BackgroundColor(color) {\n  return () => {\n    SetBackgroundColor(color);\n  };\n}\n\n// src/config/banner/SetBanner.ts\nfunction SetBanner(title = \"\", version = \"\", url = \"\", color = \"#fff\", background = \"linear-gradient(#3e0081 40%, #00bcc3)\") {\n  ConfigStore.set(CONFIG_DEFAULTS.BANNER, {title, version, url, color, background});\n}\n\n// src/config/banner/Banner.ts\nfunction Banner(title, version, url, color, background) {\n  return () => {\n    SetBanner(title, version, url, color, background);\n  };\n}\n\n// src/config/batchsize/SetBatchSize.ts\nfunction SetBatchSize(size) {\n  ConfigStore.set(CONFIG_DEFAULTS.BATCH_SIZE, size);\n}\n\n// src/config/batchsize/BatchSize.ts\nfunction BatchSize(size) {\n  return () => {\n    SetBatchSize(size);\n  };\n}\n\n// src/config/size/GetHeight.ts\nfunction GetHeight() {\n  return ConfigStore.get(CONFIG_DEFAULTS.SIZE).height;\n}\n\n// src/config/size/GetResolution.ts\nfunction GetResolution() {\n  return ConfigStore.get(CONFIG_DEFAULTS.SIZE).resolution;\n}\n\n// src/config/size/GetWidth.ts\nfunction GetWidth() {\n  return ConfigStore.get(CONFIG_DEFAULTS.SIZE).width;\n}\n\n// src/config/size/SetSize.ts\nfunction SetSize(width = 800, height = 600, resolution = 1) {\n  if (resolution === 0) {\n    resolution = window.devicePixelRatio;\n  }\n  ConfigStore.set(CONFIG_DEFAULTS.SIZE, {width, height, resolution});\n}\n\n// src/config/size/Size.ts\nfunction Size(width = 800, height = 600, resolution = 1) {\n  return () => {\n    SetSize(width, height, resolution);\n  };\n}\n\n// src/renderer/BindingQueue.ts\nvar queue = [];\nvar BindingQueue = {\n  add: (texture, glConfig) => {\n    queue.push({texture, glConfig});\n  },\n  get: () => {\n    return queue;\n  },\n  clear: () => {\n    queue.length = 0;\n  }\n};\n\n// src/config/backgroundcolor/GetBackgroundColor.ts\nfunction GetBackgroundColor() {\n  return ConfigStore.get(CONFIG_DEFAULTS.BACKGROUND_COLOR);\n}\n\n// src/config/canvascontext/GetCanvasContext.ts\nfunction GetCanvasContext() {\n  return ConfigStore.get(CONFIG_DEFAULTS.CANVAS_CONTEXT);\n}\n\n// src/renderer/canvas/CanvasRenderer.ts\nvar CanvasRenderer = class {\n  constructor() {\n    this.clearBeforeRender = true;\n    this.optimizeRedraw = true;\n    this.autoResize = true;\n    this.width = GetWidth();\n    this.height = GetHeight();\n    this.resolution = GetResolution();\n    this.setBackgroundColor(GetBackgroundColor());\n    const canvas = document.createElement(\"canvas\");\n    this.canvas = canvas;\n    this.initContext();\n  }\n  initContext() {\n    const ctx = this.canvas.getContext(\"2d\", GetCanvasContext());\n    this.ctx = ctx;\n    this.resize(this.width, this.height, this.resolution);\n  }\n  resize(width, height, resolution = 1) {\n    this.width = width * resolution;\n    this.height = height * resolution;\n    this.resolution = resolution;\n    const canvas = this.canvas;\n    canvas.width = this.width;\n    canvas.height = this.height;\n    if (this.autoResize) {\n      canvas.style.width = (this.width / resolution).toString() + \"px\";\n      canvas.style.height = (this.height / resolution).toString() + \"px\";\n    }\n  }\n  setBackgroundColor(color) {\n    const r = color >> 16 & 255;\n    const g = color >> 8 & 255;\n    const b = color & 255;\n    const a = color > 16777215 ? color >>> 24 : 255;\n    this.clearColor = `rgba(${r}, ${g}, ${b}, ${a})`;\n    return this;\n  }\n  reset() {\n    const ctx = this.ctx;\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }\n  render(renderData) {\n    BindingQueue.clear();\n    const ctx = this.ctx;\n    if (this.optimizeRedraw && renderData.numDirtyFrames === 0 && renderData.numDirtyCameras === 0) {\n      return;\n    }\n    this.reset();\n    if (this.clearBeforeRender) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      ctx.fillStyle = this.clearColor;\n      ctx.fillRect(0, 0, this.width, this.height);\n    }\n  }\n  destroy() {\n  }\n};\n\n// src/config/renderer/SetRenderer.ts\nfunction SetRenderer(renderer) {\n  ConfigStore.set(CONFIG_DEFAULTS.RENDERER, renderer);\n}\n\n// src/config/canvas/Canvas.ts\nfunction Canvas() {\n  return () => {\n    SetRenderer(CanvasRenderer);\n  };\n}\n\n// src/config/canvascontext/SetCanvasContext.ts\nfunction SetCanvasContext(contextAttributes) {\n  ConfigStore.set(CONFIG_DEFAULTS.CANVAS_CONTEXT, contextAttributes);\n}\n\n// src/config/canvascontext/CanvasContext.ts\nfunction CanvasContext(contextAttributes) {\n  return () => {\n    SetCanvasContext(contextAttributes);\n  };\n}\n\n// src/config/defaultorigin/SetDefaultOrigin.ts\nfunction SetDefaultOrigin(x = 0.5, y = x) {\n  ConfigStore.set(CONFIG_DEFAULTS.DEFAULT_ORIGIN, {x, y});\n}\n\n// src/config/defaultorigin/DefaultOrigin.ts\nfunction DefaultOrigin(x = 0.5, y = x) {\n  return () => {\n    SetDefaultOrigin(x, y);\n  };\n}\n\n// src/config/maxtextures/SetMaxTextures.ts\nfunction SetMaxTextures(max) {\n  ConfigStore.set(CONFIG_DEFAULTS.MAX_TEXTURES, max);\n}\n\n// src/config/maxtextures/MaxTextures.ts\nfunction MaxTextures(max = 0) {\n  return () => {\n    SetMaxTextures(max);\n  };\n}\n\n// src/dom/GetElement.ts\nfunction GetElement(target) {\n  let element;\n  if (target) {\n    if (typeof target === \"string\") {\n      element = document.getElementById(target);\n    } else if (typeof target === \"object\" && target.nodeType === 1) {\n      element = target;\n    }\n  }\n  if (!element) {\n    element = document.body;\n  }\n  return element;\n}\n\n// src/config/parent/SetParent.ts\nfunction SetParent(parentElement) {\n  if (parentElement) {\n    ConfigStore.set(CONFIG_DEFAULTS.PARENT, GetElement(parentElement));\n  }\n}\n\n// src/config/parent/Parent.ts\nfunction Parent(parentElement) {\n  return () => {\n    SetParent(parentElement);\n  };\n}\n\n// src/config/scenes/SetScenes.ts\nfunction SetScenes(scenes) {\n  ConfigStore.set(CONFIG_DEFAULTS.SCENES, [].concat(scenes));\n}\n\n// src/config/scenes/Scenes.ts\nfunction Scenes(scenes) {\n  return () => {\n    SetScenes(scenes);\n  };\n}\n\n// src/renderer/webgl1/renderpass/AddViewport.ts\nfunction AddViewport(renderPass, x = 0, y = 0, width = 0, height = 0) {\n  const viewport = new Rectangle(x, y, width, height);\n  renderPass.viewportStack.push(viewport);\n  return viewport;\n}\n\n// src/renderer/webgl1/GL.ts\nvar gl;\nvar GL = {\n  get: () => {\n    return gl;\n  },\n  set: (context) => {\n    gl = context;\n  }\n};\n\n// src/renderer/webgl1/renderpass/BindViewport.ts\nfunction BindViewport(renderPass, viewport) {\n  if (!viewport) {\n    viewport = renderPass.currentViewport;\n    if (!viewport) {\n      return;\n    }\n  }\n  const glv = gl.getParameter(gl.VIEWPORT);\n  if (glv[0] !== viewport.x || glv[1] !== viewport.y || glv[2] !== viewport.width || glv[3] !== viewport.height) {\n    gl.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n  }\n}\n\n// src/renderer/webgl1/renderpass/SetViewport.ts\nfunction SetViewport(renderPass, x = 0, y = 0, width = 0, height = 0) {\n  const entry = AddViewport(renderPass, x, y, width, height);\n  BindViewport(renderPass, entry);\n  renderPass.currentViewport = entry;\n}\n\n// src/renderer/webgl1/renderpass/BindFramebuffer.ts\nfunction BindFramebuffer(renderPass, clear = true, entry) {\n  if (!entry) {\n    entry = renderPass.currentFramebuffer;\n  }\n  const {framebuffer, viewport} = entry;\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  if (clear) {\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  }\n  if (viewport) {\n    SetViewport(renderPass, viewport.x, viewport.y, viewport.width, viewport.height);\n  }\n}\n\n// src/renderer/webgl1/renderpass/PopViewport.ts\nfunction PopViewport(renderPass) {\n  const stack = renderPass.viewportStack;\n  if (stack.length > 1) {\n    stack.pop();\n  }\n  renderPass.currentViewport = stack[stack.length - 1];\n  BindViewport(renderPass);\n}\n\n// src/renderer/webgl1/renderpass/PopFramebuffer.ts\nfunction PopFramebuffer(renderPass) {\n  const stack = renderPass.framebufferStack;\n  if (stack.length > 1) {\n    if (renderPass.currentFramebuffer.viewport) {\n      PopViewport(renderPass);\n    }\n    stack.pop();\n  }\n  renderPass.currentFramebuffer = stack[stack.length - 1];\n  BindFramebuffer(renderPass, false);\n}\n\n// src/renderer/webgl1/renderpass/AddFramebuffer.ts\nfunction AddFramebuffer(renderPass, framebuffer, viewport) {\n  const entry = {framebuffer, viewport};\n  renderPass.framebufferStack.push(entry);\n  return entry;\n}\n\n// src/renderer/webgl1/renderpass/SetFramebuffer.ts\nfunction SetFramebuffer(renderPass, framebuffer, clear = true, viewport) {\n  const entry = AddFramebuffer(renderPass, framebuffer, viewport);\n  BindFramebuffer(renderPass, clear, entry);\n  renderPass.currentFramebuffer = entry;\n}\n\n// src/renderer/webgl1/renderpass/Draw.ts\nfunction Draw(renderPass) {\n  const count = renderPass.count;\n  if (count === 0) {\n    return;\n  }\n  const currentBuffer = renderPass.currentVertexBuffer;\n  const currentShader = renderPass.currentShader;\n  const renderToFramebuffer = currentShader.shader.renderToFramebuffer;\n  if (renderToFramebuffer) {\n    SetFramebuffer(renderPass, currentShader.shader.framebuffer, true);\n  }\n  if (count === currentBuffer.batchSize) {\n    const type = currentBuffer.isDynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n    gl.bufferData(gl.ARRAY_BUFFER, currentBuffer.data, type);\n  } else {\n    const subsize = currentBuffer.indexed ? count * currentBuffer.entryElementSize : count * currentBuffer.vertexElementSize;\n    const view = currentBuffer.vertexViewF32.subarray(0, subsize);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\n  }\n  if (currentBuffer.indexed) {\n    gl.drawElements(gl.TRIANGLES, count * currentBuffer.entryIndexSize, gl.UNSIGNED_SHORT, 0);\n  } else {\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n  }\n  if (renderToFramebuffer) {\n    PopFramebuffer(renderPass);\n  }\n}\n\n// src/renderer/webgl1/renderpass/Flush.ts\nfunction Flush(renderPass, forceCount) {\n  if (forceCount) {\n    renderPass.count = forceCount;\n  }\n  const count = renderPass.count;\n  if (count === 0) {\n    return false;\n  }\n  Draw(renderPass);\n  renderPass.prevCount = count;\n  renderPass.count = 0;\n  renderPass.flushTotal++;\n  return true;\n}\n\n// src/renderer/webgl1/renderpass/End.ts\nfunction End(renderPass) {\n  Flush(renderPass);\n}\n\n// src/renderer/webgl1/colors/GetRGBArray.ts\nfunction GetRGBArray(color, output = []) {\n  const r = color >> 16 & 255;\n  const g = color >> 8 & 255;\n  const b = color & 255;\n  const a = color > 16777215 ? color >>> 24 : 255;\n  output[0] = r / 255;\n  output[1] = g / 255;\n  output[2] = b / 255;\n  output[3] = a / 255;\n  return output;\n}\n\n// src/config/webglcontext/GetWebGLContext.ts\nfunction GetWebGLContext() {\n  return ConfigStore.get(CONFIG_DEFAULTS.WEBGL_CONTEXT);\n}\n\n// src/renderer/webgl1/textures/CreateGLTexture.ts\nfunction CreateGLTexture(binding) {\n  const {parent, flipY, unpackPremultiplyAlpha, minFilter, magFilter, wrapS, wrapT, generateMipmap, isPOT} = binding;\n  const source = parent.image;\n  let width = parent.width;\n  let height = parent.height;\n  const glTexture = gl.createTexture();\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(gl.TEXTURE_2D, glTexture);\n  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n  gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, unpackPremultiplyAlpha);\n  if (source) {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\n    width = source.width;\n    height = source.height;\n  } else {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  }\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n  if (generateMipmap && isPOT) {\n    gl.generateMipmap(gl.TEXTURE_2D);\n  }\n  binding.texture = glTexture;\n  return glTexture;\n}\n\n// src/renderer/webgl1/fbo/DeleteFramebuffer.ts\nfunction DeleteFramebuffer(framebuffer) {\n  if (gl && gl.isFramebuffer(framebuffer)) {\n    gl.deleteFramebuffer(framebuffer);\n  }\n}\n\n// src/renderer/webgl1/textures/DeleteGLTexture.ts\nfunction DeleteGLTexture(texture) {\n  if (gl.isTexture(texture)) {\n    gl.deleteTexture(texture);\n  }\n}\n\n// src/renderer/webgl1/textures/SetGLTextureFilterMode.ts\nfunction SetGLTextureFilterMode(texture, linear = true) {\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  const mode = linear ? gl.LINEAR : gl.NEAREST;\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, mode);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mode);\n}\n\n// src/renderer/webgl1/textures/UpdateGLTexture.ts\nfunction UpdateGLTexture(binding) {\n  const source = binding.parent.image;\n  const width = source.width;\n  const height = source.height;\n  if (width > 0 && height > 0) {\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, binding.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, binding.flipY);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\n  }\n  return binding.texture;\n}\n\n// src/renderer/webgl1/textures/GLTextureBinding.ts\nvar GLTextureBinding = class {\n  constructor(parent, config = {}) {\n    this.index = 0;\n    this.indexCounter = -1;\n    this.dirtyIndex = true;\n    this.unpackPremultiplyAlpha = true;\n    this.flipY = false;\n    this.isPOT = false;\n    this.generateMipmap = false;\n    this.parent = parent;\n    this.isPOT = IsSizePowerOfTwo(parent.width, parent.height);\n    const {\n      texture = null,\n      framebuffer = null,\n      depthbuffer = null,\n      unpackPremultiplyAlpha = true,\n      minFilter = this.isPOT ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR,\n      magFilter = gl.LINEAR,\n      wrapS = gl.CLAMP_TO_EDGE,\n      wrapT = gl.CLAMP_TO_EDGE,\n      generateMipmap = this.isPOT,\n      flipY = false\n    } = config;\n    this.minFilter = minFilter;\n    this.magFilter = magFilter;\n    this.wrapS = wrapS;\n    this.wrapT = wrapT;\n    this.generateMipmap = generateMipmap;\n    this.flipY = flipY;\n    this.unpackPremultiplyAlpha = unpackPremultiplyAlpha;\n    if (framebuffer) {\n      this.framebuffer = framebuffer;\n    }\n    if (depthbuffer) {\n      this.depthbuffer = depthbuffer;\n    }\n    if (texture) {\n      this.texture = texture;\n    } else {\n      CreateGLTexture(this);\n    }\n  }\n  setFilter(linear) {\n    if (this.texture) {\n      SetGLTextureFilterMode(this.texture, linear);\n    }\n  }\n  create() {\n    const texture = this.texture;\n    if (texture) {\n      DeleteGLTexture(texture);\n    }\n    return CreateGLTexture(this);\n  }\n  update() {\n    const texture = this.texture;\n    if (!texture) {\n      return CreateGLTexture(this);\n    } else {\n      return UpdateGLTexture(this);\n    }\n  }\n  setIndex(index) {\n    this.dirtyIndex = index !== this.index;\n    this.index = index;\n  }\n  destroy() {\n    DeleteGLTexture(this.texture);\n    DeleteFramebuffer(this.framebuffer);\n    this.parent = null;\n    this.texture = null;\n    this.framebuffer = null;\n  }\n};\n\n// src/renderer/webgl1/renderpass/ProcessBindingQueue.ts\nfunction ProcessBindingQueue() {\n  const queue2 = BindingQueue.get();\n  queue2.forEach((entry) => {\n    const {texture, glConfig} = entry;\n    if (!texture.binding) {\n      texture.binding = new GLTextureBinding(texture, glConfig);\n    }\n  });\n  BindingQueue.clear();\n}\n\n// src/config/maxtextures/GetMaxTextures.ts\nfunction GetMaxTextures() {\n  return ConfigStore.get(CONFIG_DEFAULTS.MAX_TEXTURES);\n}\n\n// src/renderer/webgl1/shaders/CheckShaderMaxIfStatements.ts\nvar fragTemplate = [\n  \"precision mediump float;\",\n  \"void main(void){\",\n  \"float test = 0.1;\",\n  \"%forloop%\",\n  \"gl_FragColor = vec4(0.0);\",\n  \"}\"\n].join(\"\\n\");\nfunction GenerateSrc(maxIfs) {\n  let src = \"\";\n  for (let i = 0; i < maxIfs; ++i) {\n    if (i > 0) {\n      src += \"\\nelse \";\n    }\n    if (i < maxIfs - 1) {\n      src += `if(test == ${i}.0){}`;\n    }\n  }\n  return src;\n}\nfunction CheckShaderMaxIfStatements(maxIfs) {\n  const shader = gl.createShader(gl.FRAGMENT_SHADER);\n  while (true) {\n    const fragmentSrc = fragTemplate.replace(/%forloop%/gi, GenerateSrc(maxIfs));\n    gl.shaderSource(shader, fragmentSrc);\n    gl.compileShader(shader);\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      maxIfs = maxIfs / 2 | 0;\n    } else {\n      break;\n    }\n  }\n  return maxIfs;\n}\n\n// src/renderer/webgl1/renderpass/CreateTempTextures.ts\nfunction CreateTempTextures(renderPass) {\n  let maxGPUTextures = CheckShaderMaxIfStatements(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\n  const maxConfigTextures = GetMaxTextures();\n  if (maxConfigTextures === 0 || maxConfigTextures > 0 && maxConfigTextures > maxGPUTextures) {\n    SetMaxTextures(maxGPUTextures);\n  } else if (maxConfigTextures > 0 && maxConfigTextures < maxGPUTextures) {\n    maxGPUTextures = Math.max(8, maxConfigTextures);\n  }\n  const tempTextures = renderPass.tempTextures;\n  if (tempTextures.length) {\n    tempTextures.forEach((texture) => {\n      gl.deleteTexture(texture);\n    });\n  }\n  const index = [];\n  for (let texturesIndex = 0; texturesIndex < maxGPUTextures; texturesIndex++) {\n    const tempTexture = gl.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + texturesIndex);\n    gl.bindTexture(gl.TEXTURE_2D, tempTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0, 0, 255, 255]));\n    tempTextures[texturesIndex] = tempTexture;\n    index.push(texturesIndex);\n  }\n  renderPass.maxTextures = maxGPUTextures;\n  renderPass.textureIndex = index;\n  renderPass.currentActiveTexture = 1;\n}\n\n// src/config/batchsize/GetBatchSize.ts\nfunction GetBatchSize() {\n  return ConfigStore.get(CONFIG_DEFAULTS.BATCH_SIZE);\n}\n\n// src/renderer/webgl1/buffers/DeleteGLBuffer.ts\nfunction DeleteGLBuffer(buffer) {\n  if (gl.isBuffer(buffer)) {\n    gl.deleteBuffer(buffer);\n  }\n}\n\n// src/renderer/webgl1/buffers/VertexBuffer.ts\nvar VertexBuffer = class {\n  constructor(config = {}) {\n    this.indexed = false;\n    this.isDynamic = false;\n    this.count = 0;\n    this.offset = 0;\n    const {\n      batchSize = 1,\n      dataSize = 4,\n      isDynamic = true,\n      elementsPerEntry = 4,\n      vertexElementSize = 6\n    } = config;\n    this.batchSize = batchSize;\n    this.dataSize = dataSize;\n    this.vertexElementSize = vertexElementSize;\n    this.isDynamic = isDynamic;\n    this.elementsPerEntry = elementsPerEntry;\n    this.vertexByteSize = vertexElementSize * dataSize;\n    this.entryByteSize = this.vertexByteSize * elementsPerEntry;\n    this.bufferByteSize = batchSize * this.entryByteSize;\n    this.create();\n  }\n  resize(batchSize) {\n    this.batchSize = batchSize;\n    this.bufferByteSize = batchSize * this.entryByteSize;\n    if (this.vertexBuffer) {\n      DeleteGLBuffer(this.vertexBuffer);\n    }\n    this.create();\n  }\n  create() {\n    const data = new ArrayBuffer(this.bufferByteSize);\n    this.data = data;\n    this.vertexViewF32 = new Float32Array(data);\n    this.vertexViewU32 = new Uint32Array(data);\n    this.vertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n    const type = this.isDynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n    gl.bufferData(gl.ARRAY_BUFFER, data, type);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  }\n  add(count) {\n    this.count += count;\n    this.offset += this.vertexElementSize * count;\n  }\n  reset() {\n    this.count = 0;\n    this.offset = 0;\n  }\n  canContain(count) {\n    return this.count + count <= this.batchSize;\n  }\n  free() {\n    return Math.max(0, 1 - this.count / this.batchSize);\n  }\n  bind() {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n  }\n  destroy() {\n    DeleteGLBuffer(this.vertexBuffer);\n    this.data = null;\n    this.vertexViewF32 = null;\n    this.vertexViewU32 = null;\n    this.vertexBuffer = null;\n  }\n};\n\n// src/renderer/webgl1/buffers/IndexedVertexBuffer.ts\nvar IndexedVertexBuffer = class extends VertexBuffer {\n  constructor(config = {}) {\n    super(config);\n    const {\n      indexSize = 4,\n      entryIndexSize = 6,\n      indexLayout = null\n    } = config;\n    this.indexed = true;\n    this.indexSize = indexSize;\n    this.entryIndexSize = entryIndexSize;\n    this.entryElementSize = this.vertexElementSize * this.elementsPerEntry;\n    const seededIndexBuffer = [];\n    if (indexLayout) {\n      this.indexLayout = indexLayout;\n      for (let i = 0; i < this.batchSize * indexSize; i += indexSize) {\n        for (let c = 0; c < indexLayout.length; c++) {\n          seededIndexBuffer.push(i + indexLayout[c]);\n        }\n      }\n    }\n    this.create();\n    this.createIndexBuffer(seededIndexBuffer);\n  }\n  createIndexBuffer(seededIndex) {\n    this.index = new Uint16Array(seededIndex);\n    this.indexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.index, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    seededIndex = [];\n  }\n  bind() {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n  }\n  destroy() {\n    super.destroy();\n    DeleteGLBuffer(this.indexBuffer);\n    this.index = null;\n    this.indexLayout = null;\n    this.indexBuffer = null;\n  }\n};\n\n// src/renderer/webgl1/shaders/CreateAttributes.ts\nfunction CreateAttributes(program, config) {\n  const attributes = new Map();\n  const defaultSettings = {\n    size: 1,\n    type: gl.FLOAT,\n    normalized: false,\n    stride: 0,\n    offset: 0\n  };\n  const total = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < total; i++) {\n    const attrib = gl.getActiveAttrib(program, i);\n    if (!attrib) {\n      break;\n    }\n    const name = attrib.name;\n    const index = gl.getAttribLocation(program, name);\n    gl.enableVertexAttribArray(index);\n    const setting = config.hasOwnProperty(name) ? config[name] : {};\n    const {\n      size = defaultSettings.size,\n      type = defaultSettings.type,\n      normalized = defaultSettings.normalized,\n      stride = defaultSettings.stride,\n      offset = defaultSettings.offset\n    } = setting;\n    attributes.set(name, {index, size, type, normalized, stride, offset});\n  }\n  return attributes;\n}\n\n// src/renderer/webgl1/shaders/DeleteShaders.ts\nfunction DeleteShaders(...shaders) {\n  shaders.forEach((shader) => {\n    gl.deleteShader(shader);\n  });\n}\n\n// src/renderer/webgl1/shaders/CreateProgram.ts\nfunction CreateProgram(...shaders) {\n  const program = gl.createProgram();\n  shaders.forEach((shader) => {\n    gl.attachShader(program, shader);\n  });\n  gl.linkProgram(program);\n  const status = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (!status) {\n    const info = gl.getProgramInfoLog(program);\n    console.error(`Error linking program: ${info}`);\n    gl.deleteProgram(program);\n    DeleteShaders(...shaders);\n    return null;\n  }\n  return program;\n}\n\n// src/renderer/webgl1/shaders/CreateShader.ts\nfunction CreateShader(source, type) {\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (!status) {\n    const info = gl.getShaderInfoLog(shader);\n    const sourceLines = source.split(\"\\n\").map((line, index) => {\n      return `${index}: ${line}`;\n    });\n    console.error(`Error compiling shader: ${info}`, sourceLines.join(\"\\n\"));\n    gl.deleteShader(shader);\n    return null;\n  }\n  return shader;\n}\n\n// src/renderer/webgl1/shaders/CreateUniformSetter.ts\nfunction CreateUniformSetter(uniform, location, isArray = false) {\n  switch (uniform.type) {\n    case gl.INT:\n    case gl.BOOL: {\n      if (isArray) {\n        return (v) => {\n          gl.uniform1iv(location, v);\n        };\n      } else {\n        return (v) => {\n          gl.uniform1i(location, v);\n        };\n      }\n    }\n    case gl.INT_VEC2:\n    case gl.BOOL_VEC2: {\n      return (v) => {\n        gl.uniform2iv(location, v);\n      };\n    }\n    case gl.INT_VEC3:\n    case gl.BOOL_VEC3: {\n      return (v) => {\n        gl.uniform3iv(location, v);\n      };\n    }\n    case gl.INT_VEC4:\n    case gl.BOOL_VEC4: {\n      return (v) => {\n        gl.uniform4iv(location, v);\n      };\n    }\n    case gl.FLOAT: {\n      if (isArray) {\n        return (v) => {\n          gl.uniform1fv(location, v);\n        };\n      } else {\n        return (v) => {\n          gl.uniform1f(location, v);\n        };\n      }\n    }\n    case gl.FLOAT_VEC2: {\n      return (v) => {\n        gl.uniform2fv(location, v);\n      };\n    }\n    case gl.FLOAT_VEC3: {\n      return (v) => {\n        gl.uniform3fv(location, v);\n      };\n    }\n    case gl.FLOAT_VEC4: {\n      return (v) => {\n        gl.uniform4fv(location, v);\n      };\n    }\n    case gl.FLOAT_MAT2: {\n      return (v) => {\n        gl.uniformMatrix2fv(location, false, v);\n      };\n    }\n    case gl.FLOAT_MAT3: {\n      return (v) => {\n        gl.uniformMatrix3fv(location, false, v);\n      };\n    }\n    case gl.FLOAT_MAT4: {\n      return (v) => {\n        gl.uniformMatrix4fv(location, false, v);\n      };\n    }\n    case gl.SAMPLER_2D:\n    case gl.SAMPLER_CUBE: {\n      if (uniform.size > 1) {\n        return (v) => {\n          gl.uniform1iv(location, v);\n        };\n      } else {\n        return (v) => {\n          gl.uniform1i(location, v);\n        };\n      }\n    }\n  }\n}\n\n// src/renderer/webgl1/shaders/CreateUniforms.ts\nfunction CreateUniforms(program) {\n  const uniforms = new Map();\n  const total = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (let i = 0; i < total; i++) {\n    const uniform = gl.getActiveUniform(program, i);\n    let name = uniform.name;\n    if (name.startsWith(\"gl_\") || name.startsWith(\"webgl_\")) {\n      continue;\n    }\n    const location = gl.getUniformLocation(program, uniform.name);\n    if (location) {\n      let isArray = false;\n      if (name.substr(-3) === \"[0]\") {\n        name = name.substr(0, name.length - 3);\n        isArray = uniform.size > 1;\n      }\n      uniforms.set(name, CreateUniformSetter(uniform, location, isArray));\n    }\n  }\n  return uniforms;\n}\n\n// src/renderer/webgl1/GL_CONST.ts\nvar UNSIGNED_BYTE = 5121;\nvar FLOAT = 5126;\n\n// src/renderer/webgl1/shaders/DefaultQuadAttributes.ts\nvar DefaultQuadAttributes = {\n  aVertexPosition: {size: 2, type: FLOAT, normalized: false, offset: 0},\n  aTextureCoord: {size: 2, type: FLOAT, normalized: false, offset: 8},\n  aTextureId: {size: 1, type: FLOAT, normalized: false, offset: 16},\n  aTintColor: {size: 4, type: UNSIGNED_BYTE, normalized: true, offset: 20}\n};\n\n// src/renderer/webgl1/shaders/DefaultQuadUniforms.ts\nvar DefaultQuadUniforms = {\n  uProjectionMatrix: new Float32Array(),\n  uCameraMatrix: new Float32Array(),\n  uTexture: 0\n};\n\n// src/renderer/webgl1/fbo/CreateDepthBuffer.ts\nfunction CreateDepthBuffer(framebuffer, textureWidth, textureHeight) {\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  const depthBuffer = gl.createRenderbuffer();\n  gl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer);\n  gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, textureWidth, textureHeight);\n  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthBuffer);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  return depthBuffer;\n}\n\n// src/renderer/webgl1/fbo/CreateFramebuffer.ts\nfunction CreateFramebuffer(texture, attachment) {\n  if (!attachment) {\n    attachment = gl.COLOR_ATTACHMENT0;\n  }\n  const framebuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture, 0);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  return framebuffer;\n}\n\n// src/renderer/webgl1/glsl/SINGLE_QUAD_FRAG.ts\nvar SINGLE_QUAD_FRAG = `#define SHADER_NAME SINGLE_QUAD_FRAG\n\nprecision highp float;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\n\nuniform sampler2D uTexture;\n\nvoid main (void)\n{\n    vec4 color = texture2D(uTexture, vTextureCoord);\n\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\n}`;\n\n// src/renderer/webgl1/glsl/SINGLE_QUAD_VERT.ts\nvar SINGLE_QUAD_VERT = `#define SHADER_NAME SINGLE_QUAD_VERT\n\nprecision highp float;\n\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute float aTextureId;\nattribute vec4 aTintColor;\n\nuniform mat4 uProjectionMatrix;\nuniform mat4 uCameraMatrix;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\n\nvoid main (void)\n{\n    vTextureCoord = aTextureCoord;\n    vTextureId = aTextureId;\n    vTintColor = aTintColor;\n\n    gl_Position = uProjectionMatrix * uCameraMatrix * vec4(aVertexPosition, 0.0, 1.0);\n}`;\n\n// src/textures/Frame.ts\nvar Frame = class {\n  constructor(texture, key, x, y, width, height) {\n    this.trimmed = false;\n    this.texture = texture;\n    this.key = key;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.sourceSizeWidth = width;\n    this.sourceSizeHeight = height;\n    this.updateUVs();\n  }\n  setPivot(x, y) {\n    this.pivot = {x, y};\n  }\n  setSize(width, height) {\n    this.width = width;\n    this.height = height;\n    this.sourceSizeWidth = width;\n    this.sourceSizeHeight = height;\n    this.updateUVs();\n  }\n  setSourceSize(width, height) {\n    this.sourceSizeWidth = width;\n    this.sourceSizeHeight = height;\n  }\n  setTrim(width, height, x, y, w, h) {\n    this.trimmed = true;\n    this.sourceSizeWidth = width;\n    this.sourceSizeHeight = height;\n    this.spriteSourceSizeX = x;\n    this.spriteSourceSizeY = y;\n    this.spriteSourceSizeWidth = w;\n    this.spriteSourceSizeHeight = h;\n  }\n  getExtent(originX, originY) {\n    const sourceSizeWidth = this.sourceSizeWidth;\n    const sourceSizeHeight = this.sourceSizeHeight;\n    let left;\n    let right;\n    let top;\n    let bottom;\n    if (this.trimmed) {\n      left = this.spriteSourceSizeX - originX * sourceSizeWidth;\n      right = left + this.spriteSourceSizeWidth;\n      top = this.spriteSourceSizeY - originY * sourceSizeHeight;\n      bottom = top + this.spriteSourceSizeHeight;\n    } else {\n      left = -originX * sourceSizeWidth;\n      right = left + sourceSizeWidth;\n      top = -originY * sourceSizeHeight;\n      bottom = top + sourceSizeHeight;\n    }\n    return {left, right, top, bottom};\n  }\n  setExtent(child) {\n    const transform = child.transform;\n    const originX = transform.origin.x;\n    const originY = transform.origin.y;\n    const sourceSizeWidth = this.sourceSizeWidth;\n    const sourceSizeHeight = this.sourceSizeHeight;\n    let x;\n    let y;\n    let width;\n    let height;\n    if (this.trimmed) {\n      x = this.spriteSourceSizeX - originX * sourceSizeWidth;\n      y = this.spriteSourceSizeY - originY * sourceSizeHeight;\n      width = this.spriteSourceSizeWidth;\n      height = this.spriteSourceSizeHeight;\n    } else {\n      x = -originX * sourceSizeWidth;\n      y = -originY * sourceSizeHeight;\n      width = sourceSizeWidth;\n      height = sourceSizeHeight;\n    }\n    transform.setExtent(x, y, width, height);\n  }\n  updateUVs() {\n    const {x, y, width, height} = this;\n    const baseTextureWidth = this.texture.width;\n    const baseTextureHeight = this.texture.height;\n    this.u0 = x / baseTextureWidth;\n    this.v0 = y / baseTextureHeight;\n    this.u1 = (x + width) / baseTextureWidth;\n    this.v1 = (y + height) / baseTextureHeight;\n  }\n};\n\n// src/textures/Texture.ts\nvar Texture = class {\n  constructor(image, width, height, glConfig) {\n    this.key = \"\";\n    if (image) {\n      width = image.width;\n      height = image.height;\n    }\n    this.image = image;\n    this.width = width;\n    this.height = height;\n    this.frames = new Map();\n    this.data = {};\n    this.addFrame(\"__BASE\", 0, 0, width, height);\n    BindingQueue.add(this, glConfig);\n  }\n  addFrame(key, x, y, width, height) {\n    if (this.frames.has(key)) {\n      return null;\n    }\n    const frame2 = new Frame(this, key, x, y, width, height);\n    this.frames.set(key, frame2);\n    if (!this.firstFrame || this.firstFrame.key === \"__BASE\") {\n      this.firstFrame = frame2;\n    }\n    return frame2;\n  }\n  getFrame(key) {\n    if (!key) {\n      return this.firstFrame;\n    }\n    if (key instanceof Frame) {\n      key = key.key;\n    }\n    let frame2 = this.frames.get(key);\n    if (!frame2) {\n      console.warn(`Frame missing: ${key}`);\n      frame2 = this.firstFrame;\n    }\n    return frame2;\n  }\n  setSize(width, height) {\n    this.width = width;\n    this.height = height;\n    const frame2 = this.frames.get(\"__BASE\");\n    frame2.setSize(width, height);\n  }\n  destroy() {\n    if (this.binding) {\n      this.binding.destroy();\n    }\n    this.frames.clear();\n    this.data = null;\n    this.image = null;\n    this.firstFrame = null;\n  }\n};\n\n// src/renderer/webgl1/shaders/Shader.ts\nvar Shader = class {\n  constructor(config) {\n    this.renderToFramebuffer = false;\n    this.renderToDepthbuffer = false;\n    if (config) {\n      this.fromConfig(config);\n    }\n  }\n  fromConfig(config) {\n    const {\n      attributes = DefaultQuadAttributes,\n      fragmentShader = SINGLE_QUAD_FRAG,\n      height = GetHeight(),\n      renderToFramebuffer = false,\n      renderToDepthbuffer = false,\n      resolution = GetResolution(),\n      vertexShader = SINGLE_QUAD_VERT,\n      width = GetWidth(),\n      uniforms = DefaultQuadUniforms\n    } = config;\n    this.create(fragmentShader, vertexShader, uniforms, attributes);\n    if (renderToFramebuffer) {\n      this.renderToFramebuffer = true;\n      const texture = new Texture(null, width * resolution, height * resolution);\n      const binding = new GLTextureBinding(texture);\n      texture.binding = binding;\n      binding.framebuffer = CreateFramebuffer(binding.texture);\n      if (renderToDepthbuffer) {\n        this.renderToDepthbuffer = true;\n        binding.depthbuffer = CreateDepthBuffer(binding.framebuffer, texture.width, texture.height);\n      }\n      this.texture = texture;\n      this.framebuffer = binding.framebuffer;\n    }\n  }\n  create(fragmentShaderSource, vertexShaderSource, uniforms, attribs) {\n    const fragmentShader = CreateShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n    const vertexShader = CreateShader(vertexShaderSource, gl.VERTEX_SHADER);\n    if (!fragmentShader || !vertexShader) {\n      return;\n    }\n    const program = CreateProgram(fragmentShader, vertexShader);\n    if (!program) {\n      return;\n    }\n    const currentProgram = gl.getParameter(gl.CURRENT_PROGRAM);\n    gl.useProgram(program);\n    this.program = program;\n    this.uniformSetters = CreateUniforms(program);\n    this.uniforms = new Map();\n    for (const [key, value] of Object.entries(uniforms)) {\n      this.uniforms.set(key, value);\n    }\n    this.attributes = CreateAttributes(program, attribs);\n    gl.useProgram(currentProgram);\n  }\n  updateUniforms(renderPass) {\n  }\n  bind(renderPass) {\n    this.updateUniforms(renderPass);\n    return this.setUniforms(renderPass);\n  }\n  setUniform(key, value) {\n    const uniforms = this.uniforms;\n    if (uniforms.has(key)) {\n      uniforms.set(key, value);\n      const setter = this.uniformSetters.get(key);\n      setter(value);\n    }\n  }\n  setUniforms(renderPass) {\n    if (!this.program) {\n      return false;\n    }\n    gl.useProgram(this.program);\n    const uniforms = this.uniforms;\n    for (const [name, setter] of this.uniformSetters.entries()) {\n      setter(uniforms.get(name));\n    }\n    return true;\n  }\n  setAttributes(renderPass) {\n    if (this.program) {\n      const stride = renderPass.currentVertexBuffer.vertexByteSize;\n      this.attributes.forEach((attrib) => {\n        gl.vertexAttribPointer(attrib.index, attrib.size, attrib.type, attrib.normalized, stride, attrib.offset);\n      });\n    }\n  }\n  destroy() {\n    DeleteShaders(this.program);\n    DeleteGLTexture(this.texture);\n    DeleteFramebuffer(this.framebuffer);\n    this.uniforms.clear();\n    this.uniformSetters.clear();\n    this.attributes.clear();\n    this.program = null;\n    this.texture = null;\n    this.framebuffer = null;\n  }\n};\n\n// src/renderer/webgl1/shaders/QuadShader.ts\nvar QuadShader = class extends Shader {\n  constructor(config = {}) {\n    const shaderConfig = config;\n    shaderConfig.attributes = !shaderConfig.attributes ? DefaultQuadAttributes : shaderConfig.attributes;\n    super(shaderConfig);\n  }\n  bind(renderPass) {\n    const uniforms = this.uniforms;\n    uniforms.set(\"uProjectionMatrix\", renderPass.projectionMatrix.data);\n    uniforms.set(\"uCameraMatrix\", renderPass.cameraMatrix.data);\n    return super.bind(renderPass);\n  }\n};\n\n// src/renderer/webgl1/glsl/MULTI_QUAD_FRAG.ts\nvar MULTI_QUAD_FRAG = `#define SHADER_NAME MULTI_QUAD_FRAG\n\nprecision highp float;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\n\nuniform sampler2D uTexture[%count%];\n\nvoid main (void)\n{\n    vec4 color;\n\n    %forloop%\n\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\n}`;\n\n// src/renderer/webgl1/shaders/MultiTextureQuadShader.ts\nvar MultiTextureQuadShader = class extends QuadShader {\n  constructor(config = {}) {\n    if (!config.fragmentShader) {\n      config.fragmentShader = MULTI_QUAD_FRAG;\n    }\n    super(config);\n  }\n  create(fragmentShaderSource, vertexShaderSource, uniforms, attribs) {\n    const maxTextures = GetMaxTextures();\n    let src = \"\";\n    for (let i = 1; i < maxTextures; i++) {\n      if (i > 1) {\n        src += \"\\n\telse \";\n      }\n      if (i < maxTextures - 1) {\n        src += `if (vTextureId < ${i}.5)`;\n      }\n      src += \"\\n\t{\";\n      src += `\n\t\tcolor = texture2D(uTexture[${i}], vTextureCoord);`;\n      src += \"\\n\t}\";\n    }\n    fragmentShaderSource = fragmentShaderSource.replace(/%count%/gi, `${maxTextures}`);\n    fragmentShaderSource = fragmentShaderSource.replace(/%forloop%/gi, src);\n    super.create(fragmentShaderSource, vertexShaderSource, uniforms, attribs);\n  }\n  bind(renderPass) {\n    this.uniforms.set(\"uTexture\", renderPass.textureIndex);\n    return super.bind(renderPass);\n  }\n};\n\n// src/renderer/webgl1/renderpass/SetDefaultBlendMode.ts\nfunction SetDefaultBlendMode(renderPass, enable, sfactor, dfactor) {\n  const entry = {enable, sfactor, dfactor};\n  renderPass.blendModeStack[0] = entry;\n  renderPass.currentBlendMode = entry;\n  renderPass.defaultBlendMode = entry;\n}\n\n// src/renderer/webgl1/renderpass/SetDefaultFramebuffer.ts\nfunction SetDefaultFramebuffer(renderPass, framebuffer = null, viewport) {\n  const entry = {framebuffer, viewport};\n  renderPass.framebufferStack[0] = entry;\n  renderPass.currentFramebuffer = entry;\n  renderPass.defaultFramebuffer = entry;\n}\n\n// src/renderer/webgl1/renderpass/SetDefaultShader.ts\nfunction SetDefaultShader(renderPass, shader, textureID) {\n  const entry = {shader, textureID};\n  renderPass.shaderStack[0] = entry;\n  renderPass.currentShader = entry;\n  renderPass.defaultShader = entry;\n}\n\n// src/renderer/webgl1/renderpass/SetDefaultVertexBuffer.ts\nfunction SetDefaultVertexBuffer(renderPass, buffer) {\n  renderPass.vertexBufferStack[0] = buffer;\n  renderPass.currentVertexBuffer = buffer;\n  renderPass.defaultVertexBuffer = buffer;\n}\n\n// src/renderer/webgl1/renderpass/SetDefaultViewport.ts\nfunction SetDefaultViewport(renderPass, x = 0, y = 0, width = 0, height = 0) {\n  const entry = new Rectangle(x, y, width, height);\n  renderPass.viewportStack[0] = entry;\n  renderPass.currentViewport = entry;\n  renderPass.defaultViewport = entry;\n}\n\n// src/renderer/webgl1/renderpass/RenderPass.ts\nvar RenderPass = class {\n  constructor(renderer) {\n    this.count = 0;\n    this.prevCount = 0;\n    this.flushTotal = 0;\n    this.maxTextures = 0;\n    this.currentActiveTexture = 0;\n    this.startActiveTexture = 0;\n    this.tempTextures = [];\n    this.textureIndex = [];\n    this.framebufferStack = [];\n    this.currentFramebuffer = null;\n    this.defaultFramebuffer = null;\n    this.vertexBufferStack = [];\n    this.currentVertexBuffer = null;\n    this.defaultVertexBuffer = null;\n    this.shaderStack = [];\n    this.currentShader = null;\n    this.defaultShader = null;\n    this.viewportStack = [];\n    this.currentViewport = null;\n    this.defaultViewport = null;\n    this.blendModeStack = [];\n    this.currentBlendMode = null;\n    this.defaultBlendMode = null;\n    this.renderer = renderer;\n    this.projectionMatrix = new Matrix4();\n    this.reset();\n  }\n  reset() {\n    const gl2 = this.renderer.gl;\n    const indexLayout = [0, 1, 2, 2, 3, 0];\n    this.quadShader = new QuadShader();\n    this.quadBuffer = new IndexedVertexBuffer({isDynamic: false, indexLayout});\n    this.quadCamera = new StaticCamera();\n    CreateTempTextures(this);\n    SetDefaultFramebuffer(this);\n    SetDefaultBlendMode(this, true, gl2.ONE, gl2.ONE_MINUS_SRC_ALPHA);\n    SetDefaultVertexBuffer(this, new IndexedVertexBuffer({batchSize: GetBatchSize(), indexLayout}));\n    SetDefaultShader(this, new MultiTextureQuadShader());\n  }\n  resize(width, height) {\n    Mat4Ortho(0, width, height, 0, -1e3, 1e3, this.projectionMatrix);\n    this.quadCamera.reset();\n    SetDefaultViewport(this, 0, 0, width, height);\n  }\n};\n\n// src/renderer/webgl1/renderpass/AddShader.ts\nfunction AddShader(renderPass, shader, textureID) {\n  const stackEntry = {shader, textureID};\n  renderPass.shaderStack.push(stackEntry);\n  return stackEntry;\n}\n\n// src/renderer/webgl1/renderpass/AddVertexBuffer.ts\nfunction AddVertexBuffer(renderPass, buffer) {\n  renderPass.vertexBufferStack.push(buffer);\n  return buffer;\n}\n\n// src/renderer/webgl1/renderpass/BindShader.ts\nfunction BindShader(renderPass, entry) {\n  if (!entry) {\n    entry = renderPass.currentShader;\n  }\n  const success = entry.shader.bind(renderPass, entry.textureID);\n  if (success) {\n    entry.shader.setAttributes(renderPass);\n  }\n}\n\n// src/renderer/webgl1/renderpass/Begin.ts\nfunction Begin(renderPass, camera2D) {\n  renderPass.current2DCamera = camera2D;\n  renderPass.cameraMatrix = camera2D.matrix;\n  BindShader(renderPass);\n}\n\n// src/renderer/webgl1/renderpass/BindBlendMode.ts\nfunction BindBlendMode(renderPass, entry) {\n  if (!entry) {\n    entry = renderPass.currentBlendMode;\n  }\n  if (entry.enable) {\n    gl.enable(gl.BLEND);\n    gl.blendFunc(entry.sfactor, entry.dfactor);\n  } else {\n    gl.disable(gl.BLEND);\n  }\n}\n\n// src/renderer/webgl1/renderpass/BindTexture.ts\nfunction BindTexture(texture, index = 0) {\n  const binding = texture.binding;\n  binding.setIndex(index);\n  gl.activeTexture(gl.TEXTURE0 + index);\n  gl.bindTexture(gl.TEXTURE_2D, binding.texture);\n}\n\n// src/renderer/webgl1/renderpass/BindVertexBuffer.ts\nfunction BindVertexBuffer(renderPass, buffer) {\n  if (!buffer) {\n    buffer = renderPass.currentVertexBuffer;\n  }\n  const indexBuffer = buffer.indexed ? buffer.indexBuffer : null;\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer.vertexBuffer);\n}\n\n// src/renderer/webgl1/renderpass/PopVertexBuffer.ts\nfunction PopVertexBuffer(renderPass) {\n  const stack = renderPass.vertexBufferStack;\n  if (stack.length > 1) {\n    stack.pop();\n  }\n  renderPass.currentVertexBuffer = stack[stack.length - 1];\n  BindVertexBuffer(renderPass);\n}\n\n// src/renderer/webgl1/renderpass/SetVertexBuffer.ts\nfunction SetVertexBuffer(renderPass, buffer) {\n  const entry = AddVertexBuffer(renderPass, buffer);\n  BindVertexBuffer(renderPass, entry);\n  renderPass.currentVertexBuffer = entry;\n}\n\n// src/renderer/webgl1/renderpass/FlushBuffer.ts\nfunction FlushBuffer(renderPass, buffer) {\n  SetVertexBuffer(renderPass, buffer);\n  renderPass.currentShader.shader.setAttributes(renderPass);\n  const result = Flush(renderPass, buffer.count);\n  PopVertexBuffer(renderPass);\n  return result;\n}\n\n// src/renderer/webgl1/renderpass/GetVertexBufferEntry.ts\nfunction GetVertexBufferEntry(renderPass, addToCount = 0) {\n  const buffer = renderPass.currentVertexBuffer;\n  if (renderPass.count + addToCount >= buffer.batchSize) {\n    Flush(renderPass);\n  }\n  const offset = buffer.indexed ? renderPass.count * buffer.entryElementSize : renderPass.count * buffer.vertexElementSize;\n  renderPass.count += addToCount;\n  return {\n    buffer,\n    F32: buffer.vertexViewF32,\n    U32: buffer.vertexViewU32,\n    offset\n  };\n}\n\n// src/renderer/webgl1/renderpass/PopShader.ts\nfunction PopShader(renderPass) {\n  const stack = renderPass.shaderStack;\n  if (stack.length > 1) {\n    stack.pop();\n  }\n  renderPass.currentShader = stack[stack.length - 1];\n  BindShader(renderPass);\n}\n\n// src/renderer/webgl1/renderpass/SetShader.ts\nfunction SetShader(renderPass, shader, textureID) {\n  const entry = AddShader(renderPass, shader, textureID);\n  BindShader(renderPass, entry);\n  renderPass.currentShader = entry;\n}\n\n// src/renderer/webgl1/renderpass/SetTexture.ts\nfunction SetTexture(renderPass, texture) {\n  const binding = texture.binding;\n  const currentActiveTexture = renderPass.currentActiveTexture;\n  if (binding.indexCounter < renderPass.startActiveTexture) {\n    binding.indexCounter = renderPass.startActiveTexture;\n    if (currentActiveTexture < renderPass.maxTextures) {\n      binding.setIndex(currentActiveTexture);\n      gl.activeTexture(gl.TEXTURE0 + currentActiveTexture);\n      gl.bindTexture(gl.TEXTURE_2D, binding.texture);\n      renderPass.currentActiveTexture++;\n    } else {\n      Flush(renderPass);\n      renderPass.startActiveTexture++;\n      binding.indexCounter = renderPass.startActiveTexture;\n      binding.setIndex(1);\n      gl.activeTexture(gl.TEXTURE1);\n      gl.bindTexture(gl.TEXTURE_2D, binding.texture);\n      renderPass.currentActiveTexture = 2;\n    }\n  }\n  return binding.index;\n}\n\n// src/renderer/webgl1/renderpass/Start.ts\nfunction Start(renderPass) {\n  renderPass.current2DCamera = renderPass.quadCamera;\n  renderPass.cameraMatrix = renderPass.quadCamera.matrix;\n  renderPass.count = 0;\n  renderPass.flushTotal = 0;\n  BindFramebuffer(renderPass, false, renderPass.defaultFramebuffer);\n  BindBlendMode(renderPass, renderPass.defaultBlendMode);\n  BindViewport(renderPass, renderPass.defaultViewport);\n  BindVertexBuffer(renderPass, renderPass.defaultVertexBuffer);\n}\n\n// src/renderer/webgl1/renderpass/UnbindTexture.ts\nfunction UnbindTexture(renderPass, index = 0) {\n  gl.activeTexture(gl.TEXTURE0 + index);\n  gl.bindTexture(gl.TEXTURE_2D, renderPass.tempTextures[index]);\n  if (index > 0) {\n    renderPass.startActiveTexture++;\n  }\n}\n\n// src/renderer/webgl1/WebGLRendererInstance.ts\nvar instance2;\nvar WebGLRendererInstance = {\n  get: () => {\n    return instance2;\n  },\n  set: (renderer) => {\n    instance2 = renderer;\n  }\n};\n\n// src/renderer/webgl1/WebGLRenderer.ts\nvar WebGLRenderer = class {\n  constructor() {\n    this.clearColor = [0, 0, 0, 1];\n    this.clearBeforeRender = true;\n    this.optimizeRedraw = false;\n    this.autoResize = true;\n    this.contextLost = false;\n    this.width = GetWidth();\n    this.height = GetHeight();\n    this.resolution = GetResolution();\n    this.setBackgroundColor(GetBackgroundColor());\n    const canvas = document.createElement(\"canvas\");\n    canvas.addEventListener(\"webglcontextlost\", (event) => this.onContextLost(event), false);\n    canvas.addEventListener(\"webglcontextrestored\", () => this.onContextRestored(), false);\n    this.canvas = canvas;\n    this.initContext();\n    WebGLRendererInstance.set(this);\n    this.renderPass = new RenderPass(this);\n    this.resize(this.width, this.height, this.resolution);\n  }\n  initContext() {\n    const gl2 = this.canvas.getContext(\"webgl\", GetWebGLContext());\n    GL.set(gl2);\n    this.gl = gl2;\n    gl2.disable(gl2.DEPTH_TEST);\n    gl2.disable(gl2.CULL_FACE);\n  }\n  resize(width, height, resolution = 1) {\n    const calcWidth = width * resolution;\n    const calcHeight = height * resolution;\n    this.width = calcWidth;\n    this.height = calcHeight;\n    this.resolution = resolution;\n    const canvas = this.canvas;\n    canvas.width = calcWidth;\n    canvas.height = calcHeight;\n    if (this.autoResize) {\n      canvas.style.width = width.toString() + \"px\";\n      canvas.style.height = height.toString() + \"px\";\n    }\n    this.renderPass.resize(calcWidth, calcHeight);\n  }\n  onContextLost(event) {\n    event.preventDefault();\n    this.contextLost = true;\n  }\n  onContextRestored() {\n    this.contextLost = false;\n    this.initContext();\n  }\n  setBackgroundColor(color) {\n    GetRGBArray(color, this.clearColor);\n    return this;\n  }\n  reset() {\n  }\n  render(renderData) {\n    if (this.contextLost) {\n      return;\n    }\n    const gl2 = this.gl;\n    const renderPass = this.renderPass;\n    ProcessBindingQueue();\n    if (this.optimizeRedraw && renderData.numDirtyFrames === 0 && renderData.numDirtyCameras === 0) {\n      return;\n    }\n    if (this.clearBeforeRender) {\n      const cls = this.clearColor;\n      gl2.clearColor(cls[0], cls[1], cls[2], cls[3]);\n      gl2.clear(gl2.COLOR_BUFFER_BIT);\n    }\n    const worlds = renderData.worldData;\n    Start(renderPass);\n    for (let i = 0; i < worlds.length; i++) {\n      const {world} = worlds[i];\n      world.renderGL(renderPass);\n      world.postRenderGL(renderPass);\n    }\n    End(renderPass);\n  }\n  destroy() {\n    WebGLRendererInstance.set(void 0);\n  }\n};\n\n// src/config/webgl/WebGL.ts\nfunction WebGL() {\n  return () => {\n    SetRenderer(WebGLRenderer);\n  };\n}\n\n// src/config/webglcontext/SetWebGLContext.ts\nfunction SetWebGLContext(contextAttributes) {\n  ConfigStore.set(CONFIG_DEFAULTS.WEBGL_CONTEXT, contextAttributes);\n}\n\n// src/config/webglcontext/WebGLContext.ts\nfunction WebGLContext(contextAttributes) {\n  return () => {\n    SetWebGLContext(contextAttributes);\n  };\n}\n\n// src/dom/index.ts\nvar dom_exports = {};\n__export(dom_exports, {\n  AddToDOM: () => AddToDOM,\n  DOMContentLoaded: () => DOMContentLoaded,\n  GetElement: () => GetElement,\n  ParseXML: () => ParseXML,\n  RemoveFromDOM: () => RemoveFromDOM\n});\n\n// src/dom/AddToDOM.ts\nfunction AddToDOM(element, parent) {\n  const target = GetElement(parent);\n  target.appendChild(element);\n  return element;\n}\n\n// src/dom/DOMContentLoaded.ts\nfunction DOMContentLoaded(callback) {\n  const readyState = document.readyState;\n  if (readyState === \"complete\" || readyState === \"interactive\") {\n    callback();\n    return;\n  }\n  const check = () => {\n    document.removeEventListener(\"deviceready\", check, true);\n    document.removeEventListener(\"DOMContentLoaded\", check, true);\n    window.removeEventListener(\"load\", check, true);\n    callback();\n  };\n  if (!document.body) {\n    window.setTimeout(check, 20);\n  } else if (window.hasOwnProperty(\"cordova\")) {\n    document.addEventListener(\"deviceready\", check, true);\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", check, true);\n    window.addEventListener(\"load\", check, true);\n  }\n}\n\n// src/dom/ParseXML.ts\nfunction ParseXML(data) {\n  let xml;\n  try {\n    const parser = new DOMParser();\n    xml = parser.parseFromString(data, \"text/xml\");\n    if (!xml || !xml.documentElement || xml.getElementsByTagName(\"parsererror\").length) {\n      return null;\n    } else {\n      return xml;\n    }\n  } catch (error) {\n    return null;\n  }\n}\n\n// src/dom/RemoveFromDOM.ts\nfunction RemoveFromDOM(element) {\n  if (element.parentNode) {\n    element.parentNode.removeChild(element);\n  }\n}\n\n// src/device/index.ts\nvar device_exports = {};\n__export(device_exports, {\n  Audio: () => audio_exports,\n  Browser: () => browser_exports,\n  CanPlayAudioType: () => CanPlayAudioType,\n  CanPlayH264Video: () => CanPlayH264Video,\n  CanPlayHLSVideo: () => CanPlayHLSVideo,\n  CanPlayM4A: () => CanPlayM4A,\n  CanPlayMP3: () => CanPlayMP3,\n  CanPlayOGG: () => CanPlayOGG,\n  CanPlayOGGVideo: () => CanPlayOGGVideo,\n  CanPlayOpus: () => CanPlayOpus,\n  CanPlayVP9Video: () => CanPlayVP9Video,\n  CanPlayVideoType: () => CanPlayVideoType,\n  CanPlayWAV: () => CanPlayWAV,\n  CanPlayWebM: () => CanPlayWebM,\n  CanPlayWebMVideo: () => CanPlayWebMVideo,\n  GetAudio: () => GetAudio,\n  GetBrowser: () => GetBrowser,\n  GetOS: () => GetOS,\n  GetVideo: () => GetVideo,\n  HasAudio: () => HasAudio,\n  HasWebAudio: () => HasWebAudio,\n  IsAndroid: () => IsAndroid,\n  IsChrome: () => IsChrome,\n  IsChromeOS: () => IsChromeOS,\n  IsCordova: () => IsCordova,\n  IsCrosswalk: () => IsCrosswalk,\n  IsEdge: () => IsEdge,\n  IsEjecta: () => IsEjecta,\n  IsFirefox: () => IsFirefox,\n  IsKindle: () => IsKindle,\n  IsLinux: () => IsLinux,\n  IsMSIE: () => IsMSIE,\n  IsMacOS: () => IsMacOS,\n  IsMobileSafari: () => IsMobileSafari,\n  IsNode: () => IsNode,\n  IsNodeWebkit: () => IsNodeWebkit,\n  IsOpera: () => IsOpera,\n  IsSafari: () => IsSafari,\n  IsSilk: () => IsSilk,\n  IsTrident: () => IsTrident,\n  IsWebApp: () => IsWebApp,\n  IsWindows: () => IsWindows,\n  IsWindowsPhone: () => IsWindowsPhone,\n  IsiOS: () => IsiOS,\n  OS: () => os_exports,\n  Video: () => video_exports\n});\n\n// src/device/audio/index.ts\nvar audio_exports = {};\n__export(audio_exports, {\n  CanPlayAudioType: () => CanPlayAudioType,\n  CanPlayM4A: () => CanPlayM4A,\n  CanPlayMP3: () => CanPlayMP3,\n  CanPlayOGG: () => CanPlayOGG,\n  CanPlayOpus: () => CanPlayOpus,\n  CanPlayWAV: () => CanPlayWAV,\n  CanPlayWebM: () => CanPlayWebM,\n  GetAudio: () => GetAudio,\n  HasAudio: () => HasAudio,\n  HasWebAudio: () => HasWebAudio\n});\n\n// src/device/audio/CanPlayAudioType.ts\nvar _audioElement;\nfunction CanPlayAudioType(type, audioElement) {\n  if (!audioElement) {\n    if (!_audioElement) {\n      _audioElement = document.createElement(\"audio\");\n    }\n    audioElement = _audioElement;\n  }\n  return audioElement && audioElement.canPlayType(type) !== \"\";\n}\n\n// src/device/audio/CanPlayM4A.ts\nfunction CanPlayM4A(audioElement) {\n  return CanPlayAudioType(\"audio/x-m4a\", audioElement) || CanPlayAudioType(\"audio/aac\", audioElement);\n}\n\n// src/device/audio/CanPlayMP3.ts\nfunction CanPlayMP3(audioElement) {\n  return CanPlayAudioType('audio/mpeg; codecs=\"mp3\"', audioElement);\n}\n\n// src/device/audio/CanPlayOGG.ts\nfunction CanPlayOGG(audioElement) {\n  return CanPlayAudioType('audio/ogg; codecs=\"vorbis\"', audioElement);\n}\n\n// src/device/audio/CanPlayOpus.ts\nfunction CanPlayOpus(audioElement) {\n  return CanPlayAudioType('audio/ogg; codecs=\"opus\"', audioElement) || CanPlayAudioType('audio/webm; codecs=\"opus\"', audioElement);\n}\n\n// src/device/audio/CanPlayWAV.ts\nfunction CanPlayWAV(audioElement) {\n  return CanPlayAudioType('audio/wav; codecs=\"1\"', audioElement);\n}\n\n// src/device/audio/CanPlayWebM.ts\nfunction CanPlayWebM(audioElement) {\n  return CanPlayAudioType('audio/webm; codecs=\"vorbis\"', audioElement);\n}\n\n// src/device/audio/HasAudio.ts\nfunction HasAudio() {\n  return window && window.hasOwnProperty(\"Audio\");\n}\n\n// src/device/audio/HasWebAudio.ts\nfunction HasWebAudio() {\n  return window && (window.hasOwnProperty(\"AudioContext\") || window.hasOwnProperty(\"webkitAudioContext\"));\n}\n\n// src/device/audio/GetAudio.ts\nfunction GetAudio() {\n  const result = {\n    audioData: HasAudio(),\n    m4a: false,\n    mp3: false,\n    ogg: false,\n    opus: false,\n    wav: false,\n    webAudio: HasWebAudio(),\n    webm: false\n  };\n  if (result.audioData) {\n    result.m4a = CanPlayM4A();\n    result.mp3 = CanPlayMP3();\n    result.ogg = CanPlayOGG();\n    result.opus = CanPlayOpus();\n    result.wav = CanPlayWAV();\n    result.webm = CanPlayWebM();\n  }\n  return result;\n}\n\n// src/device/browser/index.ts\nvar browser_exports = {};\n__export(browser_exports, {\n  GetBrowser: () => GetBrowser,\n  IsChrome: () => IsChrome,\n  IsEdge: () => IsEdge,\n  IsFirefox: () => IsFirefox,\n  IsMSIE: () => IsMSIE,\n  IsMobileSafari: () => IsMobileSafari,\n  IsOpera: () => IsOpera,\n  IsSafari: () => IsSafari,\n  IsSilk: () => IsSilk,\n  IsTrident: () => IsTrident\n});\n\n// src/device/browser/IsChrome.ts\nfunction IsChrome() {\n  const chrome = /Chrome\\/(\\d+)/.test(navigator.userAgent);\n  const chromeVersion = chrome ? parseInt(RegExp.$1, 10) : 0;\n  return {\n    chrome,\n    chromeVersion\n  };\n}\n\n// src/device/browser/IsEdge.ts\nfunction IsEdge() {\n  const edge = /Edge\\/\\d+/.test(navigator.userAgent);\n  return {\n    edge\n  };\n}\n\n// src/device/browser/IsFirefox.ts\nfunction IsFirefox() {\n  const firefox = /Firefox\\D+(\\d+)/.test(navigator.userAgent);\n  const firefoxVersion = firefox ? parseInt(RegExp.$1, 10) : 0;\n  return {\n    firefox,\n    firefoxVersion\n  };\n}\n\n// src/device/browser/IsMSIE.ts\nfunction IsMSIE() {\n  const ie = /MSIE (\\d+\\.\\d+);/.test(navigator.userAgent);\n  const ieVersion = ie ? parseInt(RegExp.$1, 10) : 0;\n  return {\n    ie,\n    ieVersion\n  };\n}\n\n// src/device/os/IsiOS.ts\nfunction IsiOS() {\n  const ua = navigator.userAgent;\n  const result = {\n    iOS: false,\n    iOSVersion: 0,\n    iPhone: false,\n    iPad: false\n  };\n  if (/iP[ao]d|iPhone/i.test(ua)) {\n    const match = /OS (\\d+)/.exec(navigator.appVersion);\n    result.iOS = true;\n    result.iOSVersion = parseInt(match[0], 10);\n    result.iPhone = ua.toLowerCase().includes(\"iphone\");\n    result.iPad = ua.toLowerCase().includes(\"ipad\");\n  }\n  return result;\n}\n\n// src/device/browser/IsMobileSafari.ts\nfunction IsMobileSafari() {\n  const {iOS} = IsiOS();\n  const mobileSafari = navigator.userAgent.includes(\"AppleWebKit\") && iOS;\n  return {\n    mobileSafari\n  };\n}\n\n// src/device/browser/IsOpera.ts\nfunction IsOpera() {\n  const opera = navigator.userAgent.includes(\"Opera\");\n  return {\n    opera\n  };\n}\n\n// src/device/os/IsWindowsPhone.ts\nfunction IsWindowsPhone() {\n  const ua = navigator.userAgent;\n  return /Windows Phone/i.test(ua) || /IEMobile/i.test(ua);\n}\n\n// src/device/browser/IsSafari.ts\nfunction IsSafari() {\n  const ua = navigator.userAgent;\n  const safari = ua.includes(\"Safari\") && !IsWindowsPhone();\n  const safariVersion = /Version\\/(\\d+)\\./.test(ua) ? parseInt(RegExp.$1, 10) : 0;\n  return {\n    safari,\n    safariVersion\n  };\n}\n\n// src/device/browser/IsSilk.ts\nfunction IsSilk() {\n  const silk = navigator.userAgent.includes(\"Silk\");\n  return {\n    silk\n  };\n}\n\n// src/device/browser/IsTrident.ts\nfunction IsTrident() {\n  const trident = /Trident\\/(\\d+\\.\\d+)(.*)rv:(\\d+\\.\\d+)/.test(navigator.userAgent);\n  const tridentVersion = trident ? parseInt(RegExp.$1, 10) : 0;\n  const tridentIEVersion = trident ? parseInt(RegExp.$3, 10) : 0;\n  return {\n    trident,\n    tridentVersion,\n    tridentIEVersion\n  };\n}\n\n// src/device/browser/GetBrowser.ts\nfunction GetBrowser() {\n  const {chrome, chromeVersion} = IsChrome();\n  const {edge} = IsEdge();\n  const {firefox, firefoxVersion} = IsFirefox();\n  let {ie, ieVersion} = IsMSIE();\n  const {mobileSafari} = IsMobileSafari();\n  const {opera} = IsOpera();\n  const {safari, safariVersion} = IsSafari();\n  const {silk} = IsSilk();\n  const {trident, tridentVersion, tridentIEVersion} = IsTrident();\n  if (trident) {\n    ie = true;\n    ieVersion = tridentIEVersion;\n  }\n  const result = {\n    chrome,\n    chromeVersion,\n    edge,\n    firefox,\n    firefoxVersion,\n    ie,\n    ieVersion,\n    mobileSafari,\n    opera,\n    safari,\n    safariVersion,\n    silk,\n    trident,\n    tridentVersion\n  };\n  return result;\n}\n\n// src/device/os/index.ts\nvar os_exports = {};\n__export(os_exports, {\n  GetOS: () => GetOS,\n  IsAndroid: () => IsAndroid,\n  IsChromeOS: () => IsChromeOS,\n  IsCordova: () => IsCordova,\n  IsCrosswalk: () => IsCrosswalk,\n  IsEjecta: () => IsEjecta,\n  IsKindle: () => IsKindle,\n  IsLinux: () => IsLinux,\n  IsMacOS: () => IsMacOS,\n  IsNode: () => IsNode,\n  IsNodeWebkit: () => IsNodeWebkit,\n  IsWebApp: () => IsWebApp,\n  IsWindows: () => IsWindows,\n  IsWindowsPhone: () => IsWindowsPhone,\n  IsiOS: () => IsiOS\n});\n\n// src/device/os/IsAndroid.ts\nfunction IsAndroid() {\n  return navigator.userAgent.includes(\"Android\");\n}\n\n// src/device/os/IsChromeOS.ts\nfunction IsChromeOS() {\n  return navigator.userAgent.includes(\"CrOS\");\n}\n\n// src/device/os/IsCordova.ts\nfunction IsCordova() {\n  return window.hasOwnProperty(\"cordova\");\n}\n\n// src/device/os/IsCrosswalk.ts\nfunction IsCrosswalk() {\n  return navigator.userAgent.includes(\"Crosswalk\");\n}\n\n// src/device/os/IsEjecta.ts\nfunction IsEjecta() {\n  return window.hasOwnProperty(\"ejecta\");\n}\n\n// src/device/os/IsKindle.ts\nfunction IsKindle() {\n  const ua = navigator.userAgent;\n  return ua.includes(\"Kindle\") || /\\bKF[A-Z][A-Z]+/.test(ua) || /Silk.*Mobile Safari/.test(ua);\n}\n\n// src/device/os/IsLinux.ts\nfunction IsLinux() {\n  return navigator.userAgent.includes(\"Linux\");\n}\n\n// src/device/os/IsMacOS.ts\nfunction IsMacOS() {\n  const ua = navigator.userAgent;\n  return ua.includes(\"Mac OS\") && !ua.includes(\"like Mac OS\");\n}\n\n// src/device/os/IsNode.ts\nfunction IsNode() {\n  return typeof process !== \"undefined\" && typeof process.versions === \"object\" && process.versions.hasOwnProperty(\"node\");\n}\n\n// src/device/os/IsNodeWebkit.ts\nfunction IsNodeWebkit() {\n  return IsNode() && !!process.versions.hasOwnProperty(\"node-webkit\");\n}\n\n// src/device/os/IsWebApp.ts\nfunction IsWebApp() {\n  return navigator.hasOwnProperty(\"standalone\");\n}\n\n// src/device/os/IsWindows.ts\nfunction IsWindows() {\n  return navigator.userAgent.includes(\"Windows\");\n}\n\n// src/device/os/GetOS.ts\nfunction GetOS() {\n  const ua = navigator.userAgent;\n  const {iOS, iOSVersion, iPad, iPhone} = IsiOS();\n  const result = {\n    android: IsAndroid(),\n    chromeOS: IsChromeOS(),\n    cordova: IsCordova(),\n    crosswalk: IsCrosswalk(),\n    desktop: false,\n    ejecta: IsEjecta(),\n    iOS,\n    iOSVersion,\n    iPad,\n    iPhone,\n    kindle: IsKindle(),\n    linux: IsLinux(),\n    macOS: IsMacOS(),\n    node: IsNode(),\n    nodeWebkit: IsNodeWebkit(),\n    pixelRatio: 1,\n    webApp: IsWebApp(),\n    windows: IsWindows(),\n    windowsPhone: IsWindowsPhone()\n  };\n  if (result.windowsPhone) {\n    result.android = false;\n    result.iOS = false;\n    result.macOS = false;\n    result.windows = true;\n  }\n  const silk = ua.includes(\"Silk\");\n  if (result.windows || result.macOS || result.linux && !silk || result.chromeOS) {\n    result.desktop = true;\n  }\n  if (result.windowsPhone || /Windows NT/i.test(ua) && /Touch/i.test(ua)) {\n    result.desktop = false;\n  }\n  return result;\n}\n\n// src/device/video/index.ts\nvar video_exports = {};\n__export(video_exports, {\n  CanPlayH264Video: () => CanPlayH264Video,\n  CanPlayHLSVideo: () => CanPlayHLSVideo,\n  CanPlayOGGVideo: () => CanPlayOGGVideo,\n  CanPlayVP9Video: () => CanPlayVP9Video,\n  CanPlayVideoType: () => CanPlayVideoType,\n  CanPlayWebMVideo: () => CanPlayWebMVideo,\n  GetVideo: () => GetVideo\n});\n\n// src/device/video/CanPlayVideoType.ts\nvar _videoElement;\nfunction CanPlayVideoType(type, videoElement) {\n  if (!videoElement) {\n    if (!_videoElement) {\n      _videoElement = document.createElement(\"video\");\n    }\n    videoElement = _videoElement;\n  }\n  return videoElement && videoElement.canPlayType(type) !== \"\";\n}\n\n// src/device/video/CanPlayH264Video.ts\nfunction CanPlayH264Video(videoElement) {\n  return CanPlayVideoType('video/mp4; codecs=\"avc1.42E01E\"', videoElement);\n}\n\n// src/device/video/CanPlayHLSVideo.ts\nfunction CanPlayHLSVideo(videoElement) {\n  return CanPlayVideoType('application/x-mpegURL; codecs=\"avc1.42E01E\"', videoElement);\n}\n\n// src/device/video/CanPlayOGGVideo.ts\nfunction CanPlayOGGVideo(videoElement) {\n  return CanPlayVideoType('video/ogg; codecs=\"theora\"', videoElement);\n}\n\n// src/device/video/CanPlayVP9Video.ts\nfunction CanPlayVP9Video(videoElement) {\n  return CanPlayVideoType('video/webm; codecs=\"vp9\"', videoElement);\n}\n\n// src/device/video/CanPlayWebMVideo.ts\nfunction CanPlayWebMVideo(videoElement) {\n  return CanPlayVideoType('video/webm; codecs=\"vp8, vorbis\"', videoElement);\n}\n\n// src/device/video/GetVideo.ts\nfunction GetVideo() {\n  return {\n    h264Video: CanPlayH264Video(),\n    hlsVideo: CanPlayHLSVideo(),\n    oggVideo: CanPlayOGGVideo(),\n    vp9Video: CanPlayVP9Video(),\n    webmVideo: CanPlayWebMVideo()\n  };\n}\n\n// src/display/index.ts\nvar display_exports = {};\n__export(display_exports, {\n  AddChild: () => AddChild,\n  AddChildAt: () => AddChildAt,\n  AddChildren: () => AddChildren,\n  AddChildrenAt: () => AddChildrenAt,\n  AddPosition: () => AddPosition,\n  AddRotation: () => AddRotation,\n  AddScale: () => AddScale,\n  AddSkew: () => AddSkew,\n  BringChildToTop: () => BringChildToTop,\n  ConsoleTreeChildren: () => ConsoleTreeChildren,\n  CountMatchingChildren: () => CountMatchingChildren,\n  DepthFirstSearch: () => DepthFirstSearch,\n  DepthFirstSearchRecursive: () => DepthFirstSearchRecursive,\n  DepthFirstSearchRecursiveNested: () => DepthFirstSearchRecursiveNested,\n  DestroyChildren: () => DestroyChildren,\n  FindChildByName: () => FindChildByName,\n  FindChildrenByName: () => FindChildrenByName,\n  GetAllChildren: () => GetAllChildren,\n  GetChildAt: () => GetChildAt,\n  GetChildIndex: () => GetChildIndex,\n  GetChildren: () => GetChildren,\n  GetClosestChild: () => GetClosestChild,\n  GetFirstChild: () => GetFirstChild,\n  GetFurthestChild: () => GetFurthestChild,\n  GetLastChild: () => GetLastChild,\n  GetParents: () => GetParents,\n  GetRandomChild: () => GetRandomChild,\n  MoveChildDown: () => MoveChildDown,\n  MoveChildTo: () => MoveChildTo,\n  MoveChildUp: () => MoveChildUp,\n  Overlap: () => Overlap,\n  RemoveChild: () => RemoveChild,\n  RemoveChildAt: () => RemoveChildAt,\n  RemoveChildren: () => RemoveChildren,\n  RemoveChildrenAt: () => RemoveChildrenAt,\n  RemoveChildrenBetween: () => RemoveChildrenBetween,\n  ReparentChildren: () => ReparentChildren,\n  RotateChildrenLeft: () => RotateChildrenLeft,\n  RotateChildrenRight: () => RotateChildrenRight,\n  SendChildToBack: () => SendChildToBack,\n  SetBounds: () => SetBounds,\n  SetChildrenValue: () => SetChildrenValue,\n  SetName: () => SetName,\n  SetOrigin: () => SetOrigin,\n  SetParent: () => SetParent2,\n  SetPosition: () => SetPosition,\n  SetRotation: () => SetRotation,\n  SetScale: () => SetScale,\n  SetSize: () => SetSize2,\n  SetSkew: () => SetSkew,\n  SetType: () => SetType,\n  SetValue: () => SetValue,\n  SetVisible: () => SetVisible,\n  SetWorld: () => SetWorld,\n  ShuffleChildren: () => ShuffleChildren,\n  SwapChildren: () => SwapChildren\n});\n\n// src/display/DepthFirstSearch.ts\nfunction DepthFirstSearch(parent) {\n  const stack = [parent];\n  const output = [];\n  while (stack.length > 0) {\n    const node = stack.shift();\n    output.push(node);\n    const numChildren = node.numChildren;\n    if (numChildren > 0) {\n      for (let i = numChildren - 1; i >= 0; i--) {\n        stack.unshift(node.children[i]);\n      }\n    }\n  }\n  output.shift();\n  return output;\n}\n\n// src/display/GetChildIndex.ts\nfunction GetChildIndex(parent, child) {\n  return parent.children.indexOf(child);\n}\n\n// src/display/RemoveChildAt.ts\nfunction RemoveChildAt(parent, index) {\n  const children = parent.children;\n  let child;\n  if (index >= 0 && index < children.length) {\n    const removed = children.splice(index, 1);\n    if (removed[0]) {\n      child = removed[0];\n      child.parent = null;\n    }\n  }\n  return child;\n}\n\n// src/display/RemoveChild.ts\nfunction RemoveChild(parent, child) {\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex > -1) {\n    RemoveChildAt(parent, currentIndex);\n  }\n  return child;\n}\n\n// src/gameobjects/events/AddedToWorldEvent.ts\nvar AddedToWorldEvent = \"addedtoworld\";\n\n// src/gameobjects/events/DestroyEvent.ts\nvar DestroyEvent = \"destroy\";\n\n// src/gameobjects/events/PostUpdateEvent.ts\nvar PostUpdateEvent = \"postupdate\";\n\n// src/gameobjects/events/RemovedFromWorldEvent.ts\nvar RemovedFromWorldEvent = \"removedfromworld\";\n\n// src/gameobjects/events/UpdateEvent.ts\nvar UpdateEvent = \"update\";\n\n// src/events/Emit.ts\nfunction Emit(emitter, event, ...args) {\n  if (emitter.events.size === 0 || !emitter.events.has(event)) {\n    return false;\n  }\n  const listeners = emitter.events.get(event);\n  for (const ee of listeners) {\n    ee.callback.apply(ee.context, args);\n    if (ee.once) {\n      listeners.delete(ee);\n    }\n  }\n  if (listeners.size === 0) {\n    emitter.events.delete(event);\n  }\n  return true;\n}\n\n// src/display/SetWorld.ts\nfunction SetWorld(world, ...children) {\n  children.forEach((child) => {\n    if (child.world) {\n      Emit(child.world, RemovedFromWorldEvent, child, child.world);\n      Emit(child, RemovedFromWorldEvent, child, child.world);\n    }\n    child.world = world;\n    Emit(world, AddedToWorldEvent, child, world);\n    Emit(child, AddedToWorldEvent, child, world);\n  });\n  return children;\n}\n\n// src/display/SetParent.ts\nfunction SetParent2(parent, ...children) {\n  children.forEach((child) => {\n    if (child.parent) {\n      RemoveChild(child.parent, child);\n    }\n    child.parent = parent;\n  });\n  const parentWorld = parent.world;\n  if (parentWorld) {\n    SetWorld(parentWorld, ...DepthFirstSearch(parent));\n  }\n  return children;\n}\n\n// src/display/AddChild.ts\nfunction AddChild(parent, child) {\n  parent.children.push(child);\n  SetParent2(parent, child);\n  child.transform.updateWorld();\n  return child;\n}\n\n// src/display/AddChildAt.ts\nfunction AddChildAt(parent, index, child) {\n  const children = parent.children;\n  if (index >= 0 && index <= children.length) {\n    SetParent2(parent, child);\n    children.splice(index, 0, child);\n    child.transform.updateWorld();\n  }\n  return child;\n}\n\n// src/display/AddChildren.ts\nfunction AddChildren(parent, ...children) {\n  children.forEach((child) => {\n    AddChild(parent, child);\n  });\n  return children;\n}\n\n// src/display/AddChildrenAt.ts\nfunction AddChildrenAt(parent, index, ...children) {\n  const parentChildren = parent.children;\n  if (index >= 0 && index <= parentChildren.length) {\n    children.reverse().forEach((child) => {\n      children.splice(index, 0, child);\n      SetParent2(parent, child);\n      child.transform.updateWorld();\n    });\n  }\n  return children;\n}\n\n// src/display/AddPosition.ts\nfunction AddPosition(x, y, ...children) {\n  children.forEach((child) => {\n    child.x += x;\n    child.y += y;\n  });\n  return children;\n}\n\n// src/display/AddRotation.ts\nfunction AddRotation(rotation, ...children) {\n  children.forEach((child) => {\n    child.rotation += rotation;\n  });\n  return children;\n}\n\n// src/display/AddScale.ts\nfunction AddScale(scaleX, scaleY, ...children) {\n  children.forEach((child) => {\n    child.scaleX += scaleX;\n    child.scaleY += scaleY;\n  });\n  return children;\n}\n\n// src/display/AddSkew.ts\nfunction AddSkew(skewX, skewY, ...children) {\n  children.forEach((child) => {\n    child.skewX += skewX;\n    child.skewY += skewY;\n  });\n  return children;\n}\n\n// src/gameobjects/DIRTY_CONST.ts\nvar DIRTY_CONST = {\n  CLEAR: 0,\n  TRANSFORM: 1,\n  UPDATE: 2,\n  CHILD_CACHE: 4,\n  POST_RENDER: 8,\n  COLORS: 16,\n  BOUNDS: 32,\n  TEXTURE: 64,\n  FRAME: 128,\n  ALPHA: 256,\n  CHILD: 512,\n  DEFAULT: 1 + 2 + 16 + 32,\n  USER1: 536870912,\n  USER2: 1073741824,\n  USER3: 2147483648,\n  USER4: 4294967296\n};\n\n// src/display/BringChildToTop.ts\nfunction BringChildToTop(parent, child) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex !== -1 && currentIndex < parentChildren.length) {\n    parentChildren.splice(currentIndex, 1);\n    parentChildren.push(child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n\n// src/display/DepthFirstSearchRecursiveNested.ts\nfunction DepthFirstSearchRecursiveNested(parent, output = []) {\n  for (let i = 0; i < parent.numChildren; i++) {\n    const node = parent.children[i];\n    const children = [];\n    output.push({node, children});\n    if (node.numChildren > 0) {\n      DepthFirstSearchRecursiveNested(node, children);\n    }\n  }\n  return output;\n}\n\n// src/display/ConsoleTreeChildren.ts\nfunction GetInfo(entry) {\n  const legend = entry.numChildren > 0 ? \"Parent\" : \"Child\";\n  return `${legend} [ type=${entry.type}, name=${entry.name} ]`;\n}\nfunction LogChildren(entry) {\n  console.group(GetInfo(entry.node));\n  entry.children.forEach((child) => {\n    if (child.children.length > 0) {\n      LogChildren(child);\n    } else {\n      console.log(GetInfo(child.node));\n    }\n  });\n  console.groupEnd();\n}\nfunction ConsoleTreeChildren(parent) {\n  const entries = DepthFirstSearchRecursiveNested(parent);\n  if (parent.world === parent) {\n    console.group(\"World\");\n  } else {\n    console.group(GetInfo(parent));\n  }\n  entries.forEach((entry) => {\n    if (entry.children.length) {\n      LogChildren(entry);\n    } else {\n      console.log(GetInfo(entry.node));\n    }\n  });\n  console.groupEnd();\n}\n\n// src/display/CountMatchingChildren.ts\nfunction CountMatchingChildren(parent, property, value) {\n  const children = parent.children;\n  let total = 0;\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      total++;\n    }\n  });\n  return total;\n}\n\n// src/display/DepthFirstSearchRecursive.ts\nfunction DepthFirstSearchRecursive(parent, output = []) {\n  for (let i = 0; i < parent.numChildren; i++) {\n    const child = parent.children[i];\n    output.push(child);\n    if (child.numChildren > 0) {\n      DepthFirstSearchRecursive(child, output);\n    }\n  }\n  return output;\n}\n\n// src/display/RemoveChildrenBetween.ts\nfunction RemoveChildrenBetween(parent, beginIndex = 0, endIndex) {\n  const children = parent.children;\n  if (endIndex === void 0) {\n    endIndex = children.length;\n  }\n  const range = endIndex - beginIndex;\n  if (range > 0 && range <= endIndex) {\n    const removed = children.splice(beginIndex, range);\n    removed.forEach((child) => {\n      child.parent = null;\n    });\n    return removed;\n  } else {\n    return [];\n  }\n}\n\n// src/display/DestroyChildren.ts\nfunction DestroyChildren(parent, beginIndex = 0, endIndex) {\n  const removed = RemoveChildrenBetween(parent, beginIndex, endIndex);\n  removed.forEach((child) => {\n    child.destroy();\n  });\n}\n\n// src/display/FindChildByName.ts\nfunction FindChildByName(parent, searchString) {\n  const children = DepthFirstSearch(parent);\n  const regex = RegExp(searchString);\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (regex.test(child.name)) {\n      return child;\n    }\n  }\n}\n\n// src/display/FindChildrenByName.ts\nfunction FindChildrenByName(parent, searchString) {\n  const children = DepthFirstSearch(parent);\n  const regex = RegExp(searchString);\n  const results = [];\n  children.forEach((child) => {\n    if (regex.test(child.name)) {\n      results.push(child);\n    }\n  });\n  return results;\n}\n\n// src/display/GetAllChildren.ts\nfunction GetAllChildren(parent, property, value) {\n  const children = DepthFirstSearch(parent);\n  if (!property) {\n    return children;\n  }\n  const results = [];\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      results.push(child);\n    }\n  });\n  return results;\n}\n\n// src/display/GetChildAt.ts\nfunction GetChildAt(parent, index) {\n  const children = parent.children;\n  if (index < 0 || index > children.length) {\n    throw new Error(`Index out of bounds: ${index}`);\n  }\n  return children[index];\n}\n\n// src/display/GetChildren.ts\nfunction GetChildren(parent, property, value) {\n  const children = parent.children;\n  if (!property) {\n    return [...children];\n  }\n  const results = [];\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      results.push(child);\n    }\n  });\n  return results;\n}\n\n// src/display/GetClosestChild.ts\nfunction GetClosestChild(parent, point) {\n  const children = parent.children;\n  let closest = null;\n  let distance = 0;\n  children.forEach((child) => {\n    const childDistance = GetVec2Distance(point, child.transform.position);\n    if (!closest || childDistance < distance) {\n      closest = child;\n      distance = childDistance;\n    }\n  });\n  return closest;\n}\n\n// src/display/GetFirstChild.ts\nfunction GetFirstChild(parent, property, value) {\n  const children = parent.children;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      return child;\n    }\n  }\n}\n\n// src/display/GetFurthestChild.ts\nfunction GetFurthestChild(parent, point) {\n  const children = parent.children;\n  let furthest = null;\n  let distance = 0;\n  children.forEach((child) => {\n    const childDistance = GetVec2Distance(point, child.transform.position);\n    if (!furthest || childDistance > distance) {\n      furthest = child;\n      distance = childDistance;\n    }\n  });\n  return furthest;\n}\n\n// src/display/GetLastChild.ts\nfunction GetLastChild(parent, property, value) {\n  const children = parent.children;\n  for (let i = children.length - 1; i >= 0; i--) {\n    const child = children[i];\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      return child;\n    }\n  }\n}\n\n// src/display/GetParents.ts\nfunction GetParents(child) {\n  const parents = [];\n  while (child.parent) {\n    parents.push(child.parent);\n    child = child.parent;\n  }\n  return parents;\n}\n\n// src/display/GetRandomChild.ts\nfunction GetRandomChild(parent, startIndex = 0, length) {\n  const children = parent.children;\n  if (!length) {\n    length = children.length;\n  }\n  const randomIndex = startIndex + Math.floor(Math.random() * length);\n  return children[randomIndex];\n}\n\n// src/display/MoveChildDown.ts\nfunction MoveChildDown(parent, child) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex > 0) {\n    const child2 = parentChildren[currentIndex - 1];\n    const index2 = parentChildren.indexOf(child2);\n    parentChildren[currentIndex] = child2;\n    parentChildren[index2] = child;\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n    child2.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n\n// src/display/MoveChildTo.ts\nfunction MoveChildTo(parent, child, index) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex === -1 || index < 0 || index >= parentChildren.length) {\n    throw new Error(\"Index out of bounds\");\n  }\n  if (currentIndex !== index) {\n    parentChildren.splice(currentIndex, 1);\n    parentChildren.splice(index, 0, child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n\n// src/display/MoveChildUp.ts\nfunction MoveChildUp(parent, child) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex !== -1 && currentIndex > 0) {\n    const child2 = parentChildren[currentIndex + 1];\n    const index2 = parentChildren.indexOf(child2);\n    parentChildren[currentIndex] = child2;\n    parentChildren[index2] = child;\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n    child2.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n\n// src/geom/intersects/RectangleToRectangle.ts\nfunction RectangleToRectangle(rectA, rectB) {\n  if (rectA.width <= 0 || rectA.height <= 0 || rectB.width <= 0 || rectB.height <= 0) {\n    return false;\n  }\n  return !(rectA.right < rectB.x || rectA.bottom < rectB.y || rectA.x > rectB.right || rectA.y > rectB.bottom);\n}\n\n// src/display/Overlap.ts\nfunction Overlap(source, ...targets) {\n  const sourceBounds = source.bounds.get();\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i];\n    const targetBounds = target.bounds.get();\n    if (RectangleToRectangle(sourceBounds, targetBounds)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// src/display/RemoveChildren.ts\nfunction RemoveChildren(parent, ...children) {\n  children.forEach((child) => {\n    RemoveChild(parent, child);\n  });\n  return children;\n}\n\n// src/display/RemoveChildrenAt.ts\nfunction RemoveChildrenAt(parent, ...index) {\n  const removed = [];\n  index.sort((a, b) => a - b);\n  index.reverse().forEach((i) => {\n    const child = RemoveChildAt(parent, i);\n    if (child) {\n      removed.push(child);\n    }\n  });\n  return removed;\n}\n\n// src/display/ReparentChildren.ts\nfunction ReparentChildren(parent, newParent, beginIndex = 0, endIndex) {\n  const moved = RemoveChildrenBetween(parent, beginIndex, endIndex);\n  SetParent2(newParent, ...moved);\n  moved.forEach((child) => {\n    child.transform.updateWorld();\n  });\n  return moved;\n}\n\n// src/display/RotateChildrenLeft.ts\nfunction RotateChildrenLeft(parent, total = 1) {\n  const parentChildren = parent.children;\n  let child = null;\n  for (let i = 0; i < total; i++) {\n    child = parentChildren.shift();\n    parentChildren.push(child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n\n// src/display/RotateChildrenRight.ts\nfunction RotateChildrenRight(parent, total = 1) {\n  const parentChildren = parent.children;\n  let child = null;\n  for (let i = 0; i < total; i++) {\n    child = parentChildren.pop();\n    parentChildren.unshift(child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n\n// src/display/SendChildToBack.ts\nfunction SendChildToBack(parent, child) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex !== -1 && currentIndex > 0) {\n    parentChildren.splice(currentIndex, 1);\n    parentChildren.unshift(child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n\n// src/display/SetBounds.ts\nfunction SetBounds(x, y, width, height, ...children) {\n  children.forEach((child) => {\n    child.bounds.set(x, y, width, height);\n  });\n  return children;\n}\n\n// src/display/SetChildrenValue.ts\nfunction SetChildrenValue(parent, property, value) {\n  const children = DepthFirstSearch(parent);\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor) {\n      descriptor.set(value);\n    }\n  });\n  return children;\n}\n\n// src/display/SetName.ts\nfunction SetName(name, ...children) {\n  children.forEach((child) => {\n    child.name = name;\n  });\n  return children;\n}\n\n// src/display/SetOrigin.ts\nfunction SetOrigin(originX, originY, ...children) {\n  children.forEach((child) => {\n    child.setOrigin(originX, originY);\n  });\n  return children;\n}\n\n// src/display/SetPosition.ts\nfunction SetPosition(x, y, ...children) {\n  children.forEach((child) => {\n    child.setPosition(x, y);\n  });\n  return children;\n}\n\n// src/display/SetRotation.ts\nfunction SetRotation(rotation, ...children) {\n  children.forEach((child) => {\n    child.rotation = rotation;\n  });\n  return children;\n}\n\n// src/display/SetScale.ts\nfunction SetScale(scaleX, scaleY, ...children) {\n  children.forEach((child) => {\n    child.setScale(scaleX, scaleY);\n  });\n  return children;\n}\n\n// src/display/SetSize.ts\nfunction SetSize2(width, height, ...children) {\n  children.forEach((child) => {\n    child.setSize(width, height);\n  });\n  return children;\n}\n\n// src/display/SetSkew.ts\nfunction SetSkew(skewX, skewY, ...children) {\n  children.forEach((child) => {\n    child.setSkew(skewX, skewY);\n  });\n  return children;\n}\n\n// src/display/SetType.ts\nfunction SetType(type, ...children) {\n  children.forEach((child) => {\n    child.type = type;\n  });\n  return children;\n}\n\n// src/display/SetValue.ts\nfunction SetValue(property, value, ...children) {\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor) {\n      descriptor.set(value);\n    }\n  });\n  return children;\n}\n\n// src/display/SetVisible.ts\nfunction SetVisible(visible, ...children) {\n  children.forEach((child) => {\n    child.visible = visible;\n  });\n  return children;\n}\n\n// src/display/ShuffleChildren.ts\nfunction ShuffleChildren(parent) {\n  const children = parent.children;\n  for (let i = children.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = children[i];\n    children[i] = children[j];\n    children[j] = temp;\n    temp.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return children;\n}\n\n// src/display/SwapChildren.ts\nfunction SwapChildren(child1, child2) {\n  if (child1.parent === child2.parent) {\n    const children = child1.parent.children;\n    const index1 = GetChildIndex(child1.parent, child1);\n    const index2 = GetChildIndex(child2.parent, child2);\n    if (index1 !== index2) {\n      children[index1] = child2;\n      children[index2] = child1;\n    }\n  }\n}\n\n// src/display3d/index.ts\nvar display3d_exports = {};\n__export(display3d_exports, {\n  AddChild3D: () => AddChild3D,\n  AddChild3DAt: () => AddChild3DAt,\n  AddChildren3D: () => AddChildren3D,\n  AddChildren3DAt: () => AddChildren3DAt,\n  ConsoleTreeChildren3D: () => ConsoleTreeChildren3D,\n  CountMatchingChildren3D: () => CountMatchingChildren3D,\n  DepthFirstSearch3D: () => DepthFirstSearch3D,\n  DepthFirstSearchRecursive3D: () => DepthFirstSearchRecursive3D,\n  DepthFirstSearchRecursiveNested3D: () => DepthFirstSearchRecursiveNested3D,\n  DestroyChildren3D: () => DestroyChildren3D,\n  FindChild3DByName: () => FindChild3DByName,\n  FindChildren3DByName: () => FindChildren3DByName,\n  GetAllChildren3D: () => GetAllChildren3D,\n  GetChild3DAt: () => GetChild3DAt,\n  GetChild3DIndex: () => GetChild3DIndex,\n  GetChildren3D: () => GetChildren3D,\n  GetFirstChild3D: () => GetFirstChild3D,\n  GetLastChild3D: () => GetLastChild3D,\n  GetParents3D: () => GetParents3D,\n  GetRandomChild3D: () => GetRandomChild3D,\n  MoveChild3DTo: () => MoveChild3DTo,\n  RemoveChild3D: () => RemoveChild3D,\n  RemoveChild3DAt: () => RemoveChild3DAt,\n  RemoveChildren3D: () => RemoveChildren3D,\n  RemoveChildren3DAt: () => RemoveChildren3DAt,\n  RemoveChildren3DBetween: () => RemoveChildren3DBetween,\n  ReparentChildren3D: () => ReparentChildren3D,\n  ReplaceChild3D: () => ReplaceChild3D,\n  SetChildren3DValue: () => SetChildren3DValue,\n  SetParent3D: () => SetParent3D,\n  SetWorld3D: () => SetWorld3D,\n  SwapChildren3D: () => SwapChildren3D\n});\n\n// src/display3d/DepthFirstSearch3D.ts\nfunction DepthFirstSearch3D(parent) {\n  const stack = [parent];\n  const output = [];\n  while (stack.length > 0) {\n    const node = stack.shift();\n    output.push(node);\n    const numChildren = node.numChildren;\n    if (numChildren > 0) {\n      for (let i = numChildren - 1; i >= 0; i--) {\n        stack.unshift(node.children[i]);\n      }\n    }\n  }\n  output.shift();\n  return output;\n}\n\n// src/display3d/GetChild3DIndex.ts\nfunction GetChild3DIndex(parent, child) {\n  return parent.children.indexOf(child);\n}\n\n// src/display3d/RemoveChild3DAt.ts\nfunction RemoveChild3DAt(parent, index) {\n  const children = parent.children;\n  let child;\n  if (index >= 0 && index < children.length) {\n    const removed = children.splice(index, 1);\n    if (removed[0]) {\n      child = removed[0];\n      child.parent = null;\n    }\n  }\n  return child;\n}\n\n// src/display3d/RemoveChild3D.ts\nfunction RemoveChild3D(parent, child) {\n  const currentIndex = GetChild3DIndex(parent, child);\n  if (currentIndex > -1) {\n    RemoveChild3DAt(parent, currentIndex);\n  }\n  return child;\n}\n\n// src/display3d/SetWorld3D.ts\nfunction SetWorld3D(world, ...children) {\n  children.forEach((child) => {\n    if (child.world) {\n      Emit(child.world, RemovedFromWorldEvent, child, child.world);\n      Emit(child, RemovedFromWorldEvent, child, child.world);\n    }\n    child.world = world;\n    Emit(world, AddedToWorldEvent, child, world);\n    Emit(child, AddedToWorldEvent, child, world);\n  });\n  return children;\n}\n\n// src/display3d/SetParent3D.ts\nfunction SetParent3D(parent, ...children) {\n  children.forEach((child) => {\n    if (child.parent) {\n      RemoveChild3D(child.parent, child);\n    }\n    child.parent = parent;\n  });\n  const parentWorld = parent.world;\n  if (parentWorld) {\n    SetWorld3D(parentWorld, ...DepthFirstSearch3D(parent));\n  }\n  return children;\n}\n\n// src/display3d/AddChild3D.ts\nfunction AddChild3D(parent, child) {\n  parent.children.push(child);\n  SetParent3D(parent, child);\n  return child;\n}\n\n// src/display3d/AddChild3DAt.ts\nfunction AddChild3DAt(parent, index, child) {\n  const children = parent.children;\n  if (index >= 0 && index <= children.length) {\n    SetParent3D(parent, child);\n    children.splice(index, 0, child);\n  }\n  return child;\n}\n\n// src/display3d/AddChildren3D.ts\nfunction AddChildren3D(parent, ...children) {\n  children.forEach((child) => {\n    AddChild3D(parent, child);\n  });\n  return children;\n}\n\n// src/display3d/AddChildren3DAt.ts\nfunction AddChildren3DAt(parent, index, ...children) {\n  const parentChildren = parent.children;\n  if (index >= 0 && index <= parentChildren.length) {\n    children.reverse().forEach((child) => {\n      children.splice(index, 0, child);\n      SetParent3D(parent, child);\n    });\n  }\n  return children;\n}\n\n// src/display3d/DepthFirstSearchRecursiveNested3D.ts\nfunction DepthFirstSearchRecursiveNested3D(parent, output = []) {\n  for (let i = 0; i < parent.numChildren; i++) {\n    const node = parent.children[i];\n    const children = [];\n    output.push({node, children});\n    if (node.numChildren > 0) {\n      DepthFirstSearchRecursiveNested3D(node, children);\n    }\n  }\n  return output;\n}\n\n// src/display3d/ConsoleTreeChildren3D.ts\nfunction GetInfo2(entry) {\n  const legend = entry.numChildren > 0 ? \"Parent\" : \"Child\";\n  return `${legend} [ type=${entry.type}, name=${entry.name} ]`;\n}\nfunction LogChildren2(entry) {\n  console.group(GetInfo2(entry.node));\n  entry.children.forEach((child) => {\n    if (child.children.length > 0) {\n      LogChildren2(child);\n    } else {\n      console.log(GetInfo2(child.node));\n    }\n  });\n  console.groupEnd();\n}\nfunction ConsoleTreeChildren3D(parent) {\n  const entries = DepthFirstSearchRecursiveNested3D(parent);\n  if (parent.world === parent) {\n    console.group(\"World\");\n  } else {\n    console.group(GetInfo2(parent));\n  }\n  entries.forEach((entry) => {\n    if (entry.children.length) {\n      LogChildren2(entry);\n    } else {\n      console.log(GetInfo2(entry.node));\n    }\n  });\n  console.groupEnd();\n}\n\n// src/display3d/CountMatchingChildren3D.ts\nfunction CountMatchingChildren3D(parent, property, value) {\n  const children = parent.children;\n  let total = 0;\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      total++;\n    }\n  });\n  return total;\n}\n\n// src/display3d/DepthFirstSearchRecursive3D.ts\nfunction DepthFirstSearchRecursive3D(parent, output = []) {\n  for (let i = 0; i < parent.numChildren; i++) {\n    const child = parent.children[i];\n    output.push(child);\n    if (child.numChildren > 0) {\n      DepthFirstSearchRecursive3D(child, output);\n    }\n  }\n  return output;\n}\n\n// src/display3d/RemoveChildren3DBetween.ts\nfunction RemoveChildren3DBetween(parent, beginIndex = 0, endIndex) {\n  const children = parent.children;\n  if (endIndex === void 0) {\n    endIndex = children.length;\n  }\n  const range = endIndex - beginIndex;\n  if (range > 0 && range <= endIndex) {\n    const removed = children.splice(beginIndex, range);\n    removed.forEach((child) => {\n      child.parent = null;\n    });\n    return removed;\n  } else {\n    return [];\n  }\n}\n\n// src/display3d/DestroyChildren3D.ts\nfunction DestroyChildren3D(parent, beginIndex = 0, endIndex) {\n  const removed = RemoveChildren3DBetween(parent, beginIndex, endIndex);\n  removed.forEach((child) => {\n    child.destroy();\n  });\n}\n\n// src/display3d/FindChild3DByName.ts\nfunction FindChild3DByName(parent, searchString) {\n  const children = DepthFirstSearch3D(parent);\n  const regex = RegExp(searchString);\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (regex.test(child.name)) {\n      return child;\n    }\n  }\n}\n\n// src/display3d/FindChildren3DByName.ts\nfunction FindChildren3DByName(parent, searchString) {\n  const children = DepthFirstSearch3D(parent);\n  const regex = RegExp(searchString);\n  const results = [];\n  children.forEach((child) => {\n    if (regex.test(child.name)) {\n      results.push(child);\n    }\n  });\n  return results;\n}\n\n// src/display3d/GetAllChildren3D.ts\nfunction GetAllChildren3D(parent, property, value) {\n  const children = DepthFirstSearch3D(parent);\n  if (!property) {\n    return children;\n  }\n  const results = [];\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      results.push(child);\n    }\n  });\n  return results;\n}\n\n// src/display3d/GetChild3DAt.ts\nfunction GetChild3DAt(parent, index) {\n  const children = parent.children;\n  if (index < 0 || index > children.length) {\n    throw new Error(`Index out of bounds: ${index}`);\n  }\n  return children[index];\n}\n\n// src/display3d/GetChildren3D.ts\nfunction GetChildren3D(parent, property, value) {\n  const children = parent.children;\n  if (!property) {\n    return [...children];\n  }\n  const results = [];\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      results.push(child);\n    }\n  });\n  return results;\n}\n\n// src/display3d/GetFirstChild3D.ts\nfunction GetFirstChild3D(parent, property, value) {\n  const children = parent.children;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      return child;\n    }\n  }\n}\n\n// src/display3d/GetLastChild3D.ts\nfunction GetLastChild3D(parent, property, value) {\n  const children = parent.children;\n  for (let i = children.length - 1; i >= 0; i--) {\n    const child = children[i];\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      return child;\n    }\n  }\n}\n\n// src/display3d/GetParents3D.ts\nfunction GetParents3D(child) {\n  const parents = [];\n  while (child.parent) {\n    parents.push(child.parent);\n    child = child.parent;\n  }\n  return parents;\n}\n\n// src/display3d/GetRandomChild3D.ts\nfunction GetRandomChild3D(parent, startIndex = 0, length) {\n  const children = parent.children;\n  if (!length) {\n    length = children.length;\n  }\n  const randomIndex = startIndex + Math.floor(Math.random() * length);\n  return children[randomIndex];\n}\n\n// src/display3d/MoveChild3DTo.ts\nfunction MoveChild3DTo(parent, child, index) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChild3DIndex(parent, child);\n  if (currentIndex === -1 || index < 0 || index >= parentChildren.length) {\n    throw new Error(\"Index out of bounds\");\n  }\n  if (currentIndex !== index) {\n    parentChildren.splice(currentIndex, 1);\n    parentChildren.splice(index, 0, child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n\n// src/display3d/RemoveChildren3D.ts\nfunction RemoveChildren3D(parent, ...children) {\n  children.forEach((child) => {\n    RemoveChild3D(parent, child);\n  });\n  return children;\n}\n\n// src/display3d/RemoveChildren3DAt.ts\nfunction RemoveChildren3DAt(parent, ...index) {\n  const removed = [];\n  index.sort((a, b) => a - b);\n  index.reverse().forEach((i) => {\n    const child = RemoveChild3DAt(parent, i);\n    if (child) {\n      removed.push(child);\n    }\n  });\n  return removed;\n}\n\n// src/display3d/ReparentChildren3D.ts\nfunction ReparentChildren3D(parent, newParent, beginIndex = 0, endIndex) {\n  const moved = RemoveChildren3DBetween(parent, beginIndex, endIndex);\n  SetParent3D(newParent, ...moved);\n  moved.forEach((child) => {\n  });\n  return moved;\n}\n\n// src/display3d/ReplaceChild3D.ts\nfunction ReplaceChild3D(target, source) {\n  const targetParent = target.parent;\n  const sourceParent = source.parent;\n  const targetIndex = GetChild3DIndex(targetParent, target);\n  if (targetParent === sourceParent) {\n    MoveChild3DTo(targetParent, source, targetIndex);\n    RemoveChild3D(targetParent, target);\n  } else {\n    RemoveChild3D(targetParent, target);\n    RemoveChild3D(sourceParent, source);\n    AddChild3DAt(targetParent, targetIndex, source);\n  }\n  return target;\n}\n\n// src/display3d/SetChildren3DValue.ts\nfunction SetChildren3DValue(parent, property, value) {\n  const children = DepthFirstSearch3D(parent);\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor) {\n      descriptor.set(value);\n    }\n  });\n  return children;\n}\n\n// src/display3d/SwapChildren3D.ts\nfunction SwapChildren3D(child1, child2) {\n  if (child1.parent === child2.parent) {\n    const children = child1.parent.children;\n    const index1 = GetChild3DIndex(child1.parent, child1);\n    const index2 = GetChild3DIndex(child2.parent, child2);\n    if (index1 !== index2) {\n      children[index1] = child2;\n      children[index2] = child1;\n    }\n  }\n}\n\n// src/events/index.ts\nvar events_exports = {};\n__export(events_exports, {\n  ClearEvent: () => ClearEvent,\n  Emit: () => Emit,\n  EventEmitter: () => EventEmitter,\n  EventInstance: () => EventInstance,\n  GetEventNames: () => GetEventNames,\n  GetListenerCount: () => GetListenerCount,\n  GetListeners: () => GetListeners,\n  Off: () => Off,\n  On: () => On,\n  Once: () => Once,\n  RemoveAllListeners: () => RemoveAllListeners\n});\n\n// src/events/ClearEvent.ts\nfunction ClearEvent(emitter, event) {\n  emitter.events.delete(event);\n  return emitter;\n}\n\n// src/events/EventEmitter.ts\nvar EventEmitter = class {\n  constructor() {\n    this.events = new Map();\n  }\n};\n\n// src/events/EventInstance.ts\nvar EventInstance = class {\n  constructor(callback, context, once = false) {\n    this.callback = callback;\n    this.context = context;\n    this.once = once;\n  }\n};\n\n// src/events/GetEventNames.ts\nfunction GetEventNames(emitter) {\n  return [...emitter.events.keys()];\n}\n\n// src/events/GetListenerCount.ts\nfunction GetListenerCount(emitter, event) {\n  const listeners = emitter.events.get(event);\n  return listeners ? listeners.size : 0;\n}\n\n// src/events/GetListeners.ts\nfunction GetListeners(emitter, event) {\n  const out = [];\n  const listeners = emitter.events.get(event);\n  listeners.forEach((listener) => {\n    out.push(listener.callback);\n  });\n  return out;\n}\n\n// src/events/Off.ts\nfunction Off(emitter, event, callback, context, once) {\n  const events = emitter.events;\n  const listeners = events.get(event);\n  if (!callback) {\n    events.delete(event);\n  } else if (callback instanceof EventInstance) {\n    listeners.delete(callback);\n  } else {\n    const hasContext = !context;\n    const hasOnce = once !== void 0;\n    for (const listener of listeners) {\n      if (listener.callback === callback && (hasContext && listener.context === context) && (hasOnce && listener.once === once)) {\n        listeners.delete(listener);\n      }\n    }\n  }\n  if (listeners.size === 0) {\n    events.delete(event);\n  }\n  return emitter;\n}\n\n// src/events/On.ts\nfunction On(emitter, event, callback, context = emitter, once = false) {\n  if (typeof callback !== \"function\") {\n    throw new TypeError(\"Listener not a function\");\n  }\n  const listener = new EventInstance(callback, context, once);\n  const listeners = emitter.events.get(event);\n  if (!listeners) {\n    emitter.events.set(event, new Set([listener]));\n  } else {\n    listeners.add(listener);\n  }\n  return listener;\n}\n\n// src/events/Once.ts\nfunction Once(emitter, event, callback, context = emitter) {\n  return On(emitter, event, callback, context, true);\n}\n\n// src/events/RemoveAllListeners.ts\nfunction RemoveAllListeners(emitter, event) {\n  if (!event) {\n    emitter.events.clear();\n  } else {\n    emitter.events.delete(event);\n  }\n}\n\n// src/gameobjects/index.ts\nvar gameobjects_exports = {};\n__export(gameobjects_exports, {\n  AnimatedSprite: () => AnimatedSprite,\n  Components: () => components_exports,\n  Container: () => Container,\n  EffectLayer: () => EffectLayer,\n  GameObject: () => GameObject,\n  Layer: () => Layer,\n  RenderLayer: () => RenderLayer,\n  Sprite: () => Sprite,\n  SpriteBatch: () => SpriteBatch,\n  Text: () => Text\n});\n\n// src/gameobjects/components/index.ts\nvar components_exports = {};\n__export(components_exports, {\n  Bounds: () => bounds_exports,\n  Input: () => input_exports,\n  Transform: () => transform_exports,\n  Vertex: () => Vertex\n});\n\n// src/gameobjects/components/bounds/index.ts\nvar bounds_exports = {};\n__export(bounds_exports, {\n  BoundsComponent: () => BoundsComponent\n});\n\n// src/gameobjects/components/transform/GetVertices.ts\nfunction GetVertices(transform) {\n  const {a, b, c, d, tx, ty} = transform.world;\n  const {x, y, right, bottom} = transform.extent;\n  const x0 = x * a + y * c + tx;\n  const y0 = x * b + y * d + ty;\n  const x1 = x * a + bottom * c + tx;\n  const y1 = x * b + bottom * d + ty;\n  const x2 = right * a + bottom * c + tx;\n  const y2 = right * b + bottom * d + ty;\n  const x3 = right * a + y * c + tx;\n  const y3 = right * b + y * d + ty;\n  return {x0, y0, x1, y1, x2, y2, x3, y3};\n}\n\n// src/gameobjects/components/bounds/BoundsComponent.ts\nvar BoundsComponent = class {\n  constructor(entity) {\n    this.fixed = false;\n    this.includeChildren = true;\n    this.visibleOnly = true;\n    this.entity = entity;\n    this.area = new Rectangle();\n  }\n  set(x, y, width, height) {\n    this.area.set(x, y, width, height);\n  }\n  get() {\n    if (this.entity.isDirty(DIRTY_CONST.BOUNDS) && !this.fixed) {\n      this.update();\n    }\n    return this.area;\n  }\n  updateLocal() {\n    const {x0, y0, x1, y1, x2, y2, x3, y3} = GetVertices(this.entity.transform);\n    const x = Math.min(x0, x1, x2, x3);\n    const y = Math.min(y0, y1, y2, y3);\n    const right = Math.max(x0, x1, x2, x3);\n    const bottom = Math.max(y0, y1, y2, y3);\n    return this.area.set(x, y, right - x, bottom - y);\n  }\n  update() {\n    const bounds = this.updateLocal();\n    this.entity.clearDirty(DIRTY_CONST.BOUNDS);\n    if (!this.includeChildren || !this.entity.numChildren) {\n      return bounds;\n    }\n    const visibleOnly = this.visibleOnly;\n    const children = this.entity.children;\n    let x = bounds.x;\n    let y = bounds.y;\n    let right = bounds.right;\n    let bottom = bounds.bottom;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (!child || visibleOnly && !child.visible) {\n        continue;\n      }\n      const childBounds = child.bounds.get();\n      if (childBounds.x < x) {\n        x = childBounds.x;\n      }\n      if (childBounds.y < y) {\n        y = childBounds.y;\n      }\n      if (childBounds.right > right) {\n        right = childBounds.right;\n      }\n      if (childBounds.bottom > bottom) {\n        bottom = childBounds.bottom;\n      }\n    }\n    return bounds.set(x, y, right - x, bottom - y);\n  }\n  destroy() {\n    this.entity = null;\n    this.area = null;\n  }\n};\n\n// src/gameobjects/components/input/index.ts\nvar input_exports = {};\n__export(input_exports, {\n  InputComponent: () => InputComponent\n});\n\n// src/gameobjects/components/input/InputComponent.ts\nvar InputComponent = class {\n  constructor(entity) {\n    this.enabled = false;\n    this.enabledChildren = true;\n    this.entity = entity;\n  }\n  destroy() {\n    this.entity = null;\n    this.hitArea = null;\n  }\n};\n\n// src/gameobjects/components/transform/index.ts\nvar transform_exports = {};\n__export(transform_exports, {\n  GetVertices: () => GetVertices,\n  TransformComponent: () => TransformComponent,\n  UpdateLocalTransform: () => UpdateLocalTransform,\n  UpdateWorldTransform: () => UpdateWorldTransform\n});\n\n// src/config/defaultorigin/GetDefaultOriginX.ts\nfunction GetDefaultOriginX() {\n  return ConfigStore.get(CONFIG_DEFAULTS.DEFAULT_ORIGIN).x;\n}\n\n// src/config/defaultorigin/GetDefaultOriginY.ts\nfunction GetDefaultOriginY() {\n  return ConfigStore.get(CONFIG_DEFAULTS.DEFAULT_ORIGIN).y;\n}\n\n// src/geom/rectangle/index.ts\nvar rectangle_exports = {};\n__export(rectangle_exports, {\n  CeilRectangle: () => CeilRectangle,\n  CeilRectanglePosition: () => CeilRectanglePosition,\n  CenterRectangleOn: () => CenterRectangleOn,\n  CloneRectangle: () => CloneRectangle,\n  CopyRectangleFrom: () => CopyRectangleFrom,\n  DecomposeRectangle: () => DecomposeRectangle,\n  FitRectangleInside: () => FitRectangleInside,\n  FitRectangleOutside: () => FitRectangleOutside,\n  FitRectangleToPoint: () => FitRectangleToPoint,\n  FitRectangleToPoints: () => FitRectangleToPoints,\n  FloorRectangle: () => FloorRectangle,\n  FloorRectanglePosition: () => FloorRectanglePosition,\n  GetRectangleArea: () => GetRectangleArea,\n  GetRectangleAspectRatio: () => GetRectangleAspectRatio,\n  GetRectangleCenter: () => GetRectangleCenter,\n  GetRectangleCenterX: () => GetRectangleCenterX,\n  GetRectangleCenterY: () => GetRectangleCenterY,\n  GetRectangleEdges: () => GetRectangleEdges,\n  GetRectangleIntersection: () => GetRectangleIntersection,\n  GetRectangleMarchingAnts: () => GetRectangleMarchingAnts,\n  GetRectangleOverlap: () => GetRectangleOverlap,\n  GetRectanglePerimeter: () => GetRectanglePerimeter,\n  GetRectanglePerimeterPoint: () => GetRectanglePerimeterPoint,\n  GetRectanglePoint: () => GetRectanglePoint,\n  GetRectanglePoints: () => GetRectanglePoints,\n  GetRectangleRandomPoint: () => GetRectangleRandomPoint,\n  GetRectangleRandomPointOutside: () => GetRectangleRandomPointOutside,\n  GetRectangleSize: () => GetRectangleSize,\n  GetRectangleUnion: () => GetRectangleUnion,\n  InflateRectangle: () => InflateRectangle,\n  MergeRectangle: () => MergeRectangle,\n  Rectangle: () => Rectangle,\n  RectangleContains: () => RectangleContains,\n  RectangleContainsPoint: () => RectangleContainsPoint,\n  RectangleContainsRectangle: () => RectangleContainsRectangle,\n  RectangleEquals: () => RectangleEquals,\n  RectangleFromPoints: () => RectangleFromPoints,\n  RectangleSizeEquals: () => RectangleSizeEquals,\n  ScaleRectangle: () => ScaleRectangle,\n  TranslateRectangle: () => TranslateRectangle,\n  TranslateRectanglePoint: () => TranslateRectanglePoint\n});\n\n// src/geom/rectangle/CeilRectangle.ts\nfunction CeilRectangle(rect) {\n  rect.x = Math.ceil(rect.x);\n  rect.y = Math.ceil(rect.y);\n  rect.width = Math.ceil(rect.width);\n  rect.height = Math.ceil(rect.height);\n  return rect;\n}\n\n// src/geom/rectangle/CeilRectanglePosition.ts\nfunction CeilRectanglePosition(rect) {\n  rect.x = Math.ceil(rect.x);\n  rect.y = Math.ceil(rect.y);\n  return rect;\n}\n\n// src/geom/rectangle/CenterRectangleOn.ts\nfunction CenterRectangleOn(rect, x, y) {\n  rect.x = x - rect.width / 2;\n  rect.y = y - rect.height / 2;\n  return rect;\n}\n\n// src/geom/rectangle/CloneRectangle.ts\nfunction CloneRectangle(source) {\n  return new Rectangle(source.x, source.y, source.width, source.height);\n}\n\n// src/geom/rectangle/CopyRectangleFrom.ts\nfunction CopyRectangleFrom(source, dest) {\n  return dest.set(source.x, source.y, source.width, source.height);\n}\n\n// src/geom/rectangle/DecomposeRectangle.ts\nfunction DecomposeRectangle(rect, out = []) {\n  out.push(new Vec2(rect.x, rect.y), new Vec2(rect.right, rect.y), new Vec2(rect.right, rect.bottom), new Vec2(rect.x, rect.bottom));\n  return out;\n}\n\n// src/geom/rectangle/GetRectangleAspectRatio.ts\nfunction GetRectangleAspectRatio(rect) {\n  return rect.height === 0 ? NaN : rect.width / rect.height;\n}\n\n// src/geom/rectangle/GetRectangleCenterX.ts\nfunction GetRectangleCenterX(rect) {\n  return rect.x + rect.width / 2;\n}\n\n// src/geom/rectangle/GetRectangleCenterY.ts\nfunction GetRectangleCenterY(rect) {\n  return rect.y + rect.height / 2;\n}\n\n// src/geom/rectangle/FitRectangleInside.ts\nfunction FitRectangleInside(target, source) {\n  const ratio = GetRectangleAspectRatio(target);\n  let width = source.width;\n  let height = source.height;\n  if (ratio < GetRectangleAspectRatio(source)) {\n    width = source.height * ratio;\n  } else {\n    height = source.width / ratio;\n  }\n  return target.set(GetRectangleCenterX(source) - target.width / 2, GetRectangleCenterY(source) - target.height / 2, width, height);\n}\n\n// src/geom/rectangle/FitRectangleOutside.ts\nfunction FitRectangleOutside(target, source) {\n  const ratio = GetRectangleAspectRatio(target);\n  let width = source.width;\n  let height = source.height;\n  if (ratio > GetRectangleAspectRatio(source)) {\n    width = source.height * ratio;\n  } else {\n    height = source.width / ratio;\n  }\n  return target.set(GetRectangleCenterX(source) - target.width / 2, GetRectangleCenterY(source) - target.height / 2, width, height);\n}\n\n// src/geom/rectangle/FitRectangleToPoint.ts\nfunction FitRectangleToPoint(target, x, y) {\n  const minX = Math.min(target.x, x);\n  const maxX = Math.max(target.right, x);\n  const minY = Math.min(target.y, y);\n  const maxY = Math.max(target.bottom, y);\n  return target.set(minX, minY, maxX - minX, maxY - minY);\n}\n\n// src/geom/rectangle/FitRectangleToPoints.ts\nfunction FitRectangleToPoints(target, points) {\n  let minX = target.x;\n  let maxX = target.right;\n  let minY = target.y;\n  let maxY = target.bottom;\n  for (let i = 0; i < points.length; i++) {\n    minX = Math.min(minX, points[i].x);\n    maxX = Math.max(maxX, points[i].x);\n    minY = Math.min(minY, points[i].y);\n    maxY = Math.max(maxY, points[i].y);\n  }\n  return target.set(minX, minY, maxX - minX, maxY - minY);\n}\n\n// src/geom/rectangle/FloorRectangle.ts\nfunction FloorRectangle(rect) {\n  rect.x = Math.floor(rect.x);\n  rect.y = Math.floor(rect.y);\n  rect.width = Math.floor(rect.width);\n  rect.height = Math.floor(rect.height);\n  return rect;\n}\n\n// src/geom/rectangle/FloorRectanglePosition.ts\nfunction FloorRectanglePosition(rect) {\n  rect.x = Math.floor(rect.x);\n  rect.y = Math.floor(rect.y);\n  return rect;\n}\n\n// src/geom/rectangle/GetRectangleArea.ts\nfunction GetRectangleArea(rect) {\n  return rect.width * rect.height;\n}\n\n// src/geom/rectangle/GetRectangleCenter.ts\nfunction GetRectangleCenter(rect, out = new Vec2()) {\n  return out.set(GetRectangleCenterX(rect), GetRectangleCenterY(rect));\n}\n\n// src/geom/line/Line.ts\nvar Line = class {\n  constructor(x1 = 0, y1 = 0, x2 = 0, y2 = 0) {\n    this.set(x1, y1, x2, y2);\n  }\n  set(x1 = 0, y1 = 0, x2 = 0, y2 = 0) {\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n    return this;\n  }\n  get left() {\n    return Math.min(this.x1, this.x2);\n  }\n  set left(value) {\n    if (this.x1 <= this.x2) {\n      this.x1 = value;\n    } else {\n      this.x2 = value;\n    }\n  }\n  get right() {\n    return Math.max(this.x1, this.x2);\n  }\n  set right(value) {\n    if (this.x1 > this.x2) {\n      this.x1 = value;\n    } else {\n      this.x2 = value;\n    }\n  }\n  get top() {\n    return Math.min(this.y1, this.y2);\n  }\n  set top(value) {\n    if (this.y1 <= this.y2) {\n      this.y1 = value;\n    } else {\n      this.y2 = value;\n    }\n  }\n  get bottom() {\n    return Math.max(this.y1, this.y2);\n  }\n  set bottom(value) {\n    if (this.y1 > this.y2) {\n      this.y1 = value;\n    } else {\n      this.y2 = value;\n    }\n  }\n};\n\n// src/geom/rectangle/GetRectangleEdges.ts\nfunction GetRectangleEdges(rectangle) {\n  const {x, y, right, bottom} = rectangle;\n  const line1 = new Line(x, y, right, y);\n  const line2 = new Line(right, y, right, bottom);\n  const line3 = new Line(right, bottom, x, bottom);\n  const line4 = new Line(x, bottom, x, y);\n  return [line1, line2, line3, line4];\n}\n\n// src/geom/rectangle/GetRectangleIntersection.ts\nfunction GetRectangleIntersection(rectA, rectB, out = new Rectangle()) {\n  if (RectangleToRectangle(rectA, rectB)) {\n    out.set(Math.max(rectA.x, rectB.x), Math.max(rectA.y, rectB.y), Math.min(rectA.right, rectB.right) - out.x, Math.min(rectA.bottom, rectB.bottom) - out.y);\n  } else {\n    out.set();\n  }\n  return out;\n}\n\n// src/geom/rectangle/GetRectanglePerimeter.ts\nfunction GetRectanglePerimeter(rect) {\n  return 2 * (rect.width + rect.height);\n}\n\n// src/geom/rectangle/GetRectangleMarchingAnts.ts\nfunction GetRectangleMarchingAnts(rect, step, quantity, out = []) {\n  if (!step && !quantity) {\n    return out;\n  }\n  if (!step) {\n    step = GetRectanglePerimeter(rect) / quantity;\n  } else {\n    quantity = Math.round(GetRectanglePerimeter(rect) / step);\n  }\n  let x = rect.x;\n  let y = rect.y;\n  let face = 0;\n  for (let i = 0; i < quantity; i++) {\n    out.push(new Vec2(x, y));\n    switch (face) {\n      case 0:\n        x += step;\n        if (x >= rect.right) {\n          face = 1;\n          y += x - rect.right;\n          x = rect.right;\n        }\n        break;\n      case 1:\n        y += step;\n        if (y >= rect.bottom) {\n          face = 2;\n          x -= y - rect.bottom;\n          y = rect.bottom;\n        }\n        break;\n      case 2:\n        x -= step;\n        if (x <= rect.x) {\n          face = 3;\n          y -= rect.x - x;\n          x = rect.x;\n        }\n        break;\n      case 3:\n        y -= step;\n        if (y <= rect.y) {\n          face = 0;\n          y = rect.y;\n        }\n        break;\n    }\n  }\n  return out;\n}\n\n// src/geom/rectangle/GetRectangleOverlap.ts\nfunction GetRectangleOverlap(rectA, rectB) {\n  return rectA.x < rectB.right && rectA.right > rectB.x && rectA.y < rectB.bottom && rectA.bottom > rectB.y;\n}\n\n// src/geom/rectangle/GetRectanglePerimeterPoint.ts\nfunction GetRectanglePerimeterPoint(rectangle, angle, out = new Vec2()) {\n  angle = DegToRad(angle);\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  let dx = c > 0 ? rectangle.width / 2 : rectangle.width / -2;\n  let dy = s > 0 ? rectangle.height / 2 : rectangle.height / -2;\n  if (Math.abs(dx * s) < Math.abs(dy * c)) {\n    dy = dx * s / c;\n  } else {\n    dx = dy * c / s;\n  }\n  return out.set(dx + GetRectangleCenterX(rectangle), dy + GetRectangleCenterY(rectangle));\n}\n\n// src/geom/rectangle/GetRectanglePoint.ts\nfunction GetRectanglePoint(rectangle, position, out = new Vec2()) {\n  if (position <= 0 || position >= 1) {\n    return out.set(rectangle.x, rectangle.y);\n  }\n  let p = GetRectanglePerimeter(rectangle) * position;\n  if (position > 0.5) {\n    p -= rectangle.width + rectangle.height;\n    if (p <= rectangle.width) {\n      return out.set(rectangle.right - p, rectangle.bottom);\n    } else {\n      return out.set(rectangle.x, rectangle.bottom - (p - rectangle.width));\n    }\n  } else if (p <= rectangle.width) {\n    return out.set(rectangle.x + p, rectangle.y);\n  } else {\n    return out.set(rectangle.right, rectangle.y + (p - rectangle.width));\n  }\n}\n\n// src/geom/rectangle/GetRectanglePoints.ts\nfunction GetRectanglePoints(rectangle, step, quantity = 0, out = []) {\n  if (!quantity) {\n    quantity = GetRectanglePerimeter(rectangle) / step;\n  }\n  for (let i = 0; i < quantity; i++) {\n    out.push(GetRectanglePoint(rectangle, i / quantity));\n  }\n  return out;\n}\n\n// src/geom/rectangle/GetRectangleRandomPoint.ts\nfunction GetRectangleRandomPoint(rect, out = new Vec2()) {\n  return out.set(rect.x + Math.random() * rect.width, rect.y + Math.random() * rect.height);\n}\n\n// src/geom/rectangle/RectangleContainsRectangle.ts\nfunction RectangleContainsRectangle(rectA, rectB) {\n  if (rectB.width * rectB.height > rectA.width * rectA.height) {\n    return false;\n  }\n  return rectB.x > rectA.x && rectB.x < rectA.right && (rectB.right > rectA.x && rectB.right < rectA.right) && (rectB.y > rectA.y && rectB.y < rectA.bottom) && (rectB.bottom > rectA.y && rectB.bottom < rectA.bottom);\n}\n\n// src/geom/rectangle/GetRectangleRandomPointOutside.ts\nfunction GetRectangleRandomPointOutside(outer, inner, out = new Vec2()) {\n  if (RectangleContainsRectangle(outer, inner)) {\n    switch (Between(0, 3)) {\n      case 0:\n        out.x = outer.x + Math.random() * (inner.right - outer.x);\n        out.y = outer.y + Math.random() * (inner.y - outer.y);\n        break;\n      case 1:\n        out.x = inner.x + Math.random() * (outer.right - inner.x);\n        out.y = inner.bottom + Math.random() * (outer.bottom - inner.bottom);\n        break;\n      case 2:\n        out.x = outer.x + Math.random() * (inner.x - outer.x);\n        out.y = inner.y + Math.random() * (outer.bottom - inner.y);\n        break;\n      case 3:\n        out.x = inner.right + Math.random() * (outer.right - inner.right);\n        out.y = outer.y + Math.random() * (inner.bottom - outer.y);\n        break;\n    }\n  }\n  return out;\n}\n\n// src/geom/rectangle/GetRectangleSize.ts\nfunction GetRectangleSize(rect, out = new Vec2()) {\n  return out.set(rect.width, rect.height);\n}\n\n// src/geom/rectangle/GetRectangleUnion.ts\nfunction GetRectangleUnion(rectA, rectB, out = new Rectangle()) {\n  const x = Math.min(rectA.x, rectB.x);\n  const y = Math.min(rectA.y, rectB.y);\n  const w = Math.max(rectA.right, rectB.right) - x;\n  const h = Math.max(rectA.bottom, rectB.bottom) - y;\n  return out.set(x, y, w, h);\n}\n\n// src/geom/rectangle/InflateRectangle.ts\nfunction InflateRectangle(rect, x, y) {\n  const cx = GetRectangleCenterX(rect);\n  const cy = GetRectangleCenterY(rect);\n  rect.width = rect.width + x * 2;\n  rect.height = rect.height + y * 2;\n  return CenterRectangleOn(rect, cx, cy);\n}\n\n// src/geom/rectangle/MergeRectangle.ts\nfunction MergeRectangle(target, source) {\n  const minX = Math.min(target.x, source.x);\n  const maxX = Math.max(target.right, source.right);\n  const minY = Math.min(target.y, source.y);\n  const maxY = Math.max(target.bottom, source.bottom);\n  return target.set(minX, minY, maxX - minX, maxY - minY);\n}\n\n// src/geom/rectangle/RectangleContainsPoint.ts\nfunction RectangleContainsPoint(rect, point) {\n  return RectangleContains(rect, point.x, point.y);\n}\n\n// src/geom/rectangle/RectangleEquals.ts\nfunction RectangleEquals(rect, toCompare) {\n  return rect.x === toCompare.x && rect.y === toCompare.y && rect.width === toCompare.width && rect.height === toCompare.height;\n}\n\n// src/geom/rectangle/RectangleFromPoints.ts\nfunction RectangleFromPoints(points, out = new Rectangle()) {\n  if (points.length === 0) {\n    return out;\n  }\n  let minX = Number.MAX_VALUE;\n  let minY = Number.MAX_VALUE;\n  let maxX = MATH_CONST.MIN_SAFE_INTEGER;\n  let maxY = MATH_CONST.MIN_SAFE_INTEGER;\n  for (let i = 0; i < points.length; i++) {\n    const px = points[i].x;\n    const py = points[i].y;\n    minX = Math.min(minX, px);\n    minY = Math.min(minY, py);\n    maxX = Math.max(maxX, px);\n    maxY = Math.max(maxY, py);\n  }\n  return out.set(minX, minY, maxX - minX, maxY - minY);\n}\n\n// src/geom/rectangle/RectangleSizeEquals.ts\nfunction RectangleSizeEquals(rect, toCompare) {\n  return rect.width === toCompare.width && rect.height === toCompare.height;\n}\n\n// src/geom/rectangle/ScaleRectangle.ts\nfunction ScaleRectangle(rect, x, y = x) {\n  rect.width *= x;\n  rect.height *= y;\n  return rect;\n}\n\n// src/geom/rectangle/TranslateRectangle.ts\nfunction TranslateRectangle(rect, x, y) {\n  rect.x += x;\n  rect.y += y;\n  return rect;\n}\n\n// src/geom/rectangle/TranslateRectanglePoint.ts\nfunction TranslateRectanglePoint(rect, point) {\n  rect.x += point.x;\n  rect.y += point.y;\n  return rect;\n}\n\n// src/gameobjects/components/transform/UpdateLocalTransform.ts\nfunction UpdateLocalTransform(transform) {\n  const local = transform.local;\n  const x = transform.position.x;\n  const y = transform.position.y;\n  const rotation = transform.rotation;\n  const scaleX = transform.scale.x;\n  const scaleY = transform.scale.y;\n  const skewX = transform.skew.x;\n  const skewY = transform.skew.y;\n  local.set(Math.cos(rotation + skewY) * scaleX, Math.sin(rotation + skewY) * scaleX, -Math.sin(rotation - skewX) * scaleY, Math.cos(rotation - skewX) * scaleY, x, y);\n}\n\n// src/gameobjects/components/transform/UpdateWorldTransform.ts\nfunction UpdateWorldTransform(gameObject) {\n  const parent = gameObject.parent;\n  const transform = gameObject.transform;\n  const lt = transform.local;\n  const wt = transform.world;\n  if (!parent) {\n    Mat2dCopyFrom(lt, wt);\n  } else if (transform.passthru) {\n    Mat2dCopyFrom(parent.transform.world, wt);\n  } else {\n    const {a, b, c, d, tx, ty} = lt;\n    const {a: pa, b: pb, c: pc, d: pd, tx: ptx, ty: pty} = parent.transform.world;\n    wt.set(a * pa + b * pc, a * pb + b * pd, c * pa + d * pc, c * pb + d * pd, tx * pa + ty * pc + ptx, tx * pb + ty * pd + pty);\n  }\n}\n\n// src/gameobjects/components/transform/TransformComponent.ts\nvar TransformComponent = class {\n  constructor(entity, x = 0, y = 0) {\n    this.passthru = false;\n    this._rotation = 0;\n    this.entity = entity;\n    this.local = new Matrix2D();\n    this.world = new Matrix2D();\n    const update = () => this.update();\n    const updateExtent = () => this.updateExtent();\n    this.position = new Vec2Callback(update, x, y);\n    this.scale = new Vec2Callback(update, 1, 1);\n    this.skew = new Vec2Callback(update);\n    this.origin = new Vec2Callback(updateExtent, GetDefaultOriginX(), GetDefaultOriginY());\n    this.extent = new Rectangle();\n  }\n  update() {\n    this.updateLocal();\n    this.updateWorld();\n  }\n  updateLocal() {\n    this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n    UpdateLocalTransform(this);\n  }\n  updateWorld() {\n    const entity = this.entity;\n    entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n    UpdateWorldTransform(entity);\n    if (entity.numChildren) {\n      this.updateChildren();\n    }\n  }\n  updateChildren() {\n    const children = this.entity.children;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      child.transform.updateWorld();\n    }\n  }\n  globalToLocal(x, y, out = new Vec2()) {\n    const {a, b, c, d, tx, ty} = this.world;\n    const id = 1 / (a * d + c * -b);\n    out.x = d * id * x + -c * id * y + (ty * c - tx * d) * id;\n    out.y = a * id * y + -b * id * x + (-ty * a + tx * b) * id;\n    return out;\n  }\n  localToGlobal(x, y, out = new Vec2()) {\n    const {a, b, c, d, tx, ty} = this.world;\n    out.x = a * x + c * y + tx;\n    out.y = b * x + d * y + ty;\n    return out;\n  }\n  setExtent(x, y, width, height) {\n    this.extent.set(x, y, width, height);\n    this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n  }\n  updateExtent(width, height) {\n    const extent = this.extent;\n    const entity = this.entity;\n    if (width !== void 0) {\n      extent.width = width;\n    }\n    if (height !== void 0) {\n      extent.height = height;\n    }\n    extent.x = -this.origin.x * extent.width;\n    extent.y = -this.origin.y * extent.height;\n    entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n  }\n  set rotation(value) {\n    if (value !== this._rotation) {\n      this._rotation = value;\n      this.update();\n    }\n  }\n  get rotation() {\n    return this._rotation;\n  }\n  destroy() {\n    this.position.destroy();\n    this.scale.destroy();\n    this.skew.destroy();\n    this.origin.destroy();\n    this.entity = null;\n    this.local = null;\n    this.world = null;\n    this.position = null;\n    this.scale = null;\n    this.skew = null;\n    this.origin = null;\n    this.extent = null;\n  }\n};\n\n// src/renderer/webgl1/colors/PackColor.ts\nfunction PackColor(rgb, alpha) {\n  const ua = (alpha * 255 | 0) & 255;\n  return (ua << 24 | rgb) >>> 0;\n}\n\n// src/gameobjects/components/Vertex.ts\nvar Vertex = class {\n  constructor(x = 0, y = 0, z = 0) {\n    this.x = 0;\n    this.y = 0;\n    this.z = 0;\n    this.u = 0;\n    this.v = 0;\n    this.texture = 0;\n    this.tint = 16777215;\n    this.alpha = 1;\n    this.color = 4294967295;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n  setPosition(x, y, z = 0) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  }\n  setUV(u, v) {\n    this.u = u;\n    this.v = v;\n    return this;\n  }\n  setColor(color, alpha = 1) {\n    this.tint = color;\n    this.alpha = alpha;\n    this.packColor();\n    return this;\n  }\n  setAlpha(value) {\n    this.alpha = value;\n    return this;\n  }\n  setTint(value) {\n    this.tint = value;\n    return this;\n  }\n  packColor() {\n    this.color = PackColor(this.tint, this.alpha);\n  }\n};\n\n// src/renderer/webgl1/draw/BatchTexturedQuad.ts\nfunction BatchTexturedQuad(sprite, renderPass) {\n  const {F32, U32, offset} = GetVertexBufferEntry(renderPass, 1);\n  const textureIndex = SetTexture(renderPass, sprite.texture);\n  let vertOffset = offset;\n  sprite.vertices.forEach((vertex) => {\n    F32[vertOffset + 0] = vertex.x;\n    F32[vertOffset + 1] = vertex.y;\n    F32[vertOffset + 2] = vertex.u;\n    F32[vertOffset + 3] = vertex.v;\n    F32[vertOffset + 4] = textureIndex;\n    U32[vertOffset + 5] = vertex.color;\n    vertOffset += 6;\n  });\n}\n\n// src/gameobjects/GameObject.ts\nvar GameObject = class {\n  constructor(x = 0, y = 0) {\n    this.type = \"GameObject\";\n    this.name = \"\";\n    this.willUpdate = true;\n    this.willUpdateChildren = true;\n    this.willRender = true;\n    this.willRenderChildren = true;\n    this.willCacheChildren = false;\n    this.dirty = 0;\n    this.dirtyFrame = 0;\n    this.visible = true;\n    this.children = [];\n    this.events = new Map();\n    this.transform = new TransformComponent(this, x, y);\n    this.bounds = new BoundsComponent(this);\n    this.input = new InputComponent(this);\n    this.dirty = DIRTY_CONST.DEFAULT;\n    this.transform.update();\n  }\n  isRenderable() {\n    return this.visible && this.willRender;\n  }\n  isDirty(flag) {\n    return (this.dirty & flag) !== 0;\n  }\n  clearDirty(flag) {\n    if (this.isDirty(flag)) {\n      this.dirty ^= flag;\n    }\n    return this;\n  }\n  setDirty(flag, flag2) {\n    if (!this.isDirty(flag)) {\n      this.dirty ^= flag;\n      this.dirtyFrame = GameInstance.getFrame();\n    }\n    if (!this.isDirty(flag2)) {\n      this.dirty ^= flag2;\n    }\n    return this;\n  }\n  update(delta, time) {\n    if (this.willUpdateChildren) {\n      const children = this.children;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child && child.willUpdate) {\n          child.update(delta, time);\n        }\n      }\n    }\n    this.postUpdate(delta, time);\n  }\n  postUpdate(delta, time) {\n  }\n  renderGL(renderPass) {\n  }\n  renderCanvas(renderer) {\n  }\n  postRenderGL(renderPass) {\n  }\n  postRenderCanvas(renderer) {\n  }\n  get numChildren() {\n    return this.children.length;\n  }\n  destroy(reparentChildren) {\n    if (reparentChildren) {\n      ReparentChildren(this, reparentChildren);\n    } else {\n      DestroyChildren(this);\n    }\n    Emit(this, DestroyEvent, this);\n    this.transform.destroy();\n    this.bounds.destroy();\n    this.input.destroy();\n    this.events.clear();\n    this.world = null;\n    this.parent = null;\n    this.children = null;\n  }\n};\n\n// src/gameobjects/container/Container.ts\nvar Container = class extends GameObject {\n  constructor(x = 0, y = 0) {\n    super(x, y);\n    this._alpha = 1;\n    this.type = \"Container\";\n  }\n  setSize(width, height = width) {\n    this.transform.updateExtent(width, height);\n    return this;\n  }\n  setPosition(x, y) {\n    this.transform.position.set(x, y);\n    return this;\n  }\n  setOrigin(x, y = x) {\n    this.transform.origin.set(x, y);\n    return this;\n  }\n  setSkew(x, y = x) {\n    this.transform.skew.set(x, y);\n    return this;\n  }\n  setScale(x, y = x) {\n    this.transform.scale.set(x, y);\n    return this;\n  }\n  setRotation(value) {\n    this.transform.rotation = value;\n    return this;\n  }\n  set width(value) {\n    this.transform.updateExtent(value);\n  }\n  get width() {\n    return this.transform.extent.width;\n  }\n  set height(value) {\n    this.transform.updateExtent(void 0, value);\n  }\n  get height() {\n    return this.transform.extent.height;\n  }\n  set x(value) {\n    this.transform.position.x = value;\n  }\n  get x() {\n    return this.transform.position.x;\n  }\n  set y(value) {\n    this.transform.position.y = value;\n  }\n  get y() {\n    return this.transform.position.y;\n  }\n  set originX(value) {\n    this.transform.origin.x = value;\n  }\n  get originX() {\n    return this.transform.origin.x;\n  }\n  set originY(value) {\n    this.transform.origin.y = value;\n  }\n  get originY() {\n    return this.transform.origin.y;\n  }\n  set skewX(value) {\n    this.transform.skew.x = value;\n  }\n  get skewX() {\n    return this.transform.skew.x;\n  }\n  set skewY(value) {\n    this.transform.skew.y = value;\n  }\n  get skewY() {\n    return this.transform.skew.y;\n  }\n  set scaleX(value) {\n    this.transform.scale.x = value;\n  }\n  get scaleX() {\n    return this.transform.scale.x;\n  }\n  set scaleY(value) {\n    this.transform.scale.y = value;\n  }\n  get scaleY() {\n    return this.transform.scale.y;\n  }\n  set rotation(value) {\n    this.transform.rotation = value;\n  }\n  get rotation() {\n    return this.transform.rotation;\n  }\n  get alpha() {\n    return this._alpha;\n  }\n  set alpha(value) {\n    if (value !== this._alpha) {\n      this._alpha = value;\n      this.setDirty(DIRTY_CONST.TRANSFORM);\n    }\n  }\n};\n\n// src/renderer/canvas/draw/DrawTexturedQuad.ts\nfunction DrawTexturedQuad(sprite, renderer) {\n  const frame2 = sprite.frame;\n  if (!frame2) {\n    return;\n  }\n  const ctx = renderer.ctx;\n  const transform = sprite.transform;\n  const {a, b, c, d, tx, ty} = transform.world;\n  const {x, y} = transform.extent;\n  ctx.save();\n  ctx.setTransform(a, b, c, d, tx, ty);\n  ctx.globalAlpha = sprite.alpha;\n  ctx.drawImage(frame2.texture.image, frame2.x, frame2.y, frame2.width, frame2.height, x, y, frame2.width, frame2.height);\n  ctx.restore();\n}\n\n// src/renderer/webgl1/colors/PackColors.ts\nfunction PackColors(sprite) {\n  sprite.vertices.forEach((vertex) => {\n    vertex.packColor();\n  });\n  return sprite;\n}\n\n// src/gameobjects/sprite/SetFrame.ts\nfunction SetFrame(texture, key, ...children) {\n  const frame2 = texture.getFrame(key);\n  const {u0, u1, v0, v1, pivot} = frame2;\n  children.forEach((child) => {\n    if (!child || frame2 === child.frame) {\n      return;\n    }\n    child.frame = frame2;\n    if (pivot) {\n      child.setOrigin(pivot.x, pivot.y);\n    }\n    child.frame.setExtent(child);\n    child.hasTexture = true;\n    const vertices = child.vertices;\n    vertices[0].setUV(u0, v0);\n    vertices[1].setUV(u0, v1);\n    vertices[2].setUV(u1, v1);\n    vertices[3].setUV(u1, v0);\n  });\n  return children;\n}\n\n// src/textures/TextureManagerInstance.ts\nvar instance3;\nvar TextureManagerInstance = {\n  get: () => {\n    return instance3;\n  },\n  set: (manager) => {\n    instance3 = manager;\n  }\n};\n\n// src/gameobjects/sprite/SetTexture.ts\nfunction SetTexture2(key, frame2, ...children) {\n  if (!key) {\n    children.forEach((child) => {\n      child.texture = null;\n      child.frame = null;\n      child.hasTexture = false;\n    });\n  } else {\n    let texture;\n    if (key instanceof Texture) {\n      texture = key;\n    } else {\n      texture = TextureManagerInstance.get().get(key);\n    }\n    if (!texture) {\n      console.warn(`Invalid Texture key: ${key}`);\n    } else {\n      children.forEach((child) => {\n        child.texture = texture;\n      });\n      SetFrame(texture, frame2, ...children);\n    }\n  }\n  return children;\n}\n\n// src/gameobjects/sprite/UpdateVertices.ts\nfunction UpdateVertices(sprite) {\n  const vertices = sprite.vertices;\n  const {x0, y0, x1, y1, x2, y2, x3, y3} = GetVertices(sprite.transform);\n  vertices[0].setPosition(x0, y0);\n  vertices[1].setPosition(x1, y1);\n  vertices[2].setPosition(x2, y2);\n  vertices[3].setPosition(x3, y3);\n  return sprite;\n}\n\n// src/gameobjects/sprite/Sprite.ts\nvar Sprite = class extends Container {\n  constructor(x, y, texture, frame2) {\n    super(x, y);\n    this.hasTexture = false;\n    this._tint = 16777215;\n    this.type = \"Sprite\";\n    this.vertices = [new Vertex(), new Vertex(), new Vertex(), new Vertex()];\n    this.setTexture(texture, frame2);\n  }\n  setTexture(key, frame2) {\n    SetTexture2(key, frame2, this);\n    return this;\n  }\n  setFrame(key) {\n    SetFrame(this.texture, key, this);\n    return this;\n  }\n  isRenderable() {\n    return this.visible && this.willRender && this.hasTexture && this.alpha > 0;\n  }\n  preRender() {\n    if (this.isDirty(DIRTY_CONST.COLORS)) {\n      PackColors(this);\n      this.clearDirty(DIRTY_CONST.COLORS);\n    }\n    if (this.isDirty(DIRTY_CONST.TRANSFORM)) {\n      UpdateVertices(this);\n      this.clearDirty(DIRTY_CONST.TRANSFORM);\n    }\n  }\n  renderGL(renderPass) {\n    this.preRender();\n    BatchTexturedQuad(this, renderPass);\n  }\n  renderCanvas(renderer) {\n    this.preRender();\n    DrawTexturedQuad(this, renderer);\n  }\n  get alpha() {\n    return this._alpha;\n  }\n  set alpha(value) {\n    if (value !== this._alpha) {\n      this._alpha = value;\n      this.vertices.forEach((vertex) => {\n        vertex.setAlpha(value);\n      });\n      this.setDirty(DIRTY_CONST.COLORS);\n    }\n  }\n  get tint() {\n    return this._tint;\n  }\n  set tint(value) {\n    if (value !== this._tint) {\n      this._tint = value;\n      this.vertices.forEach((vertex) => {\n        vertex.setTint(value);\n      });\n      this.setDirty(DIRTY_CONST.COLORS);\n    }\n  }\n  destroy(reparentChildren) {\n    super.destroy(reparentChildren);\n    this.texture = null;\n    this.frame = null;\n    this.hasTexture = false;\n    this.vertices = [];\n  }\n};\n\n// src/gameobjects/animatedsprite/AnimatedSprite.ts\nvar AnimatedSprite = class extends Sprite {\n  constructor(x, y, texture, frame2) {\n    super(x, y, texture, frame2);\n    this.type = \"AnimatedSprite\";\n    this.anims = new Map();\n    this.animData = {\n      currentAnim: \"\",\n      currentFrames: [],\n      frameIndex: 0,\n      animSpeed: 0,\n      nextFrameTime: 0,\n      repeatCount: 0,\n      isPlaying: false,\n      yoyo: false,\n      pendingStart: false,\n      playingForward: true,\n      delay: 0,\n      repeatDelay: 0,\n      onStart: null,\n      onRepeat: null,\n      onComplete: null\n    };\n  }\n  stop() {\n    const data = this.animData;\n    data.isPlaying = false;\n    data.currentAnim = \"\";\n    if (data.onComplete) {\n      data.onComplete(this, data.currentAnim);\n    }\n  }\n  nextFrame() {\n    const data = this.animData;\n    data.frameIndex++;\n    if (data.frameIndex === data.currentFrames.length) {\n      if (data.yoyo) {\n        data.frameIndex--;\n        data.playingForward = false;\n      } else if (data.repeatCount === -1 || data.repeatCount > 0) {\n        data.frameIndex = 0;\n        if (data.repeatCount !== -1) {\n          data.repeatCount--;\n        }\n        if (data.onRepeat) {\n          data.onRepeat(this, data.currentAnim);\n        }\n        data.nextFrameTime += data.repeatDelay;\n      } else {\n        data.frameIndex--;\n        return this.stop();\n      }\n    }\n    this.setFrame(data.currentFrames[data.frameIndex]);\n    data.nextFrameTime += data.animSpeed;\n  }\n  prevFrame() {\n    const data = this.animData;\n    data.frameIndex--;\n    if (data.frameIndex === -1) {\n      if (data.repeatCount === -1 || data.repeatCount > 0) {\n        data.frameIndex = 0;\n        data.playingForward = true;\n        if (data.repeatCount !== -1) {\n          data.repeatCount--;\n        }\n        if (data.onRepeat) {\n          data.onRepeat(this, data.currentAnim);\n        }\n        data.nextFrameTime += data.repeatDelay;\n      } else {\n        data.frameIndex = 0;\n        return this.stop();\n      }\n    }\n    this.setFrame(data.currentFrames[data.frameIndex]);\n    data.nextFrameTime += data.animSpeed;\n  }\n  update(delta, now) {\n    super.update(delta, now);\n    const data = this.animData;\n    if (!data.isPlaying) {\n      return;\n    }\n    data.nextFrameTime -= delta * 1e3;\n    data.nextFrameTime = Math.max(data.nextFrameTime, 0);\n    if (data.nextFrameTime === 0) {\n      if (data.pendingStart) {\n        if (data.onStart) {\n          data.onStart(this, data.currentAnim);\n        }\n        data.pendingStart = false;\n        data.nextFrameTime = data.animSpeed;\n      } else if (data.playingForward) {\n        this.nextFrame();\n      } else {\n        this.prevFrame();\n      }\n    }\n  }\n  get isPlaying() {\n    return this.animData.isPlaying;\n  }\n  get isPlayingForward() {\n    return this.animData.isPlaying && this.animData.playingForward;\n  }\n  get currentAnimation() {\n    return this.animData.currentAnim;\n  }\n  destroy(reparentChildren) {\n    super.destroy(reparentChildren);\n    this.anims.clear();\n    this.animData = null;\n  }\n};\n\n// src/renderer/webgl1/draw/BatchSingleQuad.ts\nfunction BatchSingleQuad(renderPass, x, y, width, height, u0, v0, u1, v1, textureIndex = 0, packedColor = 4294967295) {\n  const {F32, U32, offset} = GetVertexBufferEntry(renderPass, 1);\n  F32[offset + 0] = x;\n  F32[offset + 1] = y;\n  F32[offset + 2] = u0;\n  F32[offset + 3] = v1;\n  F32[offset + 4] = textureIndex;\n  U32[offset + 5] = packedColor;\n  F32[offset + 6] = x;\n  F32[offset + 7] = y + height;\n  F32[offset + 8] = u0;\n  F32[offset + 9] = v0;\n  F32[offset + 10] = textureIndex;\n  U32[offset + 11] = packedColor;\n  F32[offset + 12] = x + width;\n  F32[offset + 13] = y + height;\n  F32[offset + 14] = u1;\n  F32[offset + 15] = v0;\n  F32[offset + 16] = textureIndex;\n  U32[offset + 17] = packedColor;\n  F32[offset + 18] = x + width;\n  F32[offset + 19] = y;\n  F32[offset + 20] = u1;\n  F32[offset + 21] = v1;\n  F32[offset + 22] = textureIndex;\n  U32[offset + 23] = packedColor;\n}\n\n// src/renderer/webgl1/draw/DrawTexturedQuad.ts\nfunction DrawTexturedQuad2(renderPass, texture, shader) {\n  if (!shader) {\n    shader = renderPass.quadShader;\n  }\n  const {u0, v0, u1, v1} = texture.firstFrame;\n  BindTexture(texture, 0);\n  SetVertexBuffer(renderPass, renderPass.quadBuffer);\n  SetShader(renderPass, shader, 0);\n  BatchSingleQuad(renderPass, 0, 0, texture.width, texture.height, u0, v0, u1, v1, 0);\n  Flush(renderPass);\n  PopVertexBuffer(renderPass);\n  PopShader(renderPass);\n  UnbindTexture(renderPass);\n}\n\n// src/gameobjects/layer/Layer.ts\nvar Layer = class extends GameObject {\n  constructor() {\n    super();\n    this.type = \"Layer\";\n    this.transform.passthru = true;\n    this.willRender = false;\n  }\n};\n\n// src/gameobjects/renderlayer/RenderLayer.ts\nvar RenderLayer = class extends Layer {\n  constructor() {\n    super();\n    this.type = \"RenderLayer\";\n    this.willRender = true;\n    this.willRenderChildren = true;\n    this.willCacheChildren = true;\n    this.setDirty(DIRTY_CONST.CHILD_CACHE);\n    const width = GetWidth();\n    const height = GetHeight();\n    const resolution = GetResolution();\n    const texture = new Texture(null, width * resolution, height * resolution);\n    const binding = new GLTextureBinding(texture);\n    texture.binding = binding;\n    binding.framebuffer = CreateFramebuffer(binding.texture);\n    this.texture = texture;\n    this.framebuffer = binding.framebuffer;\n  }\n  renderGL(renderPass) {\n    if (this.numChildren > 0) {\n      Flush(renderPass);\n      if (!this.willCacheChildren || this.isDirty(DIRTY_CONST.CHILD_CACHE)) {\n        SetFramebuffer(renderPass, this.framebuffer, true);\n        this.clearDirty(DIRTY_CONST.CHILD_CACHE);\n      } else {\n        SetFramebuffer(renderPass, this.framebuffer, false);\n        this.postRenderGL(renderPass);\n      }\n    }\n  }\n  postRenderGL(renderPass) {\n    Flush(renderPass);\n    PopFramebuffer(renderPass);\n    DrawTexturedQuad2(renderPass, this.texture);\n    this.clearDirty(DIRTY_CONST.TRANSFORM);\n  }\n};\n\n// src/gameobjects/effectlayer/EffectLayer.ts\nvar EffectLayer = class extends RenderLayer {\n  constructor(...shaders) {\n    super();\n    this.shaders = [];\n    this.type = \"EffectLayer\";\n    if (Array.isArray(shaders)) {\n      this.shaders = shaders;\n    }\n  }\n  postRenderGL(renderPass) {\n    const shaders = this.shaders;\n    const texture = this.texture;\n    Flush(renderPass);\n    PopFramebuffer(renderPass);\n    if (shaders.length === 0) {\n      DrawTexturedQuad2(renderPass, texture);\n    } else {\n      let prevTexture = texture;\n      for (let i = 0; i < shaders.length; i++) {\n        const shader = shaders[i];\n        DrawTexturedQuad2(renderPass, prevTexture, shader);\n        prevTexture = shader.texture;\n      }\n      DrawTexturedQuad2(renderPass, prevTexture);\n    }\n    this.clearDirty(DIRTY_CONST.TRANSFORM);\n  }\n};\n\n// src/renderer/webgl1/draw/BatchTexturedQuadBuffer.ts\nfunction BatchTexturedQuadBuffer(batch, renderPass) {\n}\n\n// src/gameobjects/components/transform/GetVerticesFromValues.ts\nfunction GetVerticesFromValues(left, right, top, bottom, x, y, rotation = 0, scaleX = 1, scaleY = 1, skewX = 0, skewY = 0) {\n  const a = Math.cos(rotation + skewY) * scaleX;\n  const b = Math.sin(rotation + skewY) * scaleX;\n  const c = -Math.sin(rotation - skewX) * scaleY;\n  const d = Math.cos(rotation - skewX) * scaleY;\n  const x0 = left * a + top * c + x;\n  const y0 = left * b + top * d + y;\n  const x1 = left * a + bottom * c + x;\n  const y1 = left * b + bottom * d + y;\n  const x2 = right * a + bottom * c + x;\n  const y2 = right * b + bottom * d + y;\n  const x3 = right * a + top * c + x;\n  const y3 = right * b + top * d + y;\n  return {x0, y0, x1, y1, x2, y2, x3, y3};\n}\n\n// src/gameobjects/spritebatch/SpriteBatch.ts\nvar SpriteBatch = class extends Layer {\n  constructor(maxSize, texture) {\n    super();\n    this.glTextureIndex = 0;\n    this.hasTexture = false;\n    this.type = \"SpriteBatch\";\n    this.willRender = true;\n    this.setTexture(texture);\n    this.setMaxSize(maxSize);\n  }\n  resetBuffers() {\n    let ibo = [];\n    for (let i = 0; i < this.maxSize * 4; i += 4) {\n      ibo.push(i + 0, i + 1, i + 2, i + 2, i + 3, i + 0);\n    }\n    this.data = new ArrayBuffer(this.maxSize * 96);\n    this.index = new Uint16Array(ibo);\n    this.vertexViewF32 = new Float32Array(this.data);\n    this.vertexViewU32 = new Uint32Array(this.data);\n    if (gl) {\n      DeleteFramebuffer(this.vertexBuffer);\n      DeleteFramebuffer(this.indexBuffer);\n      this.vertexBuffer = gl.createBuffer();\n      this.indexBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.data, gl.STATIC_DRAW);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.index, gl.STATIC_DRAW);\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    }\n    ibo = [];\n    this.count = 0;\n  }\n  setMaxSize(value) {\n    this.maxSize = Clamp(value, 0, 65535);\n    this.resetBuffers();\n    return this;\n  }\n  setTexture(key) {\n    let texture;\n    if (key instanceof Texture) {\n      texture = key;\n    } else {\n      texture = TextureManagerInstance.get().get(key);\n    }\n    if (!texture) {\n      console.warn(`Invalid Texture key: ${key}`);\n    } else {\n      this.texture = texture;\n      this.hasTexture = true;\n      this.glTextureIndex = -1;\n    }\n    return this;\n  }\n  isRenderable() {\n    return this.visible && this.willRender && this.hasTexture && this.count > 0;\n  }\n  clear() {\n    this.count = 0;\n    return this;\n  }\n  addToBatch(frame2, color, x0, y0, x1, y1, x2, y2, x3, y3) {\n    if (this.count >= this.maxSize) {\n      console.warn(\"SpriteBatch full\");\n      return this;\n    }\n    const {u0, u1, v0, v1} = frame2;\n    const F32 = this.vertexViewF32;\n    const U32 = this.vertexViewU32;\n    const offset = this.count * 24;\n    const textureIndex = this.texture.binding ? this.texture.binding.index : 0;\n    F32[offset + 0] = x0;\n    F32[offset + 1] = y0;\n    F32[offset + 2] = u0;\n    F32[offset + 3] = v0;\n    F32[offset + 4] = textureIndex;\n    U32[offset + 5] = color;\n    F32[offset + 6] = x1;\n    F32[offset + 7] = y1;\n    F32[offset + 8] = u0;\n    F32[offset + 9] = v1;\n    F32[offset + 10] = textureIndex;\n    U32[offset + 11] = color;\n    F32[offset + 12] = x2;\n    F32[offset + 13] = y2;\n    F32[offset + 14] = u1;\n    F32[offset + 15] = v1;\n    F32[offset + 16] = textureIndex;\n    U32[offset + 17] = color;\n    F32[offset + 18] = x3;\n    F32[offset + 19] = y3;\n    F32[offset + 20] = u1;\n    F32[offset + 21] = v0;\n    F32[offset + 22] = textureIndex;\n    U32[offset + 23] = color;\n    this.setDirty(DIRTY_CONST.TRANSFORM);\n    this.count++;\n    return this;\n  }\n  add(config) {\n    const {\n      frame: frame2 = null,\n      x = 0,\n      y = 0,\n      rotation = 0,\n      scaleX = 1,\n      scaleY = 1,\n      skewX = 0,\n      skewY = 0,\n      originX = 0,\n      originY = 0,\n      alpha = 1,\n      tint = 16777215\n    } = config;\n    const textureFrame = this.texture.getFrame(frame2);\n    const {left, right, top, bottom} = textureFrame.getExtent(originX, originY);\n    const {x0, y0, x1, y1, x2, y2, x3, y3} = GetVerticesFromValues(left, right, top, bottom, x, y, rotation, scaleX, scaleY, skewX, skewY);\n    const packedColor = PackColor(tint, alpha);\n    return this.addToBatch(textureFrame, packedColor, x0, y0, x1, y1, x2, y2, x3, y3);\n  }\n  addXY(x, y, frame2) {\n    const textureFrame = this.texture.getFrame(frame2);\n    const {left, right, top, bottom} = textureFrame.getExtent(0, 0);\n    const {x0, y0, x1, y1, x2, y2, x3, y3} = GetVerticesFromValues(left, right, top, bottom, x, y);\n    return this.addToBatch(textureFrame, 4294967295, x0, y0, x1, y1, x2, y2, x3, y3);\n  }\n  updateTextureIndex() {\n    const textureIndex = this.texture.binding.index;\n    if (textureIndex === this.glTextureIndex) {\n      return;\n    }\n    const F32 = this.vertexViewF32;\n    this.glTextureIndex = textureIndex;\n    for (let i = 0; i < this.count; i++) {\n      F32[i * 24 + 4] = textureIndex;\n      F32[i * 24 + 10] = textureIndex;\n      F32[i * 24 + 16] = textureIndex;\n      F32[i * 24 + 22] = textureIndex;\n    }\n  }\n  renderGL(renderPass) {\n    BatchTexturedQuadBuffer(this, renderPass);\n  }\n  destroy() {\n    super.destroy();\n    DeleteFramebuffer(this.vertexBuffer);\n    DeleteFramebuffer(this.indexBuffer);\n    this.data = null;\n    this.vertexViewF32 = null;\n    this.vertexViewU32 = null;\n    this.index = null;\n    this.texture = null;\n    this.hasTexture = false;\n  }\n};\n\n// src/textures/CreateCanvas.ts\nfunction CreateCanvas(width, height) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width;\n  canvas.height = height;\n  return canvas.getContext(\"2d\");\n}\n\n// src/textures/types/CanvasTexture.ts\nfunction CanvasTexture(width = 32, height = 32) {\n  const ctx = CreateCanvas(width, height);\n  return new Texture(ctx.canvas);\n}\n\n// src/gameobjects/text/Text.ts\nvar Text = class extends Sprite {\n  constructor(x, y, text = \"\", font, fillStyle) {\n    super(x, y, CanvasTexture());\n    this.splitRegExp = /(?:\\r\\n|\\r|\\n)/;\n    this.padding = {left: 0, right: 0, top: 0, bottom: 0};\n    this.verticalAlign = \"ascent\";\n    this.lineSpacing = 0;\n    this.font = \"16px monospace\";\n    this.fillStyle = \"#fff\";\n    this.strokeStyle = \"\";\n    this.backgroundStyle = \"\";\n    this.cornerRadius = 0;\n    this.textAlign = \"left\";\n    this.textBaseline = \"alphabetic\";\n    this.lineWidth = 0;\n    this.lineDash = [];\n    this.antialias = false;\n    this.type = \"Text\";\n    const game = GameInstance.get();\n    this.resolution = game.renderer.resolution;\n    this.canvas = this.texture.image;\n    this.context = this.canvas.getContext(\"2d\");\n    if (font) {\n      this.font = font;\n    }\n    if (fillStyle) {\n      this.fillStyle = fillStyle;\n    }\n    this.setText(text);\n  }\n  syncContext(canvas, ctx) {\n    if (this.preRenderCallback) {\n      this.preRenderCallback(canvas, ctx);\n    }\n    ctx.font = this.font;\n    ctx.textBaseline = this.textBaseline;\n    ctx.textAlign = this.textAlign;\n    ctx.fillStyle = this.fillStyle;\n    ctx.strokeStyle = this.strokeStyle;\n    ctx.lineWidth = this.lineWidth;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.setLineDash(this.lineDash);\n    ctx.imageSmoothingEnabled = this.antialias;\n  }\n  updateText() {\n    const canvas = this.canvas;\n    const ctx = this.context;\n    const resolution = this.resolution;\n    const lines = this._text.split(this.splitRegExp);\n    const padding = this.padding;\n    const fillStyle = this.fillStyle;\n    const strokeStyle = this.strokeStyle;\n    const strokeWidth = this.lineWidth;\n    const lineSpacing = this.lineSpacing;\n    const strokeWidthHalf = strokeWidth > 0 ? strokeWidth / 2 : 0;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.syncContext(canvas, ctx);\n    ctx.textAlign = \"start\";\n    let maxWidth = 0;\n    let maxHeight = 0;\n    let y = 0;\n    const lineMetrics = [];\n    const vAlignAscent = this.verticalAlign === \"ascent\";\n    const metrics = ctx.measureText(\"|M\\xC9q\");\n    const averageLineHeight = Math.ceil(Math.abs(metrics.actualBoundingBoxAscent) + Math.abs(metrics.actualBoundingBoxDescent)) + strokeWidth;\n    for (let i = 0; i < lines.length; i++) {\n      const metrics2 = ctx.measureText(lines[i]);\n      const left = metrics2.actualBoundingBoxLeft;\n      const right = metrics2.actualBoundingBoxRight;\n      let ascent = metrics2.actualBoundingBoxAscent;\n      let descent = metrics2.actualBoundingBoxDescent;\n      if (!ascent && !descent || lines[i] === \"\") {\n        ascent = averageLineHeight;\n        descent = 0;\n      }\n      const lineWidth = Math.ceil(Math.abs(left) + Math.abs(right)) + strokeWidth;\n      const lineHeight = Math.ceil(Math.abs(ascent) + Math.abs(descent)) + strokeWidth;\n      if (vAlignAscent) {\n        y += ascent + strokeWidthHalf;\n        if (i > 0) {\n          y += lineSpacing + strokeWidthHalf;\n        }\n        maxHeight = y + descent + strokeWidthHalf;\n      } else {\n        y = maxHeight + (lineHeight - descent - strokeWidthHalf);\n        maxHeight += lineHeight;\n        if (i < lines.length - 1) {\n          maxHeight += lineSpacing;\n        }\n      }\n      maxWidth = Math.max(maxWidth, lineWidth);\n      lineMetrics.push({lineWidth, lineHeight, ascent, descent, left, right, y});\n    }\n    maxWidth += padding.left + padding.right;\n    maxHeight += padding.top + padding.bottom;\n    const displayWidth = this.fixedWidth ? this.fixedWidth : maxWidth;\n    const displayHeight = this.fixedHeight ? this.fixedHeight : maxHeight;\n    const canvasWidth = Math.ceil(displayWidth * resolution);\n    const canvasHeight = Math.ceil(displayHeight * resolution);\n    if (canvas.width !== canvasWidth || canvas.height !== canvasHeight) {\n      canvas.width = canvasWidth;\n      canvas.height = canvasHeight;\n      this.texture.setSize(displayWidth, displayHeight);\n      this.setSize(displayWidth, displayHeight);\n    }\n    ctx.save();\n    ctx.scale(resolution, resolution);\n    this.syncContext(canvas, ctx);\n    const backgroundStyle = this.backgroundStyle;\n    if (backgroundStyle) {\n      ctx.save();\n      ctx.fillStyle = backgroundStyle;\n      ctx.strokeStyle = backgroundStyle;\n      const cornerRadius = this.cornerRadius;\n      const halfRadius = cornerRadius > 0 ? cornerRadius / 2 : 0;\n      if (cornerRadius) {\n        ctx.lineWidth = cornerRadius;\n        ctx.strokeRect(halfRadius, halfRadius, displayWidth - cornerRadius, displayHeight - cornerRadius);\n      }\n      ctx.fillRect(halfRadius, halfRadius, displayWidth - cornerRadius, displayHeight - cornerRadius);\n      ctx.restore();\n    }\n    const textAlign = this.textAlign;\n    const isCenter = textAlign === \"center\";\n    const isRight = textAlign === \"right\" || textAlign === \"end\";\n    const yOffset = (displayHeight - maxHeight) / 2 + padding.top;\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      const metrics2 = lineMetrics[i];\n      let tx = padding.left + metrics2.left + strokeWidthHalf;\n      const ty = yOffset + metrics2.y;\n      if (isCenter) {\n        tx = displayWidth / 2;\n      } else if (isRight) {\n        tx = displayWidth - strokeWidthHalf;\n      }\n      if (strokeStyle) {\n        ctx.strokeText(line, tx, ty);\n      }\n      if (fillStyle) {\n        ctx.fillText(line, tx, ty);\n      }\n    }\n    ctx.restore();\n    if (this.texture.binding) {\n      this.texture.binding.update();\n    }\n    this.setDirty(DIRTY_CONST.TEXTURE);\n    return this;\n  }\n  get text() {\n    return this._text;\n  }\n  set text(value) {\n    this.setText(value);\n  }\n  setText(value = \"\") {\n    if (Array.isArray(value)) {\n      value = value.join(\"\\n\");\n    }\n    if (value !== this._text) {\n      this._text = value.toString();\n      this.updateText();\n    }\n    return this;\n  }\n  destroy(reparentChildren) {\n    this.texture.destroy();\n    this.fillStyle = null;\n    this.strokeStyle = null;\n    this.backgroundStyle = null;\n    this.canvas = null;\n    this.context = null;\n    super.destroy(reparentChildren);\n  }\n};\n\n// src/gameobjects3d/index.ts\nvar gameobjects3d_exports = {};\n__export(gameobjects3d_exports, {\n  Box: () => Box,\n  Components: () => components_exports2,\n  Cone: () => Cone,\n  GameObject3D: () => GameObject3D,\n  Geometry: () => geometry_exports,\n  Light: () => Light,\n  Material: () => Material,\n  Mesh: () => Mesh,\n  Plane: () => Plane,\n  RenderLayer3D: () => RenderLayer3D,\n  Sphere: () => Sphere\n});\n\n// src/gameobjects3d/components/index.ts\nvar components_exports2 = {};\n__export(components_exports2, {\n  Transform3DComponent: () => Transform3DComponent\n});\n\n// src/gameobjects3d/components/transform3d/Transform3DComponent.ts\nvar Transform3DComponent = class {\n  constructor(entity, x = 0, y = 0, z = 0) {\n    this.passthru = false;\n    this.entity = entity;\n    this.local = new Matrix4();\n    this.world = new Matrix4();\n    this.normal = new Matrix4();\n    this.position = new Vec3Callback(() => this.update(), x, y, z);\n    this.scale = new Vec3Callback(() => this.update(), 1, 1, 1);\n    this.origin = new Vec3Callback(() => this.update());\n    this.rotation = new Quaternion();\n    this.rotation.onChange = () => this.update();\n    this.forward = Vec3Forward();\n    this.up = Vec3Up();\n    this.right = Vec3Right();\n    this.update();\n  }\n  rotateX(angle) {\n    QuatRotateX(this.rotation, angle, this.rotation);\n  }\n  rotateY(angle) {\n    QuatRotateY(this.rotation, angle, this.rotation);\n  }\n  rotateZ(angle) {\n    QuatRotateZ(this.rotation, angle, this.rotation);\n  }\n  update() {\n    const model = this.local;\n    const normal = this.normal;\n    Mat4FromRotationTranslationScale(this.rotation, this.position, this.scale, model);\n    Mat4Invert(model, normal);\n    Mat4Transpose(normal, normal);\n  }\n  updateLocal() {\n    this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n  }\n  updateWorld() {\n    const entity = this.entity;\n    entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n    if (entity.numChildren) {\n      this.updateChildren();\n    }\n  }\n  updateChildren() {\n    const children = this.entity.children;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n    }\n  }\n  destroy() {\n    this.position.destroy();\n    this.scale.destroy();\n    this.origin.destroy();\n    this.rotation.destroy();\n    this.entity = null;\n    this.local = null;\n    this.world = null;\n    this.position = null;\n    this.scale = null;\n    this.origin = null;\n    this.rotation = null;\n  }\n};\n\n// src/gameobjects3d/geometry/index.ts\nvar geometry_exports = {};\n__export(geometry_exports, {\n  CreateVertexSet: () => CreateVertexSet,\n  FaceUVNormalTexture: () => FaceUVNormalTexture,\n  Geometry: () => Geometry,\n  GetBufferFromObj: () => GetBufferFromObj,\n  GetBufferFromVertexSet: () => GetBufferFromVertexSet,\n  GetFacesFromVertexSet: () => GetFacesFromVertexSet,\n  ParseObj: () => ParseObj\n});\n\n// src/gameobjects3d/geometry/CreateVertexSet.ts\nfunction CreateVertexSet() {\n  return {\n    vertices: [],\n    normals: [],\n    uvs: [],\n    indices: [],\n    numberOfVertices: 0\n  };\n}\n\n// src/renderer/webgl1/index.ts\nvar webgl1_exports = {};\n__export(webgl1_exports, {\n  CreateFramebuffer: () => CreateFramebuffer,\n  CreateGLTexture: () => CreateGLTexture,\n  DeleteFramebuffer: () => DeleteFramebuffer,\n  DeleteGLBuffer: () => DeleteGLBuffer,\n  DeleteGLTexture: () => DeleteGLTexture,\n  GL: () => GL,\n  PackColor: () => PackColor,\n  PackColors: () => PackColors,\n  SetGLTextureFilterMode: () => SetGLTextureFilterMode,\n  UpdateGLTexture: () => UpdateGLTexture,\n  WebGLRenderer: () => WebGLRenderer\n});\n\n// src/gameobjects3d/geometry/FaceUVNormalTexture.ts\nvar FaceUVNormalTexture = class {\n  constructor(v1, v2, v3, n1, n2, n3, uv1, uv2, uv3, scale = 1) {\n    this.color = 16777215;\n    this.alpha = 1;\n    this.size = 30;\n    this.vertex1 = new Vertex(v1.x * scale, v1.y * scale, v1.z * scale);\n    this.vertex2 = new Vertex(v2.x * scale, v2.y * scale, v2.z * scale);\n    this.vertex3 = new Vertex(v3.x * scale, v3.y * scale, v3.z * scale);\n    this.vertex1.setUV(uv1.x, uv1.y);\n    this.vertex2.setUV(uv2.x, uv2.y);\n    this.vertex3.setUV(uv3.x, uv3.y);\n    this.normal1 = n1;\n    this.normal2 = n2;\n    this.normal3 = n3;\n    this._packedColor = PackColor(this.color, this.alpha);\n  }\n  setColor(color, alpha = 1) {\n    this.color = color;\n    this.alpha = alpha;\n    this._packedColor = PackColor(color, alpha);\n  }\n  addToBuffer(F32, U32, textureID, offset) {\n    const v1 = this.vertex1;\n    const v2 = this.vertex2;\n    const v3 = this.vertex3;\n    const n1 = this.normal1;\n    const n2 = this.normal2;\n    const n3 = this.normal3;\n    const color = this._packedColor;\n    F32[offset++] = v1.x;\n    F32[offset++] = v1.y;\n    F32[offset++] = v1.z;\n    F32[offset++] = n1.x;\n    F32[offset++] = n1.y;\n    F32[offset++] = n1.z;\n    F32[offset++] = v1.u;\n    F32[offset++] = v1.v;\n    F32[offset++] = textureID;\n    U32[offset++] = color;\n    F32[offset++] = v2.x;\n    F32[offset++] = v2.y;\n    F32[offset++] = v2.z;\n    F32[offset++] = n2.x;\n    F32[offset++] = n2.y;\n    F32[offset++] = n2.z;\n    F32[offset++] = v2.u;\n    F32[offset++] = v2.v;\n    F32[offset++] = textureID;\n    U32[offset++] = color;\n    F32[offset++] = v3.x;\n    F32[offset++] = v3.y;\n    F32[offset++] = v3.z;\n    F32[offset++] = n3.x;\n    F32[offset++] = n3.y;\n    F32[offset++] = n3.z;\n    F32[offset++] = v3.u;\n    F32[offset++] = v3.v;\n    F32[offset++] = textureID;\n    U32[offset++] = color;\n    return offset;\n  }\n};\n\n// src/gameobjects3d/geometry/GetBufferFromVertexSet.ts\nfunction GetVec3(data, index) {\n  const x = data[index * 3 + 0];\n  const y = data[index * 3 + 1];\n  const z = data[index * 3 + 2];\n  return [x, y, z];\n}\nfunction GetVec2(data, index) {\n  const x = data[index * 2 + 0];\n  const y = data[index * 2 + 1];\n  return [x, y];\n}\nfunction CreateNonIndexedVertexBuffer(data) {\n  const {\n    vertices,\n    normals,\n    uvs\n  } = data;\n  const total = vertices.length;\n  const count = total / 3;\n  const batchSize = count / 3;\n  const buffer = new VertexBuffer({batchSize, isDynamic: false, vertexElementSize: 8, elementsPerEntry: 3});\n  const F32 = buffer.vertexViewF32;\n  let offset = 0;\n  let uvIndex = 0;\n  for (let i = 0; i < total; i += 3) {\n    F32[offset++] = vertices[i + 0];\n    F32[offset++] = vertices[i + 1];\n    F32[offset++] = vertices[i + 2];\n    F32[offset++] = normals[i + 0];\n    F32[offset++] = normals[i + 1];\n    F32[offset++] = normals[i + 2];\n    F32[offset++] = uvs[uvIndex + 0];\n    F32[offset++] = uvs[uvIndex + 1];\n    uvIndex += 2;\n  }\n  buffer.count = count;\n  return buffer;\n}\nfunction CreateVertexBuffer(data) {\n  const {\n    vertices,\n    normals,\n    uvs,\n    indices\n  } = data;\n  const buffer = new VertexBuffer({batchSize: indices.length / 3, isDynamic: false, vertexElementSize: 8, elementsPerEntry: 3});\n  const F32 = buffer.vertexViewF32;\n  let offset = 0;\n  for (let i = 0; i < indices.length; i += 3) {\n    const i1 = indices[i + 0];\n    const i2 = indices[i + 1];\n    const i3 = indices[i + 2];\n    const v1 = GetVec3(vertices, i1);\n    const v2 = GetVec3(vertices, i2);\n    const v3 = GetVec3(vertices, i3);\n    const n1 = GetVec3(normals, i1);\n    const n2 = GetVec3(normals, i2);\n    const n3 = GetVec3(normals, i3);\n    const uv1 = GetVec2(uvs, i1);\n    const uv2 = GetVec2(uvs, i2);\n    const uv3 = GetVec2(uvs, i3);\n    F32[offset++] = v1[0];\n    F32[offset++] = v1[1];\n    F32[offset++] = v1[2];\n    F32[offset++] = n1[0];\n    F32[offset++] = n1[1];\n    F32[offset++] = n1[2];\n    F32[offset++] = uv1[0];\n    F32[offset++] = uv1[1];\n    F32[offset++] = v2[0];\n    F32[offset++] = v2[1];\n    F32[offset++] = v2[2];\n    F32[offset++] = n2[0];\n    F32[offset++] = n2[1];\n    F32[offset++] = n2[2];\n    F32[offset++] = uv2[0];\n    F32[offset++] = uv2[1];\n    F32[offset++] = v3[0];\n    F32[offset++] = v3[1];\n    F32[offset++] = v3[2];\n    F32[offset++] = n3[0];\n    F32[offset++] = n3[1];\n    F32[offset++] = n3[2];\n    F32[offset++] = uv3[0];\n    F32[offset++] = uv3[1];\n  }\n  buffer.count = indices.length;\n  return buffer;\n}\nfunction GetBufferFromVertexSet(data) {\n  if (data.indices && data.indices.length > 0) {\n    return CreateVertexBuffer(data);\n  } else {\n    return CreateNonIndexedVertexBuffer(data);\n  }\n}\n\n// src/gameobjects3d/geometry/Geometry.ts\nvar Geometry = class {\n  constructor(data) {\n    if (data) {\n      if (data.hasOwnProperty(\"vertices\")) {\n        this.buffer = GetBufferFromVertexSet(data);\n      } else {\n        this.buffer = data;\n      }\n    }\n  }\n  destroy() {\n    this.buffer.destroy();\n  }\n};\n\n// src/gameobjects3d/geometry/ParseObj.ts\nvar ParseObj = class {\n  constructor(fileContents, flipUVs = true, defaultModelName = \"untitled\") {\n    this.currentMaterial = \"\";\n    this.currentGroup = \"\";\n    this.smoothingGroup = 0;\n    this.result = {\n      materialLibraries: [],\n      models: []\n    };\n    this.fileContents = fileContents;\n    this.defaultModelName = defaultModelName;\n    this.flipUVs = flipUVs;\n  }\n  parseAsync() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(this.parse());\n      } catch (theError) {\n        reject(theError);\n      }\n    });\n  }\n  parse() {\n    const stripComments = (line) => {\n      const commentIndex = line.indexOf(\"#\");\n      if (commentIndex > -1) {\n        return line.substring(0, commentIndex);\n      }\n      return line;\n    };\n    const lines = this.fileContents.split(\"\\n\");\n    for (const line of lines) {\n      const strippedline = stripComments(line);\n      const lineItems = strippedline.replace(/\\s\\s+/g, \" \").trim().split(\" \");\n      switch (lineItems[0].toLowerCase()) {\n        case \"o\":\n          this.parseObject(lineItems);\n          break;\n        case \"g\":\n          this.parseGroup(lineItems);\n          break;\n        case \"v\":\n          this.parseVertexCoords(lineItems);\n          break;\n        case \"vt\":\n          this.parseTextureCoords(lineItems);\n          break;\n        case \"vn\":\n          this.parseVertexNormal(lineItems);\n          break;\n        case \"s\":\n          this.parseSmoothShadingStatement(lineItems);\n          break;\n        case \"f\":\n          this.parsePolygon(lineItems);\n          break;\n        case \"mtllib\":\n          this.parseMtlLib(lineItems);\n          break;\n        case \"usemtl\":\n          this.parseUseMtl(lineItems);\n          break;\n      }\n    }\n    this.fileContents = \"\";\n    return this.result;\n  }\n  currentModel() {\n    if (this.result.models.length === 0) {\n      this.result.models.push({\n        faces: [],\n        name: this.defaultModelName,\n        textureCoords: [],\n        vertexNormals: [],\n        vertices: []\n      });\n      this.currentGroup = \"\";\n      this.smoothingGroup = 0;\n    }\n    return this.result.models[this.result.models.length - 1];\n  }\n  parseObject(lineItems) {\n    const modelName = lineItems.length >= 2 ? lineItems[1] : this.defaultModelName;\n    this.result.models.push({\n      faces: [],\n      name: modelName,\n      textureCoords: [],\n      vertexNormals: [],\n      vertices: []\n    });\n    this.currentGroup = \"\";\n    this.smoothingGroup = 0;\n  }\n  parseGroup(lineItems) {\n    if (lineItems.length !== 2) {\n      throw \"Group statements must have exactly 1 argument (eg. g group_1)\";\n    }\n    this.currentGroup = lineItems[1];\n  }\n  parseVertexCoords(lineItems) {\n    const len = lineItems.length;\n    const x = len >= 2 ? parseFloat(lineItems[1]) : 0;\n    const y = len >= 3 ? parseFloat(lineItems[2]) : 0;\n    const z = len >= 4 ? parseFloat(lineItems[3]) : 0;\n    this.currentModel().vertices.push({x, y, z});\n  }\n  parseTextureCoords(lineItems) {\n    const len = lineItems.length;\n    let u = len >= 2 ? parseFloat(lineItems[1]) : 0;\n    let v = len >= 3 ? parseFloat(lineItems[2]) : 0;\n    let w = len >= 4 ? parseFloat(lineItems[3]) : 0;\n    if (isNaN(u)) {\n      u = 0;\n    }\n    if (isNaN(v)) {\n      v = 0;\n    }\n    if (isNaN(w)) {\n      w = 0;\n    }\n    if (this.flipUVs) {\n      v = 1 - v;\n    }\n    this.currentModel().textureCoords.push({u, v, w});\n  }\n  parseVertexNormal(lineItems) {\n    const len = lineItems.length;\n    const x = len >= 2 ? parseFloat(lineItems[1]) : 0;\n    const y = len >= 3 ? parseFloat(lineItems[2]) : 0;\n    const z = len >= 4 ? parseFloat(lineItems[3]) : 0;\n    this.currentModel().vertexNormals.push({x, y, z});\n  }\n  parsePolygon(lineItems) {\n    const totalVertices = lineItems.length - 1;\n    if (totalVertices < 3) {\n      throw \"Face < 3 vertices\";\n    }\n    const face = {\n      group: this.currentGroup,\n      material: this.currentMaterial,\n      smoothingGroup: this.smoothingGroup,\n      vertices: []\n    };\n    for (let i = 0; i < totalVertices; i++) {\n      const vertexString = lineItems[i + 1];\n      const vertexValues = vertexString.split(\"/\");\n      const vvLen = vertexValues.length;\n      if (vvLen < 1 || vvLen > 3) {\n        throw \"Too many / values for single vertex\";\n      }\n      let vertexIndex = 0;\n      let textureCoordsIndex = 0;\n      let vertexNormalIndex = 0;\n      vertexIndex = parseInt(vertexValues[0], 10);\n      if (vvLen > 1 && vertexValues[1] !== \"\") {\n        textureCoordsIndex = parseInt(vertexValues[1], 10);\n      }\n      if (vvLen > 2) {\n        vertexNormalIndex = parseInt(vertexValues[2], 10);\n      }\n      if (vertexIndex === 0) {\n        throw \"Faces uses invalid vertex index of 0\";\n      }\n      if (vertexIndex < 0) {\n        vertexIndex = this.currentModel().vertices.length + 1 + vertexIndex;\n      }\n      textureCoordsIndex -= 1;\n      vertexIndex -= 1;\n      vertexNormalIndex -= 1;\n      face.vertices.push({\n        textureCoordsIndex,\n        vertexIndex,\n        vertexNormalIndex\n      });\n    }\n    this.currentModel().faces.push(face);\n  }\n  parseMtlLib(lineItems) {\n    if (lineItems.length >= 2) {\n      this.result.materialLibraries.push(lineItems[1]);\n    }\n  }\n  parseUseMtl(lineItems) {\n    if (lineItems.length >= 2) {\n      this.currentMaterial = lineItems[1];\n    }\n  }\n  parseSmoothShadingStatement(lineItems) {\n    if (lineItems.length !== 2) {\n      throw \"Smoothing group statements must have exactly 1 argument (eg. s <number|off>)\";\n    }\n    const groupNumber = lineItems[1].toLowerCase() === \"off\" ? 0 : parseInt(lineItems[1], 10);\n    this.smoothingGroup = groupNumber;\n  }\n};\n\n// src/gameobjects3d/geometry/GetBufferFromObj.ts\nfunction GetBufferFromObj(data, flipUVs = true) {\n  const parser = new ParseObj(data, flipUVs);\n  const result = parser.parse();\n  const output = [];\n  result.models.forEach((model) => {\n    const {\n      faces,\n      textureCoords,\n      vertexNormals,\n      vertices\n    } = model;\n    let totalFaces = 0;\n    for (let i = 0; i < faces.length; i++) {\n      totalFaces += faces[i].vertices.length === 4 ? 6 : 3;\n    }\n    const buffer = new VertexBuffer({batchSize: totalFaces, isDynamic: false, vertexElementSize: 8, elementsPerEntry: 3});\n    const F32 = buffer.vertexViewF32;\n    let offset = 0;\n    for (let i = 0; i < faces.length; i++) {\n      const face = faces[i];\n      const i1 = face.vertices[0];\n      const i2 = face.vertices[1];\n      const i3 = face.vertices[2];\n      const v1 = vertices[i1.vertexIndex];\n      const v2 = vertices[i2.vertexIndex];\n      const v3 = vertices[i3.vertexIndex];\n      const n1 = vertexNormals[i1.vertexNormalIndex];\n      const n2 = vertexNormals[i2.vertexNormalIndex];\n      const n3 = vertexNormals[i3.vertexNormalIndex];\n      const uv1 = textureCoords[i1.textureCoordsIndex];\n      const uv2 = textureCoords[i2.textureCoordsIndex];\n      const uv3 = textureCoords[i3.textureCoordsIndex];\n      F32[offset++] = v1.x;\n      F32[offset++] = v1.y;\n      F32[offset++] = v1.z;\n      F32[offset++] = n1.x;\n      F32[offset++] = n1.y;\n      F32[offset++] = n1.z;\n      F32[offset++] = uv1.u;\n      F32[offset++] = uv1.v;\n      F32[offset++] = v2.x;\n      F32[offset++] = v2.y;\n      F32[offset++] = v2.z;\n      F32[offset++] = n2.x;\n      F32[offset++] = n2.y;\n      F32[offset++] = n2.z;\n      F32[offset++] = uv2.u;\n      F32[offset++] = uv2.v;\n      F32[offset++] = v3.x;\n      F32[offset++] = v3.y;\n      F32[offset++] = v3.z;\n      F32[offset++] = n3.x;\n      F32[offset++] = n3.y;\n      F32[offset++] = n3.z;\n      F32[offset++] = uv3.u;\n      F32[offset++] = uv3.v;\n      buffer.count += 3;\n      if (face.vertices.length === 4) {\n        const i4 = face.vertices[3];\n        const v4 = vertices[i4.vertexIndex];\n        const n4 = vertexNormals[i4.vertexNormalIndex];\n        const uv4 = textureCoords[i4.textureCoordsIndex];\n        F32[offset++] = v1.x;\n        F32[offset++] = v1.y;\n        F32[offset++] = v1.z;\n        F32[offset++] = n1.x;\n        F32[offset++] = n1.y;\n        F32[offset++] = n1.z;\n        F32[offset++] = uv1.u;\n        F32[offset++] = uv1.v;\n        F32[offset++] = v3.x;\n        F32[offset++] = v3.y;\n        F32[offset++] = v3.z;\n        F32[offset++] = n3.x;\n        F32[offset++] = n3.y;\n        F32[offset++] = n3.z;\n        F32[offset++] = uv3.u;\n        F32[offset++] = uv3.v;\n        F32[offset++] = v4.x;\n        F32[offset++] = v4.y;\n        F32[offset++] = v4.z;\n        F32[offset++] = n4.x;\n        F32[offset++] = n4.y;\n        F32[offset++] = n4.z;\n        F32[offset++] = uv4.u;\n        F32[offset++] = uv4.v;\n        buffer.count += 3;\n      }\n    }\n    output.push({name: model.name, buffer});\n  });\n  return output;\n}\n\n// src/gameobjects3d/geometry/GetFacesFromVertexSet.ts\nfunction GetVec32(data, index) {\n  const x = data[index * 3 + 0];\n  const y = data[index * 3 + 1];\n  const z = data[index * 3 + 2];\n  return [x, y, z];\n}\nfunction GetVec22(data, index) {\n  const x = data[index * 2 + 0];\n  const y = data[index * 2 + 1];\n  return [x, y];\n}\nfunction GetFacesFromVertexSet(data) {\n  const {\n    vertices,\n    normals,\n    uvs,\n    indices\n  } = data;\n  const faces = [];\n  for (let i = 0; i < indices.length; i += 3) {\n    const i1 = indices[i + 0];\n    const i2 = indices[i + 1];\n    const i3 = indices[i + 2];\n    const v1 = GetVec32(vertices, i1);\n    const v2 = GetVec32(vertices, i2);\n    const v3 = GetVec32(vertices, i3);\n    const n1 = GetVec32(normals, i1);\n    const n2 = GetVec32(normals, i2);\n    const n3 = GetVec32(normals, i3);\n    const uv1 = GetVec22(uvs, i1);\n    const uv2 = GetVec22(uvs, i2);\n    const uv3 = GetVec22(uvs, i3);\n    const f = new FaceUVNormalTexture({x: v1[0], y: v1[1], z: v1[2]}, {x: v2[0], y: v2[1], z: v2[2]}, {x: v3[0], y: v3[1], z: v3[2]}, {x: n1[0], y: n1[1], z: n1[2]}, {x: n2[0], y: n2[1], z: n2[2]}, {x: n3[0], y: n3[1], z: n3[2]}, {x: uv1[0], y: uv1[1]}, {x: uv2[0], y: uv2[1]}, {x: uv3[0], y: uv3[1]}, 1);\n    faces.push(f);\n  }\n  return faces;\n}\n\n// src/geom3d/PlaneGeometry.ts\nfunction PlaneGeometry(data, x = 0, y = 0, z = 0, u = 0, v = 1, w = 2, udir = 1, vdir = -1, width = 1, height = 1, depth = 1, gridX = 1, gridY = 1) {\n  if (!data) {\n    data = CreateVertexSet();\n  }\n  const {\n    vertices,\n    normals,\n    uvs,\n    indices,\n    numberOfVertices\n  } = data;\n  const segmentWidth = width / gridX;\n  const segmentHeight = height / gridY;\n  const widthHalf = width / 2;\n  const heightHalf = height / 2;\n  const depthHalf = depth / 2;\n  const gridX1 = gridX + 1;\n  const gridY1 = gridY + 1;\n  let vertexCounter = 0;\n  const vector = [];\n  for (let iy = 0; iy < gridY1; iy++) {\n    const by = iy * segmentHeight - heightHalf;\n    for (let ix = 0; ix < gridX1; ix++) {\n      const bx = ix * segmentWidth - widthHalf;\n      vector[u] = bx * udir;\n      vector[v] = by * vdir;\n      vector[w] = depthHalf;\n      vertices.push(x + vector[0], y + vector[1], z + vector[2]);\n      vector[u] = 0;\n      vector[v] = 0;\n      vector[w] = depth > 0 ? 1 : -1;\n      normals.push(vector[0], vector[1], vector[2]);\n      uvs.push(ix / gridX);\n      uvs.push(1 - iy / gridY);\n      vertexCounter += 1;\n    }\n  }\n  for (let iy = 0; iy < gridY; iy++) {\n    for (let ix = 0; ix < gridX; ix++) {\n      const a = numberOfVertices + ix + gridX1 * iy;\n      const b = numberOfVertices + ix + gridX1 * (iy + 1);\n      const c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n      const d = numberOfVertices + (ix + 1) + gridX1 * iy;\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  }\n  data.numberOfVertices += vertexCounter;\n  return data;\n}\n\n// src/geom3d/BoxGeometry.ts\nfunction BoxGeometry(x = 0, y = 0, z = 0, width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1) {\n  const data = CreateVertexSet();\n  PlaneGeometry(data, x, y, z, 2, 1, 0, -1, -1, depth, height, width, depthSegments, heightSegments);\n  PlaneGeometry(data, x, y, z, 2, 1, 0, 1, -1, depth, height, -width, depthSegments, heightSegments);\n  PlaneGeometry(data, x, y, z, 0, 2, 1, 1, 1, width, depth, height, widthSegments, depthSegments);\n  PlaneGeometry(data, x, y, z, 0, 2, 1, 1, -1, width, depth, -height, widthSegments, depthSegments);\n  PlaneGeometry(data, x, y, z, 0, 1, 2, 1, -1, width, height, depth, widthSegments, heightSegments);\n  PlaneGeometry(data, x, y, z, 0, 1, 2, -1, -1, width, height, -depth, widthSegments, heightSegments);\n  return data;\n}\n\n// src/gameobjects3d/GameObject3D.ts\nvar GameObject3D = class {\n  constructor(x = 0, y = 0, z = 0) {\n    this.type = \"GameObject3D\";\n    this.name = \"\";\n    this.willUpdate = true;\n    this.willUpdateChildren = true;\n    this.willRender = true;\n    this.willRenderChildren = true;\n    this.willCacheChildren = false;\n    this.dirty = 0;\n    this.dirtyFrame = 0;\n    this.visible = true;\n    this.children = [];\n    this.events = new Map();\n    this.transform = new Transform3DComponent(this, x, y, z);\n    this.dirty = DIRTY_CONST.DEFAULT;\n  }\n  isRenderable() {\n    return this.visible && this.willRender;\n  }\n  isDirty(flag) {\n    return (this.dirty & flag) !== 0;\n  }\n  clearDirty(flag) {\n    if (this.isDirty(flag)) {\n      this.dirty ^= flag;\n    }\n    return this;\n  }\n  setDirty(flag, flag2) {\n    if (!this.isDirty(flag)) {\n      this.dirty ^= flag;\n      this.dirtyFrame = GameInstance.getFrame();\n    }\n    if (!this.isDirty(flag2)) {\n      this.dirty ^= flag2;\n    }\n    return this;\n  }\n  update(delta, time) {\n    if (this.willUpdateChildren) {\n      const children = this.children;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child && child.willUpdate) {\n          child.update(delta, time);\n        }\n      }\n    }\n    this.postUpdate(delta, time);\n  }\n  postUpdate(delta, time) {\n  }\n  renderGL(renderPass) {\n  }\n  postRenderGL(renderPass) {\n  }\n  get numChildren() {\n    return this.children.length;\n  }\n  destroy(reparentChildren) {\n    if (reparentChildren) {\n    } else {\n    }\n    Emit(this, DestroyEvent, this);\n    this.transform.destroy();\n    this.events.clear();\n    this.world = null;\n    this.parent = null;\n    this.children = null;\n  }\n};\n\n// src/gameobjects3d/material/Material.ts\nvar Material = class {\n  constructor(config = {}) {\n    this.isDirty = false;\n    const {\n      ambient = [1, 1, 1],\n      diffuse = [1, 1, 1],\n      specular = [1, 1, 1],\n      shine = 0.25\n    } = config;\n    const onChange = () => this.update();\n    this.ambient = new RGBCallback(onChange).fromArray(ambient);\n    this.diffuse = new RGBCallback(onChange).fromArray(diffuse);\n    this.specular = new RGBCallback(onChange).fromArray(specular);\n    this._shine = shine;\n  }\n  get shine() {\n    return this._shine;\n  }\n  set shine(value) {\n    this._shine = Clamp(value, 0, 1);\n    this.isDirty = true;\n  }\n  update() {\n    this.isDirty = true;\n  }\n  setUniforms(shader) {\n    shader.setUniform(\"uMaterialAmbient\", this.ambient.toArray());\n    shader.setUniform(\"uMaterialDiffuse\", this.diffuse.toArray());\n    shader.setUniform(\"uMaterialSpecular\", this.specular.toArray());\n    shader.setUniform(\"uMaterialShine\", this._shine * 256);\n  }\n  destroy() {\n    this.ambient.destroy();\n    this.diffuse.destroy();\n    this.specular.destroy();\n  }\n};\n\n// src/gameobjects3d/mesh/SetFrame.ts\nfunction SetFrame2(texture, key, ...children) {\n  const frame2 = texture.getFrame(key);\n  children.forEach((child) => {\n    if (!child || frame2 === child.frame) {\n      return;\n    }\n    child.frame = frame2;\n    child.hasTexture = true;\n  });\n  return children;\n}\n\n// src/gameobjects3d/mesh/SetTexture.ts\nfunction SetTexture3(key, frame2, ...children) {\n  if (!key) {\n    children.forEach((child) => {\n      child.texture = null;\n      child.frame = null;\n      child.hasTexture = false;\n    });\n  } else {\n    let texture;\n    if (key instanceof Texture) {\n      texture = key;\n    } else {\n      texture = TextureManagerInstance.get().get(key);\n    }\n    if (!texture) {\n      console.warn(`Invalid Texture key: ${key}`);\n    } else {\n      children.forEach((child) => {\n        child.texture = texture;\n      });\n      SetFrame2(texture, frame2, ...children);\n    }\n  }\n  return children;\n}\n\n// src/gameobjects3d/mesh/Mesh.ts\nvar Mesh = class extends GameObject3D {\n  constructor(x = 0, y = 0, z = 0, geometry, material = new Material()) {\n    super(x, y, z);\n    this.hasTexture = false;\n    this.cullFaces = true;\n    this.geometry = geometry;\n    this.material = material;\n    this.setTexture(\"__WHITE\");\n  }\n  setTexture(key, frame2) {\n    SetTexture3(key, frame2, this);\n    return this;\n  }\n  setFrame(key) {\n    SetFrame2(this.texture, key, this);\n    return this;\n  }\n  setMaterial(material) {\n    this.material = material;\n    return this;\n  }\n  renderGL(renderPass) {\n    const shader = renderPass.currentShader.shader;\n    shader.setUniform(\"uModelMatrix\", this.transform.local.data);\n    shader.setUniform(\"uNormalMatrix\", this.transform.normal.data);\n    if (this.hasTexture) {\n      const textureIndex = SetTexture(renderPass, this.texture);\n      shader.setUniform(\"uTexture\", textureIndex);\n    }\n    this.material.setUniforms(shader);\n    FlushBuffer(renderPass, this.geometry.buffer);\n  }\n  destroy(reparentChildren) {\n    super.destroy(reparentChildren);\n    this.geometry = null;\n    this.material = null;\n    this.texture = null;\n    this.frame = null;\n    this.hasTexture = false;\n  }\n};\n\n// src/gameobjects3d/box/Box.ts\nvar Box = class extends Mesh {\n  constructor(x = 0, y = 0, z = 0, width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1) {\n    const data = BoxGeometry(0, 0, 0, width, height, depth, widthSegments, heightSegments, depthSegments);\n    const geometry = new Geometry(data);\n    super(x, y, z, geometry);\n  }\n};\n\n// src/geom3d/CylinderGeometry.ts\nfunction GenerateCap(top, data, index, halfHeight, radiusTop, radiusBottom, radialSegments, thetaStart, thetaLength) {\n  const {\n    vertices,\n    normals,\n    uvs,\n    indices\n  } = data;\n  const uv = new Vec2();\n  const vertex = new Vec3();\n  const radius = top === true ? radiusTop : radiusBottom;\n  const sign = top === true ? 1 : -1;\n  const centerIndexStart = index;\n  for (let x = 1; x <= radialSegments; x++) {\n    vertices.push(0, halfHeight * sign, 0);\n    normals.push(0, sign, 0);\n    uvs.push(0.5, 0.5);\n    index++;\n  }\n  const centerIndexEnd = index;\n  for (let x = 0; x <= radialSegments; x++) {\n    const u = x / radialSegments;\n    const theta = u * thetaLength + thetaStart;\n    const cosTheta = Math.cos(theta);\n    const sinTheta = Math.sin(theta);\n    vertex.x = radius * sinTheta;\n    vertex.y = halfHeight * sign;\n    vertex.z = radius * cosTheta;\n    vertices.push(vertex.x, vertex.y, vertex.z);\n    normals.push(0, sign, 0);\n    uv.x = cosTheta * 0.5 + 0.5;\n    uv.y = sinTheta * 0.5 * sign + 0.5;\n    uvs.push(uv.x, uv.y);\n    index++;\n  }\n  for (let x = 0; x < radialSegments; x++) {\n    const c = centerIndexStart + x;\n    const i = centerIndexEnd + x;\n    if (top) {\n      indices.push(i, i + 1, c);\n    } else {\n      indices.push(i + 1, i, c);\n    }\n  }\n  return index;\n}\nfunction CylinderGeometry(radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n  const data = CreateVertexSet();\n  const {\n    vertices,\n    normals,\n    uvs,\n    indices\n  } = data;\n  let index = 0;\n  const indexArray = [];\n  const halfHeight = height / 2;\n  const normal = new Vec3();\n  const vertex = new Vec3();\n  const slope = (radiusBottom - radiusTop) / height;\n  for (let y = 0; y <= heightSegments; y++) {\n    const indexRow = [];\n    const v = y / heightSegments;\n    const radius = v * (radiusBottom - radiusTop) + radiusTop;\n    for (let x = 0; x <= radialSegments; x++) {\n      const u = x / radialSegments;\n      const theta = u * thetaLength + thetaStart;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      vertex.x = radius * sinTheta;\n      vertex.y = -v * height + halfHeight;\n      vertex.z = radius * cosTheta;\n      vertices.push(vertex.x, vertex.y, vertex.z);\n      normal.set(sinTheta, slope, cosTheta);\n      Vec3Normalize(normal, normal);\n      normals.push(normal.x, normal.y, normal.z);\n      uvs.push(u, 1 - v);\n      indexRow.push(index++);\n    }\n    indexArray.push(indexRow);\n  }\n  for (let x = 0; x < radialSegments; x++) {\n    for (let y = 0; y < heightSegments; y++) {\n      const a = indexArray[y][x];\n      const b = indexArray[y + 1][x];\n      const c = indexArray[y + 1][x + 1];\n      const d = indexArray[y][x + 1];\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  }\n  if (!openEnded) {\n    if (radiusTop > 0) {\n      index = GenerateCap(true, data, index, halfHeight, radiusTop, radiusBottom, radialSegments, thetaStart, thetaLength);\n    }\n    if (radiusBottom > 0) {\n      GenerateCap(false, data, index, halfHeight, radiusTop, radiusBottom, radialSegments, thetaStart, thetaLength);\n    }\n  }\n  data.numberOfVertices = vertices.length;\n  return data;\n}\n\n// src/geom3d/ConeGeometry.ts\nfunction ConeGeometry(radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n  return CylinderGeometry(0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n}\n\n// src/gameobjects3d/cone/Cone.ts\nvar Cone = class extends Mesh {\n  constructor(x = 0, y = 0, z = 0, radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n    const data = ConeGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    const geometry = new Geometry(data);\n    super(x, y, z, geometry);\n  }\n};\n\n// src/gameobjects3d/light/Light.ts\nvar Light = class {\n  constructor(config = {}) {\n    this.isDirty = false;\n    const {\n      x = 0,\n      y = 0,\n      z = 0.1,\n      ambient = [1, 1, 1],\n      diffuse = [1, 1, 1],\n      specular = [1, 1, 1]\n    } = config;\n    const onChange = () => this.update();\n    this.position = new Vec3Callback(onChange, x, y, z);\n    this.ambient = new RGBCallback(onChange).fromArray(ambient);\n    this.diffuse = new RGBCallback(onChange).fromArray(diffuse);\n    this.specular = new RGBCallback(onChange).fromArray(specular);\n  }\n  setUniforms(shader) {\n    shader.setUniform(\"uLightPosition\", this.position.toArray());\n    shader.setUniform(\"uLightAmbient\", this.ambient.toArray());\n    shader.setUniform(\"uLightDiffuse\", this.diffuse.toArray());\n    shader.setUniform(\"uLightSpecular\", this.specular.toArray());\n  }\n  update() {\n    this.isDirty = true;\n  }\n  destroy() {\n    this.position.destroy();\n    this.ambient.destroy();\n    this.diffuse.destroy();\n    this.specular.destroy();\n  }\n};\n\n// src/gameobjects3d/plane/Plane.ts\nvar Plane = class extends Mesh {\n  constructor(x = 0, y = 0, z = 0, width = 1, height = 1, widthSegments = 1, heightSegments = 1) {\n    const data = PlaneGeometry(null, 0, 0, 0, 0, 1, 2, 1, -1, width, height, 1, widthSegments, heightSegments);\n    const geometry = new Geometry(data);\n    super(x, y, z, geometry);\n  }\n};\n\n// src/gameobjects3d/renderlayer3d/RenderLayer3D.ts\nvar RenderLayer3D = class extends Layer {\n  constructor() {\n    super();\n    this.type = \"RenderLayer\";\n    this.willRender = true;\n    this.willRenderChildren = true;\n    this.willCacheChildren = true;\n    this.setDirty(DIRTY_CONST.CHILD_CACHE);\n    const width = GetWidth();\n    const height = GetHeight();\n    const resolution = GetResolution();\n    const texture = new Texture(null, width * resolution, height * resolution);\n    const binding = new GLTextureBinding(texture);\n    texture.binding = binding;\n    binding.framebuffer = CreateFramebuffer(binding.texture);\n    binding.depthbuffer = CreateDepthBuffer(binding.framebuffer, texture.width, texture.height);\n    this.texture = texture;\n    this.framebuffer = binding.framebuffer;\n  }\n  renderGL(renderPass) {\n    if (this.numChildren > 0) {\n      Flush(renderPass);\n      if (!this.willCacheChildren || this.isDirty(DIRTY_CONST.CHILD_CACHE)) {\n        SetFramebuffer(renderPass, this.framebuffer, true);\n        this.clearDirty(DIRTY_CONST.CHILD_CACHE);\n      } else {\n        SetFramebuffer(renderPass, this.framebuffer, false);\n        this.postRenderGL(renderPass);\n      }\n    }\n  }\n  postRenderGL(renderPass) {\n    Flush(renderPass);\n    PopFramebuffer(renderPass);\n    DrawTexturedQuad2(renderPass, this.texture);\n    this.clearDirty(DIRTY_CONST.TRANSFORM);\n  }\n};\n\n// src/geom3d/SphereGeometry.ts\nfunction SphereGeometry(radius = 1, widthSegments = 3, heightSegments = 3, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI) {\n  widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\n  heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\n  const thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n  const data = CreateVertexSet();\n  const {\n    vertices,\n    normals,\n    uvs,\n    indices\n  } = data;\n  let index = 0;\n  const grid = [];\n  const vertex = new Vec3();\n  const normal = new Vec3();\n  for (let iy = 0; iy <= heightSegments; iy++) {\n    const verticesRow = [];\n    const v = iy / heightSegments;\n    let uOffset = 0;\n    if (iy === 0 && thetaStart === 0) {\n      uOffset = 0.5 / widthSegments;\n    } else if (iy === heightSegments && thetaEnd == Math.PI) {\n      uOffset = -0.5 / widthSegments;\n    }\n    for (let ix = 0; ix <= widthSegments; ix++) {\n      const u = ix / widthSegments;\n      vertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n      vertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      vertices.push(vertex.x, vertex.y, vertex.z);\n      Vec3Normalize(vertex, normal);\n      normals.push(normal.x, normal.y, normal.z);\n      uvs.push(u + uOffset, 1 - v);\n      verticesRow.push(index++);\n    }\n    grid.push(verticesRow);\n  }\n  for (let iy = 0; iy < heightSegments; iy++) {\n    for (let ix = 0; ix < widthSegments; ix++) {\n      const a = grid[iy][ix + 1];\n      const b = grid[iy][ix];\n      const c = grid[iy + 1][ix];\n      const d = grid[iy + 1][ix + 1];\n      if (iy !== 0 || thetaStart > 0) {\n        indices.push(a, b, d);\n      }\n      if (iy !== heightSegments - 1 || thetaEnd < Math.PI) {\n        indices.push(b, c, d);\n      }\n    }\n  }\n  data.numberOfVertices = vertices.length;\n  return data;\n}\n\n// src/gameobjects3d/sphere/Sphere.ts\nvar Sphere = class extends Mesh {\n  constructor(x = 0, y = 0, z = 0, radius = 1, widthSegments = 3, heightSegments = 3, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI) {\n    const data = SphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength);\n    const geometry = new Geometry(data);\n    super(x, y, z, geometry);\n  }\n};\n\n// src/geom/index.ts\nvar geom_exports = {};\n__export(geom_exports, {\n  Circle: () => circle_exports,\n  Ellipse: () => ellipse_exports,\n  Intersects: () => intersects_exports,\n  Line: () => line_exports,\n  Rectangle: () => rectangle_exports,\n  Triangle: () => triangle_exports\n});\n\n// src/geom/circle/index.ts\nvar circle_exports = {};\n__export(circle_exports, {\n  Circle: () => Circle,\n  CircleContains: () => CircleContains,\n  CircleContainsPoint: () => CircleContainsPoint,\n  CircleContainsRect: () => CircleContainsRect,\n  CircleEquals: () => CircleEquals,\n  CloneCircle: () => CloneCircle,\n  CopyCircleFrom: () => CopyCircleFrom,\n  GetCircleArea: () => GetCircleArea,\n  GetCircleBounds: () => GetCircleBounds,\n  GetCircleCircumference: () => GetCircleCircumference,\n  GetCircleCircumferencePoint: () => GetCircleCircumferencePoint,\n  GetCirclePoint: () => GetCirclePoint,\n  GetCirclePoints: () => GetCirclePoints,\n  GetCircleRandomPoint: () => GetCircleRandomPoint,\n  TranslateCircle: () => TranslateCircle,\n  TranslateCirclePoint: () => TranslateCirclePoint\n});\n\n// src/geom/circle/CircleContains.ts\nfunction CircleContains(circle, x, y) {\n  if (circle.radius > 0 && x >= circle.left && x <= circle.right && y >= circle.top && y <= circle.bottom) {\n    const dx = (circle.x - x) * (circle.x - x);\n    const dy = (circle.y - y) * (circle.y - y);\n    return dx + dy <= circle.radius * circle.radius;\n  } else {\n    return false;\n  }\n}\n\n// src/geom/circle/Circle.ts\nvar Circle = class {\n  constructor(x = 0, y = 0, radius = 0) {\n    this.set(x, y, radius);\n  }\n  set(x = 0, y = 0, radius = 0) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    return this;\n  }\n  contains(x, y) {\n    return CircleContains(this, x, y);\n  }\n  get radius() {\n    return this._radius;\n  }\n  set radius(value) {\n    this._radius = value;\n    this._diameter = value * 2;\n  }\n  get diameter() {\n    return this._diameter;\n  }\n  set diameter(value) {\n    this._diameter = value;\n    this._radius = value * 0.5;\n  }\n  get left() {\n    return this.x - this._radius;\n  }\n  set left(value) {\n    this.x = value + this._radius;\n  }\n  get right() {\n    return this.x + this._radius;\n  }\n  set right(value) {\n    this.x = value - this._radius;\n  }\n  get top() {\n    return this.y - this._radius;\n  }\n  set top(value) {\n    this.y = value + this._radius;\n  }\n  get bottom() {\n    return this.y + this._radius;\n  }\n  set bottom(value) {\n    this.y = value - this._radius;\n  }\n};\n\n// src/geom/circle/CircleContainsPoint.ts\nfunction CircleContainsPoint(circle, point) {\n  return CircleContains(circle, point.x, point.y);\n}\n\n// src/geom/circle/CircleContainsRect.ts\nfunction CircleContainsRect(circle, rect) {\n  return CircleContains(circle, rect.x, rect.y) && CircleContains(circle, rect.right, rect.y) && CircleContains(circle, rect.x, rect.bottom) && CircleContains(circle, rect.right, rect.bottom);\n}\n\n// src/geom/circle/CircleEquals.ts\nfunction CircleEquals(circle, toCompare) {\n  return circle.x === toCompare.x && circle.y === toCompare.y && circle.radius === toCompare.radius;\n}\n\n// src/geom/circle/CloneCircle.ts\nfunction CloneCircle(source) {\n  return new Circle(source.x, source.y, source.radius);\n}\n\n// src/geom/circle/CopyCircleFrom.ts\nfunction CopyCircleFrom(source, dest) {\n  return dest.set(source.x, source.y, source.radius);\n}\n\n// src/geom/circle/GetCircleArea.ts\nfunction GetCircleArea(circle) {\n  return circle.radius > 0 ? Math.PI * circle.radius * circle.radius : 0;\n}\n\n// src/geom/circle/GetCircleBounds.ts\nfunction GetCircleBounds(circle, out = new Rectangle()) {\n  return out.set(circle.left, circle.top, circle.diameter, circle.diameter);\n}\n\n// src/geom/circle/GetCircleCircumference.ts\nfunction GetCircleCircumference(circle) {\n  return 2 * (Math.PI * circle.radius);\n}\n\n// src/geom/circle/GetCircleCircumferencePoint.ts\nfunction GetCircleCircumferencePoint(circle, angle, out = new Vec2()) {\n  return out.set(circle.x + circle.radius * Math.cos(angle), circle.y + circle.radius * Math.sin(angle));\n}\n\n// src/geom/circle/GetCirclePoint.ts\nfunction GetCirclePoint(circle, position, out = new Vec2()) {\n  const angle = FromPercent(position, 0, MATH_CONST.PI2);\n  return GetCircleCircumferencePoint(circle, angle, out);\n}\n\n// src/geom/circle/GetCirclePoints.ts\nfunction GetCirclePoints(circle, step, quantity = 0, out = []) {\n  if (!quantity) {\n    quantity = GetCircleCircumference(circle) / step;\n  }\n  for (let i = 0; i < quantity; i++) {\n    const angle = FromPercent(i / quantity, 0, MATH_CONST.PI2);\n    out.push(GetCircleCircumferencePoint(circle, angle));\n  }\n  return out;\n}\n\n// src/geom/circle/GetCircleRandomPoint.ts\nfunction GetCircleRandomPoint(circle, out = new Vec2()) {\n  const t = 2 * Math.PI * Math.random();\n  const u = Math.random() + Math.random();\n  const r = u > 1 ? 2 - u : u;\n  const x = r * Math.cos(t);\n  const y = r * Math.sin(t);\n  return out.set(circle.x + x * circle.radius, circle.y + y * circle.radius);\n}\n\n// src/geom/circle/TranslateCircle.ts\nfunction TranslateCircle(circle, x, y) {\n  circle.x += x;\n  circle.y += y;\n  return circle;\n}\n\n// src/geom/circle/TranslateCirclePoint.ts\nfunction TranslateCirclePoint(circle, point) {\n  circle.x += point.x;\n  circle.y += point.y;\n  return circle;\n}\n\n// src/geom/ellipse/index.ts\nvar ellipse_exports = {};\n__export(ellipse_exports, {\n  CloneEllipse: () => CloneEllipse,\n  CopyEllipseFrom: () => CopyEllipseFrom,\n  Ellipse: () => Ellipse,\n  EllipseContains: () => EllipseContains,\n  EllipseContainsPoint: () => EllipseContainsPoint,\n  EllipseContainsRect: () => EllipseContainsRect,\n  EllipseEquals: () => EllipseEquals,\n  GetEllipseArea: () => GetEllipseArea,\n  GetEllipseBounds: () => GetEllipseBounds,\n  GetEllipseCircumference: () => GetEllipseCircumference,\n  GetEllipseCircumferencePoint: () => GetEllipseCircumferencePoint,\n  GetEllipsePoint: () => GetEllipsePoint,\n  GetEllipsePoints: () => GetEllipsePoints,\n  GetEllipseRandomPoint: () => GetEllipseRandomPoint,\n  TranslateEllipse: () => TranslateEllipse,\n  TranslateEllipsePoint: () => TranslateEllipsePoint\n});\n\n// src/geom/ellipse/EllipseContains.ts\nfunction EllipseContains(ellipse, x, y) {\n  if (ellipse.width <= 0 || ellipse.height <= 0) {\n    return false;\n  }\n  let normx = (x - ellipse.x) / ellipse.width;\n  let normy = (y - ellipse.y) / ellipse.height;\n  normx *= normx;\n  normy *= normy;\n  return normx + normy < 0.25;\n}\n\n// src/geom/ellipse/Ellipse.ts\nvar Ellipse = class {\n  constructor(x = 0, y = 0, width = 0, height = 0) {\n    this.set(x, y, width, height);\n  }\n  set(x = 0, y = 0, width = 0, height = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    return this;\n  }\n  contains(x, y) {\n    return EllipseContains(this, x, y);\n  }\n  getMinorRadius() {\n    return Math.min(this.width, this.height) / 2;\n  }\n  getMajorRadius() {\n    return Math.max(this.width, this.height) / 2;\n  }\n  get left() {\n    return this.x - this.width / 2;\n  }\n  set left(value) {\n    this.x = value + this.width / 2;\n  }\n  get right() {\n    return this.x + this.width / 2;\n  }\n  set right(value) {\n    this.x = value - this.width / 2;\n  }\n  get top() {\n    return this.y - this.height / 2;\n  }\n  set top(value) {\n    this.y = value + this.height / 2;\n  }\n  get bottom() {\n    return this.y + this.height / 2;\n  }\n  set bottom(value) {\n    this.y = value - this.height / 2;\n  }\n};\n\n// src/geom/ellipse/CloneEllipse.ts\nfunction CloneEllipse(source) {\n  return new Ellipse(source.x, source.y, source.width, source.height);\n}\n\n// src/geom/ellipse/CopyEllipseFrom.ts\nfunction CopyEllipseFrom(source, dest) {\n  return dest.set(source.x, source.y, source.width, source.height);\n}\n\n// src/geom/ellipse/EllipseContainsPoint.ts\nfunction EllipseContainsPoint(ellipse, point) {\n  return EllipseContains(ellipse, point.x, point.y);\n}\n\n// src/geom/ellipse/EllipseContainsRect.ts\nfunction EllipseContainsRect(ellipse, rect) {\n  return EllipseContains(ellipse, rect.x, rect.y) && EllipseContains(ellipse, rect.right, rect.y) && EllipseContains(ellipse, rect.x, rect.bottom) && EllipseContains(ellipse, rect.right, rect.bottom);\n}\n\n// src/geom/ellipse/EllipseEquals.ts\nfunction EllipseEquals(ellipse, toCompare) {\n  return ellipse.x === toCompare.x && ellipse.y === toCompare.y && ellipse.width === toCompare.width && ellipse.height === toCompare.height;\n}\n\n// src/geom/ellipse/GetEllipseArea.ts\nfunction GetEllipseArea(ellipse) {\n  if (ellipse.width <= 0 || ellipse.height <= 0) {\n    return 0;\n  }\n  return ellipse.getMajorRadius() * ellipse.getMinorRadius() * Math.PI;\n}\n\n// src/geom/ellipse/GetEllipseBounds.ts\nfunction GetEllipseBounds(ellipse, out = new Rectangle()) {\n  return out.set(ellipse.left, ellipse.top, ellipse.width, ellipse.height);\n}\n\n// src/geom/ellipse/GetEllipseCircumference.ts\nfunction GetEllipseCircumference(ellipse) {\n  const rx = ellipse.width / 2;\n  const ry = ellipse.height / 2;\n  const h = Math.pow(rx - ry, 2) / Math.pow(rx + ry, 2);\n  return Math.PI * (rx + ry) * (1 + 3 * h / (10 + Math.sqrt(4 - 3 * h)));\n}\n\n// src/geom/ellipse/GetEllipseCircumferencePoint.ts\nfunction GetEllipseCircumferencePoint(ellipse, angle, out = new Vec2()) {\n  const halfWidth = ellipse.width / 2;\n  const halfHeight = ellipse.height / 2;\n  return out.set(ellipse.x + halfWidth * Math.cos(angle), ellipse.y + halfHeight * Math.sin(angle));\n}\n\n// src/geom/ellipse/GetEllipsePoint.ts\nfunction GetEllipsePoint(ellipse, position, out = new Vec2()) {\n  const angle = FromPercent(position, 0, MATH_CONST.PI2);\n  return GetEllipseCircumferencePoint(ellipse, angle, out);\n}\n\n// src/geom/ellipse/GetEllipsePoints.ts\nfunction GetEllipsePoints(ellipse, step, quantity = 0, out = []) {\n  if (!quantity) {\n    quantity = GetEllipseCircumference(ellipse) / step;\n  }\n  for (let i = 0; i < quantity; i++) {\n    const angle = FromPercent(i / quantity, 0, MATH_CONST.PI2);\n    out.push(GetEllipseCircumferencePoint(ellipse, angle));\n  }\n  return out;\n}\n\n// src/geom/ellipse/GetEllipseRandomPoint.ts\nfunction GetEllipseRandomPoint(ellipse, out = new Vec2()) {\n  const p = Math.random() * Math.PI * 2;\n  const s = Math.sqrt(Math.random());\n  out.x = ellipse.x + s * Math.cos(p) * ellipse.width / 2;\n  out.y = ellipse.y + s * Math.sin(p) * ellipse.height / 2;\n  return out;\n}\n\n// src/geom/ellipse/TranslateEllipse.ts\nfunction TranslateEllipse(ellipse, x, y) {\n  ellipse.x += x;\n  ellipse.y += y;\n  return ellipse;\n}\n\n// src/geom/ellipse/TranslateEllipsePoint.ts\nfunction TranslateEllipsePoint(ellipse, point) {\n  ellipse.x += point.x;\n  ellipse.y += point.y;\n  return ellipse;\n}\n\n// src/geom/intersects/index.ts\nvar intersects_exports = {};\n__export(intersects_exports, {\n  CircleToCircle: () => CircleToCircle,\n  CircleToRectangle: () => CircleToRectangle,\n  GetCircleToCircle: () => GetCircleToCircle,\n  GetCircleToRectangle: () => GetCircleToRectangle,\n  GetLineToCircle: () => GetLineToCircle,\n  GetLineToRectangle: () => GetLineToRectangle,\n  GetRectangleIntersection: () => GetRectangleIntersection2,\n  GetRectangleToRectangle: () => GetRectangleToRectangle,\n  GetRectangleToTriangle: () => GetRectangleToTriangle,\n  GetTriangleToCircle: () => GetTriangleToCircle,\n  GetTriangleToLine: () => GetTriangleToLine,\n  GetTriangleToTriangle: () => GetTriangleToTriangle,\n  LineToCircle: () => LineToCircle,\n  LineToLine: () => LineToLine,\n  LineToRectangle: () => LineToRectangle,\n  PointToLine: () => PointToLine,\n  PointToLineSegment: () => PointToLineSegment,\n  RectangleToRectangle: () => RectangleToRectangle,\n  RectangleToTriangle: () => RectangleToTriangle,\n  TriangleToCircle: () => TriangleToCircle,\n  TriangleToLine: () => TriangleToLine,\n  TriangleToTriangle: () => TriangleToTriangle\n});\n\n// src/geom/intersects/CircleToCircle.ts\nfunction CircleToCircle(circleA, circleB) {\n  return GetVec2Distance(circleA, circleB) <= circleA.radius + circleB.radius;\n}\n\n// src/geom/intersects/CircleToRectangle.ts\nfunction CircleToRectangle(circle, rect) {\n  const halfWidth = rect.width / 2;\n  const halfHeight = rect.height / 2;\n  const cx = Math.abs(circle.x - rect.x - halfWidth);\n  const cy = Math.abs(circle.y - rect.y - halfHeight);\n  const xDist = halfWidth + circle.radius;\n  const yDist = halfHeight + circle.radius;\n  if (cx > xDist || cy > yDist) {\n    return false;\n  } else if (cx <= halfWidth || cy <= halfHeight) {\n    return true;\n  } else {\n    const xCornerDist = cx - halfWidth;\n    const yCornerDist = cy - halfHeight;\n    const xCornerDistSq = xCornerDist * xCornerDist;\n    const yCornerDistSq = yCornerDist * yCornerDist;\n    const maxCornerDistSq = circle.radius * circle.radius;\n    return xCornerDistSq + yCornerDistSq <= maxCornerDistSq;\n  }\n}\n\n// src/geom/intersects/GetCircleToCircle.ts\nfunction GetCircleToCircle(circleA, circleB, out = []) {\n  if (CircleToCircle(circleA, circleB)) {\n    const x0 = circleA.x;\n    const y0 = circleA.y;\n    const r0 = circleA.radius;\n    const x1 = circleB.x;\n    const y1 = circleB.y;\n    const r1 = circleB.radius;\n    let coefficientA;\n    let coefficientB;\n    let coefficientC;\n    let lambda;\n    let x;\n    if (y0 === y1) {\n      x = (r1 * r1 - r0 * r0 - x1 * x1 + x0 * x0) / (2 * (x0 - x1));\n      coefficientA = 1;\n      coefficientB = -2 * y1;\n      coefficientC = x1 * x1 + x * x - 2 * x1 * x + y1 * y1 - r1 * r1;\n      lambda = coefficientB * coefficientB - 4 * coefficientA * coefficientC;\n      if (lambda === 0) {\n        out.push(new Vec2(x, -coefficientB / (2 * coefficientA)));\n      } else if (lambda > 0) {\n        out.push(new Vec2(x, (-coefficientB + Math.sqrt(lambda)) / (2 * coefficientA)));\n        out.push(new Vec2(x, (-coefficientB - Math.sqrt(lambda)) / (2 * coefficientA)));\n      }\n    } else {\n      const v1 = (x0 - x1) / (y0 - y1);\n      const n = (r1 * r1 - r0 * r0 - x1 * x1 + x0 * x0 - y1 * y1 + y0 * y0) / (2 * (y0 - y1));\n      coefficientA = v1 * v1 + 1;\n      coefficientB = 2 * y0 * v1 - 2 * n * v1 - 2 * x0;\n      coefficientC = x0 * x0 + y0 * y0 + n * n - r0 * r0 - 2 * y0 * n;\n      lambda = coefficientB * coefficientB - 4 * coefficientA * coefficientC;\n      if (lambda === 0) {\n        x = -coefficientB / (2 * coefficientA);\n        out.push(new Vec2(x, n - x * v1));\n      } else if (lambda > 0) {\n        x = (-coefficientB + Math.sqrt(lambda)) / (2 * coefficientA);\n        out.push(new Vec2(x, n - x * v1));\n        x = (-coefficientB - Math.sqrt(lambda)) / (2 * coefficientA);\n        out.push(new Vec2(x, n - x * v1));\n      }\n    }\n  }\n  return out;\n}\n\n// src/geom/intersects/LineToCircle.ts\nvar tmp = new Vec2();\nfunction LineToCircle(line, circle, nearest) {\n  if (!nearest) {\n    nearest = tmp;\n  }\n  const {x1, y1, x2, y2} = line;\n  if (CircleContains(circle, x1, y1)) {\n    nearest.set(x1, y1);\n    return true;\n  }\n  if (CircleContains(circle, x2, y2)) {\n    nearest.set(x2, y2);\n    return true;\n  }\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const lcx = circle.x - x1;\n  const lcy = circle.y - y1;\n  const dLen2 = dx * dx + dy * dy;\n  let px = dx;\n  let py = dy;\n  if (dLen2 > 0) {\n    const dp = (lcx * dx + lcy * dy) / dLen2;\n    px *= dp;\n    py *= dp;\n  }\n  nearest.set(x1 + px, y1 + py);\n  const pLen2 = px * px + py * py;\n  return pLen2 <= dLen2 && px * dx + py * dy >= 0 && CircleContains(circle, nearest.x, nearest.y);\n}\n\n// src/geom/intersects/GetLineToCircle.ts\nfunction GetLineToCircle(line, circle, out = []) {\n  if (LineToCircle(line, circle)) {\n    const {x1, y1, x2, y2} = line;\n    const cr = circle.radius;\n    const lDirX = x2 - x1;\n    const lDirY = y2 - y1;\n    const oDirX = x1 - circle.x;\n    const oDirY = y1 - circle.y;\n    const coefficientA = lDirX * lDirX + lDirY * lDirY;\n    const coefficientB = 2 * (lDirX * oDirX + lDirY * oDirY);\n    const coefficientC = oDirX * oDirX + oDirY * oDirY - cr * cr;\n    const lambda = coefficientB * coefficientB - 4 * coefficientA * coefficientC;\n    let x;\n    let y;\n    if (lambda === 0) {\n      const root = -coefficientB / (2 * coefficientA);\n      x = x1 + root * lDirX;\n      y = y1 + root * lDirY;\n      if (root >= 0 && root <= 1) {\n        out.push(new Vec2(x, y));\n      }\n    } else if (lambda > 0) {\n      const root1 = (-coefficientB - Math.sqrt(lambda)) / (2 * coefficientA);\n      x = x1 + root1 * lDirX;\n      y = y1 + root1 * lDirY;\n      if (root1 >= 0 && root1 <= 1) {\n        out.push(new Vec2(x, y));\n      }\n      const root2 = (-coefficientB + Math.sqrt(lambda)) / (2 * coefficientA);\n      x = x1 + root2 * lDirX;\n      y = y1 + root2 * lDirY;\n      if (root2 >= 0 && root2 <= 1) {\n        out.push(new Vec2(x, y));\n      }\n    }\n  }\n  return out;\n}\n\n// src/geom/intersects/GetCircleToRectangle.ts\nfunction GetCircleToRectangle(circle, rect, out = []) {\n  if (CircleToRectangle(circle, rect)) {\n    const [line1, line2, line3, line4] = GetRectangleEdges(rect);\n    GetLineToCircle(line1, circle, out);\n    GetLineToCircle(line2, circle, out);\n    GetLineToCircle(line3, circle, out);\n    GetLineToCircle(line4, circle, out);\n  }\n  return out;\n}\n\n// src/geom/intersects/LineToLine.ts\nfunction LineToLine(line1, line2, out) {\n  const {x1, y1, x2, y2} = line1;\n  const {x1: x3, y1: y3, x2: x4, y2: y4} = line2;\n  const numA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n  const numB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n  const deNom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n  if (deNom === 0) {\n    return false;\n  }\n  const uA = numA / deNom;\n  const uB = numB / deNom;\n  if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n    if (out) {\n      out.set(x1 + uA * (x2 - x1), y1 + uA * (y2 - y1));\n    }\n    return true;\n  }\n  return false;\n}\n\n// src/geom/intersects/LineToRectangle.ts\nfunction LineToRectangle(line, rect) {\n  const {x1, y1, x2, y2} = line;\n  const {x, y, right, bottom} = rect;\n  let t = 0;\n  if (x1 >= x && x1 <= right && y1 >= y && y1 <= bottom || x2 >= x && x2 <= right && y2 >= y && y2 <= bottom) {\n    return true;\n  }\n  if (x1 < x && x2 >= x) {\n    t = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n    if (t > y && t <= bottom) {\n      return true;\n    }\n  } else if (x1 > right && x2 <= right) {\n    t = y1 + (y2 - y1) * (right - x1) / (x2 - x1);\n    if (t >= y && t <= bottom) {\n      return true;\n    }\n  }\n  if (y1 < y && y2 >= y) {\n    t = x1 + (x2 - x1) * (y - y1) / (y2 - y1);\n    if (t >= x && t <= right) {\n      return true;\n    }\n  } else if (y1 > bottom && y2 <= bottom) {\n    t = x1 + (x2 - x1) * (bottom - y1) / (y2 - y1);\n    if (t >= x && t <= right) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// src/geom/intersects/GetLineToRectangle.ts\nfunction GetLineToRectangle(line, rect, out = []) {\n  if (LineToRectangle(line, rect)) {\n    const [lineA, lineB, lineC, lineD] = GetRectangleEdges(rect);\n    const points = [new Vec2(), new Vec2(), new Vec2(), new Vec2()];\n    const results = [\n      LineToLine(lineA, line, points[0]),\n      LineToLine(lineB, line, points[1]),\n      LineToLine(lineC, line, points[2]),\n      LineToLine(lineD, line, points[3])\n    ];\n    for (let i = 0; i < results.length; i++) {\n      if (results[i]) {\n        out.push(points[i]);\n      }\n    }\n  }\n  return out;\n}\n\n// src/geom/intersects/GetRectangleIntersection.ts\nfunction GetRectangleIntersection2(rectA, rectB, out = new Rectangle()) {\n  if (RectangleToRectangle(rectA, rectB)) {\n    const x = Math.max(rectA.x, rectB.x);\n    const y = Math.max(rectA.y, rectB.y);\n    return out.set(x, y, Math.min(rectA.right, rectB.right) - x, Math.min(rectA.bottom, rectB.bottom) - y);\n  }\n}\n\n// src/geom/intersects/GetRectangleToRectangle.ts\nfunction GetRectangleToRectangle(rectA, rectB, out = []) {\n  if (RectangleToRectangle(rectA, rectB)) {\n    const [lineA, lineB, lineC, lineD] = GetRectangleEdges(rectA);\n    GetLineToRectangle(lineA, rectB, out);\n    GetLineToRectangle(lineB, rectB, out);\n    GetLineToRectangle(lineC, rectB, out);\n    GetLineToRectangle(lineD, rectB, out);\n  }\n  return out;\n}\n\n// src/geom/triangle/GetTriangleEdges.ts\nfunction GetTriangleEdges(triangle) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const edge1 = new Line(x1, y1, x2, y2);\n  const edge2 = new Line(x2, y2, x3, y3);\n  const edge3 = new Line(x3, y3, x1, y1);\n  return [edge1, edge2, edge3];\n}\n\n// src/geom/triangle/TriangleContains.ts\nfunction TriangleContains(triangle, x, y) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const v0x = x3 - x1;\n  const v0y = y3 - y1;\n  const v1x = x2 - x1;\n  const v1y = y2 - y1;\n  const v2x = x - x1;\n  const v2y = y - y1;\n  const dot00 = v0x * v0x + v0y * v0y;\n  const dot01 = v0x * v1x + v0y * v1y;\n  const dot02 = v0x * v2x + v0y * v2y;\n  const dot11 = v1x * v1x + v1y * v1y;\n  const dot12 = v1x * v2x + v1y * v2y;\n  const b = dot00 * dot11 - dot01 * dot01;\n  const inv = b === 0 ? 0 : 1 / b;\n  const u = (dot11 * dot02 - dot01 * dot12) * inv;\n  const v = (dot00 * dot12 - dot01 * dot02) * inv;\n  return u >= 0 && v >= 0 && u + v < 1;\n}\n\n// src/geom/triangle/TriangleContainsPoints.ts\nfunction TriangleContainsPoints(triangle, points, returnFirst = false, out = []) {\n  let skip = false;\n  points.forEach((point) => {\n    if (skip) {\n      return;\n    }\n    const {x, y} = point;\n    if (TriangleContains(triangle, x, y)) {\n      out.push(new Vec2(x, y));\n      if (returnFirst) {\n        skip = true;\n      }\n    }\n  });\n  return out;\n}\n\n// src/geom/intersects/RectangleToTriangle.ts\nfunction RectangleToTriangle(rect, triangle) {\n  if (triangle.left > rect.right || triangle.right < rect.x || triangle.top > rect.bottom || triangle.bottom < rect.y) {\n    return false;\n  }\n  const [triA, triB, triC] = GetTriangleEdges(triangle);\n  if (RectangleContains(rect, triA.x1, triA.y1) || RectangleContains(rect, triA.x2, triA.y2)) {\n    return true;\n  }\n  if (RectangleContains(rect, triB.x1, triB.y1) || RectangleContains(rect, triB.x2, triB.y2)) {\n    return true;\n  }\n  if (RectangleContains(rect, triC.x1, triC.y1) || RectangleContains(rect, triC.x2, triC.y2)) {\n    return true;\n  }\n  const [rectA, rectB, rectC, rectD] = GetRectangleEdges(rect);\n  if (LineToLine(triA, rectA) || LineToLine(triA, rectB) || LineToLine(triA, rectC) || LineToLine(triA, rectD)) {\n    return true;\n  }\n  if (LineToLine(triB, rectA) || LineToLine(triB, rectB) || LineToLine(triB, rectC) || LineToLine(triB, rectD)) {\n    return true;\n  }\n  if (LineToLine(triC, rectA) || LineToLine(triC, rectB) || LineToLine(triC, rectC) || LineToLine(triC, rectD)) {\n    return true;\n  }\n  const within = TriangleContainsPoints(triangle, DecomposeRectangle(rect), true);\n  return within.length > 0;\n}\n\n// src/geom/intersects/GetRectangleToTriangle.ts\nfunction GetRectangleToTriangle(rect, triangle, out = []) {\n  if (RectangleToTriangle(rect, triangle)) {\n    const [lineA, lineB, lineC] = GetTriangleEdges(triangle);\n    GetLineToRectangle(lineA, rect, out);\n    GetLineToRectangle(lineB, rect, out);\n    GetLineToRectangle(lineC, rect, out);\n  }\n  return out;\n}\n\n// src/geom/intersects/TriangleToCircle.ts\nfunction TriangleToCircle(triangle, circle) {\n  if (triangle.left > circle.right || triangle.right < circle.left || triangle.top > circle.bottom || triangle.bottom < circle.top) {\n    return false;\n  }\n  if (TriangleContains(triangle, circle.x, circle.y)) {\n    return true;\n  }\n  const [line1, line2, line3] = GetTriangleEdges(triangle);\n  return LineToCircle(line1, circle) || LineToCircle(line2, circle) || LineToCircle(line3, circle);\n}\n\n// src/geom/intersects/GetTriangleToCircle.ts\nfunction GetTriangleToCircle(triangle, circle, out = []) {\n  if (TriangleToCircle(triangle, circle)) {\n    const [lineA, lineB, lineC] = GetTriangleEdges(triangle);\n    GetLineToCircle(lineA, circle, out);\n    GetLineToCircle(lineB, circle, out);\n    GetLineToCircle(lineC, circle, out);\n  }\n  return out;\n}\n\n// src/geom/intersects/TriangleToLine.ts\nfunction TriangleToLine(triangle, line) {\n  const {x1, y1, x2, y2} = line;\n  if (TriangleContains(triangle, x1, y1) || TriangleContains(triangle, x2, y2)) {\n    return true;\n  }\n  const [line1, line2, line3] = GetTriangleEdges(triangle);\n  return LineToLine(line1, line) || LineToLine(line2, line) || LineToLine(line3, line);\n}\n\n// src/geom/intersects/GetTriangleToLine.ts\nfunction GetTriangleToLine(triangle, line, out = []) {\n  if (TriangleToLine(triangle, line)) {\n    const [lineA, lineB, lineC] = GetTriangleEdges(triangle);\n    const points = [new Vec2(), new Vec2(), new Vec2()];\n    const results = [\n      LineToLine(lineA, line, points[0]),\n      LineToLine(lineB, line, points[1]),\n      LineToLine(lineC, line, points[2])\n    ];\n    for (let i = 0; i < results.length; i++) {\n      if (results[i]) {\n        out.push(points[i]);\n      }\n    }\n  }\n  return out;\n}\n\n// src/geom/triangle/DecomposeTriangle.ts\nfunction DecomposeTriangle(triangle, out = []) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  out.push(new Vec2(x1, y1), new Vec2(x2, y2), new Vec2(x3, y3));\n  return out;\n}\n\n// src/geom/intersects/TriangleToTriangle.ts\nfunction TriangleToTriangle(triangleA, triangleB) {\n  if (triangleA.left > triangleB.right || triangleA.right < triangleB.left || triangleA.top > triangleB.bottom || triangleA.bottom < triangleB.top) {\n    return false;\n  }\n  const [lineAA, lineAB, lineAC] = GetTriangleEdges(triangleA);\n  const [lineBA, lineBB, lineBC] = GetTriangleEdges(triangleB);\n  if (LineToLine(lineAA, lineBA) || LineToLine(lineAA, lineBB) || LineToLine(lineAA, lineBC) || LineToLine(lineAB, lineBA) || LineToLine(lineAB, lineBB) || LineToLine(lineAB, lineBC) || LineToLine(lineAC, lineBA) || LineToLine(lineAC, lineBB) || LineToLine(lineAC, lineBC)) {\n    return true;\n  }\n  const withinA = TriangleContainsPoints(triangleB, DecomposeTriangle(triangleA), true);\n  if (withinA.length > 0) {\n    return true;\n  }\n  const withinB = TriangleContainsPoints(triangleA, DecomposeTriangle(triangleB), true);\n  return withinB.length > 0;\n}\n\n// src/geom/intersects/GetTriangleToTriangle.ts\nfunction GetTriangleToTriangle(triangleA, triangleB, out = []) {\n  if (TriangleToTriangle(triangleA, triangleB)) {\n    const [lineA, lineB, lineC] = GetTriangleEdges(triangleB);\n    GetTriangleToLine(triangleA, lineA, out);\n    GetTriangleToLine(triangleA, lineB, out);\n    GetTriangleToLine(triangleA, lineC, out);\n  }\n  return out;\n}\n\n// src/geom/intersects/PointToLine.ts\nfunction PointToLine(point, line, lineThickness = 1) {\n  const {x1, y1, x2, y2} = line;\n  const {x: px, y: py} = point;\n  const L2 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n  if (L2 === 0) {\n    return false;\n  }\n  const r = ((px - x1) * (x2 - x1) + (py - y1) * (y2 - y1)) / L2;\n  if (r < 0) {\n    return Math.sqrt((x1 - px) * (x1 - px) + (y1 - py) * (y1 - py)) <= lineThickness;\n  } else if (r >= 0 && r <= 1) {\n    const s = ((y1 - py) * (x2 - x1) - (x1 - px) * (y2 - y1)) / L2;\n    return Math.abs(s) * Math.sqrt(L2) <= lineThickness;\n  } else {\n    return Math.sqrt((x2 - px) * (x2 - px) + (y2 - py) * (y2 - py)) <= lineThickness;\n  }\n}\n\n// src/geom/intersects/PointToLineSegment.ts\nfunction PointToLineSegment(point, line) {\n  if (!PointToLine(point, line)) {\n    return false;\n  }\n  const {x1, y1, x2, y2} = line;\n  const {x, y} = point;\n  const xMin = Math.min(x1, x2);\n  const xMax = Math.max(x1, x2);\n  const yMin = Math.min(y1, y2);\n  const yMax = Math.max(y1, y2);\n  return x >= xMin && x <= xMax && (y >= yMin && y <= yMax);\n}\n\n// src/geom/line/index.ts\nvar line_exports = {};\n__export(line_exports, {\n  CenterLineOn: () => CenterLineOn,\n  CloneLine: () => CloneLine,\n  CopyLineFrom: () => CopyLineFrom,\n  ExtendLine: () => ExtendLine,\n  GetLineAngle: () => GetLineAngle,\n  GetLineBresenhamPoints: () => GetLineBresenhamPoints,\n  GetLineHeight: () => GetLineHeight,\n  GetLineLength: () => GetLineLength,\n  GetLineMidPoint: () => GetLineMidPoint,\n  GetLineNearestPoint: () => GetLineNearestPoint,\n  GetLineNormal: () => GetLineNormal,\n  GetLineNormalAngle: () => GetLineNormalAngle,\n  GetLineNormalX: () => GetLineNormalX,\n  GetLineNormalY: () => GetLineNormalY,\n  GetLinePerpSlope: () => GetLinePerpSlope,\n  GetLinePoint: () => GetLinePoint,\n  GetLinePoints: () => GetLinePoints,\n  GetLineRandomPoint: () => GetLineRandomPoint,\n  GetLineReflectAngle: () => GetLineReflectAngle,\n  GetLineSlope: () => GetLineSlope,\n  GetLineWidth: () => GetLineWidth,\n  GetShortestLineDistance: () => GetShortestLineDistance,\n  Line: () => Line,\n  LineEquals: () => LineEquals,\n  LineSetToAngle: () => LineSetToAngle,\n  RotateLine: () => RotateLine,\n  RotateLineAround: () => RotateLineAround,\n  RotateLineAroundPoint: () => RotateLineAroundPoint,\n  TranslateLine: () => TranslateLine,\n  TranslateLinePoint: () => TranslateLinePoint\n});\n\n// src/geom/line/CenterLineOn.ts\nfunction CenterLineOn(line, x, y) {\n  const tx = x - (line.x1 + line.x2) / 2;\n  const ty = y - (line.y1 + line.y2) / 2;\n  line.x1 += tx;\n  line.y1 += ty;\n  line.x2 += tx;\n  line.y2 += ty;\n  return line;\n}\n\n// src/geom/line/CloneLine.ts\nfunction CloneLine(source) {\n  return new Line(source.x1, source.y1, source.x2, source.y2);\n}\n\n// src/geom/line/CopyLineFrom.ts\nfunction CopyLineFrom(source, dest) {\n  return dest.set(source.x1, source.y1, source.x2, source.y2);\n}\n\n// src/geom/line/GetLineLength.ts\nfunction GetLineLength(line) {\n  const {x1, y1, x2, y2} = line;\n  return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n}\n\n// src/geom/line/ExtendLine.ts\nfunction ExtendLine(line, left, right = left) {\n  const length = GetLineLength(line);\n  const slopX = line.x2 - line.x1;\n  const slopY = line.y2 - line.y1;\n  if (left) {\n    line.x1 = line.x1 - slopX / length * left;\n    line.y1 = line.y1 - slopY / length * left;\n  }\n  if (right) {\n    line.x2 = line.x2 + slopX / length * right;\n    line.y2 = line.y2 + slopY / length * right;\n  }\n  return line;\n}\n\n// src/geom/line/GetLineAngle.ts\nfunction GetLineAngle(line) {\n  return Math.atan2(line.y2 - line.y1, line.x2 - line.x1);\n}\n\n// src/geom/line/GetLineBresenhamPoints.ts\nfunction GetLineBresenhamPoints(line, stepRate = 1, results = []) {\n  let x1 = Math.round(line.x1);\n  let y1 = Math.round(line.y1);\n  const x2 = Math.round(line.x2);\n  const y2 = Math.round(line.y2);\n  const dx = Math.abs(x2 - x1);\n  const dy = Math.abs(y2 - y1);\n  const sx = x1 < x2 ? 1 : -1;\n  const sy = y1 < y2 ? 1 : -1;\n  let err = dx - dy;\n  results.push(new Vec2(x1, y1));\n  let i = 1;\n  while (!(x1 === x2 && y1 === y2)) {\n    const e2 = err << 1;\n    if (e2 > -dy) {\n      err -= dy;\n      x1 += sx;\n    }\n    if (e2 < dx) {\n      err += dx;\n      y1 += sy;\n    }\n    if (i % stepRate === 0) {\n      results.push(new Vec2(x1, y1));\n    }\n    i++;\n  }\n  return results;\n}\n\n// src/geom/line/GetLineHeight.ts\nfunction GetLineHeight(line) {\n  return Math.abs(line.y1 - line.y2);\n}\n\n// src/geom/line/GetLineMidPoint.ts\nfunction GetLineMidPoint(line, out = new Vec2()) {\n  out.x = (line.x1 + line.x2) / 2;\n  out.y = (line.y1 + line.y2) / 2;\n  return out;\n}\n\n// src/geom/line/GetLineNearestPoint.ts\nfunction GetLineNearestPoint(line, point, out = new Vec2()) {\n  const {x1, y1, x2, y2} = line;\n  const L2 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n  if (L2 === 0) {\n    return out;\n  }\n  const r = ((point.x - x1) * (x2 - x1) + (point.y - y1) * (y2 - y1)) / L2;\n  out.x = x1 + r * (x2 - x1);\n  out.y = y1 + r * (y2 - y1);\n  return out;\n}\n\n// src/geom/line/GetLineNormal.ts\nfunction GetLineNormal(line, out = new Vec2()) {\n  const a = GetLineAngle(line) - MATH_CONST.HALF_PI;\n  out.x = Math.cos(a);\n  out.y = Math.sin(a);\n  return out;\n}\n\n// src/geom/line/GetLineNormalAngle.ts\nfunction GetLineNormalAngle(line) {\n  const angle = GetLineAngle(line) - MATH_CONST.HALF_PI;\n  return Wrap(angle, -Math.PI, Math.PI);\n}\n\n// src/geom/line/GetLineNormalX.ts\nfunction GetLineNormalX(line) {\n  return Math.cos(GetLineAngle(line) - MATH_CONST.HALF_PI);\n}\n\n// src/geom/line/GetLineNormalY.ts\nfunction GetLineNormalY(line) {\n  return Math.sin(GetLineAngle(line) - MATH_CONST.HALF_PI);\n}\n\n// src/geom/line/GetLinePerpSlope.ts\nfunction GetLinePerpSlope(line) {\n  const {x1, y1, x2, y2} = line;\n  return -((x2 - x1) / (y2 - y1));\n}\n\n// src/geom/line/GetLinePoint.ts\nfunction GetLinePoint(line, position, out = new Vec2()) {\n  out.x = line.x1 + (line.x2 - line.x1) * position;\n  out.y = line.y1 + (line.y2 - line.y1) * position;\n  return out;\n}\n\n// src/geom/line/GetLinePoints.ts\nfunction GetLinePoints(line, quantity, stepRate = 0, out = []) {\n  if (!quantity) {\n    quantity = GetLineLength(line) / stepRate;\n  }\n  const {x1, y1, x2, y2} = line;\n  for (let i = 0; i < quantity; i++) {\n    const position = i / quantity;\n    const x = x1 + (x2 - x1) * position;\n    const y = y1 + (y2 - y1) * position;\n    out.push(new Vec2(x, y));\n  }\n  return out;\n}\n\n// src/geom/line/GetLineRandomPoint.ts\nfunction GetLineRandomPoint(line, out = new Vec2()) {\n  const t = Math.random();\n  out.x = line.x1 + t * (line.x2 - line.x1);\n  out.y = line.y1 + t * (line.y2 - line.y1);\n  return out;\n}\n\n// src/geom/line/GetLineReflectAngle.ts\nfunction GetLineReflectAngle(lineA, lineB) {\n  return 2 * GetLineNormalAngle(lineB) - Math.PI - GetLineAngle(lineA);\n}\n\n// src/geom/line/GetLineSlope.ts\nfunction GetLineSlope(line) {\n  const {x1, y1, x2, y2} = line;\n  return (y2 - y1) / (x2 - x1);\n}\n\n// src/geom/line/GetLineWidth.ts\nfunction GetLineWidth(line) {\n  return Math.abs(line.x1 - line.x2);\n}\n\n// src/geom/line/GetShortestLineDistance.ts\nfunction GetShortestLineDistance(line, point) {\n  const {x1, y1, x2, y2} = line;\n  const L2 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n  if (L2 === 0) {\n    return 0;\n  }\n  const s = ((y1 - point.y) * (x2 - x1) - (x1 - point.x) * (y2 - y1)) / L2;\n  return Math.abs(s) * Math.sqrt(L2);\n}\n\n// src/geom/line/LineEquals.ts\nfunction LineEquals(line, toCompare) {\n  return line.x1 === toCompare.x1 && line.y1 === toCompare.y1 && line.x2 === toCompare.x2 && line.y2 === toCompare.y2;\n}\n\n// src/geom/line/SetLineToAngle.ts\nfunction LineSetToAngle(line, x, y, angle, length) {\n  line.x1 = x;\n  line.y1 = y;\n  line.x2 = x + Math.cos(angle) * length;\n  line.y2 = y + Math.sin(angle) * length;\n  return line;\n}\n\n// src/geom/line/RotateLineAround.ts\nfunction RotateLineAround(line, x, y, angle) {\n  const c = Math.cos(angle);\n  const s = Math.sin(angle);\n  let tx = line.x1 - x;\n  let ty = line.y1 - y;\n  line.x1 = tx * c - ty * s + x;\n  line.y1 = tx * s + ty * c + y;\n  tx = line.x2 - x;\n  ty = line.y2 - y;\n  line.x2 = tx * c - ty * s + x;\n  line.y2 = tx * s + ty * c + y;\n  return line;\n}\n\n// src/geom/line/RotateLine.ts\nfunction RotateLine(line, angle) {\n  const x = (line.x1 + line.x2) / 2;\n  const y = (line.y1 + line.y2) / 2;\n  return RotateLineAround(line, x, y, angle);\n}\n\n// src/geom/line/RotateLineAroundPoint.ts\nfunction RotateLineAroundPoint(line, point, angle) {\n  return RotateLineAround(line, point.x, point.y, angle);\n}\n\n// src/geom/line/TranslateLine.ts\nfunction TranslateLine(line, x, y) {\n  line.x1 += x;\n  line.y1 += y;\n  line.x2 += x;\n  line.y2 += y;\n  return line;\n}\n\n// src/geom/line/TranslateLinePoint.ts\nfunction TranslateLinePoint(line, v) {\n  return TranslateLine(line, v.x, v.y);\n}\n\n// src/geom/triangle/index.ts\nvar triangle_exports = {};\n__export(triangle_exports, {\n  BuildEquilateralTriangle: () => BuildEquilateralTriangle,\n  BuildRightTriangle: () => BuildRightTriangle,\n  CenterTriangleOn: () => CenterTriangleOn,\n  CloneTriangle: () => CloneTriangle,\n  CopyTriangleFrom: () => CopyTriangleFrom,\n  DecomposeTriangle: () => DecomposeTriangle,\n  GetTriangleArea: () => GetTriangleArea,\n  GetTriangleCentroid: () => GetTriangleCentroid,\n  GetTriangleCircumCenter: () => GetTriangleCircumCenter,\n  GetTriangleCircumCircle: () => GetTriangleCircumCircle,\n  GetTriangleEdges: () => GetTriangleEdges,\n  GetTriangleInCenter: () => GetTriangleInCenter,\n  GetTrianglePerimeter: () => GetTrianglePerimeter,\n  GetTrianglePoint: () => GetTrianglePoint,\n  GetTrianglePoints: () => GetTrianglePoints,\n  GetTriangleRandomPoint: () => GetTriangleRandomPoint,\n  RotateTriangle: () => RotateTriangle,\n  RotateTriangleAround: () => RotateTriangleAround,\n  RotateTriangleAroundPoint: () => RotateTriangleAroundPoint,\n  TranslateTriangle: () => TranslateTriangle,\n  Triangle: () => Triangle,\n  TriangleContains: () => TriangleContains,\n  TriangleContainsPoint: () => TriangleContainsPoint,\n  TriangleContainsPoints: () => TriangleContainsPoints,\n  TriangleEquals: () => TriangleEquals\n});\n\n// src/geom/triangle/Triangle.ts\nvar Triangle = class {\n  constructor(x1 = 0, y1 = 0, x2 = 0, y2 = 0, x3 = 0, y3 = 0) {\n    this.set(x1, y1, x2, y2, x3, y3);\n  }\n  set(x1 = 0, y1 = 0, x2 = 0, y2 = 0, x3 = 0, y3 = 0) {\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n    this.x3 = x3;\n    this.y3 = y3;\n    return this;\n  }\n  contains(x, y) {\n    return TriangleContains(this, x, y);\n  }\n  get left() {\n    return Math.min(this.x1, this.x2, this.x3);\n  }\n  set left(value) {\n    let diff = 0;\n    if (this.x1 <= this.x2 && this.x1 <= this.x3) {\n      diff = this.x1 - value;\n    } else if (this.x2 <= this.x1 && this.x2 <= this.x3) {\n      diff = this.x2 - value;\n    } else {\n      diff = this.x3 - value;\n    }\n    this.x1 -= diff;\n    this.x2 -= diff;\n    this.x3 -= diff;\n  }\n  get right() {\n    return Math.max(this.x1, this.x2, this.x3);\n  }\n  set right(value) {\n    let diff = 0;\n    if (this.x1 >= this.x2 && this.x1 >= this.x3) {\n      diff = this.x1 - value;\n    } else if (this.x2 >= this.x1 && this.x2 >= this.x3) {\n      diff = this.x2 - value;\n    } else {\n      diff = this.x3 - value;\n    }\n    this.x1 -= diff;\n    this.x2 -= diff;\n    this.x3 -= diff;\n  }\n  get top() {\n    return Math.min(this.y1, this.y2, this.y3);\n  }\n  set top(value) {\n    let diff = 0;\n    if (this.y1 <= this.y2 && this.y1 <= this.y3) {\n      diff = this.y1 - value;\n    } else if (this.y2 <= this.y1 && this.y2 <= this.y3) {\n      diff = this.y2 - value;\n    } else {\n      diff = this.y3 - value;\n    }\n    this.y1 -= diff;\n    this.y2 -= diff;\n    this.y3 -= diff;\n  }\n  get bottom() {\n    return Math.max(this.y1, this.y2, this.y3);\n  }\n  set bottom(value) {\n    let diff = 0;\n    if (this.y1 >= this.y2 && this.y1 >= this.y3) {\n      diff = this.y1 - value;\n    } else if (this.y2 >= this.y1 && this.y2 >= this.y3) {\n      diff = this.y2 - value;\n    } else {\n      diff = this.y3 - value;\n    }\n    this.y1 -= diff;\n    this.y2 -= diff;\n    this.y3 -= diff;\n  }\n};\n\n// src/geom/triangle/BuildEquilateralTriangle.ts\nfunction BuildEquilateralTriangle(x, y, length) {\n  const height = length * (Math.sqrt(3) / 2);\n  const x1 = x;\n  const y1 = y;\n  const x2 = x + length / 2;\n  const y2 = y + height;\n  const x3 = x - length / 2;\n  const y3 = y + height;\n  return new Triangle(x1, y1, x2, y2, x3, y3);\n}\n\n// src/geom/triangle/BuildRightTriangle.ts\nfunction BuildRightTriangle(x, y, width, height = width) {\n  const x1 = x;\n  const y1 = y;\n  const x2 = x;\n  const y2 = y - height;\n  const x3 = x + width;\n  const y3 = y;\n  return new Triangle(x1, y1, x2, y2, x3, y3);\n}\n\n// src/geom/triangle/GetTriangleCentroid.ts\nfunction GetTriangleCentroid(triangle, out = new Vec2()) {\n  return out.set((triangle.x1 + triangle.x2 + triangle.x3) / 3, (triangle.y1 + triangle.y2 + triangle.y3) / 3);\n}\n\n// src/geom/triangle/TranslateTriangle.ts\nfunction TranslateTriangle(triangle, x, y) {\n  triangle.x1 += x;\n  triangle.y1 += y;\n  triangle.x2 += x;\n  triangle.y2 += y;\n  triangle.x3 += x;\n  triangle.y3 += y;\n  return triangle;\n}\n\n// src/geom/triangle/CenterTriangleOn.ts\nfunction CenterTriangleOn(triangle, x, y, centerFunc = GetTriangleCentroid) {\n  const center = centerFunc(triangle);\n  const diffX = x - center.x;\n  const diffY = y - center.y;\n  return TranslateTriangle(triangle, diffX, diffY);\n}\n\n// src/geom/triangle/CloneTriangle.ts\nfunction CloneTriangle(source) {\n  const {x1, y1, x2, y2, x3, y3} = source;\n  return new Triangle(x1, y1, x2, y2, x3, y3);\n}\n\n// src/geom/triangle/CopyTriangleFrom.ts\nfunction CopyTriangleFrom(source, dest) {\n  const {x1, y1, x2, y2, x3, y3} = source;\n  return dest.set(x1, y1, x2, y2, x3, y3);\n}\n\n// src/geom/triangle/GetTriangleArea.ts\nfunction GetTriangleArea(triangle) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  return Math.abs(((x3 - x1) * (y2 - y1) - (x2 - x1) * (y3 - y1)) / 2);\n}\n\n// src/geom/triangle/GetTriangleCircumCenter.ts\nfunction Det(m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10;\n}\nfunction GetTriangleCircumCenter(triangle, out = new Vec2()) {\n  const cx = triangle.x3;\n  const cy = triangle.y3;\n  const ax = triangle.x1 - cx;\n  const ay = triangle.y1 - cy;\n  const bx = triangle.x2 - cx;\n  const by = triangle.y2 - cy;\n  const denom = 2 * Det(ax, ay, bx, by);\n  const numx = Det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  const numy = Det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  return out.set(cx - numx / denom, cy + numy / denom);\n}\n\n// src/geom/triangle/GetTriangleCircumCircle.ts\nfunction GetTriangleCircumCircle(triangle, out = new Circle()) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const A = x2 - x1;\n  const B = y2 - y1;\n  const C = x3 - x1;\n  const D = y3 - y1;\n  const E = A * (x1 + x2) + B * (y1 + y2);\n  const F = C * (x1 + x3) + D * (y1 + y3);\n  const G = 2 * (A * (y3 - y2) - B * (x3 - x2));\n  if (Math.abs(G) < 1e-6) {\n    const minX = Math.min(x1, x2, x3);\n    const minY = Math.min(y1, y2, y3);\n    const dx = (Math.max(x1, x2, x3) - minX) * 0.5;\n    const dy = (Math.max(y1, y2, y3) - minY) * 0.5;\n    return out.set(minX + dx, minY + dy, Math.sqrt(dx * dx + dy * dy));\n  } else {\n    const cx = (D * E - B * F) / G;\n    const cy = (A * F - C * E) / G;\n    const dx = cx - x1;\n    const dy = cy - y1;\n    return out.set(cx, cy, Math.sqrt(dx * dx + dy * dy));\n  }\n}\n\n// src/geom/triangle/GetTriangleInCenter.ts\nfunction GetLength(x1, y1, x2, y2) {\n  const x = x1 - x2;\n  const y = y1 - y2;\n  return Math.sqrt(x * x + y * y);\n}\nfunction GetTriangleInCenter(triangle, out = new Vec2()) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const d1 = GetLength(x3, y3, x2, y2);\n  const d2 = GetLength(x1, y1, x3, y3);\n  const d3 = GetLength(x2, y2, x1, y1);\n  const p = d1 + d2 + d3;\n  return out.set((x1 * d1 + x2 * d2 + x3 * d3) / p, (y1 * d1 + y2 * d2 + y3 * d3) / p);\n}\n\n// src/geom/triangle/GetTrianglePerimeter.ts\nfunction GetTrianglePerimeter(triangle) {\n  const [line1, line2, line3] = GetTriangleEdges(triangle);\n  return GetLineLength(line1) + GetLineLength(line2) + GetLineLength(line3);\n}\n\n// src/geom/triangle/GetTrianglePoint.ts\nfunction GetTrianglePoint(triangle, position, out = new Vec2()) {\n  const [line1, line2, line3] = GetTriangleEdges(triangle);\n  if (position <= 0 || position >= 1) {\n    return out.set(line1.x1, line1.y1);\n  }\n  const length1 = GetLineLength(line1);\n  const length2 = GetLineLength(line2);\n  const length3 = GetLineLength(line3);\n  const perimeter = length1 + length2 + length3;\n  let p = perimeter * position;\n  let localPosition = 0;\n  if (p < length1) {\n    localPosition = p / length1;\n    const {x1, y1, x2, y2} = line1;\n    return out.set(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n  } else if (p > length1 + length2) {\n    p -= length1 + length2;\n    localPosition = p / length3;\n    const {x1, y1, x2, y2} = line3;\n    return out.set(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n  } else {\n    p -= length1;\n    localPosition = p / length2;\n    const {x1, y1, x2, y2} = line2;\n    return out.set(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n  }\n}\n\n// src/geom/triangle/GetTrianglePoints.ts\nfunction GetTrianglePoints(triangle, quantity, stepRate, out = []) {\n  const [line1, line2, line3] = GetTriangleEdges(triangle);\n  const length1 = GetLineLength(line1);\n  const length2 = GetLineLength(line2);\n  const length3 = GetLineLength(line3);\n  const perimeter = length1 + length2 + length3;\n  if (!quantity) {\n    quantity = perimeter / stepRate;\n  }\n  for (let i = 0; i < quantity; i++) {\n    let p = perimeter * (i / quantity);\n    let localPosition = 0;\n    let point;\n    if (p < length1) {\n      localPosition = p / length1;\n      const {x1, y1, x2, y2} = line1;\n      point = new Vec2(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n    } else if (p > length1 + length2) {\n      p -= length1 + length2;\n      localPosition = p / length3;\n      const {x1, y1, x2, y2} = line3;\n      point = new Vec2(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n    } else {\n      p -= length1;\n      localPosition = p / length2;\n      const {x1, y1, x2, y2} = line2;\n      point = new Vec2(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n    }\n    out.push(point);\n  }\n  return out;\n}\n\n// src/geom/triangle/GetTriangleRandomPoint.ts\nfunction GetTriangleRandomPoint(triangle, out = new Vec2()) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const ux = x2 - x1;\n  const uy = y2 - y1;\n  const vx = x3 - x1;\n  const vy = y3 - y1;\n  let r = Math.random();\n  let s = Math.random();\n  if (r + s >= 1) {\n    r = 1 - r;\n    s = 1 - s;\n  }\n  return out.set(x1 + (ux * r + vx * s), y1 + (uy * r + vy * s));\n}\n\n// src/geom/triangle/RotateTriangleAround.ts\nfunction RotateTriangleAround(triangle, x, y, angle) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const c = Math.cos(angle);\n  const s = Math.sin(angle);\n  return triangle.set((x1 - x) * c - (y1 - y) * s + x, (x1 - x) * s + (y1 - y) * c + y, (x2 - x) * c - (y2 - y) * s + x, (x2 - x) * s + (y2 - y) * c + y, (x3 - x) * c - (y3 - y) * s + x, (x3 - x) * s + (y3 - y) * c + y);\n}\n\n// src/geom/triangle/RotateTriangle.ts\nfunction RotateTriangle(triangle, angle) {\n  const point = GetTriangleInCenter(triangle);\n  return RotateTriangleAround(triangle, point.x, point.y, angle);\n}\n\n// src/geom/triangle/RotateTriangleAroundPoint.ts\nfunction RotateTriangleAroundPoint(triangle, point, angle) {\n  return RotateTriangleAround(triangle, point.x, point.y, angle);\n}\n\n// src/geom/triangle/TriangleContainsPoint.ts\nfunction TriangleContainsPoint(triangle, point) {\n  return TriangleContains(triangle, point.x, point.y);\n}\n\n// src/geom/triangle/TriangleEquals.ts\nfunction TriangleEquals(src, dest) {\n  return src.x1 === dest.x1 && src.y1 === dest.y1 && src.x2 === dest.x2 && src.y2 === dest.y2 && src.x3 === dest.x3 && src.y3 === dest.y3;\n}\n\n// src/geom3d/index.ts\nvar geom3d_exports = {};\n__export(geom3d_exports, {\n  BoxGeometry: () => BoxGeometry,\n  ConeGeometry: () => ConeGeometry,\n  CylinderGeometry: () => CylinderGeometry,\n  PlaneGeometry: () => PlaneGeometry,\n  SphereGeometry: () => SphereGeometry,\n  TorusGeometry: () => TorusGeometry\n});\n\n// src/geom3d/TorusGeometry.ts\nfunction TorusGeometry(radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2) {\n  const data = CreateVertexSet();\n  const {\n    vertices,\n    normals,\n    uvs,\n    indices\n  } = data;\n  const center = new Vec3();\n  const vertex = new Vec3();\n  const normal = new Vec3();\n  for (let j = 0; j <= radialSegments; j++) {\n    for (let i = 0; i <= tubularSegments; i++) {\n      const u = i / tubularSegments * arc;\n      const v = j / radialSegments * Math.PI * 2;\n      vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n      vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n      vertex.z = tube * Math.sin(v);\n      vertices.push(vertex.x, vertex.y, vertex.z);\n      center.x = radius * Math.cos(u);\n      center.y = radius * Math.sin(u);\n      Vec3Subtract(vertex, center, normal);\n      Vec3Normalize(normal, normal);\n      normals.push(normal.x, normal.y, normal.z);\n      uvs.push(i / tubularSegments);\n      uvs.push(j / radialSegments);\n    }\n  }\n  for (let j = 1; j <= radialSegments; j++) {\n    for (let i = 1; i <= tubularSegments; i++) {\n      const a = (tubularSegments + 1) * j + i - 1;\n      const b = (tubularSegments + 1) * (j - 1) + i - 1;\n      const c = (tubularSegments + 1) * (j - 1) + i;\n      const d = (tubularSegments + 1) * j + i;\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  }\n  data.numberOfVertices = vertices.length;\n  return data;\n}\n\n// src/input/index.ts\nvar input_exports2 = {};\n__export(input_exports2, {\n  Keyboard: () => keyboard_exports,\n  Mouse: () => mouse_exports,\n  SetInteractive: () => SetInteractive\n});\n\n// src/input/keyboard/index.ts\nvar keyboard_exports = {};\n__export(keyboard_exports, {\n  GetKeyDownDuration: () => GetKeyDownDuration,\n  Key: () => Key,\n  Keyboard: () => Keyboard,\n  Keys: () => keys_exports,\n  SetKeyRepeatRate: () => SetKeyRepeatRate\n});\n\n// src/input/keyboard/keys/index.ts\nvar keys_exports = {};\n__export(keys_exports, {\n  AKey: () => AKey,\n  ArrowKeys: () => ArrowKeys,\n  BKey: () => BKey,\n  CKey: () => CKey,\n  DKey: () => DKey,\n  DownKey: () => DownKey,\n  EKey: () => EKey,\n  FKey: () => FKey,\n  GKey: () => GKey,\n  HKey: () => HKey,\n  IKey: () => IKey,\n  JKey: () => JKey,\n  KKey: () => KKey,\n  LKey: () => LKey,\n  LeftKey: () => LeftKey,\n  MKey: () => MKey,\n  NKey: () => NKey,\n  OKey: () => OKey,\n  PKey: () => PKey,\n  QKey: () => QKey,\n  RKey: () => RKey,\n  RightKey: () => RightKey,\n  SKey: () => SKey,\n  SpaceKey: () => SpaceKey,\n  TKey: () => TKey,\n  UKey: () => UKey,\n  UpKey: () => UpKey,\n  VKey: () => VKey,\n  WASDKeys: () => WASDKeys,\n  WKey: () => WKey,\n  XKey: () => XKey,\n  YKey: () => YKey,\n  ZKey: () => ZKey\n});\n\n// src/input/keyboard/Key.ts\nvar Key = class {\n  constructor(value) {\n    this.capture = true;\n    this.isDown = false;\n    this.enabled = true;\n    this.repeatRate = 0;\n    this.canRepeat = true;\n    this.timeDown = 0;\n    this.timeUpdated = 0;\n    this.timeUp = 0;\n    this.value = value;\n    this.events = new Map();\n  }\n  getValue() {\n    return this.value;\n  }\n  down(event) {\n    if (!this.enabled) {\n      return;\n    }\n    if (this.capture) {\n      event.preventDefault();\n    }\n    this.shiftKey = event.shiftKey;\n    this.ctrlKey = event.ctrlKey;\n    this.altKey = event.altKey;\n    if (this.isDown && this.canRepeat) {\n      this.timeUpdated = event.timeStamp;\n      const delay = this.timeUpdated - this.timeDown;\n      if (delay >= this.repeatRate) {\n        Emit(this, \"keydown\", this);\n        if (this.downCallback) {\n          this.downCallback(this);\n        }\n      }\n    } else {\n      this.isDown = true;\n      this.timeDown = event.timeStamp;\n      this.timeUpdated = event.timeStamp;\n      Emit(this, \"keydown\", this);\n      if (this.downCallback) {\n        this.downCallback(this);\n      }\n    }\n  }\n  up(event) {\n    if (!this.enabled) {\n      return;\n    }\n    if (this.capture) {\n      event.preventDefault();\n    }\n    this.shiftKey = event.shiftKey;\n    this.ctrlKey = event.ctrlKey;\n    this.altKey = event.altKey;\n    if (this.isDown) {\n      this.isDown = false;\n      this.timeUp = event.timeStamp;\n      this.timeUpdated = event.timeStamp;\n      Emit(this, \"keyup\", this);\n      if (this.upCallback) {\n        this.upCallback(this);\n      }\n    }\n  }\n  reset() {\n    this.isDown = false;\n    this.timeUpdated = this.timeDown;\n    this.timeUp = this.timeDown;\n  }\n  destroy() {\n    this.downCallback = null;\n    this.upCallback = null;\n    this.events.clear();\n  }\n};\n\n// src/input/keyboard/keys/AKey.ts\nvar AKey = class extends Key {\n  constructor() {\n    super(\"a\");\n  }\n};\n\n// src/input/keyboard/keys/ArrowKeys.ts\nvar ArrowKeys = class {\n  constructor(keyboardManager, config) {\n    const {\n      left = true,\n      right = true,\n      up = true,\n      down = true,\n      space = true\n    } = config;\n    const keys = keyboardManager.keys;\n    if (left) {\n      this.left = new Key(\"ArrowLeft\");\n      keys.set(this.left.value, this.left);\n    }\n    if (right) {\n      this.right = new Key(\"ArrowRight\");\n      keys.set(this.right.value, this.right);\n    }\n    if (up) {\n      this.up = new Key(\"ArrowUp\");\n      keys.set(this.up.value, this.up);\n    }\n    if (down) {\n      this.down = new Key(\"ArrowDown\");\n      keys.set(this.down.value, this.down);\n    }\n    if (space) {\n      this.space = new Key(\" \");\n      keys.set(this.space.value, this.space);\n    }\n  }\n};\n\n// src/input/keyboard/keys/BKey.ts\nvar BKey = class extends Key {\n  constructor() {\n    super(\"b\");\n  }\n};\n\n// src/input/keyboard/keys/CKey.ts\nvar CKey = class extends Key {\n  constructor() {\n    super(\"c\");\n  }\n};\n\n// src/input/keyboard/keys/DKey.ts\nvar DKey = class extends Key {\n  constructor() {\n    super(\"d\");\n  }\n};\n\n// src/input/keyboard/keys/DownKey.ts\nvar DownKey = class extends Key {\n  constructor() {\n    super(\"ArrowDown\");\n  }\n};\n\n// src/input/keyboard/keys/EKey.ts\nvar EKey = class extends Key {\n  constructor() {\n    super(\"e\");\n  }\n};\n\n// src/input/keyboard/keys/FKey.ts\nvar FKey = class extends Key {\n  constructor() {\n    super(\"f\");\n  }\n};\n\n// src/input/keyboard/keys/GKey.ts\nvar GKey = class extends Key {\n  constructor() {\n    super(\"g\");\n  }\n};\n\n// src/input/keyboard/keys/HKey.ts\nvar HKey = class extends Key {\n  constructor() {\n    super(\"h\");\n  }\n};\n\n// src/input/keyboard/keys/IKey.ts\nvar IKey = class extends Key {\n  constructor() {\n    super(\"i\");\n  }\n};\n\n// src/input/keyboard/keys/JKey.ts\nvar JKey = class extends Key {\n  constructor() {\n    super(\"j\");\n  }\n};\n\n// src/input/keyboard/keys/KKey.ts\nvar KKey = class extends Key {\n  constructor() {\n    super(\"k\");\n  }\n};\n\n// src/input/keyboard/keys/LKey.ts\nvar LKey = class extends Key {\n  constructor() {\n    super(\"l\");\n  }\n};\n\n// src/input/keyboard/keys/LeftKey.ts\nvar LeftKey = class extends Key {\n  constructor() {\n    super(\"ArrowLeft\");\n  }\n};\n\n// src/input/keyboard/keys/MKey.ts\nvar MKey = class extends Key {\n  constructor() {\n    super(\"m\");\n  }\n};\n\n// src/input/keyboard/keys/NKey.ts\nvar NKey = class extends Key {\n  constructor() {\n    super(\"n\");\n  }\n};\n\n// src/input/keyboard/keys/OKey.ts\nvar OKey = class extends Key {\n  constructor() {\n    super(\"o\");\n  }\n};\n\n// src/input/keyboard/keys/PKey.ts\nvar PKey = class extends Key {\n  constructor() {\n    super(\"p\");\n  }\n};\n\n// src/input/keyboard/keys/QKey.ts\nvar QKey = class extends Key {\n  constructor() {\n    super(\"q\");\n  }\n};\n\n// src/input/keyboard/keys/RKey.ts\nvar RKey = class extends Key {\n  constructor() {\n    super(\"r\");\n  }\n};\n\n// src/input/keyboard/keys/RightKey.ts\nvar RightKey = class extends Key {\n  constructor() {\n    super(\"ArrowRight\");\n  }\n};\n\n// src/input/keyboard/keys/SKey.ts\nvar SKey = class extends Key {\n  constructor() {\n    super(\"s\");\n  }\n};\n\n// src/input/keyboard/keys/SpaceKey.ts\nvar SpaceKey = class extends Key {\n  constructor() {\n    super(\" \");\n  }\n};\n\n// src/input/keyboard/keys/TKey.ts\nvar TKey = class extends Key {\n  constructor() {\n    super(\"t\");\n  }\n};\n\n// src/input/keyboard/keys/UKey.ts\nvar UKey = class extends Key {\n  constructor() {\n    super(\"u\");\n  }\n};\n\n// src/input/keyboard/keys/UpKey.ts\nvar UpKey = class extends Key {\n  constructor() {\n    super(\"ArrowUp\");\n  }\n};\n\n// src/input/keyboard/keys/VKey.ts\nvar VKey = class extends Key {\n  constructor() {\n    super(\"v\");\n  }\n};\n\n// src/input/keyboard/keys/WASDKeys.ts\nvar WASDKeys = class {\n  constructor(keyboardManager, config) {\n    const {\n      W = true,\n      A = true,\n      S = true,\n      D = true,\n      space = true\n    } = config;\n    const keys = keyboardManager.keys;\n    if (W) {\n      this.W = new Key(\"w\");\n      keys.set(this.W.value, this.W);\n    }\n    if (A) {\n      this.A = new Key(\"a\");\n      keys.set(this.A.value, this.A);\n    }\n    if (S) {\n      this.S = new Key(\"s\");\n      keys.set(this.S.value, this.S);\n    }\n    if (D) {\n      this.D = new Key(\"d\");\n      keys.set(this.D.value, this.D);\n    }\n    if (space) {\n      this.space = new Key(\" \");\n      keys.set(this.space.value, this.space);\n    }\n  }\n};\n\n// src/input/keyboard/keys/WKey.ts\nvar WKey = class extends Key {\n  constructor() {\n    super(\"w\");\n  }\n};\n\n// src/input/keyboard/keys/XKey.ts\nvar XKey = class extends Key {\n  constructor() {\n    super(\"x\");\n  }\n};\n\n// src/input/keyboard/keys/YKey.ts\nvar YKey = class extends Key {\n  constructor() {\n    super(\"y\");\n  }\n};\n\n// src/input/keyboard/keys/ZKey.ts\nvar ZKey = class extends Key {\n  constructor() {\n    super(\"z\");\n  }\n};\n\n// src/input/keyboard/GetKeyDownDuration.ts\nfunction GetKeyDownDuration(key) {\n  if (key.isDown) {\n    return key.timeUpdated - key.timeDown;\n  } else {\n    return key.timeUp - key.timeDown;\n  }\n}\n\n// src/input/keyboard/Keyboard.ts\nvar Keyboard = class extends EventEmitter {\n  constructor() {\n    super();\n    this.keyConversion = {\n      Up: \"ArrowUp\",\n      Down: \"ArrowDown\",\n      Left: \"ArrowLeft\",\n      Right: \"ArrowRight\",\n      Spacebar: \" \",\n      Win: \"Meta\",\n      Scroll: \"ScrollLock\",\n      Del: \"Delete\",\n      Apps: \"ContextMenu\",\n      Esc: \"Escape\",\n      Add: \"+\",\n      Subtract: \"-\",\n      Multiply: \"*\",\n      Decimal: \".\",\n      Divide: \"/\"\n    };\n    this.keydownHandler = (event) => this.onKeyDown(event);\n    this.keyupHandler = (event) => this.onKeyUp(event);\n    this.blurHandler = () => this.onBlur();\n    window.addEventListener(\"keydown\", this.keydownHandler);\n    window.addEventListener(\"keyup\", this.keyupHandler);\n    window.addEventListener(\"blur\", this.blurHandler);\n    this.keys = new Map();\n  }\n  addKeys(...keys) {\n    keys.forEach((key) => {\n      this.keys.set(key.getValue(), key);\n    });\n  }\n  clearKeys() {\n    this.keys.clear();\n  }\n  onBlur() {\n    this.keys.forEach((key) => {\n      key.reset();\n    });\n  }\n  getKeyValue(key) {\n    if (this.keyConversion.hasOwnProperty(key)) {\n      return this.keyConversion[key];\n    } else {\n      return key;\n    }\n  }\n  onKeyDown(event) {\n    const value = this.getKeyValue(event.key);\n    if (this.keys.has(value)) {\n      const key = this.keys.get(value);\n      key.down(event);\n    }\n    Emit(this, \"keydown-\" + value, event);\n    Emit(this, \"keydown\", event);\n  }\n  onKeyUp(event) {\n    const value = this.getKeyValue(event.key);\n    if (this.keys.has(value)) {\n      const key = this.keys.get(value);\n      key.up(event);\n    }\n    Emit(this, \"keyup-\" + value, event);\n    Emit(this, \"keyup\", event);\n  }\n  destroy() {\n    window.removeEventListener(\"keydown\", this.keydownHandler);\n    window.removeEventListener(\"keyup\", this.keyupHandler);\n    window.removeEventListener(\"blur\", this.blurHandler);\n    Emit(this, \"destroy\");\n  }\n};\n\n// src/input/keyboard/SetKeyRepeatRate.ts\nfunction SetKeyRepeatRate(rate, ...keys) {\n  keys.forEach((key) => {\n    key.repeatRate = rate;\n  });\n  return keys;\n}\n\n// src/input/mouse/index.ts\nvar mouse_exports = {};\n__export(mouse_exports, {\n  Mouse: () => Mouse\n});\n\n// src/input/mouse/Mouse.ts\nvar Mouse = class extends EventEmitter {\n  constructor(target) {\n    super();\n    this.primaryDown = false;\n    this.auxDown = false;\n    this.secondaryDown = false;\n    this.blockContextMenu = true;\n    this.resolution = 1;\n    this.mousedownHandler = (event) => this.onMouseDown(event);\n    this.mouseupHandler = (event) => this.onMouseUp(event);\n    this.mousemoveHandler = (event) => this.onMouseMove(event);\n    this.mousewheelHandler = (event) => this.onMouseWheel(event);\n    this.contextmenuHandler = (event) => this.onContextMenuEvent(event);\n    this.blurHandler = () => this.onBlur();\n    this.localPoint = new Vec2();\n    this.hitPoint = new Vec2();\n    this.transPoint = new Vec2();\n    if (!target) {\n      target = GameInstance.get().renderer.canvas;\n    }\n    target.addEventListener(\"mousedown\", this.mousedownHandler);\n    target.addEventListener(\"mouseup\", this.mouseupHandler);\n    target.addEventListener(\"wheel\", this.mousewheelHandler, {passive: false});\n    target.addEventListener(\"contextmenu\", this.contextmenuHandler);\n    window.addEventListener(\"mouseup\", this.mouseupHandler);\n    window.addEventListener(\"mousemove\", this.mousemoveHandler);\n    window.addEventListener(\"blur\", this.blurHandler);\n    this.target = target;\n  }\n  onBlur() {\n  }\n  onMouseDown(event) {\n    this.positionToPoint(event);\n    this.primaryDown = event.button === 0;\n    this.auxDown = event.button === 1;\n    this.secondaryDown = event.button === 2;\n    Emit(this, \"pointerdown\", this.localPoint.x, this.localPoint.y, event.button, event);\n  }\n  onMouseUp(event) {\n    this.positionToPoint(event);\n    this.primaryDown = !(event.button === 0);\n    this.auxDown = !(event.button === 1);\n    this.secondaryDown = !(event.button === 2);\n    Emit(this, \"pointerup\", this.localPoint.x, this.localPoint.y, event.button, event);\n  }\n  onMouseMove(event) {\n    this.positionToPoint(event);\n    Emit(this, \"pointermove\", this.localPoint.x, this.localPoint.y, event);\n  }\n  onMouseWheel(event) {\n    Emit(this, \"wheel\", event.deltaX, event.deltaY, event.deltaZ, event);\n  }\n  onContextMenuEvent(event) {\n    if (this.blockContextMenu) {\n      event.preventDefault();\n    }\n    Emit(this, \"contextmenu\", event);\n  }\n  positionToPoint(event) {\n    return this.localPoint.set(event.offsetX, event.offsetY);\n  }\n  getInteractiveChildren(parent, results) {\n    const children = parent.children;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (!child.visible || !child.input.enabled) {\n        continue;\n      }\n      results.push(child);\n      if (child.input.enabledChildren && child.numChildren) {\n        this.getInteractiveChildren(child, results);\n      }\n    }\n  }\n  checkHitArea(entity, px, py) {\n    if (entity.input.hitArea) {\n      if (entity.input.hitArea.contains(px, py)) {\n        return true;\n      }\n    } else {\n      return entity.transform.extent.contains(px, py);\n    }\n    return false;\n  }\n  hitTest(...entities) {\n    const localX = this.localPoint.x;\n    const localY = this.localPoint.y;\n    const point = this.transPoint;\n    for (let i = 0; i < entities.length; i++) {\n      const entity = entities[i];\n      if (!entity.world) {\n        continue;\n      }\n      const mat = Mat2dAppend(entity.world.camera.worldTransform, entity.transform.world);\n      Mat2dGlobalToLocal(mat, localX, localY, point);\n      if (this.checkHitArea(entity, point.x, point.y)) {\n        this.hitPoint.set(point.x, point.y);\n        return true;\n      }\n    }\n    return false;\n  }\n  hitTestChildren(parent, topOnly = true) {\n    const output = [];\n    if (!parent.visible) {\n      return output;\n    }\n    const candidates = [];\n    const parentInput = parent.input;\n    if (parentInput && parentInput.enabled) {\n      candidates.push(parent);\n    }\n    if (parentInput.enabledChildren && parent.numChildren) {\n      this.getInteractiveChildren(parent, candidates);\n    }\n    for (let i = candidates.length - 1; i >= 0; i--) {\n      const entity = candidates[i];\n      if (this.hitTest(entity)) {\n        output.push(entity);\n        if (topOnly) {\n          break;\n        }\n      }\n    }\n    return output;\n  }\n  shutdown() {\n    const target = this.target;\n    target.removeEventListener(\"mousedown\", this.mousedownHandler);\n    target.removeEventListener(\"mouseup\", this.mouseupHandler);\n    target.removeEventListener(\"wheel\", this.mousewheelHandler);\n    target.removeEventListener(\"contextmenu\", this.contextmenuHandler);\n    window.removeEventListener(\"mouseup\", this.mouseupHandler);\n    window.removeEventListener(\"mousemove\", this.mousemoveHandler);\n    window.removeEventListener(\"blur\", this.blurHandler);\n  }\n};\n\n// src/input/SetInteractive.ts\nfunction SetInteractive(...children) {\n  children.forEach((child) => {\n    child.input.enabled = true;\n  });\n  return children;\n}\n\n// src/loader/index.ts\nvar loader_exports = {};\n__export(loader_exports, {\n  File: () => File,\n  Files: () => files_exports,\n  Loader: () => Loader\n});\n\n// src/loader/files/index.ts\nvar files_exports = {};\n__export(files_exports, {\n  AtlasFile: () => AtlasFile,\n  BitmapTextFile: () => BitmapTextFile,\n  CSVFile: () => CSVFile,\n  ImageFile: () => ImageFile,\n  JSONFile: () => JSONFile,\n  JSONGeometryFile: () => JSONGeometryFile,\n  OBJFile: () => OBJFile,\n  OBJGeometryFile: () => OBJGeometryFile,\n  SpriteSheetFile: () => SpriteSheetFile,\n  XMLFile: () => XMLFile\n});\n\n// src/textures/parsers/AtlasParser.ts\nfunction AtlasParser(texture, data) {\n  let frames;\n  if (Array.isArray(data.textures)) {\n    frames = data.textures[0].frames;\n  } else if (Array.isArray(data.frames)) {\n    frames = data.frames;\n  } else if (data.hasOwnProperty(\"frames\")) {\n    frames = Object.values(data.frames);\n  } else {\n    console.warn(\"Invalid Texture Atlas JSON\");\n  }\n  if (frames) {\n    let newFrame;\n    for (let i = 0; i < frames.length; i++) {\n      const src = frames[i];\n      newFrame = texture.addFrame(src.filename, src.frame.x, src.frame.y, src.frame.w, src.frame.h);\n      if (src.trimmed) {\n        newFrame.setTrim(src.sourceSize.w, src.sourceSize.h, src.spriteSourceSize.x, src.spriteSourceSize.y, src.spriteSourceSize.w, src.spriteSourceSize.h);\n      } else {\n        newFrame.setSourceSize(src.sourceSize.w, src.sourceSize.h);\n      }\n      if (src.rotated) {\n      }\n      if (src.anchor) {\n        newFrame.setPivot(src.anchor.x, src.anchor.y);\n      }\n    }\n  }\n}\n\n// src/loader/File.ts\nvar File = class {\n  constructor(key, url, config) {\n    this.responseType = \"text\";\n    this.crossOrigin = void 0;\n    this.skipCache = false;\n    this.hasLoaded = false;\n    this.key = key;\n    this.url = url;\n    this.config = config;\n  }\n};\n\n// src/loader/GetURL.ts\nfunction GetURL(key, url, extension, loader) {\n  if (!url) {\n    url = key + extension;\n  }\n  if (/^(?:blob:|data:|http:\\/\\/|https:\\/\\/|\\/\\/)/.exec(url)) {\n    return url;\n  } else if (loader) {\n    return loader.baseURL + loader.path + url;\n  } else {\n    return url;\n  }\n}\n\n// src/loader/ImageTagLoader.ts\nfunction ImageTagLoader(file) {\n  file.data = new Image();\n  if (file.crossOrigin) {\n    file.data.crossOrigin = file.crossOrigin;\n  }\n  return new Promise((resolve, reject) => {\n    file.data.onload = () => {\n      if (file.data.onload) {\n        file.data.onload = null;\n        file.data.onerror = null;\n        resolve(file);\n      }\n    };\n    file.data.onerror = (event) => {\n      if (file.data.onload) {\n        file.data.onload = null;\n        file.data.onerror = null;\n        file.error = event;\n        reject(file);\n      }\n    };\n    file.data.src = file.url;\n    if (file.data.complete && file.data.width && file.data.height) {\n      file.data.onload = null;\n      file.data.onerror = null;\n      resolve(file);\n    }\n  });\n}\n\n// src/loader/files/ImageFile.ts\nfunction ImageFile(key, url, glConfig) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".png\", file.loader);\n    if (file.loader) {\n      file.crossOrigin = file.loader.crossOrigin;\n    }\n    return new Promise((resolve, reject) => {\n      const textureManager = TextureManagerInstance.get();\n      if (textureManager.has(file.key)) {\n        resolve(file);\n      } else {\n        ImageTagLoader(file).then((file2) => {\n          textureManager.add(file2.key, file2.data, glConfig);\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n\n// src/cache/Cache.ts\nvar caches = new Map();\nvar Cache = {\n  get: (type) => {\n    if (!caches.has(type)) {\n      caches.set(type, new Map());\n    }\n    return caches.get(type);\n  },\n  getEntry: (cache, entry) => {\n    if (caches.has(cache)) {\n      return caches.get(cache).get(entry);\n    }\n  }\n};\n\n// src/loader/XHRLoader.ts\nfunction XHRLoader(file) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", file.url, true);\n  xhr.responseType = file.responseType;\n  return new Promise((resolve, reject) => {\n    xhr.onload = () => {\n      file.data = xhr.responseText;\n      file.hasLoaded = true;\n      resolve(file);\n    };\n    xhr.onerror = () => {\n      file.hasLoaded = true;\n      reject(file);\n    };\n    xhr.send();\n  });\n}\n\n// src/loader/files/JSONFile.ts\nfunction JSONFile(key, url) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".json\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"JSON\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          file2.data = JSON.parse(file2.data);\n          if (!file2.skipCache) {\n            cache.set(file2.key, file2.data);\n          }\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n\n// src/loader/files/AtlasFile.ts\nfunction AtlasFile(key, textureURL, atlasURL, glConfig) {\n  const json = JSONFile(key, atlasURL);\n  const image = ImageFile(key, textureURL, glConfig);\n  const file = new File(key, \"\");\n  file.load = () => {\n    json.url = GetURL(json.key, json.url, \".json\", file.loader);\n    image.url = GetURL(image.key, image.url, \".png\", file.loader);\n    return new Promise((resolve, reject) => {\n      json.skipCache = true;\n      json.load().then(() => {\n        image.load().then(() => {\n          AtlasParser(TextureManagerInstance.get().get(key), json.data);\n          resolve(file);\n        }).catch(() => {\n          reject(file);\n        });\n      }).catch(() => {\n        reject(file);\n      });\n    });\n  };\n  return file;\n}\n\n// src/textures/parsers/BitmapTextParser.ts\nfunction GetValue(node, attribute) {\n  return parseInt(node.getAttribute(attribute), 10);\n}\nfunction BitmapTextParser(texture, xml, frame2) {\n  const xSpacing = 0;\n  const ySpacing = 0;\n  const info = xml.getElementsByTagName(\"info\")[0];\n  const common = xml.getElementsByTagName(\"common\")[0];\n  const data = {\n    font: info.getAttribute(\"face\"),\n    size: GetValue(info, \"size\"),\n    lineHeight: GetValue(common, \"lineHeight\") + ySpacing,\n    chars: {}\n  };\n  const letters = xml.getElementsByTagName(\"char\");\n  for (let i = 0; i < letters.length; i++) {\n    const node = letters[i];\n    const charCode = GetValue(node, \"id\");\n    const x = GetValue(node, \"x\");\n    const y = GetValue(node, \"y\");\n    const width = GetValue(node, \"width\");\n    const height = GetValue(node, \"height\");\n    data.chars[charCode] = {\n      x,\n      y,\n      width,\n      height,\n      xOffset: GetValue(node, \"xoffset\"),\n      yOffset: GetValue(node, \"yoffset\"),\n      xAdvance: GetValue(node, \"xadvance\") + xSpacing,\n      kerning: {}\n    };\n    texture.addFrame(charCode, x, y, width, height);\n  }\n  const kernings = xml.getElementsByTagName(\"kerning\");\n  for (let i = 0; i < kernings.length; i++) {\n    const kern = kernings[i];\n    const first = GetValue(kern, \"first\");\n    const second = GetValue(kern, \"second\");\n    const amount = GetValue(kern, \"amount\");\n    data.chars[second].kerning[first] = amount;\n  }\n  return data;\n}\n\n// src/loader/files/XMLFile.ts\nfunction XMLFile(key, url) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".xml\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"XML\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          const xml = ParseXML(file2.data);\n          if (xml !== null) {\n            file2.data = xml;\n            if (!file2.skipCache) {\n              cache.set(file2.key, xml);\n            }\n            resolve(file2);\n          } else {\n            reject(file2);\n          }\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n\n// src/loader/files/BitmapTextFile.ts\nfunction BitmapTextFile(key, textureURL, fontDataURL, glConfig) {\n  const xml = XMLFile(key, fontDataURL);\n  const image = ImageFile(key, textureURL, glConfig);\n  const file = new File(key, \"\");\n  file.load = () => {\n    xml.url = GetURL(xml.key, xml.url, \".xml\", file.loader);\n    image.url = GetURL(image.key, image.url, \".png\", file.loader);\n    return new Promise((resolve, reject) => {\n      xml.skipCache = true;\n      xml.load().then(() => {\n        image.load().then(() => {\n          const texture = TextureManagerInstance.get().get(key);\n          const fontData = BitmapTextParser(texture, xml.data);\n          texture.data = fontData;\n          resolve(file);\n        }).catch(() => {\n          reject(file);\n        });\n      }).catch(() => {\n        reject(file);\n      });\n    });\n  };\n  return file;\n}\n\n// src/loader/files/CSVFile.ts\nfunction CSVFile(key, url) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".csv\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"CSV\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          if (!file2.skipCache) {\n            cache.set(file2.key, file2.data);\n          }\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n\n// src/loader/files/JSONGeometryFile.ts\nfunction JSONGeometryFile(key, url, mappingConfig) {\n  const file = new File(key, url);\n  const {\n    vertices = \"verts\",\n    normals = \"normals\",\n    uvs = \"uvs\",\n    numberOfVertices = 0\n  } = mappingConfig;\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".json\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"Geometry\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          const data = JSON.parse(file2.data);\n          const geom = new Geometry({\n            vertices: data[vertices],\n            normals: data[normals],\n            uvs: data[uvs],\n            numberOfVertices\n          });\n          file2.data = geom;\n          if (!file2.skipCache) {\n            cache.set(file2.key, geom);\n          }\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n\n// src/loader/files/OBJFile.ts\nfunction OBJFile(key, url) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".obj\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"Obj\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          if (!file2.skipCache) {\n            cache.set(file2.key, file2.data);\n          }\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n\n// src/loader/files/OBJGeometryFile.ts\nfunction OBJGeometryFile(key, url, flipUVs = true) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".obj\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"Geometry\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          const models = GetBufferFromObj(file2.data, flipUVs);\n          file2.data = models;\n          if (!file2.skipCache) {\n            let key2 = file2.key;\n            models.forEach((model, index) => {\n              if (index > 0) {\n                key2 = file2.key + index.toString();\n              }\n              const geom = new Geometry(model.buffer);\n              cache.set(key2, geom);\n            });\n          }\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n\n// src/textures/parsers/SpriteSheetParser.ts\nfunction SpriteSheetParser(texture, x, y, width, height, frameConfig) {\n  const {\n    frameWidth = null,\n    endFrame = -1,\n    margin = 0,\n    spacing = 0\n  } = frameConfig;\n  let {\n    frameHeight = null,\n    startFrame = 0\n  } = frameConfig;\n  if (!frameHeight) {\n    frameHeight = frameWidth;\n  }\n  if (frameWidth === null) {\n    throw new Error(\"SpriteSheetParser: Invalid frameWidth\");\n  }\n  const row = Math.floor((width - margin + spacing) / (frameWidth + spacing));\n  const column = Math.floor((height - margin + spacing) / (frameHeight + spacing));\n  let total = row * column;\n  if (total === 0) {\n    console.warn(\"SpriteSheetParser: Frame config will result in zero frames\");\n  }\n  if (startFrame > total || startFrame < -total) {\n    startFrame = 0;\n  }\n  if (startFrame < 0) {\n    startFrame = total + startFrame;\n  }\n  if (endFrame !== -1) {\n    total = startFrame + (endFrame + 1);\n  }\n  let fx = margin;\n  let fy = margin;\n  let ax = 0;\n  let ay = 0;\n  for (let i = 0; i < total; i++) {\n    ax = 0;\n    ay = 0;\n    const w = fx + frameWidth;\n    const h = fy + frameHeight;\n    if (w > width) {\n      ax = w - width;\n    }\n    if (h > height) {\n      ay = h - height;\n    }\n    texture.addFrame(i, x + fx, y + fy, frameWidth - ax, frameHeight - ay);\n    fx += frameWidth + spacing;\n    if (fx + frameWidth > width) {\n      fx = margin;\n      fy += frameHeight + spacing;\n    }\n  }\n}\n\n// src/loader/files/SpriteSheetFile.ts\nfunction SpriteSheetFile(key, url, frameConfig, glConfig) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".png\", file.loader);\n    if (file.loader) {\n      file.crossOrigin = file.loader.crossOrigin;\n    }\n    return new Promise((resolve, reject) => {\n      const textureManager = TextureManagerInstance.get();\n      if (textureManager.has(file.key)) {\n        resolve(file);\n      } else {\n        ImageTagLoader(file).then((file2) => {\n          const texture = textureManager.add(file2.key, file2.data, glConfig);\n          if (texture) {\n            SpriteSheetParser(texture, 0, 0, texture.width, texture.height, frameConfig);\n            resolve(file2);\n          } else {\n            reject(file2);\n          }\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n\n// src/loader/Loader.ts\nvar Loader = class extends EventEmitter {\n  constructor() {\n    super();\n    this.baseURL = \"\";\n    this.path = \"\";\n    this.crossOrigin = \"anonymous\";\n    this.maxParallelDownloads = -1;\n    this.isLoading = false;\n    this.reset();\n  }\n  reset() {\n    this.isLoading = false;\n    this.queue = new Set();\n    this.inflight = new Set();\n    this.completed = new Set();\n    this.progress = 0;\n  }\n  add(...file) {\n    file.forEach((entity) => {\n      entity.loader = this;\n      this.queue.add(entity);\n    });\n    return this;\n  }\n  start() {\n    if (this.isLoading) {\n      return null;\n    }\n    return new Promise((resolve, reject) => {\n      this.completed.clear();\n      this.progress = 0;\n      if (this.queue.size > 0) {\n        this.isLoading = true;\n        this.onComplete = resolve;\n        this.onError = reject;\n        Emit(this, \"start\");\n        this.nextFile();\n      } else {\n        this.progress = 1;\n        Emit(this, \"complete\");\n        resolve(this);\n      }\n    });\n  }\n  nextFile() {\n    let limit = this.queue.size;\n    if (this.maxParallelDownloads !== -1) {\n      limit = Math.min(limit, this.maxParallelDownloads) - this.inflight.size;\n    }\n    if (limit) {\n      const iterator = this.queue.values();\n      while (limit > 0) {\n        const file = iterator.next().value;\n        this.inflight.add(file);\n        this.queue.delete(file);\n        file.load().then((file2) => this.fileComplete(file2)).catch((file2) => this.fileError(file2));\n        limit--;\n      }\n    } else if (this.inflight.size === 0) {\n      this.stop();\n    }\n  }\n  stop() {\n    if (!this.isLoading) {\n      return;\n    }\n    this.isLoading = false;\n    Emit(this, \"complete\", this.completed);\n    this.onComplete();\n    this.completed.clear();\n  }\n  updateProgress(file) {\n    this.inflight.delete(file);\n    this.completed.add(file);\n    const totalCompleted = this.completed.size;\n    const totalQueued = this.queue.size + this.inflight.size;\n    if (totalCompleted > 0) {\n      this.progress = totalCompleted / (totalCompleted + totalQueued);\n    }\n    Emit(this, \"progress\", this.progress, totalCompleted, totalQueued);\n    this.nextFile();\n  }\n  fileComplete(file) {\n    Emit(this, \"filecomplete\", file);\n    this.updateProgress(file);\n  }\n  fileError(file) {\n    Emit(this, \"fileerror\", file);\n    this.updateProgress(file);\n  }\n  totalFilesToLoad() {\n    return this.queue.size + this.inflight.size;\n  }\n  setBaseURL(url = \"\") {\n    if (url !== \"\" && url.substr(-1) !== \"/\") {\n      url = url.concat(\"/\");\n    }\n    this.baseURL = url;\n    return this;\n  }\n  setPath(path = \"\") {\n    if (path !== \"\" && path.substr(-1) !== \"/\") {\n      path = path.concat(\"/\");\n    }\n    this.path = path;\n    return this;\n  }\n  setCORS(crossOrigin) {\n    this.crossOrigin = crossOrigin;\n    return this;\n  }\n  setMaxParallelDownloads(max) {\n    this.maxParallelDownloads = max;\n    return this;\n  }\n};\n\n// src/materials3d/index.ts\nvar materials3d_exports = {};\n__export(materials3d_exports, {\n  BlackPlastic: () => BlackPlastic,\n  BlackRubber: () => BlackRubber,\n  Brass: () => Brass,\n  Bronze: () => Bronze,\n  Chrome: () => Chrome,\n  Copper: () => Copper,\n  CyanPlastic: () => CyanPlastic,\n  CyanRubber: () => CyanRubber,\n  Emerald: () => Emerald,\n  Gold: () => Gold,\n  GreenPlastic: () => GreenPlastic,\n  GreenRubber: () => GreenRubber,\n  Jade: () => Jade,\n  Obsidian: () => Obsidian,\n  Pearl: () => Pearl,\n  RedPlastic: () => RedPlastic,\n  RedRubber: () => RedRubber,\n  Ruby: () => Ruby,\n  Silver: () => Silver,\n  Turquoise: () => Turquoise,\n  WhitePlastic: () => WhitePlastic,\n  WhiteRubber: () => WhiteRubber,\n  YellowPlastic: () => YellowPlastic,\n  YellowRubber: () => YellowRubber\n});\n\n// src/materials3d/BlackPlastic.ts\nvar BlackPlastic = new Material({\n  ambient: [0, 0, 0],\n  diffuse: [0.01, 0.01, 0.01],\n  specular: [0.5, 0.5, 0.5],\n  shine: 0.25\n});\n\n// src/materials3d/BlackRubber.ts\nvar BlackRubber = new Material({\n  ambient: [0.02, 0.02, 0.02],\n  diffuse: [0.01, 0.01, 0.01],\n  specular: [0.4, 0.4, 0.4],\n  shine: 0.078125\n});\n\n// src/materials3d/Brass.ts\nvar Brass = new Material({\n  ambient: [0.329412, 0.223529, 0.027451],\n  diffuse: [0.780392, 0.568627, 0.113725],\n  specular: [0.992157, 0.941176, 0.807843],\n  shine: 0.21794872\n});\n\n// src/materials3d/Bronze.ts\nvar Bronze = new Material({\n  ambient: [0.2125, 0.1275, 0.054],\n  diffuse: [0.714, 0.4284, 0.18144],\n  specular: [0.393548, 0.271906, 0.166721],\n  shine: 0.2\n});\n\n// src/materials3d/Chrome.ts\nvar Chrome = new Material({\n  ambient: [0.25, 0.25, 0.25],\n  diffuse: [0.4, 0.4, 0.4],\n  specular: [0.774597, 0.774597, 0.774597],\n  shine: 0.6\n});\n\n// src/materials3d/Copper.ts\nvar Copper = new Material({\n  ambient: [0.19125, 0.0735, 0.0225],\n  diffuse: [0.7038, 0.27048, 0.0828],\n  specular: [0.256777, 0.137622, 0.086014],\n  shine: 0.1\n});\n\n// src/materials3d/CyanPlastic.ts\nvar CyanPlastic = new Material({\n  ambient: [0, 0.1, 0.06],\n  diffuse: [0, 0.50980392, 0.50980392],\n  specular: [0.50196078, 0.50196078, 0.50196078],\n  shine: 0.25\n});\n\n// src/materials3d/CyanRubber.ts\nvar CyanRubber = new Material({\n  ambient: [0, 0.05, 0.05],\n  diffuse: [0.4, 0.5, 0.5],\n  specular: [0.04, 0.7, 0.7],\n  shine: 0.078125\n});\n\n// src/materials3d/Emerald.ts\nvar Emerald = new Material({\n  ambient: [0.0215, 0.1745, 0.0215],\n  diffuse: [0.07568, 0.61424, 0.07568],\n  specular: [0.633, 0.727811, 0.633],\n  shine: 0.6\n});\n\n// src/materials3d/Gold.ts\nvar Gold = new Material({\n  ambient: [0.24725, 0.1995, 0.0745],\n  diffuse: [0.75164, 0.60648, 0.22648],\n  specular: [0.628281, 0.555802, 0.366065],\n  shine: 0.4\n});\n\n// src/materials3d/GreenPlastic.ts\nvar GreenPlastic = new Material({\n  ambient: [0, 0, 0],\n  diffuse: [0.1, 0.35, 0.1],\n  specular: [0.45, 0.55, 0.45],\n  shine: 0.25\n});\n\n// src/materials3d/GreenRubber.ts\nvar GreenRubber = new Material({\n  ambient: [0, 0.05, 0],\n  diffuse: [0.4, 0.5, 0.4],\n  specular: [0.04, 0.7, 0.04],\n  shine: 0.078125\n});\n\n// src/materials3d/Jade.ts\nvar Jade = new Material({\n  ambient: [0.135, 0.2225, 0.1575],\n  diffuse: [0.54, 0.89, 0.63],\n  specular: [0.316228, 0.316228, 0.316228],\n  shine: 0.1\n});\n\n// src/materials3d/Obsidian.ts\nvar Obsidian = new Material({\n  ambient: [0.05375, 0.05, 0.06625],\n  diffuse: [0.18275, 0.17, 0.22525],\n  specular: [0.332741, 0.328634, 0.346435],\n  shine: 0.3\n});\n\n// src/materials3d/Pearl.ts\nvar Pearl = new Material({\n  ambient: [0.25, 0.20725, 0.20725],\n  diffuse: [1, 0.829, 0.829],\n  specular: [0.296648, 0.296648, 0.296648],\n  shine: 0.088\n});\n\n// src/materials3d/RedPlastic.ts\nvar RedPlastic = new Material({\n  ambient: [0, 0, 0],\n  diffuse: [0.5, 0, 0],\n  specular: [0.7, 0.6, 0.6],\n  shine: 0.25\n});\n\n// src/materials3d/RedRubber.ts\nvar RedRubber = new Material({\n  ambient: [0.05, 0, 0],\n  diffuse: [0.5, 0.4, 0.4],\n  specular: [0.7, 0.04, 0.04],\n  shine: 0.078125\n});\n\n// src/materials3d/Ruby.ts\nvar Ruby = new Material({\n  ambient: [0.1745, 0.01175, 0.01175],\n  diffuse: [0.61424, 0.04136, 0.04136],\n  specular: [0.727811, 0.626959, 0.626959],\n  shine: 0.6\n});\n\n// src/materials3d/Silver.ts\nvar Silver = new Material({\n  ambient: [0.19225, 0.19225, 0.19225],\n  diffuse: [0.50754, 0.50754, 0.50754],\n  specular: [0.508273, 0.508273, 0.508273],\n  shine: 0.4\n});\n\n// src/materials3d/Turquoise.ts\nvar Turquoise = new Material({\n  ambient: [0.1, 0.18725, 0.1745],\n  diffuse: [0.396, 0.74151, 0.69102],\n  specular: [0.297254, 0.30829, 0.306678],\n  shine: 0.1\n});\n\n// src/materials3d/WhitePlastic.ts\nvar WhitePlastic = new Material({\n  ambient: [0, 0, 0],\n  diffuse: [0.55, 0.55, 0.55],\n  specular: [0.7, 0.7, 0.7],\n  shine: 0.25\n});\n\n// src/materials3d/WhiteRubber.ts\nvar WhiteRubber = new Material({\n  ambient: [0.05, 0.05, 0.05],\n  diffuse: [0.5, 0.5, 0.5],\n  specular: [0.7, 0.7, 0.7],\n  shine: 0.078125\n});\n\n// src/materials3d/YellowPlastic.ts\nvar YellowPlastic = new Material({\n  ambient: [0, 0, 0],\n  diffuse: [0.5, 0.5, 0],\n  specular: [0.6, 0.6, 0.5],\n  shine: 0.25\n});\n\n// src/materials3d/YellowRubber.ts\nvar YellowRubber = new Material({\n  ambient: [0.05, 0.05, 0],\n  diffuse: [0.5, 0.5, 0.4],\n  specular: [0.7, 0.7, 0.04],\n  shine: 0.078125\n});\n\n// src/textures/index.ts\nvar textures_exports = {};\n__export(textures_exports, {\n  CreateCanvas: () => CreateCanvas,\n  Frame: () => Frame,\n  GetFrames: () => GetFrames,\n  GetFramesInRange: () => GetFramesInRange,\n  Palettes: () => palettes_exports,\n  Parsers: () => parsers_exports,\n  SetFilter: () => SetFilter,\n  Texture: () => Texture,\n  TextureManager: () => TextureManager,\n  Types: () => types_exports\n});\n\n// src/textures/palettes/index.ts\nvar palettes_exports = {};\n__export(palettes_exports, {\n  Arne16: () => Arne16,\n  C64: () => C64,\n  CGA: () => CGA,\n  JMP: () => JMP,\n  MSX: () => MSX,\n  PICO8: () => PICO8\n});\n\n// src/textures/palettes/Arne16.ts\nvar Arne16 = [\n  \"#000\",\n  \"#9D9D9D\",\n  \"#FFF\",\n  \"#BE2633\",\n  \"#E06F8B\",\n  \"#493C2B\",\n  \"#A46422\",\n  \"#EB8931\",\n  \"#F7E26B\",\n  \"#2F484E\",\n  \"#44891A\",\n  \"#A3CE27\",\n  \"#1B2632\",\n  \"#005784\",\n  \"#31A2F2\",\n  \"#B2DCEF\"\n];\n\n// src/textures/palettes/C64.ts\nvar C64 = [\n  \"#000\",\n  \"#fff\",\n  \"#8b4131\",\n  \"#7bbdc5\",\n  \"#8b41ac\",\n  \"#6aac41\",\n  \"#3931a4\",\n  \"#d5de73\",\n  \"#945a20\",\n  \"#5a4100\",\n  \"#bd736a\",\n  \"#525252\",\n  \"#838383\",\n  \"#acee8b\",\n  \"#7b73de\",\n  \"#acacac\"\n];\n\n// src/textures/palettes/CGA.ts\nvar CGA = [\n  \"#000\",\n  \"#2234d1\",\n  \"#0c7e45\",\n  \"#44aacc\",\n  \"#8a3622\",\n  \"#5c2e78\",\n  \"#aa5c3d\",\n  \"#b5b5b5\",\n  \"#5e606e\",\n  \"#4c81fb\",\n  \"#6cd947\",\n  \"#7be2f9\",\n  \"#eb8a60\",\n  \"#e23d69\",\n  \"#ffd93f\",\n  \"#fff\"\n];\n\n// src/textures/palettes/JMP.ts\nvar JMP = [\n  \"#000\",\n  \"#191028\",\n  \"#46af45\",\n  \"#a1d685\",\n  \"#453e78\",\n  \"#7664fe\",\n  \"#833129\",\n  \"#9ec2e8\",\n  \"#dc534b\",\n  \"#e18d79\",\n  \"#d6b97b\",\n  \"#e9d8a1\",\n  \"#216c4b\",\n  \"#d365c8\",\n  \"#afaab9\",\n  \"#f5f4eb\"\n];\n\n// src/textures/palettes/MSX.ts\nvar MSX = [\n  \"#000\",\n  \"#191028\",\n  \"#46af45\",\n  \"#a1d685\",\n  \"#453e78\",\n  \"#7664fe\",\n  \"#833129\",\n  \"#9ec2e8\",\n  \"#dc534b\",\n  \"#e18d79\",\n  \"#d6b97b\",\n  \"#e9d8a1\",\n  \"#216c4b\",\n  \"#d365c8\",\n  \"#afaab9\",\n  \"#fff\"\n];\n\n// src/textures/palettes/PICO8.ts\nvar PICO8 = [\n  \"#000\",\n  \"#1D2B53\",\n  \"#7E2553\",\n  \"#008751\",\n  \"#AB5236\",\n  \"#5F574F\",\n  \"#C2C3C7\",\n  \"#FFF1E8\",\n  \"#FF004D\",\n  \"#FFA300\",\n  \"#FFEC27\",\n  \"#00E436\",\n  \"#29ADFF\",\n  \"#83769C\",\n  \"#FF77A8\",\n  \"#FFCCAA\"\n];\n\n// src/textures/parsers/index.ts\nvar parsers_exports = {};\n__export(parsers_exports, {\n  AtlasParser: () => AtlasParser,\n  BitmapTextParser: () => BitmapTextParser,\n  SpriteSheetParser: () => SpriteSheetParser\n});\n\n// src/textures/types/index.ts\nvar types_exports = {};\n__export(types_exports, {\n  CanvasTexture: () => CanvasTexture,\n  GridTexture: () => GridTexture,\n  PixelTexture: () => PixelTexture,\n  RenderTexture: () => RenderTexture,\n  SolidColorTexture: () => SolidColorTexture\n});\n\n// src/textures/types/GridTexture.ts\nfunction GridTexture(color1, color2, width = 32, height = 32, cols = 2, rows = 2) {\n  const ctx = CreateCanvas(width, height);\n  const colWidth = width / cols;\n  const rowHeight = height / rows;\n  ctx.fillStyle = color1;\n  ctx.fillRect(0, 0, width, height);\n  ctx.fillStyle = color2;\n  for (let y = 0; y < rows; y++) {\n    for (let x = y % 2; x < cols; x += 2) {\n      ctx.fillRect(x * colWidth, y * rowHeight, colWidth, rowHeight);\n    }\n  }\n  return new Texture(ctx.canvas);\n}\n\n// src/textures/types/PixelTexture.ts\nfunction PixelTexture(config) {\n  const {\n    data = [],\n    palette = Arne16,\n    pixelWidth = 1,\n    pixelHeight = pixelWidth,\n    preRender = null,\n    postRender = null\n  } = config;\n  let {\n    canvas = null,\n    resizeCanvas = true,\n    clearCanvas = true\n  } = config;\n  const width = Math.floor(Math.abs(data[0].length * pixelWidth));\n  const height = Math.floor(Math.abs(data.length * pixelHeight));\n  if (!canvas) {\n    canvas = CreateCanvas(width, height).canvas;\n    resizeCanvas = false;\n    clearCanvas = false;\n  }\n  if (resizeCanvas) {\n    canvas.width = width;\n    canvas.height = height;\n  }\n  const ctx = canvas.getContext(\"2d\");\n  if (clearCanvas) {\n    ctx.clearRect(0, 0, width, height);\n  }\n  if (preRender) {\n    preRender(canvas, ctx);\n  }\n  for (let y = 0; y < data.length; y++) {\n    const row = data[y];\n    for (let x = 0; x < row.length; x++) {\n      const d = row[x];\n      if (d !== \".\" && d !== \" \") {\n        ctx.fillStyle = palette[parseInt(\"0x\" + d.toUpperCase())];\n        ctx.fillRect(x * pixelWidth, y * pixelHeight, pixelWidth, pixelHeight);\n      }\n    }\n  }\n  if (postRender) {\n    postRender(canvas, ctx);\n  }\n  return new Texture(canvas);\n}\n\n// src/textures/types/RenderTexture.ts\nvar RenderTexture = class extends Texture {\n  constructor(renderer, width = 256, height = width) {\n    super(null, width, height);\n    this.renderer = renderer;\n  }\n  cls() {\n    return this;\n  }\n  batchStart() {\n    return this;\n  }\n  batchDraw(sprites) {\n    for (let i = 0, len = sprites.length; i < len; i++) {\n    }\n    return this;\n  }\n  batchEnd() {\n    const renderer = this.renderer;\n    renderer.reset();\n    return this;\n  }\n  draw(...sprites) {\n    this.batchStart();\n    this.batchDraw(sprites);\n    this.batchEnd();\n    return this;\n  }\n};\n\n// src/textures/types/SolidColorTexture.ts\nfunction SolidColorTexture(color = \"rgba(0,0,0,0)\", width = 32, height = 32) {\n  const ctx = CreateCanvas(width, height);\n  ctx.fillStyle = color;\n  ctx.fillRect(0, 0, width, height);\n  return new Texture(ctx.canvas);\n}\n\n// src/textures/GetFrames.ts\nfunction GetFrames(texture, frames) {\n  const output = [];\n  frames.forEach((key) => {\n    output.push(texture.getFrame(key));\n  });\n  return output;\n}\n\n// src/textures/GetFramesInRange.ts\nfunction GetFramesInRange(texture, config) {\n  const {\n    prefix = \"\",\n    start = 0,\n    zeroPad = 0,\n    suffix = \"\"\n  } = config;\n  let end = config.end;\n  const output = [];\n  const diff = start < end ? 1 : -1;\n  end += diff;\n  for (let i = start; i !== end; i += diff) {\n    const frameKey = prefix + i.toString().padStart(zeroPad, \"0\") + suffix;\n    output.push(texture.getFrame(frameKey));\n  }\n  return output;\n}\n\n// src/textures/SetFilter.ts\nfunction SetFilter(linear, ...textures) {\n  textures.forEach((texture) => {\n    if (texture.binding) {\n      texture.binding.setFilter(linear);\n    }\n  });\n  return textures;\n}\n\n// src/textures/TextureManager.ts\nvar TextureManager = class {\n  constructor() {\n    this.textures = new Map();\n    this.createDefaultTextures();\n    TextureManagerInstance.set(this);\n  }\n  createDefaultTextures() {\n    this.add(\"__BLANK\", new Texture(CreateCanvas(32, 32).canvas));\n    const missing = CreateCanvas(32, 32);\n    missing.strokeStyle = \"#0f0\";\n    missing.moveTo(0, 0);\n    missing.lineTo(32, 32);\n    missing.stroke();\n    missing.strokeRect(0.5, 0.5, 31, 31);\n    this.add(\"__MISSING\", new Texture(missing.canvas));\n    const white = CreateCanvas(32, 32);\n    white.fillStyle = \"#fff\";\n    white.fillRect(0, 0, 32, 32);\n    this.add(\"__WHITE\", new Texture(white.canvas));\n  }\n  get(key) {\n    const textures = this.textures;\n    if (textures.has(key)) {\n      return textures.get(key);\n    } else {\n      return textures.get(\"__MISSING\");\n    }\n  }\n  has(key) {\n    return this.textures.has(key);\n  }\n  add(key, source, glConfig) {\n    let texture;\n    const textures = this.textures;\n    if (!textures.has(key)) {\n      if (source instanceof Texture) {\n        texture = source;\n      } else {\n        texture = new Texture(source, 0, 0, glConfig);\n      }\n      texture.key = key;\n      textures.set(key, texture);\n    }\n    return texture;\n  }\n};\n\n// src/time/index.ts\nvar time_exports = {};\n__export(time_exports, {\n  AddDelayedCall: () => AddDelayedCall,\n  AddTimer: () => AddTimer,\n  Clock: () => Clock,\n  NOOP: () => NOOP2\n});\n\n// src/time/NOOP.ts\nfunction NOOP2() {\n}\n\n// src/time/AddTimer.ts\nfunction AddTimer(clock, config) {\n  const {\n    duration = 0,\n    repeat = 0,\n    delay = -1,\n    onStart = NOOP2,\n    onUpdate = NOOP2,\n    onRepeat = NOOP2,\n    onComplete = NOOP2\n  } = config;\n  const timer = {\n    elapsed: duration,\n    duration,\n    repeat,\n    delay,\n    update: null,\n    onStart,\n    onUpdate,\n    onRepeat,\n    onComplete\n  };\n  timer.update = (delta) => {\n    if (timer.delay > 0) {\n      timer.delay -= delta;\n      if (timer.delay < 0) {\n        timer.delay = 0;\n      } else {\n        return false;\n      }\n    }\n    if (timer.delay === 0) {\n      timer.onStart();\n      timer.delay = -1;\n    }\n    if (timer.delay === -1) {\n      timer.elapsed -= delta;\n      timer.onUpdate(delta, timer.elapsed / timer.duration);\n      if (timer.elapsed <= 0) {\n        if (timer.repeat > 0) {\n          timer.repeat--;\n          timer.elapsed = timer.duration;\n          timer.onRepeat(timer.repeat);\n        } else {\n          timer.elapsed = 0;\n          timer.onComplete();\n        }\n      }\n    }\n    return timer.elapsed === 0;\n  };\n  clock.events.add(timer);\n}\n\n// src/time/AddDelayedCall.ts\nfunction AddDelayedCall(clock, delay, callback) {\n  AddTimer(clock, {\n    duration: 0,\n    delay,\n    onComplete: callback\n  });\n}\n\n// src/time/Clock.ts\nvar Clock = class {\n  constructor(world) {\n    this.world = world;\n    this.timeScale = 1;\n    this.events = new Set();\n  }\n  update(delta, time) {\n    this.now = time;\n    delta *= this.timeScale;\n    this.events.forEach((timer) => {\n      if (timer.update(delta)) {\n        this.events.delete(timer);\n      }\n    });\n  }\n};\n\n// src/world/index.ts\nvar world_exports = {};\n__export(world_exports, {\n  BaseWorld: () => BaseWorld,\n  BuildRenderList: () => BuildRenderList,\n  CalculateTotalRenderable: () => CalculateTotalRenderable,\n  CreateWorldRenderData: () => CreateWorldRenderData,\n  Events: () => events_exports2,\n  HasDirtyChildren: () => HasDirtyChildren,\n  MergeRenderData: () => MergeRenderData,\n  ResetWorldRenderData: () => ResetWorldRenderData,\n  StaticWorld: () => StaticWorld,\n  UpdateCachedLayers: () => UpdateCachedLayers,\n  World: () => World,\n  WorldDepthFirstSearch: () => WorldDepthFirstSearch\n});\n\n// src/world/events/index.ts\nvar events_exports2 = {};\n__export(events_exports2, {\n  WorldRenderEvent: () => WorldRenderEvent,\n  WorldShutdownEvent: () => WorldShutdownEvent\n});\n\n// src/world/events/WorldRenderEvent.ts\nvar WorldRenderEvent = \"worldrender\";\n\n// src/world/events/WorldShutdownEvent.ts\nvar WorldShutdownEvent = \"worldshutdown\";\n\n// src/world/CalculateTotalRenderable.ts\nfunction CalculateTotalRenderable(entry, renderData) {\n  renderData.numRendered++;\n  renderData.numRenderable++;\n  if (entry.node.dirtyFrame >= renderData.gameFrame) {\n    renderData.dirtyFrame++;\n  }\n  entry.children.forEach((child) => {\n    if (child.children.length > 0) {\n      CalculateTotalRenderable(child, renderData);\n    }\n  });\n}\n\n// src/world/HasDirtyChildren.ts\nfunction HasDirtyChildren(parent) {\n  if (parent.node.isDirty(DIRTY_CONST.CHILD_CACHE)) {\n    return true;\n  }\n  const stack = [parent];\n  while (stack.length > 0) {\n    const entry = stack.pop();\n    if (entry.node.isDirty(DIRTY_CONST.TRANSFORM)) {\n      return true;\n    }\n    const numChildren = entry.children.length;\n    if (numChildren > 0) {\n      for (let i = 0; i < numChildren; i++) {\n        stack.push(entry.children[i]);\n      }\n    }\n  }\n  stack.length = 0;\n  return false;\n}\n\n// src/world/UpdateCachedLayers.ts\nfunction UpdateCachedLayers(cachedLayers, dirtyCamera) {\n  cachedLayers.forEach((layer) => {\n    if (dirtyCamera || HasDirtyChildren(layer)) {\n      layer.node.setDirty(DIRTY_CONST.CHILD_CACHE);\n    } else {\n      layer.children.length = 0;\n    }\n  });\n}\n\n// src/world/WorldDepthFirstSearch.ts\nfunction WorldDepthFirstSearch(cachedLayers, parent, output = []) {\n  for (let i = 0; i < parent.numChildren; i++) {\n    const node = parent.children[i];\n    if (node.isRenderable()) {\n      const children = [];\n      const entry = {node, children};\n      output.push(entry);\n      if (node.willRenderChildren && node.numChildren > 0) {\n        if (node.willCacheChildren) {\n          cachedLayers.push(entry);\n        }\n        WorldDepthFirstSearch(cachedLayers, node, children);\n      }\n    }\n  }\n  return output;\n}\n\n// src/world/BuildRenderList.ts\nfunction BuildRenderList(world) {\n  const cachedLayers = [];\n  const stack = [];\n  const entries = WorldDepthFirstSearch(cachedLayers, world, stack);\n  const renderData = world.renderData;\n  if (cachedLayers.length > 0) {\n    UpdateCachedLayers(cachedLayers, world.camera.dirtyRender);\n  }\n  entries.forEach((entry) => {\n    if (entry.children.length > 0) {\n      CalculateTotalRenderable(entry, renderData);\n    } else {\n      renderData.numRendered++;\n      renderData.numRenderable++;\n      if (entry.node.dirtyFrame >= renderData.gameFrame) {\n        renderData.dirtyFrame++;\n      }\n    }\n  });\n  world.renderList = entries;\n  if (world.forceRefresh) {\n    renderData.dirtyFrame++;\n    world.forceRefresh = false;\n  }\n}\n\n// src/world/MergeRenderData.ts\nfunction MergeRenderData(sceneRenderData, worldRenderData) {\n  sceneRenderData.numDirtyFrames += worldRenderData.dirtyFrame;\n  sceneRenderData.numTotalFrames += worldRenderData.numRendered;\n  if (worldRenderData.camera.dirtyRender) {\n    sceneRenderData.numDirtyCameras++;\n  }\n  sceneRenderData.worldData.push(worldRenderData);\n}\n\n// src/world/ResetWorldRenderData.ts\nfunction ResetWorldRenderData(renderData, gameFrame) {\n  renderData.gameFrame = gameFrame;\n  renderData.dirtyFrame = 0;\n  renderData.numRendered = 0;\n  renderData.numRenderable = 0;\n}\n\n// src/world/BaseWorld.ts\nvar BaseWorld = class extends GameObject {\n  constructor(scene) {\n    super();\n    this.forceRefresh = false;\n    this.is3D = false;\n    this.type = \"BaseWorld\";\n    this.scene = scene;\n    this.world = this;\n    this.events = new Map();\n    this.renderList = [];\n    this._updateListener = On(scene, \"update\", (delta, time) => this.update(delta, time));\n    this._renderListener = On(scene, \"render\", (renderData) => this.render(renderData));\n    this._shutdownListener = On(scene, \"shutdown\", () => this.shutdown());\n    Once(scene, \"destroy\", () => this.destroy());\n  }\n  update(delta, time) {\n    if (!this.willUpdate) {\n      return;\n    }\n    Emit(this, UpdateEvent, delta, time, this);\n    super.update(delta, time);\n  }\n  postUpdate(delta, time) {\n    Emit(this, PostUpdateEvent, delta, time, this);\n  }\n  render(sceneRenderData) {\n    const renderData = this.renderData;\n    ResetWorldRenderData(renderData, sceneRenderData.gameFrame);\n    if (!this.willRender || !this.visible) {\n      return;\n    }\n    BuildRenderList(this);\n    Emit(this, WorldRenderEvent, renderData, this);\n    MergeRenderData(sceneRenderData, renderData);\n    this.camera.dirtyRender = false;\n  }\n  renderGL(renderPass) {\n    const currentCamera = renderPass.current2DCamera;\n    const camera = this.camera;\n    if (!currentCamera || !Mat2dEquals(camera.worldTransform, currentCamera.worldTransform)) {\n      Flush(renderPass);\n    }\n    Begin(renderPass, camera);\n    this.renderList.forEach((entry) => {\n      if (entry.children.length > 0) {\n        this.renderNode(entry, renderPass);\n      } else {\n        entry.node.renderGL(renderPass);\n      }\n    });\n  }\n  renderNode(entry, renderPass) {\n    entry.node.renderGL(renderPass);\n    entry.children.forEach((child) => {\n      if (child.children.length > 0) {\n        this.renderNode(child, renderPass);\n      } else {\n        child.node.renderGL(renderPass);\n      }\n    });\n    entry.node.postRenderGL(renderPass);\n  }\n  postRenderGL(renderPass) {\n  }\n  shutdown() {\n    const scene = this.scene;\n    Off(scene, \"update\", this._updateListener);\n    Off(scene, \"render\", this._renderListener);\n    Off(scene, \"shutdown\", this._shutdownListener);\n    RemoveChildren(this);\n    Emit(this, WorldShutdownEvent, this);\n    ResetWorldRenderData(this.renderData, 0);\n    if (this.camera) {\n      this.camera.reset();\n    }\n  }\n  destroy(reparentChildren) {\n    super.destroy(reparentChildren);\n    Emit(this, DestroyEvent, this);\n    ResetWorldRenderData(this.renderData, 0);\n    if (this.camera) {\n      this.camera.destroy();\n    }\n    this.events.clear();\n    this.camera = null;\n    this.renderData = null;\n    this.events = null;\n  }\n};\n\n// src/world/CreateWorldRenderData.ts\nfunction CreateWorldRenderData(world, camera) {\n  return {\n    world,\n    camera,\n    gameFrame: 0,\n    dirtyFrame: 0,\n    numRendered: 0,\n    numRenderable: 0\n  };\n}\n\n// src/world/StaticWorld.ts\nvar StaticWorld = class extends BaseWorld {\n  constructor(scene) {\n    super(scene);\n    this.type = \"StaticWorld\";\n    this.camera = new StaticCamera();\n    this.renderData = CreateWorldRenderData(this, this.camera);\n  }\n};\n\n// src/world/World.ts\nvar World = class extends BaseWorld {\n  constructor(scene) {\n    super(scene);\n    this.enableCameraCull = true;\n    this.type = \"World\";\n    this.camera = new Camera();\n    this.renderData = CreateWorldRenderData(this, this.camera);\n  }\n};\n\n// src/world3d/index.ts\nvar world3d_exports = {};\n__export(world3d_exports, {\n  BaseWorld3D: () => BaseWorld3D,\n  BuildRenderList: () => BuildRenderList2,\n  CalculateTotalRenderable: () => CalculateTotalRenderable2,\n  CreateWorld3DRenderData: () => CreateWorld3DRenderData,\n  Events: () => events_exports3,\n  HasDirtyChildren: () => HasDirtyChildren2,\n  MergeRenderData: () => MergeRenderData2,\n  ResetWorld3DRenderData: () => ResetWorld3DRenderData,\n  UpdateCachedLayers: () => UpdateCachedLayers2,\n  World3D: () => World3D,\n  WorldDepthFirstSearch: () => WorldDepthFirstSearch2\n});\n\n// src/world3d/events/index.ts\nvar events_exports3 = {};\n__export(events_exports3, {\n  World3DRenderEvent: () => World3DRenderEvent,\n  World3DShutdownEvent: () => World3DShutdownEvent\n});\n\n// src/world3d/events/World3DRenderEvent.ts\nvar World3DRenderEvent = \"worldrender\";\n\n// src/world3d/events/World3DShutdownEvent.ts\nvar World3DShutdownEvent = \"worldshutdown\";\n\n// src/world3d/CalculateTotalRenderable.ts\nfunction CalculateTotalRenderable2(entry, renderData) {\n  renderData.numRendered++;\n  renderData.numRenderable++;\n  if (entry.node.dirtyFrame >= renderData.gameFrame) {\n    renderData.dirtyFrame++;\n  }\n  entry.children.forEach((child) => {\n    if (child.children.length > 0) {\n      CalculateTotalRenderable2(child, renderData);\n    }\n  });\n}\n\n// src/world3d/HasDirtyChildren.ts\nfunction HasDirtyChildren2(parent) {\n  if (parent.node.isDirty(DIRTY_CONST.CHILD_CACHE)) {\n    return true;\n  }\n  const stack = [parent];\n  while (stack.length > 0) {\n    const entry = stack.pop();\n    if (entry.node.isDirty(DIRTY_CONST.TRANSFORM)) {\n      return true;\n    }\n    const numChildren = entry.children.length;\n    if (numChildren > 0) {\n      for (let i = 0; i < numChildren; i++) {\n        stack.push(entry.children[i]);\n      }\n    }\n  }\n  stack.length = 0;\n  return false;\n}\n\n// src/world3d/UpdateCachedLayers.ts\nfunction UpdateCachedLayers2(cachedLayers, dirtyCamera) {\n  cachedLayers.forEach((layer) => {\n    if (dirtyCamera || HasDirtyChildren2(layer)) {\n      layer.node.setDirty(DIRTY_CONST.CHILD_CACHE);\n    } else {\n      layer.children.length = 0;\n    }\n  });\n}\n\n// src/world3d/WorldDepthFirstSearch.ts\nfunction WorldDepthFirstSearch2(cachedLayers, parent, output = []) {\n  for (let i = 0; i < parent.numChildren; i++) {\n    const node = parent.children[i];\n    if (node.isRenderable()) {\n      const children = [];\n      const entry = {node, children};\n      output.push(entry);\n      if (node.willRenderChildren && node.numChildren > 0) {\n        if (node.willCacheChildren) {\n          cachedLayers.push(entry);\n        }\n        WorldDepthFirstSearch2(cachedLayers, node, children);\n      }\n    }\n  }\n  return output;\n}\n\n// src/world3d/BuildRenderList.ts\nfunction BuildRenderList2(world) {\n  const cachedLayers = [];\n  const stack = [];\n  const entries = WorldDepthFirstSearch2(cachedLayers, world, stack);\n  const renderData = world.renderData;\n  if (cachedLayers.length > 0) {\n    UpdateCachedLayers2(cachedLayers, world.camera.dirtyRender);\n  }\n  entries.forEach((entry) => {\n    if (entry.children.length > 0) {\n      CalculateTotalRenderable2(entry, renderData);\n    } else {\n      renderData.numRendered++;\n      renderData.numRenderable++;\n      if (entry.node.dirtyFrame >= renderData.gameFrame) {\n        renderData.dirtyFrame++;\n      }\n    }\n  });\n  world.renderList = entries;\n  if (world.forceRefresh) {\n    renderData.dirtyFrame++;\n    world.forceRefresh = false;\n  }\n}\n\n// src/world3d/MergeRenderData.ts\nfunction MergeRenderData2(sceneRenderData, worldRenderData) {\n  sceneRenderData.numDirtyFrames += worldRenderData.dirtyFrame;\n  sceneRenderData.numTotalFrames += worldRenderData.numRendered;\n  if (worldRenderData.camera.dirtyRender) {\n    sceneRenderData.numDirtyCameras++;\n  }\n  sceneRenderData.worldData.push(worldRenderData);\n}\n\n// src/world3d/ResetWorld3DRenderData.ts\nfunction ResetWorld3DRenderData(renderData, gameFrame) {\n  renderData.gameFrame = gameFrame;\n  renderData.dirtyFrame = 0;\n  renderData.numRendered = 0;\n  renderData.numRenderable = 0;\n}\n\n// src/world3d/BaseWorld3D.ts\nvar BaseWorld3D = class extends GameObject3D {\n  constructor(scene) {\n    super();\n    this.forceRefresh = false;\n    this.is3D = true;\n    this.type = \"BaseWorld\";\n    this.scene = scene;\n    this.world = this;\n    this.events = new Map();\n    this.renderList = [];\n    this._updateListener = On(scene, \"update\", (delta, time) => this.update(delta, time));\n    this._renderListener = On(scene, \"render\", (renderData) => this.render(renderData));\n    this._shutdownListener = On(scene, \"shutdown\", () => this.shutdown());\n    Once(scene, \"destroy\", () => this.destroy());\n  }\n  update(delta, time) {\n    if (!this.willUpdate) {\n      return;\n    }\n    Emit(this, UpdateEvent, delta, time, this);\n    super.update(delta, time);\n  }\n  postUpdate(delta, time) {\n    Emit(this, PostUpdateEvent, delta, time, this);\n  }\n  render(sceneRenderData) {\n    const renderData = this.renderData;\n    ResetWorld3DRenderData(renderData, sceneRenderData.gameFrame);\n    if (!this.willRender || !this.visible) {\n      return;\n    }\n    BuildRenderList2(this);\n    Emit(this, World3DRenderEvent, renderData, this);\n    MergeRenderData2(sceneRenderData, renderData);\n  }\n  renderNode(entry, renderPass) {\n    entry.node.renderGL(renderPass);\n    entry.children.forEach((child) => {\n      if (child.children.length > 0) {\n        this.renderNode(child, renderPass);\n      } else {\n        child.node.renderGL(renderPass);\n      }\n    });\n    entry.node.postRenderGL(renderPass);\n  }\n  shutdown() {\n    const scene = this.scene;\n    Off(scene, \"update\", this._updateListener);\n    Off(scene, \"render\", this._renderListener);\n    Off(scene, \"shutdown\", this._shutdownListener);\n    RemoveChildren3D(this);\n    Emit(this, World3DShutdownEvent, this);\n    ResetWorld3DRenderData(this.renderData, 0);\n  }\n  destroy(reparentChildren) {\n    super.destroy(reparentChildren);\n    Emit(this, DestroyEvent, this);\n    ResetWorld3DRenderData(this.renderData, 0);\n    this.events.clear();\n    this.camera = null;\n    this.renderData = null;\n    this.events = null;\n  }\n};\n\n// src/world3d/CreateWorld3DRenderData.ts\nfunction CreateWorld3DRenderData(world, camera) {\n  return {\n    world,\n    camera,\n    gameFrame: 0,\n    dirtyFrame: 0,\n    numRendered: 0,\n    numRenderable: 0\n  };\n}\n\n// src/renderer/webgl1/glsl/AMBIENT_LIGHT_FRAG.ts\nvar AMBIENT_LIGHT_FRAG = `#define SHADER_NAME AMBIENT_LIGHT_FRAG\n\nprecision highp float;\n\nuniform vec3 uLightPosition;\nuniform vec3 uLightAmbient;\nuniform vec3 uLightDiffuse;\nuniform vec3 uLightSpecular;\n\nuniform vec3 uMaterialAmbient;\nuniform vec3 uMaterialDiffuse;\nuniform vec3 uMaterialSpecular;\nuniform float uMaterialShine;\n\nuniform vec3 uCameraPosition;\n\nuniform sampler2D uTexture;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vNormal;\nvarying vec3 vPosition;\n\nvoid main (void)\n{\n    vec4 color = texture2D(uTexture, vTextureCoord);\n\n    vec3 ambient = uLightAmbient * uMaterialAmbient;\n\n    vec3 norm = normalize(vNormal);\n    vec3 lightDir = normalize(uLightPosition - vPosition);\n    float diff = max(dot(norm, lightDir), 0.0);\n    vec3 diffuse = uLightDiffuse * (diff * uMaterialDiffuse);\n\n    vec3 viewDir = normalize(uCameraPosition - vPosition);\n    vec3 reflectDir = reflect(-lightDir, norm);\n    float spec = pow(max(dot(viewDir, reflectDir), 0.0), uMaterialShine);\n    vec3 specular = uLightSpecular * (spec * uMaterialSpecular);\n\n    vec3 result = (ambient + diffuse + specular) * color.rgb;\n\n    gl_FragColor = vec4(result, color.a);\n}`;\n\n// src/renderer/webgl1/glsl/AMBIENT_LIGHT_VERT.ts\nvar AMBIENT_LIGHT_VERT = `\n#define SHADER_NAME AMBIENT_LIGHT_VERT\n\nprecision highp float;\n\nattribute vec3 aVertexPosition;\nattribute vec3 aVertexNormal;\nattribute vec2 aTextureCoord;\n\nuniform mat4 uViewProjectionMatrix;\nuniform mat4 uModelMatrix;\nuniform mat4 uNormalMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vNormal;\nvarying vec3 vPosition;\n\nvoid main(void)\n{\n    vTextureCoord = aTextureCoord;\n\n    vPosition = vec3(uModelMatrix * vec4(aVertexPosition, 1.0));\n\n    vNormal = vec3(uNormalMatrix * vec4(aVertexNormal, 1.0));\n\n    gl_Position = uViewProjectionMatrix * uModelMatrix * vec4(aVertexPosition, 1.0);\n}\n`;\n\n// src/renderer/webgl1/shaders/AmbientLightShader.ts\nvar AmbientLightShader = class extends Shader {\n  constructor() {\n    super();\n    const tempMat4 = new Float32Array(16).fill(0);\n    const tempVec3 = [0, 0, 0];\n    const config = {\n      fragmentShader: AMBIENT_LIGHT_FRAG,\n      vertexShader: AMBIENT_LIGHT_VERT,\n      attributes: {\n        aVertexPosition: {size: 3, type: FLOAT, normalized: false, offset: 0},\n        aVertexNormal: {size: 3, type: FLOAT, normalized: false, offset: 12},\n        aTextureCoord: {size: 2, type: FLOAT, normalized: false, offset: 24}\n      },\n      uniforms: {\n        uViewProjectionMatrix: tempMat4,\n        uNormalMatrix: tempMat4,\n        uModelMatrix: tempMat4,\n        uCameraPosition: tempVec3,\n        uTexture: 0,\n        uLightPosition: tempVec3,\n        uLightAmbient: tempVec3,\n        uLightDiffuse: tempVec3,\n        uLightSpecular: tempVec3,\n        uMaterialAmbient: tempVec3,\n        uMaterialDiffuse: tempVec3,\n        uMaterialSpecular: tempVec3,\n        uMaterialShine: 0\n      }\n    };\n    this.fromConfig(config);\n  }\n};\n\n// src/camera3d/NewCamera3D.ts\nvar NewCamera3D = class {\n  constructor(fov = 45, near = 0.1, far = 1e3) {\n    this.isOrbit = false;\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n    this.minPolarAngle = 0;\n    this.maxPolarAngle = Math.PI;\n    this.minAzimuthAngle = -Infinity;\n    this.maxAzimuthAngle = Infinity;\n    this.dirtyRender = true;\n    this.panRate = 5;\n    this.zoomRate = 200;\n    this.rotateRate = -3;\n    this._yaw = 0;\n    this._pitch = 0;\n    this._roll = 0;\n    this.type = \"Camera3D\";\n    this._fov = fov;\n    this._near = near;\n    this._far = far;\n    this.matrix = new Matrix4();\n    this.viewMatrix = new Matrix4();\n    this.projectionMatrix = new Matrix4();\n    this.viewProjectionMatrix = new Matrix4();\n    this.position = new Vec3Callback(() => this.update());\n    this.rotation = new Quaternion();\n    const game = GameInstance.get();\n    const renderer = game.renderer;\n    this.viewport = new Rectangle(0, 0, renderer.width, renderer.height);\n    this.renderer = renderer;\n    this.forward = Vec3Forward();\n    this.up = Vec3Up();\n    this.right = Vec3Right();\n    this.start = new Vec3();\n    this.setAspectRatio();\n  }\n  update() {\n    const matrix2 = this.matrix;\n    const view = this.viewMatrix;\n    Mat4FromRotationXYTranslation(this.rotation, this.position, !this.isOrbit, matrix2);\n    Vec3TransformMat4Zero(FORWARD, matrix2, this.forward);\n    Vec3TransformMat4Zero(UP, matrix2, this.up);\n    Vec3TransformMat4Zero(RIGHT, matrix2, this.right);\n    Mat4Invert(matrix2, view);\n    Mat4Multiply(this.projectionMatrix, view, this.viewProjectionMatrix);\n    return this;\n  }\n  panX(amount) {\n    const pos = this.position;\n    if (!this.isOrbit) {\n      Vec3ScaleAndAdd(pos, this.right, amount, pos);\n    }\n    return this;\n  }\n  panY(amount) {\n    const pos = this.position;\n    const up = this.up;\n    if (this.isOrbit) {\n      pos.y += up.y * amount;\n    } else {\n      Vec3ScaleAndAdd(pos, up, amount, pos);\n    }\n    return this;\n  }\n  panZ(amount) {\n    const pos = this.position;\n    if (this.isOrbit) {\n      pos.z += amount;\n    } else {\n      Vec3ScaleAndAdd(pos, this.forward, amount, pos);\n    }\n    return this;\n  }\n  begin(x, y) {\n    this.start.set(x, y);\n  }\n  pan(x, y) {\n    const dx = x - this.start.x;\n    const dy = y - this.start.y;\n    const viewport = this.viewport;\n    this.panX(-dx * (this.panRate / viewport.width));\n    this.panY(dy * (this.panRate / viewport.height));\n    this.start.set(x, y);\n  }\n  rotate(x, y) {\n    const dx = x - this.start.x;\n    const dy = y - this.start.y;\n    const viewport = this.viewport;\n    this.rotation.x += dy * (this.rotateRate / viewport.height);\n    this.rotation.y += dx * (this.rotateRate / viewport.width);\n    this.start.set(x, y);\n    this.update();\n  }\n  zoom(delta) {\n    this.panZ(Clamp(delta, -1, 1) * (this.zoomRate / this.viewport.height));\n  }\n  setAspectRatio(value) {\n    if (!value) {\n      const renderer = this.renderer;\n      value = renderer.width / renderer.height;\n    }\n    this.aspect = value;\n    return this.updateProjectionMatrix();\n  }\n  updateProjectionMatrix() {\n    Mat4Perspective(DegToRad(this._fov), this.aspect, this._near, this._far, this.projectionMatrix);\n    return this;\n  }\n  get fov() {\n    return this._fov;\n  }\n  set fov(value) {\n    this._fov = Clamp(value, 0, 180);\n    this.updateProjectionMatrix();\n  }\n  get near() {\n    return this._near;\n  }\n  set near(value) {\n    if (value > 0) {\n      this._near = value;\n      this.updateProjectionMatrix();\n    }\n  }\n  get far() {\n    return this._far;\n  }\n  set far(value) {\n    if (value > 0) {\n      this._far = value;\n      this.updateProjectionMatrix();\n    }\n  }\n  get yaw() {\n    return this._yaw;\n  }\n  set yaw(value) {\n    this._yaw = value;\n    QuatRotationYawPitchRoll(value, this._pitch, this._roll, this.rotation);\n  }\n  get pitch() {\n    return this._pitch;\n  }\n  set pitch(value) {\n    this._pitch = value;\n    QuatRotationYawPitchRoll(this._yaw, value, this._roll, this.rotation);\n  }\n  get roll() {\n    return this._roll;\n  }\n  set roll(value) {\n    this._roll = value;\n    QuatRotationYawPitchRoll(this._yaw, this._pitch, value, this.rotation);\n  }\n};\n\n// src/world3d/World3D.ts\nvar World3D = class extends BaseWorld3D {\n  constructor(scene, x = 0, y = 0, z = 0, lightConfig) {\n    super(scene);\n    this.enableCameraCull = true;\n    this.type = \"World3D\";\n    this.camera = new NewCamera3D();\n    this.camera.position.set(x, y, z);\n    this.light = new Light(lightConfig);\n    this.shader = new AmbientLightShader();\n    this.renderData = CreateWorld3DRenderData(this, this.camera);\n  }\n  renderGL(renderPass) {\n    Flush(renderPass);\n    const shader = this.shader;\n    const camera = this.camera;\n    const gl2 = renderPass.renderer.gl;\n    SetShader(renderPass, shader, 0);\n    shader.setUniform(\"uViewProjectionMatrix\", camera.viewProjectionMatrix.data);\n    shader.setUniform(\"uCameraPosition\", camera.position.toArray());\n    this.light.setUniforms(shader);\n    gl2.enable(gl2.DEPTH_TEST);\n    this.renderList.forEach((entry) => {\n      if (entry.children.length > 0) {\n        this.renderNode(entry, renderPass);\n      } else {\n        entry.node.renderGL(renderPass);\n      }\n    });\n  }\n  postRenderGL(renderPass) {\n    const gl2 = renderPass.renderer.gl;\n    gl2.disable(gl2.DEPTH_TEST);\n    gl2.disable(gl2.CULL_FACE);\n    PopShader(renderPass);\n  }\n};\n\n// src/config/banner/GetBanner.ts\nfunction GetBanner() {\n  const {title, version, url, color, background} = ConfigStore.get(CONFIG_DEFAULTS.BANNER);\n  if (title !== \"\") {\n    const str = version !== \"\" ? title + \" \" + version : title;\n    console.log(`%c${str}%c ${url}`, `padding: 4px 16px; color: ${color}; background: ${background}`, \"\");\n  }\n}\n\n// src/config/parent/GetParent.ts\nfunction GetParent() {\n  return ConfigStore.get(CONFIG_DEFAULTS.PARENT);\n}\n\n// src/config/renderer/GetRenderer.ts\nfunction GetRenderer() {\n  return ConfigStore.get(CONFIG_DEFAULTS.RENDERER);\n}\n\n// src/scenes/CreateSceneRenderData.ts\nfunction CreateSceneRenderData() {\n  return {\n    gameFrame: 0,\n    numTotalFrames: 0,\n    numDirtyFrames: 0,\n    numDirtyCameras: 0,\n    worldData: []\n  };\n}\n\n// src/config/scenes/GetScenes.ts\nfunction GetScenes() {\n  return ConfigStore.get(CONFIG_DEFAULTS.SCENES);\n}\n\n// src/scenes/ResetSceneRenderData.ts\nfunction ResetSceneRenderData(renderData, gameFrame = 0) {\n  renderData.gameFrame = gameFrame;\n  renderData.numTotalFrames = 0;\n  renderData.numDirtyFrames = 0;\n  renderData.numDirtyCameras = 0;\n  renderData.worldData.length = 0;\n}\n\n// src/scenes/SceneManagerInstance.ts\nvar instance4;\nvar SceneManagerInstance = {\n  get: () => {\n    return instance4;\n  },\n  set: (manager) => {\n    instance4 = manager;\n  }\n};\n\n// src/scenes/SceneManager.ts\nvar SceneManager = class {\n  constructor() {\n    this.scenes = new Map();\n    this.sceneIndex = 0;\n    this.flush = false;\n    this.renderResult = CreateSceneRenderData();\n    this.game = GameInstance.get();\n    SceneManagerInstance.set(this);\n    Once(this.game, \"boot\", () => this.boot());\n  }\n  boot() {\n    GetScenes().forEach((scene) => new scene());\n  }\n  update(delta, time) {\n    for (const scene of this.scenes.values()) {\n      Emit(scene, \"update\", delta, time);\n    }\n  }\n  render(gameFrame) {\n    const results = this.renderResult;\n    ResetSceneRenderData(results, gameFrame);\n    for (const scene of this.scenes.values()) {\n      Emit(scene, \"render\", results);\n    }\n    if (this.flush) {\n      results.numDirtyFrames++;\n      this.flush = false;\n    }\n    return results;\n  }\n};\n\n// src/config/SetConfigDefaults.ts\nfunction SetConfigDefaults() {\n  SetBackgroundColor(0);\n  SetBatchSize(4096);\n  SetBanner(\"Phaser\", \"4.0.0\", \"https://phaser4.io\");\n  SetMaxTextures(0);\n  SetDefaultOrigin(0.5, 0.5);\n  SetSize(800, 600, 1);\n}\n\n// src/Game.ts\nvar Game = class extends EventEmitter {\n  constructor(...settings) {\n    super();\n    this.VERSION = \"4.0.0-beta1\";\n    this.isBooted = false;\n    this.isPaused = false;\n    this.willUpdate = true;\n    this.willRender = true;\n    this.lastTick = 0;\n    this.elapsed = 0;\n    this.frame = 0;\n    GameInstance.set(this);\n    SetConfigDefaults();\n    DOMContentLoaded(() => this.boot(settings));\n  }\n  boot(settings) {\n    settings.forEach((setting) => setting());\n    const renderer = GetRenderer();\n    this.renderer = new renderer();\n    this.textureManager = new TextureManager();\n    this.sceneManager = new SceneManager();\n    const parent = GetParent();\n    if (parent) {\n      AddToDOM(this.renderer.canvas, parent);\n    }\n    this.isBooted = true;\n    GetBanner();\n    Emit(this, \"boot\");\n    this.lastTick = performance.now();\n    this.step(this.lastTick);\n  }\n  pause() {\n    this.isPaused = true;\n  }\n  resume() {\n    this.isPaused = false;\n    this.lastTick = performance.now();\n  }\n  step(time) {\n    const delta = time - this.lastTick;\n    this.lastTick = time;\n    this.elapsed += delta;\n    if (!this.isPaused) {\n      if (this.willUpdate) {\n        this.sceneManager.update(delta, time);\n        Emit(this, \"update\", delta, time);\n      }\n      if (this.willRender) {\n        this.renderer.render(this.sceneManager.render(this.frame));\n      }\n    }\n    this.frame++;\n    GameInstance.setFrame(this.frame);\n    GameInstance.setElapsed(this.elapsed);\n    requestAnimationFrame((now) => this.step(now));\n  }\n  destroy() {\n  }\n};\n\n// src/scenes/GetConfigValue.ts\nfunction GetConfigValue(config, property, defaultValue) {\n  if (Object.prototype.hasOwnProperty.call(config, property)) {\n    return config[property];\n  } else {\n    return defaultValue;\n  }\n}\n\n// src/scenes/Install.ts\nfunction Install(scene, config = {}) {\n  const sceneManager = SceneManagerInstance.get();\n  const size = sceneManager.scenes.size;\n  const sceneIndex = sceneManager.sceneIndex;\n  const firstScene = size === 0;\n  if (typeof config === \"string\") {\n    scene.key = config;\n  } else if (config || !config && firstScene) {\n    scene.key = GetConfigValue(config, \"key\", \"scene\" + sceneIndex.toString());\n  }\n  if (sceneManager.scenes.has(scene.key)) {\n    console.warn(\"Scene key already in use: \" + scene.key);\n  } else {\n    sceneManager.scenes.set(scene.key, scene);\n    sceneManager.flush = true;\n    sceneManager.sceneIndex++;\n  }\n}\n\n// src/scenes/Scene.ts\nvar Scene = class {\n  constructor(config) {\n    this.game = GameInstance.get();\n    this.events = new Map();\n    Install(this, config);\n  }\n};\nexport {\n  camera_exports as Camera,\n  camera3d_exports as Camera3D,\n  config_exports as Config,\n  dom_exports as DOM,\n  device_exports as Device,\n  display_exports as Display,\n  display3d_exports as Display3D,\n  events_exports as Events,\n  Game,\n  gameobjects_exports as GameObjects,\n  gameobjects3d_exports as GameObjects3D,\n  geom_exports as Geom,\n  geom3d_exports as Geom3D,\n  input_exports2 as Input,\n  loader_exports as Loader,\n  materials3d_exports as Materials3D,\n  math_exports as Math,\n  Scene,\n  textures_exports as Textures,\n  time_exports as Time,\n  webgl1_exports as WebGL1,\n  world_exports as World,\n  world3d_exports as World3D\n};\n/**\n * @author       Florian Vazelle\n * @author       Geoffrey Glaive\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n/**\n * @author       Niklas von Hertzen (https://github.com/niklasvh/base64-arraybuffer)\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @author       Florian Mertens\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n", "import * as Phaser from '../../phaser-genesis/dist/Phaser';\n\nclass Demo extends Phaser.Scene\n{\n    constructor ()\n    {\n        super();\n\n        const world = new Phaser.World.StaticWorld(this);\n\n        const loader = new Phaser.Loader.Loader();\n\n        if (window.location.href.includes('192.168.0.100/phaser-genesis/'))\n        {\n            loader.setPath('/phaser4-examples/public/assets/');\n        }\n        else\n        {\n            loader.setPath('/examples/public/assets/');\n        }\n\n        loader.add(Phaser.Loader.ImageFile('logo', 'logo.png'));\n\n        loader.start().then(() => {\n\n            const logo = new Phaser.GameObjects.Sprite(400, 300, 'logo').setRotation(0.3);\n\n            // AddTween(logo).to(3000, { y: 500, rotation: 0 }).easing(Easing.Bounce.Out);\n\n            Phaser.Display.AddChildren(world, logo);\n\n        });\n    }\n}\n\nnew Phaser.Game(\n    Phaser.Config.WebGL(),\n    Phaser.Config.Parent('gameParent'),\n    Phaser.Config.BackgroundColor(0x2d2d2d),\n    Phaser.Config.Scenes(Demo)\n);\n"],
  "mappings": "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",
  "names": []
}
