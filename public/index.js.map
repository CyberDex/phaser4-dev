{
  "version": 3,
  "sources": ["../node_modules/@phaserjs/phaser/GameInstance.js", "../node_modules/@phaserjs/phaser/math/mat4/index.js", "../node_modules/@phaserjs/phaser/math/mat4/GetMat4Determinant.js", "../node_modules/@phaserjs/phaser/math/mat4/GetMat4Frobenius.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/CheckMatrix.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/MatrixToString.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/ReverseColumns.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/ReverseRows.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/TransposeMatrix.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/RotateMatrix.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/Rotate180.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/RotateLeft.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/RotateRight.js", "../node_modules/@phaserjs/phaser/utils/array/NumberArray.js", "../node_modules/@phaserjs/phaser/math/RoundAwayFromZero.js", "../node_modules/@phaserjs/phaser/utils/array/NumberArrayStep.js", "../node_modules/@phaserjs/phaser/utils/base64/ArrayBufferToBase64.js", "../node_modules/@phaserjs/phaser/utils/base64/Base64ToArrayBuffer.js", "../node_modules/@phaserjs/phaser/utils/string/UppercaseFirst.js", "../node_modules/@phaserjs/phaser/utils/NOOP.js", "../node_modules/@phaserjs/phaser/math/mat4/Matrix4.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Add.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4AddTranslationFromFloats.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Adjoint.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Clone.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4CopyFrom.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4CopyPosition.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Equals.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4FromQuat.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4FromRotation.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4FromRotationTranslation.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4FromRotationTranslationScale.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4FromRotationTranslationScaleOrigin.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4FromRotationXYTranslation.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4FromScaling.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4FromTranslation.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4FromXRotation.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4FromYRotation.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4FromZRotation.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Frustum.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4GetScaling.js", "../node_modules/@phaserjs/phaser/math/quaternion/Quaternion.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4GetRotation.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4GetTranslation.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Identity.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Invert.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4LookAt.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Multiply.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4MultiplyScalar.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4MultiplyScalarAndAdd.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Ortho.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Perspective.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4PerspectiveFromFieldOfView.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Rotate.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4RotateX.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4RotateY.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4RotateZ.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Scale.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4SetTranslation.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4SetTranslationFromFloats.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Subtract.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4TargetTo.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Translate.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4TranslateFromFloats.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Transpose.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Zero.js", "../node_modules/@phaserjs/phaser/math/mat2d/Matrix2D.js", "../node_modules/@phaserjs/phaser/geom/rectangle/RectangleContains.js", "../node_modules/@phaserjs/phaser/geom/rectangle/Rectangle.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Callback.js", "../node_modules/@phaserjs/phaser/math/angle/index.js", "../node_modules/@phaserjs/phaser/math/angle/AngleBetween.js", "../node_modules/@phaserjs/phaser/math/angle/AngleBetweenY.js", "../node_modules/@phaserjs/phaser/math/const.js", "../node_modules/@phaserjs/phaser/math/angle/CounterClockwise.js", "../node_modules/@phaserjs/phaser/math/angle/NormalizeAngle.js", "../node_modules/@phaserjs/phaser/math/angle/ReverseAngle.js", "../node_modules/@phaserjs/phaser/math/angle/RotateAngleTo.js", "../node_modules/@phaserjs/phaser/math/angle/ShortestAngleBetween.js", "../node_modules/@phaserjs/phaser/math/Wrap.js", "../node_modules/@phaserjs/phaser/math/angle/WrapAngle.js", "../node_modules/@phaserjs/phaser/math/angle/WrapAngleDegrees.js", "../node_modules/@phaserjs/phaser/camera/Camera.js", "../node_modules/@phaserjs/phaser/camera/StaticCamera.js", "../node_modules/@phaserjs/phaser/math/quaternion/index.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatDot.js", "../node_modules/@phaserjs/phaser/math/quaternion/GetQuatAngle.js", "../node_modules/@phaserjs/phaser/math/Clamp.js", "../node_modules/@phaserjs/phaser/math/quaternion/GetQuatAngleTo.js", "../node_modules/@phaserjs/phaser/math/quaternion/GetQuatAreClose.js", "../node_modules/@phaserjs/phaser/math/quaternion/GetQuatAxisAngle.js", "../node_modules/@phaserjs/phaser/math/quaternion/GetQuatLength.js", "../node_modules/@phaserjs/phaser/math/quaternion/GetQuatLengthSquared.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatAdd.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatAddScalar.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatClone.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatConjugate.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatCopyFrom.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatEquals.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatRotationYawPitchRoll.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatFromEulerAngles.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatFromEulerVector.js", "../node_modules/@phaserjs/phaser/math/vec3/index.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Backward.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Down.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Forward.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Left.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Right.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Up.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Zero.js", "../node_modules/@phaserjs/phaser/math/vec3/const.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Dot.js", "../node_modules/@phaserjs/phaser/math/vec3/GetVec3Angle.js", "../node_modules/@phaserjs/phaser/math/vec3/GetVec3DistanceSquared.js", "../node_modules/@phaserjs/phaser/math/vec3/GetVec3Distance.js", "../node_modules/@phaserjs/phaser/math/vec3/GetVec3Length.js", "../node_modules/@phaserjs/phaser/math/vec3/GetVec3LengthSquared.js", "../node_modules/@phaserjs/phaser/math/vec3/GetVec3ManhattanDistance.js", "../node_modules/@phaserjs/phaser/math/vec3/GetVec3ManhattanLength.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Callback.js", "../node_modules/@phaserjs/phaser/math/vec3/RGBCallback.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Abs.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Add.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3AddScalar.js", "../node_modules/@phaserjs/phaser/math/Bezier.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Bezier.js", "../node_modules/@phaserjs/phaser/math/CatmullRom.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3CatmullRom.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Ceil.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Scale.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Center.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Clamp.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3DivideScalar.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3ClampLength.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3ClampScalar.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Clone.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3CopyFrom.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Cross.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3CrossNormalize.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Divide.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Equals.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Floor.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Fract.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3FromCylindricalCoords.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3FromSphericalCoords.js", "../node_modules/@phaserjs/phaser/math/fuzzy/FuzzyEqual.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3FuzzyEquals.js", "../node_modules/@phaserjs/phaser/math/Hermite.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Hermite.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Inverse.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3IsNonUniform.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Lerp.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Max.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Min.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Multiply.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3MultiplyByFloats.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Negate.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Normalize.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3One.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3TransformMat4.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Project.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Random.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Subtract.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Reflect.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3RotateX.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3RotateY.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3RotateZ.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Round.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3RoundToZero.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3ScaleAndAdd.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3SetLength.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3SubtractScalar.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3TransformMat4Zero.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3TransformQuat.js", "../node_modules/@phaserjs/phaser/math/vec3/Vec3Unproject.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatFromRotationAxis.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatFromRotationMatrix.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatFuzzyEquals.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatHermite.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatInvert.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatMultiply.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatMultiplyByFloats.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatScale.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatNormalize.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatSlerp.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatRotateTowards.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatRotateX.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatRotateY.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatRotateZ.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatRotationAlphaBetaGamma.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatScaleAndAdd.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatSetAxisAngle.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatSetFromUnitVectors.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatSubtract.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatSubtractScalar.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatToEulerAngles.js", "../node_modules/@phaserjs/phaser/math/quaternion/QuatZero.js", "../node_modules/@phaserjs/phaser/math/index.js", "../node_modules/@phaserjs/phaser/math/easing/index.js", "../node_modules/@phaserjs/phaser/math/easing/back/index.js", "../node_modules/@phaserjs/phaser/math/easing/back/In.js", "../node_modules/@phaserjs/phaser/math/easing/back/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/back/Out.js", "../node_modules/@phaserjs/phaser/math/easing/bounce/index.js", "../node_modules/@phaserjs/phaser/math/easing/bounce/In.js", "../node_modules/@phaserjs/phaser/math/easing/bounce/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/bounce/Out.js", "../node_modules/@phaserjs/phaser/math/easing/circular/index.js", "../node_modules/@phaserjs/phaser/math/easing/circular/In.js", "../node_modules/@phaserjs/phaser/math/easing/circular/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/circular/Out.js", "../node_modules/@phaserjs/phaser/math/easing/cubic/index.js", "../node_modules/@phaserjs/phaser/math/easing/cubic/In.js", "../node_modules/@phaserjs/phaser/math/easing/cubic/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/cubic/Out.js", "../node_modules/@phaserjs/phaser/math/easing/elastic/index.js", "../node_modules/@phaserjs/phaser/math/easing/elastic/In.js", "../node_modules/@phaserjs/phaser/math/easing/elastic/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/elastic/Out.js", "../node_modules/@phaserjs/phaser/math/easing/expo/index.js", "../node_modules/@phaserjs/phaser/math/easing/expo/In.js", "../node_modules/@phaserjs/phaser/math/easing/expo/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/expo/Out.js", "../node_modules/@phaserjs/phaser/math/easing/GetEase.js", "../node_modules/@phaserjs/phaser/math/easing/quadratic/index.js", "../node_modules/@phaserjs/phaser/math/easing/quadratic/In.js", "../node_modules/@phaserjs/phaser/math/easing/quadratic/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/quadratic/Out.js", "../node_modules/@phaserjs/phaser/math/easing/quartic/index.js", "../node_modules/@phaserjs/phaser/math/easing/quartic/In.js", "../node_modules/@phaserjs/phaser/math/easing/quartic/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/quartic/Out.js", "../node_modules/@phaserjs/phaser/math/easing/quintic/index.js", "../node_modules/@phaserjs/phaser/math/easing/quintic/In.js", "../node_modules/@phaserjs/phaser/math/easing/quintic/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/quintic/Out.js", "../node_modules/@phaserjs/phaser/math/easing/sine/index.js", "../node_modules/@phaserjs/phaser/math/easing/sine/In.js", "../node_modules/@phaserjs/phaser/math/easing/sine/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/sine/Out.js", "../node_modules/@phaserjs/phaser/math/easing/Linear.js", "../node_modules/@phaserjs/phaser/math/easing/Stepped.js", "../node_modules/@phaserjs/phaser/math/fuzzy/index.js", "../node_modules/@phaserjs/phaser/math/fuzzy/FuzzyCeil.js", "../node_modules/@phaserjs/phaser/math/fuzzy/FuzzyFloor.js", "../node_modules/@phaserjs/phaser/math/fuzzy/FuzzyGreaterThan.js", "../node_modules/@phaserjs/phaser/math/fuzzy/FuzzyLessThan.js", "../node_modules/@phaserjs/phaser/math/interpolation/index.js", "../node_modules/@phaserjs/phaser/math/Factorial.js", "../node_modules/@phaserjs/phaser/math/Bernstein.js", "../node_modules/@phaserjs/phaser/math/interpolation/BezierInterpolation.js", "../node_modules/@phaserjs/phaser/math/interpolation/CatmullRomInterpolation.js", "../node_modules/@phaserjs/phaser/math/interpolation/CubicBezierInterpolation.js", "../node_modules/@phaserjs/phaser/math/Linear.js", "../node_modules/@phaserjs/phaser/math/interpolation/LinearInterpolation.js", "../node_modules/@phaserjs/phaser/math/interpolation/QuadraticBezierInterpolation.js", "../node_modules/@phaserjs/phaser/math/SmoothStep.js", "../node_modules/@phaserjs/phaser/math/interpolation/SmoothStepInterpolation.js", "../node_modules/@phaserjs/phaser/math/SmootherStep.js", "../node_modules/@phaserjs/phaser/math/interpolation/SmootherStepInterpolation.js", "../node_modules/@phaserjs/phaser/math/mat2d/index.js", "../node_modules/@phaserjs/phaser/math/mat2d/GetMat2dDeterminant.js", "../node_modules/@phaserjs/phaser/math/mat2d/GetMat2dFrobenius.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dAdd.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dAppend.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dClone.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dCopyFrom.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dCopyToContext.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dEquals.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dRotate.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dFromRotation.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dScale.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dFromScaling.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dTranslate.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dFromTranslation.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dFuzzyEquals.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dGlobalToLocal.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dITRS.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dITRSS.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dIdentity.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dInvert.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dLocalToGlobal.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dMultiply.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dMultiplyScalar.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dMultiplyScalarAndAdd.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dSetToContext.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dSkew.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dSubtract.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dZero.js", "../node_modules/@phaserjs/phaser/math/pow2/index.js", "../node_modules/@phaserjs/phaser/math/pow2/GetPowerOfTwo.js", "../node_modules/@phaserjs/phaser/math/pow2/IsSizePowerOfTwo.js", "../node_modules/@phaserjs/phaser/math/pow2/IsValuePowerOfTwo.js", "../node_modules/@phaserjs/phaser/math/snap/index.js", "../node_modules/@phaserjs/phaser/math/snap/SnapCeil.js", "../node_modules/@phaserjs/phaser/math/snap/SnapFloor.js", "../node_modules/@phaserjs/phaser/math/snap/SnapTo.js", "../node_modules/@phaserjs/phaser/math/vec2/index.js", "../node_modules/@phaserjs/phaser/math/vec2/GetChebyshevDistance.js", "../node_modules/@phaserjs/phaser/math/vec2/GetVec2DistanceSquared.js", "../node_modules/@phaserjs/phaser/math/vec2/GetVec2Distance.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Add.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Dot.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2MultiplyByFloats.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Subtract.js", "../node_modules/@phaserjs/phaser/math/vec2/GetDistanceFromSegment.js", "../node_modules/@phaserjs/phaser/math/vec2/GetVec2Angle.js", "../node_modules/@phaserjs/phaser/math/vec2/GetVec2AngleY.js", "../node_modules/@phaserjs/phaser/math/vec2/GetVec2DistancePower.js", "../node_modules/@phaserjs/phaser/math/vec2/GetVec2Length.js", "../node_modules/@phaserjs/phaser/math/vec2/GetVec2LengthSquared.js", "../node_modules/@phaserjs/phaser/math/vec2/GetVec2ManhattanDistance.js", "../node_modules/@phaserjs/phaser/math/vec2/GetVec2ManhattanLength.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Abs.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2AddScalar.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Bezier.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2CatmullRom.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Ceil.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Scale.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Center.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Clamp.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2ClampScalar.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Clone.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2CopyFrom.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Cross.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Divide.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2DivideScalar.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Equals.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Floor.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Fract.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2FromGridIndex.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2FromTransform.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2FuzzyEquals.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Hermite.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Inverse.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Lerp.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Max.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Min.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Multiply.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Negate.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Normalize.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2One.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2PerpDot.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Random.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Rotate.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Round.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2RoundToZero.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2ScaleAndAdd.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2SetLength.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2SubtractScalar.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Transform.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2TransformMat2d.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2TransformMat4.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Zero.js", "../node_modules/@phaserjs/phaser/math/vec4/index.js", "../node_modules/@phaserjs/phaser/math/vec4/GetVec4DistanceSquared.js", "../node_modules/@phaserjs/phaser/math/vec4/GetVec4Distance.js", "../node_modules/@phaserjs/phaser/math/vec4/GetVec4Length.js", "../node_modules/@phaserjs/phaser/math/vec4/GetVec4LengthSquared.js", "../node_modules/@phaserjs/phaser/math/vec4/GetVec4ManhattanDistance.js", "../node_modules/@phaserjs/phaser/math/vec4/GetVec4ManhattanLength.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Callback.js", "../node_modules/@phaserjs/phaser/math/vec4/RGBACallback.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Abs.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Add.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4AddScalar.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Bezier.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4CatmullRom.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Ceil.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Scale.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Center.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Clamp.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4DivideScalar.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4ClampLength.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4ClampScalar.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Clone.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4CopyFrom.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Cross.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Divide.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Dot.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Equals.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Floor.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Fract.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4FuzzyEquals.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Hermite.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Lerp.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Max.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Min.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Multiply.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4MultiplyByFloats.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Negate.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Normalize.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4One.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Random.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Round.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4RoundToZero.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4ScaleAndAdd.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4SetLength.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Subtract.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4SubtractScalar.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4TransformMat4.js", "../node_modules/@phaserjs/phaser/math/vec4/Vec4Zero.js", "../node_modules/@phaserjs/phaser/math/Average.js", "../node_modules/@phaserjs/phaser/math/Between.js", "../node_modules/@phaserjs/phaser/math/CeilTo.js", "../node_modules/@phaserjs/phaser/math/DegToRad.js", "../node_modules/@phaserjs/phaser/math/Difference.js", "../node_modules/@phaserjs/phaser/math/FloatBetween.js", "../node_modules/@phaserjs/phaser/math/FloorTo.js", "../node_modules/@phaserjs/phaser/math/FromPercent.js", "../node_modules/@phaserjs/phaser/math/GetSpeed.js", "../node_modules/@phaserjs/phaser/math/MaxAdd.js", "../node_modules/@phaserjs/phaser/math/MinSub.js", "../node_modules/@phaserjs/phaser/math/Percent.js", "../node_modules/@phaserjs/phaser/math/RadToDeg.js", "../node_modules/@phaserjs/phaser/math/RoundTo.js", "../node_modules/@phaserjs/phaser/math/SinCosTableGenerator.js", "../node_modules/@phaserjs/phaser/math/Within.js", "../node_modules/@phaserjs/phaser/config/const.js", "../node_modules/@phaserjs/phaser/config/ConfigStore.js", "../node_modules/@phaserjs/phaser/config/backgroundcolor/SetBackgroundColor.js", "../node_modules/@phaserjs/phaser/config/backgroundcolor/BackgroundColor.js", "../node_modules/@phaserjs/phaser/config/banner/SetBanner.js", "../node_modules/@phaserjs/phaser/config/batchsize/SetBatchSize.js", "../node_modules/@phaserjs/phaser/config/size/GetHeight.js", "../node_modules/@phaserjs/phaser/config/size/GetResolution.js", "../node_modules/@phaserjs/phaser/config/size/GetWidth.js", "../node_modules/@phaserjs/phaser/config/size/SetSize.js", "../node_modules/@phaserjs/phaser/renderer/BindingQueue.js", "../node_modules/@phaserjs/phaser/config/backgroundcolor/GetBackgroundColor.js", "../node_modules/@phaserjs/phaser/config/renderer/SetRenderer.js", "../node_modules/@phaserjs/phaser/config/defaultorigin/SetDefaultOrigin.js", "../node_modules/@phaserjs/phaser/config/maxtextures/SetMaxTextures.js", "../node_modules/@phaserjs/phaser/dom/GetElement.js", "../node_modules/@phaserjs/phaser/config/parent/SetParent.js", "../node_modules/@phaserjs/phaser/config/parent/Parent.js", "../node_modules/@phaserjs/phaser/config/scenes/SetScenes.js", "../node_modules/@phaserjs/phaser/config/scenes/Scenes.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/AddViewport.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/GL.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/BindViewport.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetViewport.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/BindFramebuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/PopViewport.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/PopFramebuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/AddFramebuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetFramebuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/Draw.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/Flush.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/End.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/colors/GetRGBArray.js", "../node_modules/@phaserjs/phaser/config/webglcontext/GetWebGLContext.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/textures/CreateGLTexture.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/fbo/DeleteFramebuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/textures/DeleteGLTexture.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/textures/SetGLTextureFilterMode.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/textures/UpdateGLTexture.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/textures/GLTextureBinding.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/ProcessBindingQueue.js", "../node_modules/@phaserjs/phaser/config/maxtextures/GetMaxTextures.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/CheckShaderMaxIfStatements.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/CreateTempTextures.js", "../node_modules/@phaserjs/phaser/config/batchsize/GetBatchSize.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/buffers/DeleteGLBuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/buffers/VertexBuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/buffers/IndexedVertexBuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/CreateAttributes.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/DeleteShaders.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/CreateProgram.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/CreateShader.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/CreateUniformSetter.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/CreateUniforms.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/GL_CONST.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/DefaultQuadAttributes.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/DefaultQuadUniforms.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/fbo/CreateDepthBuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/fbo/CreateFramebuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/glsl/SINGLE_QUAD_FRAG.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/glsl/SINGLE_QUAD_VERT.js", "../node_modules/@phaserjs/phaser/textures/Frame.js", "../node_modules/@phaserjs/phaser/textures/Texture.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/Shader.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/QuadShader.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/glsl/MULTI_QUAD_FRAG.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/MultiTextureQuadShader.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetDefaultBlendMode.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetDefaultFramebuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetDefaultShader.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetDefaultVertexBuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetDefaultViewport.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/RenderPass.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/AddShader.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/AddVertexBuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/BindShader.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/Begin.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/BindBlendMode.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/BindTexture.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/BindVertexBuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/PopVertexBuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetVertexBuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/GetVertexBufferEntry.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/PopShader.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetShader.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetTexture.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/Start.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/UnbindTexture.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/WebGLRendererInstance.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/WebGLRenderer.js", "../node_modules/@phaserjs/phaser/config/webgl/WebGL.js", "../node_modules/@phaserjs/phaser/dom/AddToDOM.js", "../node_modules/@phaserjs/phaser/dom/DOMContentLoaded.js", "../node_modules/@phaserjs/phaser/dom/ParseXML.js", "../node_modules/@phaserjs/phaser/display/index.js", "../node_modules/@phaserjs/phaser/display/DepthFirstSearch.js", "../node_modules/@phaserjs/phaser/display/GetChildIndex.js", "../node_modules/@phaserjs/phaser/display/RemoveChildAt.js", "../node_modules/@phaserjs/phaser/display/RemoveChild.js", "../node_modules/@phaserjs/phaser/gameobjects/events/AddedToWorldEvent.js", "../node_modules/@phaserjs/phaser/gameobjects/events/DestroyEvent.js", "../node_modules/@phaserjs/phaser/gameobjects/events/PostUpdateEvent.js", "../node_modules/@phaserjs/phaser/gameobjects/events/RemovedFromWorldEvent.js", "../node_modules/@phaserjs/phaser/gameobjects/events/UpdateEvent.js", "../node_modules/@phaserjs/phaser/events/Emit.js", "../node_modules/@phaserjs/phaser/display/SetWorld.js", "../node_modules/@phaserjs/phaser/display/SetParent.js", "../node_modules/@phaserjs/phaser/display/AddChild.js", "../node_modules/@phaserjs/phaser/display/AddChildAt.js", "../node_modules/@phaserjs/phaser/display/AddChildren.js", "../node_modules/@phaserjs/phaser/display/AddChildrenAt.js", "../node_modules/@phaserjs/phaser/display/AddPosition.js", "../node_modules/@phaserjs/phaser/display/AddRotation.js", "../node_modules/@phaserjs/phaser/display/AddScale.js", "../node_modules/@phaserjs/phaser/display/AddSkew.js", "../node_modules/@phaserjs/phaser/gameobjects/DIRTY_CONST.js", "../node_modules/@phaserjs/phaser/display/BringChildToTop.js", "../node_modules/@phaserjs/phaser/display/DepthFirstSearchRecursiveNested.js", "../node_modules/@phaserjs/phaser/display/ConsoleTreeChildren.js", "../node_modules/@phaserjs/phaser/display/CountMatchingChildren.js", "../node_modules/@phaserjs/phaser/display/DepthFirstSearchRecursive.js", "../node_modules/@phaserjs/phaser/display/RemoveChildrenBetween.js", "../node_modules/@phaserjs/phaser/display/DestroyChildren.js", "../node_modules/@phaserjs/phaser/display/FindChildByName.js", "../node_modules/@phaserjs/phaser/display/FindChildrenByName.js", "../node_modules/@phaserjs/phaser/display/GetAllChildren.js", "../node_modules/@phaserjs/phaser/display/GetChildAt.js", "../node_modules/@phaserjs/phaser/display/GetChildren.js", "../node_modules/@phaserjs/phaser/display/GetClosestChild.js", "../node_modules/@phaserjs/phaser/display/GetFirstChild.js", "../node_modules/@phaserjs/phaser/display/GetFurthestChild.js", "../node_modules/@phaserjs/phaser/display/GetLastChild.js", "../node_modules/@phaserjs/phaser/display/GetParents.js", "../node_modules/@phaserjs/phaser/display/GetRandomChild.js", "../node_modules/@phaserjs/phaser/display/MoveChildDown.js", "../node_modules/@phaserjs/phaser/display/MoveChildTo.js", "../node_modules/@phaserjs/phaser/display/MoveChildUp.js", "../node_modules/@phaserjs/phaser/geom/intersects/RectangleToRectangle.js", "../node_modules/@phaserjs/phaser/display/Overlap.js", "../node_modules/@phaserjs/phaser/display/RemoveChildren.js", "../node_modules/@phaserjs/phaser/display/RemoveChildrenAt.js", "../node_modules/@phaserjs/phaser/display/ReparentChildren.js", "../node_modules/@phaserjs/phaser/display/RotateChildrenLeft.js", "../node_modules/@phaserjs/phaser/display/RotateChildrenRight.js", "../node_modules/@phaserjs/phaser/display/SendChildToBack.js", "../node_modules/@phaserjs/phaser/display/SetBounds.js", "../node_modules/@phaserjs/phaser/display/SetChildrenValue.js", "../node_modules/@phaserjs/phaser/display/SetName.js", "../node_modules/@phaserjs/phaser/display/SetOrigin.js", "../node_modules/@phaserjs/phaser/display/SetPosition.js", "../node_modules/@phaserjs/phaser/display/SetRotation.js", "../node_modules/@phaserjs/phaser/display/SetScale.js", "../node_modules/@phaserjs/phaser/display/SetSize.js", "../node_modules/@phaserjs/phaser/display/SetSkew.js", "../node_modules/@phaserjs/phaser/display/SetType.js", "../node_modules/@phaserjs/phaser/display/SetValue.js", "../node_modules/@phaserjs/phaser/display/SetVisible.js", "../node_modules/@phaserjs/phaser/display/ShuffleChildren.js", "../node_modules/@phaserjs/phaser/display/SwapChildren.js", "../node_modules/@phaserjs/phaser/events/EventEmitter.js", "../node_modules/@phaserjs/phaser/events/EventInstance.js", "../node_modules/@phaserjs/phaser/events/Off.js", "../node_modules/@phaserjs/phaser/events/On.js", "../node_modules/@phaserjs/phaser/events/Once.js", "../node_modules/@phaserjs/phaser/gameobjects/index.js", "../node_modules/@phaserjs/phaser/gameobjects/components/index.js", "../node_modules/@phaserjs/phaser/gameobjects/components/bounds/index.js", "../node_modules/@phaserjs/phaser/gameobjects/components/transform/GetVertices.js", "../node_modules/@phaserjs/phaser/gameobjects/components/bounds/BoundsComponent.js", "../node_modules/@phaserjs/phaser/gameobjects/components/input/index.js", "../node_modules/@phaserjs/phaser/gameobjects/components/input/InputComponent.js", "../node_modules/@phaserjs/phaser/gameobjects/components/transform/index.js", "../node_modules/@phaserjs/phaser/config/defaultorigin/GetDefaultOriginX.js", "../node_modules/@phaserjs/phaser/config/defaultorigin/GetDefaultOriginY.js", "../node_modules/@phaserjs/phaser/geom/rectangle/CeilRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/CeilRectanglePosition.js", "../node_modules/@phaserjs/phaser/geom/rectangle/CenterRectangleOn.js", "../node_modules/@phaserjs/phaser/geom/rectangle/CloneRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/CopyRectangleFrom.js", "../node_modules/@phaserjs/phaser/geom/rectangle/DecomposeRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleAspectRatio.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleCenterX.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleCenterY.js", "../node_modules/@phaserjs/phaser/geom/rectangle/FitRectangleInside.js", "../node_modules/@phaserjs/phaser/geom/rectangle/FitRectangleOutside.js", "../node_modules/@phaserjs/phaser/geom/rectangle/FitRectangleToPoint.js", "../node_modules/@phaserjs/phaser/geom/rectangle/FitRectangleToPoints.js", "../node_modules/@phaserjs/phaser/geom/rectangle/FloorRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/FloorRectanglePosition.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleArea.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleCenter.js", "../node_modules/@phaserjs/phaser/geom/line/Line.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleIntersection.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectanglePerimeter.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleMarchingAnts.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleOverlap.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectanglePerimeterPoint.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectanglePoint.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectanglePoints.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleRandomPoint.js", "../node_modules/@phaserjs/phaser/geom/rectangle/RectangleContainsRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleRandomPointOutside.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleSize.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleUnion.js", "../node_modules/@phaserjs/phaser/geom/rectangle/InflateRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/MergeRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/RectangleContainsPoint.js", "../node_modules/@phaserjs/phaser/geom/rectangle/RectangleEquals.js", "../node_modules/@phaserjs/phaser/geom/rectangle/RectangleFromPoints.js", "../node_modules/@phaserjs/phaser/geom/rectangle/RectangleSizeEquals.js", "../node_modules/@phaserjs/phaser/geom/rectangle/ScaleRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/TranslateRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/TranslateRectanglePoint.js", "../node_modules/@phaserjs/phaser/geom/rectangle/index.js", "../node_modules/@phaserjs/phaser/gameobjects/components/transform/UpdateLocalTransform.js", "../node_modules/@phaserjs/phaser/gameobjects/components/transform/UpdateWorldTransform.js", "../node_modules/@phaserjs/phaser/gameobjects/components/transform/TransformComponent.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/colors/PackColor.js", "../node_modules/@phaserjs/phaser/gameobjects/components/Vertex.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/draw/BatchTexturedQuad.js", "../node_modules/@phaserjs/phaser/gameobjects/GameObject.js", "../node_modules/@phaserjs/phaser/gameobjects/container/Container.js", "../node_modules/@phaserjs/phaser/renderer/canvas/draw/DrawTexturedQuad.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/colors/PackColors.js", "../node_modules/@phaserjs/phaser/gameobjects/sprite/SetFrame.js", "../node_modules/@phaserjs/phaser/textures/TextureManagerInstance.js", "../node_modules/@phaserjs/phaser/gameobjects/sprite/SetTexture.js", "../node_modules/@phaserjs/phaser/gameobjects/sprite/UpdateVertices.js", "../node_modules/@phaserjs/phaser/gameobjects/sprite/Sprite.js", "../node_modules/@phaserjs/phaser/gameobjects/animatedsprite/AnimatedSprite.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/draw/BatchSingleQuad.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/draw/DrawTexturedQuad.js", "../node_modules/@phaserjs/phaser/gameobjects/layer/Layer.js", "../node_modules/@phaserjs/phaser/gameobjects/renderlayer/RenderLayer.js", "../node_modules/@phaserjs/phaser/gameobjects/effectlayer/EffectLayer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/draw/BatchTexturedQuadBuffer.js", "../node_modules/@phaserjs/phaser/gameobjects/components/transform/GetVerticesFromValues.js", "../node_modules/@phaserjs/phaser/gameobjects/spritebatch/SpriteBatch.js", "../node_modules/@phaserjs/phaser/textures/CreateCanvas.js", "../node_modules/@phaserjs/phaser/textures/types/CanvasTexture.js", "../node_modules/@phaserjs/phaser/gameobjects/text/Text.js", "../node_modules/@phaserjs/phaser/gameobjects3d/geometry/GetBufferFromVertexSet.js", "../node_modules/@phaserjs/phaser/gameobjects3d/geometry/Geometry.js", "../node_modules/@phaserjs/phaser/gameobjects3d/geometry/ParseObj.js", "../node_modules/@phaserjs/phaser/gameobjects3d/geometry/GetBufferFromObj.js", "../node_modules/@phaserjs/phaser/gameobjects3d/material/Material.js", "../node_modules/@phaserjs/phaser/geom/circle/CircleContains.js", "../node_modules/@phaserjs/phaser/geom/circle/Circle.js", "../node_modules/@phaserjs/phaser/geom/circle/CircleContainsPoint.js", "../node_modules/@phaserjs/phaser/geom/circle/CircleContainsRect.js", "../node_modules/@phaserjs/phaser/geom/circle/CircleEquals.js", "../node_modules/@phaserjs/phaser/geom/circle/CloneCircle.js", "../node_modules/@phaserjs/phaser/geom/circle/CopyCircleFrom.js", "../node_modules/@phaserjs/phaser/geom/circle/GetCircleArea.js", "../node_modules/@phaserjs/phaser/geom/circle/GetCircleBounds.js", "../node_modules/@phaserjs/phaser/geom/circle/GetCircleCircumference.js", "../node_modules/@phaserjs/phaser/geom/circle/GetCircleCircumferencePoint.js", "../node_modules/@phaserjs/phaser/geom/circle/GetCirclePoint.js", "../node_modules/@phaserjs/phaser/geom/circle/GetCirclePoints.js", "../node_modules/@phaserjs/phaser/geom/circle/GetCircleRandomPoint.js", "../node_modules/@phaserjs/phaser/geom/circle/TranslateCircle.js", "../node_modules/@phaserjs/phaser/geom/circle/TranslateCirclePoint.js", "../node_modules/@phaserjs/phaser/geom/circle/index.js", "../node_modules/@phaserjs/phaser/geom/ellipse/EllipseContains.js", "../node_modules/@phaserjs/phaser/geom/ellipse/Ellipse.js", "../node_modules/@phaserjs/phaser/geom/ellipse/CloneEllipse.js", "../node_modules/@phaserjs/phaser/geom/ellipse/CopyEllipseFrom.js", "../node_modules/@phaserjs/phaser/geom/ellipse/EllipseContainsPoint.js", "../node_modules/@phaserjs/phaser/geom/ellipse/EllipseContainsRect.js", "../node_modules/@phaserjs/phaser/geom/ellipse/EllipseEquals.js", "../node_modules/@phaserjs/phaser/geom/ellipse/GetEllipseArea.js", "../node_modules/@phaserjs/phaser/geom/ellipse/GetEllipseBounds.js", "../node_modules/@phaserjs/phaser/geom/ellipse/GetEllipseCircumference.js", "../node_modules/@phaserjs/phaser/geom/ellipse/GetEllipseCircumferencePoint.js", "../node_modules/@phaserjs/phaser/geom/ellipse/GetEllipsePoint.js", "../node_modules/@phaserjs/phaser/geom/ellipse/GetEllipsePoints.js", "../node_modules/@phaserjs/phaser/geom/ellipse/GetEllipseRandomPoint.js", "../node_modules/@phaserjs/phaser/geom/ellipse/TranslateEllipse.js", "../node_modules/@phaserjs/phaser/geom/ellipse/TranslateEllipsePoint.js", "../node_modules/@phaserjs/phaser/geom/ellipse/index.js", "../node_modules/@phaserjs/phaser/geom/intersects/CircleToCircle.js", "../node_modules/@phaserjs/phaser/geom/intersects/CircleToRectangle.js", "../node_modules/@phaserjs/phaser/geom/intersects/GetCircleToCircle.js", "../node_modules/@phaserjs/phaser/geom/intersects/LineToCircle.js", "../node_modules/@phaserjs/phaser/geom/intersects/GetLineToCircle.js", "../node_modules/@phaserjs/phaser/geom/intersects/GetCircleToRectangle.js", "../node_modules/@phaserjs/phaser/geom/intersects/LineToLine.js", "../node_modules/@phaserjs/phaser/geom/intersects/LineToRectangle.js", "../node_modules/@phaserjs/phaser/geom/intersects/GetLineToRectangle.js", "../node_modules/@phaserjs/phaser/geom/intersects/GetRectangleIntersection.js", "../node_modules/@phaserjs/phaser/geom/intersects/GetRectangleToRectangle.js", "../node_modules/@phaserjs/phaser/geom/triangle/TriangleContains.js", "../node_modules/@phaserjs/phaser/geom/triangle/TriangleContainsPoints.js", "../node_modules/@phaserjs/phaser/geom/intersects/RectangleToTriangle.js", "../node_modules/@phaserjs/phaser/geom/intersects/GetRectangleToTriangle.js", "../node_modules/@phaserjs/phaser/geom/intersects/TriangleToCircle.js", "../node_modules/@phaserjs/phaser/geom/intersects/GetTriangleToCircle.js", "../node_modules/@phaserjs/phaser/geom/intersects/TriangleToLine.js", "../node_modules/@phaserjs/phaser/geom/intersects/GetTriangleToLine.js", "../node_modules/@phaserjs/phaser/geom/triangle/DecomposeTriangle.js", "../node_modules/@phaserjs/phaser/geom/intersects/TriangleToTriangle.js", "../node_modules/@phaserjs/phaser/geom/intersects/GetTriangleToTriangle.js", "../node_modules/@phaserjs/phaser/geom/intersects/PointToLine.js", "../node_modules/@phaserjs/phaser/geom/intersects/PointToLineSegment.js", "../node_modules/@phaserjs/phaser/geom/intersects/index.js", "../node_modules/@phaserjs/phaser/geom/line/CenterLineOn.js", "../node_modules/@phaserjs/phaser/geom/line/CloneLine.js", "../node_modules/@phaserjs/phaser/geom/line/CopyLineFrom.js", "../node_modules/@phaserjs/phaser/geom/line/GetLineLength.js", "../node_modules/@phaserjs/phaser/geom/line/ExtendLine.js", "../node_modules/@phaserjs/phaser/geom/line/GetLineAngle.js", "../node_modules/@phaserjs/phaser/geom/line/GetLineBresenhamPoints.js", "../node_modules/@phaserjs/phaser/geom/line/GetLineHeight.js", "../node_modules/@phaserjs/phaser/geom/line/GetLineMidPoint.js", "../node_modules/@phaserjs/phaser/geom/line/GetLineNearestPoint.js", "../node_modules/@phaserjs/phaser/geom/line/GetLineNormal.js", "../node_modules/@phaserjs/phaser/geom/line/GetLineNormalAngle.js", "../node_modules/@phaserjs/phaser/geom/line/GetLineNormalX.js", "../node_modules/@phaserjs/phaser/geom/line/GetLineNormalY.js", "../node_modules/@phaserjs/phaser/geom/line/GetLinePerpSlope.js", "../node_modules/@phaserjs/phaser/geom/line/GetLinePoint.js", "../node_modules/@phaserjs/phaser/geom/line/GetLinePoints.js", "../node_modules/@phaserjs/phaser/geom/line/GetLineRandomPoint.js", "../node_modules/@phaserjs/phaser/geom/line/GetLineReflectAngle.js", "../node_modules/@phaserjs/phaser/geom/line/GetLineSlope.js", "../node_modules/@phaserjs/phaser/geom/line/GetLineWidth.js", "../node_modules/@phaserjs/phaser/geom/line/GetShortestLineDistance.js", "../node_modules/@phaserjs/phaser/geom/line/LineEquals.js", "../node_modules/@phaserjs/phaser/geom/line/SetLineToAngle.js", "../node_modules/@phaserjs/phaser/geom/line/RotateLineAround.js", "../node_modules/@phaserjs/phaser/geom/line/RotateLine.js", "../node_modules/@phaserjs/phaser/geom/line/RotateLineAroundPoint.js", "../node_modules/@phaserjs/phaser/geom/line/TranslateLine.js", "../node_modules/@phaserjs/phaser/geom/line/TranslateLinePoint.js", "../node_modules/@phaserjs/phaser/geom/line/index.js", "../node_modules/@phaserjs/phaser/geom/triangle/Triangle.js", "../node_modules/@phaserjs/phaser/geom/triangle/BuildEquilateralTriangle.js", "../node_modules/@phaserjs/phaser/geom/triangle/BuildRightTriangle.js", "../node_modules/@phaserjs/phaser/geom/triangle/GetTriangleCentroid.js", "../node_modules/@phaserjs/phaser/geom/triangle/TranslateTriangle.js", "../node_modules/@phaserjs/phaser/geom/triangle/CenterTriangleOn.js", "../node_modules/@phaserjs/phaser/geom/triangle/CloneTriangle.js", "../node_modules/@phaserjs/phaser/geom/triangle/CopyTriangleFrom.js", "../node_modules/@phaserjs/phaser/geom/triangle/GetTriangleArea.js", "../node_modules/@phaserjs/phaser/geom/triangle/GetTriangleCircumCenter.js", "../node_modules/@phaserjs/phaser/geom/triangle/GetTriangleCircumCircle.js", "../node_modules/@phaserjs/phaser/geom/triangle/GetTriangleInCenter.js", "../node_modules/@phaserjs/phaser/geom/triangle/GetTrianglePerimeter.js", "../node_modules/@phaserjs/phaser/geom/triangle/GetTrianglePoint.js", "../node_modules/@phaserjs/phaser/geom/triangle/GetTrianglePoints.js", "../node_modules/@phaserjs/phaser/geom/triangle/GetTriangleRandomPoint.js", "../node_modules/@phaserjs/phaser/geom/triangle/RotateTriangleAround.js", "../node_modules/@phaserjs/phaser/geom/triangle/RotateTriangle.js", "../node_modules/@phaserjs/phaser/geom/triangle/RotateTriangleAroundPoint.js", "../node_modules/@phaserjs/phaser/geom/triangle/TriangleContainsPoint.js", "../node_modules/@phaserjs/phaser/geom/triangle/TriangleEquals.js", "../node_modules/@phaserjs/phaser/geom/triangle/index.js", "../node_modules/@phaserjs/phaser/loader/index.js", "../node_modules/@phaserjs/phaser/loader/files/index.js", "../node_modules/@phaserjs/phaser/textures/parsers/AtlasParser.js", "../node_modules/@phaserjs/phaser/loader/File.js", "../node_modules/@phaserjs/phaser/loader/GetURL.js", "../node_modules/@phaserjs/phaser/loader/ImageTagLoader.js", "../node_modules/@phaserjs/phaser/loader/files/ImageFile.js", "../node_modules/@phaserjs/phaser/cache/Cache.js", "../node_modules/@phaserjs/phaser/loader/XHRLoader.js", "../node_modules/@phaserjs/phaser/loader/files/JSONFile.js", "../node_modules/@phaserjs/phaser/loader/files/AtlasFile.js", "../node_modules/@phaserjs/phaser/textures/parsers/BitmapTextParser.js", "../node_modules/@phaserjs/phaser/loader/files/XMLFile.js", "../node_modules/@phaserjs/phaser/loader/files/BitmapTextFile.js", "../node_modules/@phaserjs/phaser/loader/files/CSVFile.js", "../node_modules/@phaserjs/phaser/loader/files/JSONGeometryFile.js", "../node_modules/@phaserjs/phaser/loader/files/OBJFile.js", "../node_modules/@phaserjs/phaser/loader/files/OBJGeometryFile.js", "../node_modules/@phaserjs/phaser/textures/parsers/SpriteSheetParser.js", "../node_modules/@phaserjs/phaser/loader/files/SpriteSheetFile.js", "../node_modules/@phaserjs/phaser/loader/Loader.js", "../node_modules/@phaserjs/phaser/materials3d/BlackPlastic.js", "../node_modules/@phaserjs/phaser/materials3d/BlackRubber.js", "../node_modules/@phaserjs/phaser/materials3d/Brass.js", "../node_modules/@phaserjs/phaser/materials3d/Bronze.js", "../node_modules/@phaserjs/phaser/materials3d/Chrome.js", "../node_modules/@phaserjs/phaser/materials3d/Copper.js", "../node_modules/@phaserjs/phaser/materials3d/CyanPlastic.js", "../node_modules/@phaserjs/phaser/materials3d/CyanRubber.js", "../node_modules/@phaserjs/phaser/materials3d/Emerald.js", "../node_modules/@phaserjs/phaser/materials3d/Gold.js", "../node_modules/@phaserjs/phaser/materials3d/GreenPlastic.js", "../node_modules/@phaserjs/phaser/materials3d/GreenRubber.js", "../node_modules/@phaserjs/phaser/materials3d/Jade.js", "../node_modules/@phaserjs/phaser/materials3d/Obsidian.js", "../node_modules/@phaserjs/phaser/materials3d/Pearl.js", "../node_modules/@phaserjs/phaser/materials3d/RedPlastic.js", "../node_modules/@phaserjs/phaser/materials3d/RedRubber.js", "../node_modules/@phaserjs/phaser/materials3d/Ruby.js", "../node_modules/@phaserjs/phaser/materials3d/Silver.js", "../node_modules/@phaserjs/phaser/materials3d/Turquoise.js", "../node_modules/@phaserjs/phaser/materials3d/WhitePlastic.js", "../node_modules/@phaserjs/phaser/materials3d/WhiteRubber.js", "../node_modules/@phaserjs/phaser/materials3d/YellowPlastic.js", "../node_modules/@phaserjs/phaser/materials3d/YellowRubber.js", "../node_modules/@phaserjs/phaser/textures/palettes/Arne16.js", "../node_modules/@phaserjs/phaser/textures/palettes/C64.js", "../node_modules/@phaserjs/phaser/textures/palettes/CGA.js", "../node_modules/@phaserjs/phaser/textures/palettes/JMP.js", "../node_modules/@phaserjs/phaser/textures/palettes/MSX.js", "../node_modules/@phaserjs/phaser/textures/palettes/PICO8.js", "../node_modules/@phaserjs/phaser/textures/palettes/index.js", "../node_modules/@phaserjs/phaser/textures/types/PixelTexture.js", "../node_modules/@phaserjs/phaser/textures/TextureManager.js", "../node_modules/@phaserjs/phaser/world/index.js", "../node_modules/@phaserjs/phaser/world/events/index.js", "../node_modules/@phaserjs/phaser/world/events/WorldRenderEvent.js", "../node_modules/@phaserjs/phaser/world/events/WorldShutdownEvent.js", "../node_modules/@phaserjs/phaser/world/CalculateTotalRenderable.js", "../node_modules/@phaserjs/phaser/world/HasDirtyChildren.js", "../node_modules/@phaserjs/phaser/world/UpdateCachedLayers.js", "../node_modules/@phaserjs/phaser/world/WorldDepthFirstSearch.js", "../node_modules/@phaserjs/phaser/world/BuildRenderList.js", "../node_modules/@phaserjs/phaser/world/MergeRenderData.js", "../node_modules/@phaserjs/phaser/world/ResetWorldRenderData.js", "../node_modules/@phaserjs/phaser/world/BaseWorld.js", "../node_modules/@phaserjs/phaser/world/CreateWorldRenderData.js", "../node_modules/@phaserjs/phaser/world/StaticWorld.js", "../node_modules/@phaserjs/phaser/world/World.js", "../node_modules/@phaserjs/phaser/config/banner/GetBanner.js", "../node_modules/@phaserjs/phaser/config/parent/GetParent.js", "../node_modules/@phaserjs/phaser/config/renderer/GetRenderer.js", "../node_modules/@phaserjs/phaser/scenes/CreateSceneRenderData.js", "../node_modules/@phaserjs/phaser/config/scenes/GetScenes.js", "../node_modules/@phaserjs/phaser/scenes/ResetSceneRenderData.js", "../node_modules/@phaserjs/phaser/scenes/SceneManagerInstance.js", "../node_modules/@phaserjs/phaser/scenes/SceneManager.js", "../node_modules/@phaserjs/phaser/config/SetConfigDefaults.js", "../node_modules/@phaserjs/phaser/Game.js", "../node_modules/@phaserjs/phaser/scenes/GetConfigValue.js", "../node_modules/@phaserjs/phaser/scenes/Install.js", "../node_modules/@phaserjs/phaser/scenes/Scene.js", "../node_modules/@phaserjs/phaser/motion/tween/TweenProperty.js", "../node_modules/@phaserjs/phaser/motion/tween/nano/NanoTween.js", "../node_modules/@phaserjs/phaser/motion/tween/nano/AddTween.js", "../src/index-bundle.ts"],
  "sourcesContent": ["export let instance;\nexport let frame = 0;\nexport let elapsed = 0;\nexport const GameInstance = {\n  get: () => {\n    return instance;\n  },\n  set: (game) => {\n    instance = game;\n  },\n  getFrame: () => {\n    return frame;\n  },\n  setFrame: (current) => {\n    frame = current;\n  },\n  getElapsed: () => {\n    return elapsed;\n  },\n  setElapsed: (current) => {\n    elapsed = current;\n  }\n};\n", "import {GetMat4Determinant} from \"./GetMat4Determinant\";\nimport {GetMat4Frobenius} from \"./GetMat4Frobenius\";\nimport {Mat4Add} from \"./Mat4Add\";\nimport {Mat4AddTranslationFromFloats} from \"./Mat4AddTranslationFromFloats\";\nimport {Mat4Adjoint} from \"./Mat4Adjoint\";\nimport {Mat4Clone} from \"./Mat4Clone\";\nimport {Mat4CopyFrom} from \"./Mat4CopyFrom\";\nimport {Mat4CopyPosition} from \"./Mat4CopyPosition\";\nimport {Mat4Equals} from \"./Mat4Equals\";\nimport {Mat4FromQuat} from \"./Mat4FromQuat\";\nimport {Mat4FromRotation} from \"./Mat4FromRotation\";\nimport {Mat4FromRotationTranslation} from \"./Mat4FromRotationTranslation\";\nimport {Mat4FromRotationTranslationScale} from \"./Mat4FromRotationTranslationScale\";\nimport {Mat4FromRotationTranslationScaleOrigin} from \"./Mat4FromRotationTranslationScaleOrigin\";\nimport {Mat4FromRotationXYTranslation} from \"./Mat4FromRotationXYTranslation\";\nimport {Mat4FromScaling} from \"./Mat4FromScaling\";\nimport {Mat4FromTranslation} from \"./Mat4FromTranslation\";\nimport {Mat4FromXRotation} from \"./Mat4FromXRotation\";\nimport {Mat4FromYRotation} from \"./Mat4FromYRotation\";\nimport {Mat4FromZRotation} from \"./Mat4FromZRotation\";\nimport {Mat4Frustum} from \"./Mat4Frustum\";\nimport {Mat4GetRotation} from \"./Mat4GetRotation\";\nimport {Mat4GetScaling} from \"./Mat4GetScaling\";\nimport {Mat4GetTranslation} from \"./Mat4GetTranslation\";\nimport {Mat4Identity} from \"./Mat4Identity\";\nimport {Mat4Invert} from \"./Mat4Invert\";\nimport {Mat4LookAt} from \"./Mat4LookAt\";\nimport {Mat4Multiply} from \"./Mat4Multiply\";\nimport {Mat4MultiplyScalar} from \"./Mat4MultiplyScalar\";\nimport {Mat4MultiplyScalarAndAdd} from \"./Mat4MultiplyScalarAndAdd\";\nimport {Mat4Ortho} from \"./Mat4Ortho\";\nimport {Mat4Perspective} from \"./Mat4Perspective\";\nimport {Mat4PerspectiveFromFieldOfView} from \"./Mat4PerspectiveFromFieldOfView\";\nimport {Mat4Rotate} from \"./Mat4Rotate\";\nimport {Mat4RotateX} from \"./Mat4RotateX\";\nimport {Mat4RotateY} from \"./Mat4RotateY\";\nimport {Mat4RotateZ} from \"./Mat4RotateZ\";\nimport {Mat4Scale} from \"./Mat4Scale\";\nimport {Mat4SetTranslation} from \"./Mat4SetTranslation\";\nimport {Mat4SetTranslationFromFloats} from \"./Mat4SetTranslationFromFloats\";\nimport {Mat4Subtract} from \"./Mat4Subtract\";\nimport {Mat4TargetTo} from \"./Mat4TargetTo\";\nimport {Mat4Translate} from \"./Mat4Translate\";\nimport {Mat4TranslateFromFloats} from \"./Mat4TranslateFromFloats\";\nimport {Mat4Transpose} from \"./Mat4Transpose\";\nimport {Mat4Zero} from \"./Mat4Zero\";\nimport {Matrix4} from \"./Matrix4\";\nexport {\n  GetMat4Determinant,\n  GetMat4Frobenius,\n  Mat4Add,\n  Mat4AddTranslationFromFloats,\n  Mat4Adjoint,\n  Mat4Clone,\n  Mat4CopyFrom,\n  Mat4CopyPosition,\n  Mat4Equals,\n  Mat4FromQuat,\n  Mat4FromRotation,\n  Mat4FromRotationTranslation,\n  Mat4FromRotationTranslationScale,\n  Mat4FromRotationTranslationScaleOrigin,\n  Mat4FromRotationXYTranslation,\n  Mat4FromScaling,\n  Mat4FromTranslation,\n  Mat4FromXRotation,\n  Mat4FromYRotation,\n  Mat4FromZRotation,\n  Mat4Frustum,\n  Mat4GetRotation,\n  Mat4GetScaling,\n  Mat4GetTranslation,\n  Mat4Identity,\n  Mat4Invert,\n  Mat4LookAt,\n  Mat4Multiply,\n  Mat4MultiplyScalar,\n  Mat4MultiplyScalarAndAdd,\n  Mat4Ortho,\n  Mat4Perspective,\n  Mat4PerspectiveFromFieldOfView,\n  Mat4Rotate,\n  Mat4RotateX,\n  Mat4RotateY,\n  Mat4RotateZ,\n  Mat4Scale,\n  Mat4SetTranslation,\n  Mat4SetTranslationFromFloats,\n  Mat4Subtract,\n  Mat4TargetTo,\n  Mat4Translate,\n  Mat4TranslateFromFloats,\n  Mat4Transpose,\n  Mat4Zero,\n  Matrix4\n};\n", "export function GetMat4Determinant(matrix) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = matrix.data;\n  const det22x33 = m22 * m33 - m32 * m23;\n  const det21x33 = m21 * m33 - m31 * m23;\n  const det21x32 = m21 * m32 - m31 * m22;\n  const det20x33 = m20 * m33 - m30 * m23;\n  const det20x32 = m20 * m32 - m22 * m30;\n  const det20x31 = m20 * m31 - m30 * m21;\n  const cofact00 = +(m11 * det22x33 - m12 * det21x33 + m13 * det21x32);\n  const cofact01 = -(m10 * det22x33 - m12 * det20x33 + m13 * det20x32);\n  const cofact02 = +(m10 * det21x33 - m11 * det20x33 + m13 * det20x31);\n  const cofact03 = -(m10 * det21x32 - m11 * det20x32 + m12 * det20x31);\n  return m00 * cofact00 + m01 * cofact01 + m02 * cofact02 + m03 * cofact03;\n}\n", "export function GetMat4Frobenius(matrix) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = matrix.data;\n  return Math.hypot(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CheckMatrix(matrix) {\n  if (!Array.isArray(matrix) || matrix.length < 2 || !Array.isArray(matrix[0])) {\n    return false;\n  }\n  const size = matrix[0].length;\n  for (let i = 1; i < matrix.length; i++) {\n    if (matrix[i].length !== size) {\n      return false;\n    }\n  }\n  return true;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CheckMatrix} from \"./CheckMatrix\";\nexport function MatrixToString(matrix) {\n  let str = \"\";\n  if (!CheckMatrix(matrix)) {\n    return str;\n  }\n  for (let r = 0; r < matrix.length; r++) {\n    for (let c = 0; c < matrix[r].length; c++) {\n      const cell = matrix[r][c].toString();\n      if (cell !== \"undefined\") {\n        str = str.padEnd(2, cell);\n      } else {\n        str += \"?\";\n      }\n      if (c < matrix[r].length - 1) {\n        str += \" |\";\n      }\n    }\n    if (r < matrix.length - 1) {\n      str += \"\\n\";\n      for (let i = 0; i < matrix[r].length; i++) {\n        str += \"---\";\n        if (i < matrix[r].length - 1) {\n          str += \"+\";\n        }\n      }\n      str += \"\\n\";\n    }\n  }\n  return str;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function ReverseColumns(matrix) {\n  return matrix.reverse();\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function ReverseRows(matrix) {\n  for (let i = 0; i < matrix.length; i++) {\n    matrix[i].reverse();\n  }\n  return matrix;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function TransposeMatrix(matrix) {\n  const sourceRowCount = matrix.length;\n  const sourceColCount = matrix[0].length;\n  const result = new Array(sourceColCount);\n  for (let i = 0; i < sourceColCount; i++) {\n    result[i] = new Array(sourceRowCount);\n    for (let j = sourceRowCount - 1; j > -1; j--) {\n      result[i][j] = matrix[j][i];\n    }\n  }\n  return result;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CheckMatrix} from \"./CheckMatrix\";\nimport {TransposeMatrix} from \"./TransposeMatrix\";\nexport function RotateMatrix(matrix, direction = 90) {\n  if (!CheckMatrix(matrix)) {\n    return matrix;\n  }\n  if (typeof direction !== \"string\") {\n    direction = (direction % 360 + 360) % 360;\n  }\n  if (direction === 90 || direction === -270 || direction === \"rotateLeft\") {\n    matrix = TransposeMatrix(matrix);\n    matrix.reverse();\n  } else if (direction === -90 || direction === 270 || direction === \"rotateRight\") {\n    matrix.reverse();\n    matrix = TransposeMatrix(matrix);\n  } else if (Math.abs(direction) === 180 || direction === \"rotate180\") {\n    for (let i = 0; i < matrix.length; i++) {\n      matrix[i].reverse();\n    }\n    matrix.reverse();\n  }\n  return matrix;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {RotateMatrix} from \"./RotateMatrix\";\nexport function Rotate180(matrix) {\n  return RotateMatrix(matrix, 180);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {RotateMatrix} from \"./RotateMatrix\";\nexport function RotateLeft(matrix) {\n  return RotateMatrix(matrix, 90);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {RotateMatrix} from \"./RotateMatrix\";\nexport function RotateRight(matrix) {\n  return RotateMatrix(matrix, -90);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function NumberArray(start, end, prefix, suffix) {\n  const result = [];\n  for (let i = start; i <= end; i++) {\n    if (prefix || suffix) {\n      let key = prefix ? prefix + i.toString() : i.toString();\n      if (suffix) {\n        key = key.concat(suffix);\n      }\n      result.push(key);\n    } else {\n      result.push(i);\n    }\n  }\n  return result;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function RoundAwayFromZero(value) {\n  return value > 0 ? Math.ceil(value) : Math.floor(value);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {RoundAwayFromZero} from \"../../math/RoundAwayFromZero\";\nexport function NumberArrayStep(start, end, step) {\n  const result = [];\n  const total = Math.max(RoundAwayFromZero((end - start) / (step || 1)), 0);\n  for (let i = 0; i < total; i++) {\n    result.push(start);\n    start += step;\n  }\n  return result;\n}\n", "/**\n * @author       Niklas von Hertzen (https://github.com/niklasvh/base64-arraybuffer)\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nconst chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nexport function ArrayBufferToBase64(arrayBuffer, mediaType) {\n  const bytes = new Uint8Array(arrayBuffer);\n  const len = bytes.length;\n  let base64 = mediaType ? \"data:\" + mediaType + \";base64,\" : \"\";\n  for (let i = 0; i < len; i += 3) {\n    base64 += chars[bytes[i] >> 2];\n    base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n    base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n    base64 += chars[bytes[i + 2] & 63];\n  }\n  if (len % 3 === 2) {\n    base64 = base64.substring(0, base64.length - 1) + \"=\";\n  } else if (len % 3 === 1) {\n    base64 = base64.substring(0, base64.length - 2) + \"==\";\n  }\n  return base64;\n}\n", "/**\n * @author       Niklas von Hertzen (https://github.com/niklasvh/base64-arraybuffer)\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nconst chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst lookup = new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n  lookup[chars.charCodeAt(i)] = i;\n}\nexport function Base64ToArrayBuffer(base64) {\n  base64 = base64.substr(base64.indexOf(\",\") + 1);\n  const len = base64.length;\n  let bufferLength = len * 0.75;\n  let p = 0;\n  let encoded1;\n  let encoded2;\n  let encoded3;\n  let encoded4;\n  if (base64[len - 1] === \"=\") {\n    bufferLength--;\n    if (base64[len - 2] === \"=\") {\n      bufferLength--;\n    }\n  }\n  const arrayBuffer = new ArrayBuffer(bufferLength);\n  const bytes = new Uint8Array(arrayBuffer);\n  for (let i = 0; i < len; i += 4) {\n    encoded1 = lookup[base64.charCodeAt(i)];\n    encoded2 = lookup[base64.charCodeAt(i + 1)];\n    encoded3 = lookup[base64.charCodeAt(i + 2)];\n    encoded4 = lookup[base64.charCodeAt(i + 3)];\n    bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n    bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n    bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n  }\n  return arrayBuffer;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function UppercaseFirst(str) {\n  return str && str[0].toUpperCase() + str.slice(1);\n}\n", "export function NOOP() {\n}\n", "import {NOOP} from \"../../utils\";\nexport class Matrix4 {\n  constructor(src) {\n    const data = new Float32Array(16);\n    this.data = data;\n    this.onChange = NOOP;\n    if (src) {\n      if (Array.isArray(src)) {\n        this.fromArray(src);\n      } else {\n        this.fromArray(src.data);\n      }\n    } else {\n      data[0] = 1;\n      data[5] = 1;\n      data[10] = 1;\n      data[15] = 1;\n    }\n  }\n  set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    const data = this.data;\n    data[0] = m00;\n    data[1] = m01;\n    data[2] = m02;\n    data[3] = m03;\n    data[4] = m10;\n    data[5] = m11;\n    data[6] = m12;\n    data[7] = m13;\n    data[8] = m20;\n    data[9] = m21;\n    data[10] = m22;\n    data[11] = m23;\n    data[12] = m30;\n    data[13] = m31;\n    data[14] = m32;\n    data[15] = m33;\n    this.onChange(this);\n    return this;\n  }\n  toArray(dst = [], index = 0) {\n    const data = this.data;\n    for (let i = 0; i < 16; i++) {\n      dst[index + i] = data[i];\n    }\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    const data = this.data;\n    for (let i = 0; i < 16; i++) {\n      data[i] = src[index + i];\n    }\n    this.onChange(this);\n    return this;\n  }\n  toString() {\n    return \"[ mat4=\" + this.data.join(\", \") + \" ]\";\n  }\n  destroy() {\n    this.onChange = NOOP;\n    this.data = null;\n  }\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4Add(a, b, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = a.data;\n  const [b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33] = b.data;\n  return out.set(a00 + b00, a01 + b01, a02 + b02, a03 + b03, a10 + b10, a11 + b11, a12 + b12, a13 + b13, a20 + b20, a21 + b21, a22 + b22, a23 + b23, a30 + b30, a31 + b31, a32 + b32, a33 + b33);\n}\n", "export function Mat4AddTranslationFromFloats(matrix, x, y, z) {\n  const data = matrix.data;\n  data[12] += x;\n  data[13] += y;\n  data[14] += z;\n  matrix.onChange(matrix);\n  return matrix;\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4Adjoint(matrix, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix.data;\n  const b00 = a00 * a11 - a01 * a10;\n  const b01 = a00 * a12 - a02 * a10;\n  const b02 = a00 * a13 - a03 * a10;\n  const b03 = a01 * a12 - a02 * a11;\n  const b04 = a01 * a13 - a03 * a11;\n  const b05 = a02 * a13 - a03 * a12;\n  const b06 = a20 * a31 - a21 * a30;\n  const b07 = a20 * a32 - a22 * a30;\n  const b08 = a20 * a33 - a23 * a30;\n  const b09 = a21 * a32 - a22 * a31;\n  const b10 = a21 * a33 - a23 * a31;\n  const b11 = a22 * a33 - a23 * a32;\n  return out.set(a11 * b11 - a12 * b10 + a13 * b09, a02 * b10 - a01 * b11 - a03 * b09, a31 * b05 - a32 * b04 + a33 * b03, a22 * b04 - a21 * b05 - a23 * b03, a12 * b08 - a10 * b11 - a13 * b07, a00 * b11 - a02 * b08 + a03 * b07, a32 * b02 - a30 * b05 - a33 * b01, a20 * b05 - a22 * b02 + a23 * b01, a10 * b10 - a11 * b08 + a13 * b06, a01 * b08 - a00 * b10 - a03 * b06, a30 * b04 - a31 * b02 + a33 * b00, a21 * b02 - a20 * b04 - a23 * b00, a11 * b07 - a10 * b09 - a12 * b06, a00 * b09 - a01 * b07 + a02 * b06, a31 * b01 - a30 * b03 - a32 * b00, a20 * b03 - a21 * b01 + a22 * b00);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4Clone(src) {\n  return new Matrix4(src);\n}\n", "export function Mat4CopyFrom(src, dest) {\n  return dest.fromArray(src.data);\n}\n", "export function Mat4CopyPosition(src, dest) {\n  const srcData = src.data;\n  const destData = dest.data;\n  destData[12] = srcData[12];\n  destData[13] = srcData[13];\n  destData[14] = srcData[14];\n  dest.onChange(dest);\n  return dest;\n}\n", "export function Mat4Equals(a, b) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = a.data;\n  const [b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33] = b.data;\n  return a00 === b00 && a01 === b01 && a02 === b02 && a03 === b03 && a10 === b10 && a11 === b11 && a12 === b12 && a13 === b13 && a20 === b20 && a21 === b21 && a22 === b22 && a23 === b23 && a30 === b30 && a31 === b31 && a32 === b32 && a33 === b33;\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4FromQuat(q, out = new Matrix4()) {\n  const {x, y, z, w} = q;\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n  const xx = x * x2;\n  const yx = y * x2;\n  const yy = y * y2;\n  const zx = z * x2;\n  const zy = z * y2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n  return out.set(1 - yy - zz, yx + wz, zx - wy, 0, yx - wz, 1 - xx - zz, zy + wx, 0, zx + wy, zy - wx, 1 - xx - yy, 0, 0, 0, 0, 1);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4FromRotation(angle, axis, out = new Matrix4()) {\n  let {x, y, z} = axis;\n  let len = Math.hypot(x, y, z);\n  if (len < 1e-5) {\n    return null;\n  }\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const t = 1 - c;\n  return out.set(x * x * t + c, y * x * t + z * s, z * x * t - y * s, 0, x * y * t - z * s, y * y * t + c, z * y * t + x * s, 0, x * z * t + y * s, y * z * t - x * s, z * z * t + c, 0, 0, 0, 0, 1);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4FromRotationTranslation(q, v, out = new Matrix4()) {\n  const {x, y, z, w} = q;\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n  const xx = x * x2;\n  const xy = x * y2;\n  const xz = x * z2;\n  const yy = y * y2;\n  const yz = y * z2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n  const {x: vx, y: vy, z: vz} = v;\n  return out.set(1 - (yy + zz), xy + wz, xz - wy, 0, xy - wz, 1 - (xx + zz), yz + wx, 0, xz + wy, yz - wx, 1 - (xx + yy), 0, vx, vy, vz, 1);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4FromRotationTranslationScale(q, v, s, out = new Matrix4()) {\n  const {x, y, z, w} = q;\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n  const xx = x * x2;\n  const xy = x * y2;\n  const xz = x * z2;\n  const yy = y * y2;\n  const yz = y * z2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n  const {x: sx, y: sy, z: sz} = s;\n  const {x: vx, y: vy, z: vz} = v;\n  return out.set((1 - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0, (xy - wz) * sy, (1 - (xx + zz)) * sy, (yz + wx) * sy, 0, (xz + wy) * sz, (yz - wx) * sz, (1 - (xx + yy)) * sz, 0, vx, vy, vz, 1);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4FromRotationTranslationScaleOrigin(q, v, s, o, out = new Matrix4()) {\n  const {x, y, z, w} = q;\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n  const xx = x * x2;\n  const xy = x * y2;\n  const xz = x * z2;\n  const yy = y * y2;\n  const yz = y * z2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n  const {x: sx, y: sy, z: sz} = s;\n  const {x: ox, y: oy, z: oz} = o;\n  const {x: vx, y: vy, z: vz} = v;\n  const out0 = (1 - (yy + zz)) * sx;\n  const out1 = (xy + wz) * sx;\n  const out2 = (xz - wy) * sx;\n  const out4 = (xy - wz) * sy;\n  const out5 = (1 - (xx + zz)) * sy;\n  const out6 = (yz + wx) * sy;\n  const out8 = (xz + wy) * sz;\n  const out9 = (yz - wx) * sz;\n  const out10 = (1 - (xx + yy)) * sz;\n  return out.set(out0, out1, out2, 0, out4, out5, out6, 0, out8, out9, out10, 0, vx + ox - (out0 * ox + out4 * oy + out8 * oz), vy + oy - (out1 * ox + out5 * oy + out9 * oz), vz + oz - (out2 * ox + out6 * oy + out10 * oz), 1);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4FromRotationXYTranslation(rotation, position, translateFirst = true, out = new Matrix4()) {\n  const {x, y, z} = position;\n  const sx = Math.sin(rotation.x);\n  const cx = Math.cos(rotation.x);\n  const sy = Math.sin(rotation.y);\n  const cy = Math.cos(rotation.y);\n  let a30 = x;\n  let a31 = y;\n  let a32 = z;\n  const b21 = -sx;\n  const c01 = 0 - b21 * sy;\n  const c02 = 0 - cx * sy;\n  const c21 = b21 * cy;\n  const c22 = cx * cy;\n  if (!translateFirst) {\n    a30 = cy * x + sy * z;\n    a31 = c01 * x + cx * y + c21 * z;\n    a32 = c02 * x + sx * y + c22 * z;\n  }\n  return out.set(cy, c01, c02, 0, 0, cx, sx, 0, sy, c21, c22, 0, a30, a31, a32, 1);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4FromScaling(vec3, out = new Matrix4()) {\n  const {x, y, z} = vec3;\n  return out.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4FromTranslation(vec3, out = new Matrix4()) {\n  const {x, y, z} = vec3;\n  return out.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x, y, z, 1);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4FromXRotation(angle, out = new Matrix4()) {\n  const c = Math.cos(angle);\n  const s = Math.sin(angle);\n  return out.set(1, 0, 0, 0, 0, c, s, 0, 0, -s, c, 0, 0, 0, 0, 1);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4FromYRotation(angle, out = new Matrix4()) {\n  const c = Math.cos(angle);\n  const s = Math.sin(angle);\n  return out.set(c, 0, -s, 0, 0, 1, 0, 0, s, 0, c, 0, 0, 0, 0, 1);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4FromZRotation(angle, out = new Matrix4()) {\n  const c = Math.cos(angle);\n  const s = Math.sin(angle);\n  return out.set(c, s, 0, 0, -s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4Frustum(left, right, bottom, top, near, far, out = new Matrix4()) {\n  const rl = 1 / (right - left);\n  const tb = 1 / (top - bottom);\n  const nf = 1 / (near - far);\n  return out.set(near * 2 * rl, 0, 0, 0, 0, near * 2 * tb, 0, 0, (right + left) * rl, (top + bottom) * tb, (far + near) * nf, -1, 0, 0, far * near * 2 * nf, 0);\n}\n", "export class Vec3 {\n  constructor(x = 0, y = 0, z = 0) {\n    this.set(x, y, z);\n  }\n  set(x = 0, y = 0, z = 0) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y, z} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    dst[index + 2] = z;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1], src[index + 2]);\n  }\n  toString() {\n    const {x, y, z} = this;\n    return `{ x=${x}, y=${y}, z=${z} }`;\n  }\n}\n", "import {Vec3} from \"../vec3/Vec3\";\nexport function Mat4GetScaling(matrix, out = new Vec3()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22] = matrix.data;\n  return out.set(Math.hypot(m00, m01, m02), Math.hypot(m10, m11, m12), Math.hypot(m20, m21, m22));\n}\n", "import {NOOP} from \"../../utils\";\nexport class Quaternion {\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChange = NOOP;\n  }\n  set(x = 0, y = 0, z = 0, w = 1) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChange(this);\n    return this;\n  }\n  set x(value) {\n    const prev = this._x;\n    this._x = value;\n    if (value !== prev) {\n      this.onChange(this);\n    }\n  }\n  get x() {\n    return this._x;\n  }\n  set y(value) {\n    const prev = this._y;\n    this._y = value;\n    if (value !== prev) {\n      this.onChange(this);\n    }\n  }\n  get y() {\n    return this._y;\n  }\n  set z(value) {\n    const prev = this._z;\n    this._z = value;\n    if (value !== prev) {\n      this.onChange(this);\n    }\n  }\n  get z() {\n    return this._z;\n  }\n  set w(value) {\n    const prev = this._w;\n    this._w = value;\n    if (value !== prev) {\n      this.onChange(this);\n    }\n  }\n  get w() {\n    return this._w;\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y, z, w} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    dst[index + 2] = z;\n    dst[index + 3] = w;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1], src[index + 2], src[index + 3]);\n  }\n  destroy() {\n    this.onChange = NOOP;\n  }\n  toString() {\n    const {x, y, z, w} = this;\n    return `{ x=${x}, y=${y}, z=${z}, w=${w} }`;\n  }\n}\n", "import {Mat4GetScaling} from \"./Mat4GetScaling\";\nimport {Quaternion} from \"../quaternion/Quaternion\";\nexport function Mat4GetRotation(matrix, out = new Quaternion()) {\n  const scaling = Mat4GetScaling(matrix);\n  const is1 = 1 / scaling.x;\n  const is2 = 1 / scaling.y;\n  const is3 = 1 / scaling.z;\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22] = matrix.data;\n  const sm11 = m00 * is1;\n  const sm12 = m01 * is2;\n  const sm13 = m02 * is3;\n  const sm21 = m10 * is1;\n  const sm22 = m11 * is2;\n  const sm23 = m12 * is3;\n  const sm31 = m20 * is1;\n  const sm32 = m21 * is2;\n  const sm33 = m22 * is3;\n  const trace = sm11 + sm22 + sm33;\n  let S = 0;\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1) * 2;\n    return out.set((sm23 - sm32) / S, (sm31 - sm13) / S, (sm12 - sm21) / S, 0.25 * S);\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1 + sm11 - sm22 - sm33) * 2;\n    return out.set(0.25 * S, (sm12 + sm21) / S, (sm31 + sm13) / S, (sm23 - sm32) / S);\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1 + sm22 - sm11 - sm33) * 2;\n    return out.set((sm12 + sm21) / S, 0.25 * S, (sm23 + sm32) / S, (sm31 - sm13) / S);\n  } else {\n    S = Math.sqrt(1 + sm33 - sm11 - sm22) * 2;\n    return out.set((sm31 + sm13) / S, (sm23 + sm32) / S, 0.25 * S, (sm12 - sm21) / S);\n  }\n}\n", "import {Vec3} from \"../vec3/Vec3\";\nexport function Mat4GetTranslation(matrix, out = new Vec3()) {\n  const data = matrix.data;\n  return out.set(data[12], data[13], data[14]);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4Identity(matrix = new Matrix4()) {\n  return matrix.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4Invert(matrix, out = new Matrix4()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = matrix.data;\n  const det22x33 = m22 * m33 - m32 * m23;\n  const det21x33 = m21 * m33 - m31 * m23;\n  const det21x32 = m21 * m32 - m31 * m22;\n  const det20x33 = m20 * m33 - m30 * m23;\n  const det20x32 = m20 * m32 - m22 * m30;\n  const det20x31 = m20 * m31 - m30 * m21;\n  const cofact00 = +(m11 * det22x33 - m12 * det21x33 + m13 * det21x32);\n  const cofact01 = -(m10 * det22x33 - m12 * det20x33 + m13 * det20x32);\n  const cofact02 = +(m10 * det21x33 - m11 * det20x33 + m13 * det20x31);\n  const cofact03 = -(m10 * det21x32 - m11 * det20x32 + m12 * det20x31);\n  const det = m00 * cofact00 + m01 * cofact01 + m02 * cofact02 + m03 * cofact03;\n  if (det === 0) {\n    return out;\n  }\n  const detInv = 1 / det;\n  const det12x33 = m12 * m33 - m32 * m13;\n  const det11x33 = m11 * m33 - m31 * m13;\n  const det11x32 = m11 * m32 - m31 * m12;\n  const det10x33 = m10 * m33 - m30 * m13;\n  const det10x32 = m10 * m32 - m30 * m12;\n  const det10x31 = m10 * m31 - m30 * m11;\n  const det12x23 = m12 * m23 - m22 * m13;\n  const det11x23 = m11 * m23 - m21 * m13;\n  const det11x22 = m11 * m22 - m21 * m12;\n  const det10x23 = m10 * m23 - m20 * m13;\n  const det10x22 = m10 * m22 - m20 * m12;\n  const det10x21 = m10 * m21 - m20 * m11;\n  const cofact10 = -(m01 * det22x33 - m02 * det21x33 + m03 * det21x32);\n  const cofact11 = +(m00 * det22x33 - m02 * det20x33 + m03 * det20x32);\n  const cofact12 = -(m00 * det21x33 - m01 * det20x33 + m03 * det20x31);\n  const cofact13 = +(m00 * det21x32 - m01 * det20x32 + m02 * det20x31);\n  const cofact20 = +(m01 * det12x33 - m02 * det11x33 + m03 * det11x32);\n  const cofact21 = -(m00 * det12x33 - m02 * det10x33 + m03 * det10x32);\n  const cofact22 = +(m00 * det11x33 - m01 * det10x33 + m03 * det10x31);\n  const cofact23 = -(m00 * det11x32 - m01 * det10x32 + m02 * det10x31);\n  const cofact30 = -(m01 * det12x23 - m02 * det11x23 + m03 * det11x22);\n  const cofact31 = +(m00 * det12x23 - m02 * det10x23 + m03 * det10x22);\n  const cofact32 = -(m00 * det11x23 - m01 * det10x23 + m03 * det10x21);\n  const cofact33 = +(m00 * det11x22 - m01 * det10x22 + m02 * det10x21);\n  return out.set(cofact00 * detInv, cofact10 * detInv, cofact20 * detInv, cofact30 * detInv, cofact01 * detInv, cofact11 * detInv, cofact21 * detInv, cofact31 * detInv, cofact02 * detInv, cofact12 * detInv, cofact22 * detInv, cofact32 * detInv, cofact03 * detInv, cofact13 * detInv, cofact23 * detInv, cofact33 * detInv);\n}\n", "import {Mat4Identity} from \"./Mat4Identity\";\nimport {Matrix4} from \"./Matrix4\";\nexport function Mat4LookAt(eye, center, up, out = new Matrix4()) {\n  const {x: eyex, y: eyey, z: eyez} = eye;\n  const {x: upx, y: upy, z: upz} = up;\n  const {x: centerx, y: centery, z: centerz} = center;\n  if (Math.abs(eyex - centerx) < 1e-5 && Math.abs(eyey - centery) < 1e-5 && Math.abs(eyez - centerz) < 1e-5) {\n    return Mat4Identity(out);\n  }\n  let z0 = eyex - centerx;\n  let z1 = eyey - centery;\n  let z2 = eyez - centerz;\n  let len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  let x0 = upy * z2 - upz * z1;\n  let x1 = upz * z0 - upx * z2;\n  let x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n  let y0 = z1 * x2 - z2 * x1;\n  let y1 = z2 * x0 - z0 * x2;\n  let y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n  return out.set(x0, y0, z0, 0, x1, y1, z1, 0, x2, y2, z2, 0, -(x0 * eyex + x1 * eyey + x2 * eyez), -(y0 * eyex + y1 * eyey + y2 * eyez), -(z0 * eyex + z1 * eyey + z2 * eyez), 1);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4Multiply(a, b, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = a.data;\n  const [b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33] = b.data;\n  return out.set(b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30, b01 * a01 + b01 * a11 + b02 * a21 + b03 * a31, b02 * a02 + b01 * a12 + b02 * a22 + b03 * a32, b03 * a03 + b01 * a13 + b02 * a23 + b03 * a33, b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30, b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31, b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32, b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33, b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30, b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31, b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32, b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33, b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30, b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31, b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32, b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4MultiplyScalar(matrix, scalar, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix.data;\n  return out.set(a00 * scalar, a01 * scalar, a02 * scalar, a03 * scalar, a10 * scalar, a11 * scalar, a12 * scalar, a13 * scalar, a20 * scalar, a21 * scalar, a22 * scalar, a23 * scalar, a30 * scalar, a31 * scalar, a32 * scalar, a33 * scalar);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4MultiplyScalarAndAdd(a, b, scalar, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = a.data;\n  const [b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33] = b.data;\n  return out.set(a00 + b00 * scalar, a01 + b01 * scalar, a02 + b02 * scalar, a03 + b03 * scalar, a10 + b10 * scalar, a11 + b11 * scalar, a12 + b12 * scalar, a13 + b13 * scalar, a20 + b20 * scalar, a21 + b21 * scalar, a22 + b22 * scalar, a23 + b23 * scalar, a30 + b30 * scalar, a31 + b31 * scalar, a32 + b32 * scalar, a33 + b33 * scalar);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4Ortho(left, right, bottom, top, near, far, out = new Matrix4()) {\n  const lr = 1 / (left - right);\n  const bt = 1 / (bottom - top);\n  const nf = 1 / (near - far);\n  return out.set(-2 * lr, 0, 0, 0, 0, -2 * bt, 0, 0, 0, 0, 2 * nf, 0, (left + right) * lr, (top + bottom) * bt, (far + near) * nf, 1);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4Perspective(fovY, aspect, near, far, out = new Matrix4()) {\n  const f = 1 / Math.tan(fovY / 2);\n  let m22 = -1;\n  let m32 = -2 * near;\n  if (far !== null && far !== Infinity) {\n    const nf = 1 / (near - far);\n    m22 = (far + near) * nf;\n    m32 = 2 * far * near * nf;\n  }\n  return out.set(f / aspect, 0, 0, 0, 0, f, 0, 0, 0, 0, m22, -1, 0, 0, m32, 0);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4PerspectiveFromFieldOfView(fov, near, far, out = new Matrix4()) {\n  const upTan = Math.tan(fov.upDegrees * Math.PI / 180);\n  const downTan = Math.tan(fov.downDegrees * Math.PI / 180);\n  const leftTan = Math.tan(fov.leftDegrees * Math.PI / 180);\n  const rightTan = Math.tan(fov.rightDegrees * Math.PI / 180);\n  const xScale = 2 / (leftTan + rightTan);\n  const yScale = 2 / (upTan + downTan);\n  return out.set(xScale, 0, 0, 0, 0, yScale, 0, 0, -((leftTan - rightTan) * xScale * 0.5), (upTan - downTan) * yScale * 0.5, far / (near - far), -1, 0, 0, far * near / (near - far), 0);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4Rotate(matrix, angle, axis, out = new Matrix4()) {\n  let {x, y, z} = axis;\n  let len = Math.hypot(x, y, z);\n  if (len < 1e-5) {\n    return null;\n  }\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const t = 1 - c;\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix.data;\n  const b00 = x * x * t + c;\n  const b01 = y * x * t + z * s;\n  const b02 = z * x * t - y * s;\n  const b10 = x * y * t - z * s;\n  const b11 = y * y * t + c;\n  const b12 = z * y * t + x * s;\n  const b20 = x * z * t + y * s;\n  const b21 = y * z * t - x * s;\n  const b22 = z * z * t + c;\n  return out.set(a00 * b00 + a10 * b01 + a20 * b02, a01 * b00 + a11 * b01 + a21 * b02, a02 * b00 + a12 * b01 + a22 * b02, a03 * b00 + a13 * b01 + a23 * b02, a00 * b10 + a10 * b11 + a20 * b12, a01 * b10 + a11 * b11 + a21 * b12, a02 * b10 + a12 * b11 + a22 * b12, a03 * b10 + a13 * b11 + a23 * b12, a00 * b20 + a10 * b21 + a20 * b22, a01 * b20 + a11 * b21 + a21 * b22, a02 * b20 + a12 * b21 + a22 * b22, a03 * b20 + a13 * b21 + a23 * b22, a30, a31, a32, a33);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4RotateX(matrix, angle, out = new Matrix4()) {\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix.data;\n  return out.set(a00, a01, a02, a03, a10 * c + a20 * s, a11 * c + a21 * s, a12 * c + a22 * s, a13 * c + a23 * s, a20 * c - a10 * s, a21 * c - a11 * s, a22 * c - a12 * s, a23 * c - a13 * s, a30, a31, a32, a33);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4RotateY(matrix, angle, out = new Matrix4()) {\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix.data;\n  return out.set(a00 * c - a20 * s, a01 * c - a21 * s, a02 * c - a22 * s, a03 * c - a23 * s, a10, a11, a12, a13, a00 * s + a20 * c, a01 * s + a21 * c, a02 * s + a22 * c, a03 * s + a23 * c, a30, a31, a32, a33);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4RotateZ(matrix, angle, out = new Matrix4()) {\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix.data;\n  return out.set(a00 * c + a10 * s, a01 * c + a11 * s, a02 * c + a12 * s, a03 * c + a13 * s, a10 * c - a00 * s, a11 * c - a01 * s, a12 * c - a02 * s, a13 * c - a03 * s, a20, a21, a22, a23, a30, a31, a32, a33);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4Scale(matrix, v, out = new Matrix4()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = matrix.data;\n  const {x, y, z} = v;\n  return out.set(m00 * x, m01 * x, m02 * x, m03 * x, m10 * y, m11 * y, m12 * y, m13 * y, m20 * z, m21 * z, m22 * z, m23 * z, m30, m31, m32, m33);\n}\n", "export function Mat4SetTranslation(matrix, vec3) {\n  const data = matrix.data;\n  const {x, y, z} = vec3;\n  data[12] = x;\n  data[13] = y;\n  data[14] = z;\n  matrix.onChange(matrix);\n  return matrix;\n}\n", "export function Mat4SetTranslationFromFloats(matrix, x, y, z) {\n  const data = matrix.data;\n  data[12] = x;\n  data[13] = y;\n  data[14] = z;\n  matrix.onChange(matrix);\n  return matrix;\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4Subtract(a, b, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = a.data;\n  const [b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33] = b.data;\n  return out.set(a00 - b00, a01 - b01, a02 - b02, a03 - b03, a10 - b10, a11 - b11, a12 - b12, a13 - b13, a20 - b20, a21 - b21, a22 - b22, a23 - b23, a30 - b30, a31 - b31, a32 - b32, a33 - b33);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4TargetTo(eye, target, up, out = new Matrix4()) {\n  const {x: eyex, y: eyey, z: eyez} = eye;\n  const {x: upx, y: upy, z: upz} = up;\n  const {x: targetx, y: targety, z: targetz} = target;\n  let z0 = eyex - targetx;\n  let z1 = eyey - targety;\n  let z2 = eyez - targetz;\n  let len = z0 * z0 + z1 * z1 + z2 * z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n  let x0 = upy * z2 - upz * z1;\n  let x1 = upz * z0 - upx * z2;\n  let x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n  return out.set(x0, x1, x2, 0, z1 * x2 - z2 * x1, z2 * x0 - z0 * x2, z0 * x1 - z1 * x0, 0, z0, z1, z2, 0, eyex, eyey, eyez, 1);\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4Translate(matrix, vec3, out = new Matrix4()) {\n  const {x, y, z} = vec3;\n  const data = matrix.data;\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = data;\n  if (matrix === out) {\n    data[12] = a00 * x + a10 * y + a20 * z + a30;\n    data[13] = a01 * x + a11 * y + a21 * z + a31;\n    data[14] = a02 * x + a12 * y + a22 * z + a32;\n    data[15] = a03 * x + a13 * y + a23 * z + a33;\n  } else {\n    out.set(a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a00 * x + a10 * y + a20 * z + a30, a01 * x + a11 * y + a21 * z + a31, a02 * x + a12 * y + a22 * z + a32, a03 * x + a13 * y + a23 * z + a33);\n  }\n  return out;\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4TranslateFromFloats(matrix, x, y, z, out = new Matrix4()) {\n  const data = matrix.data;\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = data;\n  if (matrix === out) {\n    data[12] = a00 * x + a10 * y + a20 * z + a30;\n    data[13] = a01 * x + a11 * y + a21 * z + a31;\n    data[14] = a02 * x + a12 * y + a22 * z + a32;\n    data[15] = a03 * x + a13 * y + a23 * z + a33;\n  } else {\n    out.set(a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a00 * x + a10 * y + a20 * z + a30, a01 * x + a11 * y + a21 * z + a31, a02 * x + a12 * y + a22 * z + a32, a03 * x + a13 * y + a23 * z + a33);\n  }\n  return out;\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4Transpose(matrix, out = new Matrix4()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = matrix.data;\n  return out.set(m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33);\n}\n", "export function Mat4Zero(matrix) {\n  return matrix.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n}\n", "export class Matrix2D {\n  constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    this.set(a, b, c, d, tx, ty);\n  }\n  set(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    this.tx = tx;\n    this.ty = ty;\n    return this;\n  }\n  identity() {\n    return this.set();\n  }\n  toArray() {\n    const {a, b, c, d, tx, ty} = this;\n    return [a, b, c, d, tx, ty];\n  }\n  fromArray(src) {\n    return this.set(src[0], src[1], src[2], src[3], src[4], src[5]);\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function RectangleContains(rect, x, y) {\n  if (rect.width <= 0 || rect.height <= 0) {\n    return false;\n  }\n  return rect.x <= x && rect.x + rect.width >= x && rect.y <= y && rect.y + rect.height >= y;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {RectangleContains} from \"./RectangleContains\";\nexport class Rectangle {\n  constructor(x = 0, y = 0, width = 0, height = 0) {\n    this.set(x, y, width, height);\n  }\n  set(x = 0, y = 0, width = 0, height = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    return this;\n  }\n  contains(x, y) {\n    return RectangleContains(this, x, y);\n  }\n  set right(value) {\n    if (value <= this.x) {\n      this.width = 0;\n    } else {\n      this.width = value - this.x;\n    }\n  }\n  get right() {\n    return this.x + this.width;\n  }\n  set bottom(value) {\n    if (value <= this.y) {\n      this.height = 0;\n    } else {\n      this.height = value - this.y;\n    }\n  }\n  get bottom() {\n    return this.y + this.height;\n  }\n}\n", "import {NOOP} from \"../../utils/NOOP\";\nexport class Vec2Callback {\n  constructor(onChange, x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n    this.onChange = onChange;\n  }\n  destroy() {\n    this.onChange = NOOP;\n  }\n  set(x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n    if (this.onChange) {\n      this.onChange(this);\n    }\n    return this;\n  }\n  get x() {\n    return this._x;\n  }\n  set x(value) {\n    const prev = this._x;\n    this._x = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get y() {\n    return this._y;\n  }\n  set y(value) {\n    const prev = this._y;\n    this._y = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1]);\n  }\n  toString() {\n    const {x, y} = this;\n    return `{ x=${x}, y=${y} }`;\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {AngleBetween} from \"./AngleBetween\";\nimport {AngleBetweenY} from \"./AngleBetweenY\";\nimport {CounterClockwise} from \"./CounterClockwise\";\nimport {NormalizeAngle} from \"./NormalizeAngle\";\nimport {ReverseAngle} from \"./ReverseAngle\";\nimport {RotateAngleTo} from \"./RotateAngleTo\";\nimport {ShortestAngleBetween} from \"./ShortestAngleBetween\";\nimport {WrapAngle} from \"./WrapAngle\";\nimport {WrapAngleDegrees} from \"./WrapAngleDegrees\";\nexport {\n  AngleBetween,\n  AngleBetweenY,\n  CounterClockwise,\n  NormalizeAngle,\n  ReverseAngle,\n  RotateAngleTo,\n  ShortestAngleBetween,\n  WrapAngle,\n  WrapAngleDegrees\n};\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function AngleBetween(x1, y1, x2, y2) {\n  return Math.atan2(y2 - y1, x2 - x1);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function AngleBetweenY(x1, y1, x2, y2) {\n  return Math.atan2(x2 - x1, y2 - y1);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport const MATH_CONST = {\n  PI2: Math.PI * 2,\n  HALF_PI: Math.PI * 0.5,\n  EPSILON: 1e-6,\n  DEG_TO_RAD: Math.PI / 180,\n  RAD_TO_DEG: 180 / Math.PI,\n  MIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER || -9007199254740991,\n  MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991\n};\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {MATH_CONST as CONST} from \"../const\";\nexport function CounterClockwise(angle) {\n  if (angle > Math.PI) {\n    angle -= CONST.PI2;\n  }\n  return Math.abs(((angle + CONST.HALF_PI) % CONST.PI2 - CONST.PI2) % CONST.PI2);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {MATH_CONST} from \"../const\";\nexport function NormalizeAngle(angle) {\n  angle = angle % MATH_CONST.PI2;\n  if (angle >= 0) {\n    return angle;\n  } else {\n    return angle + MATH_CONST.PI2;\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {NormalizeAngle} from \"./NormalizeAngle\";\nexport function ReverseAngle(angle) {\n  return NormalizeAngle(angle + Math.PI);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {MATH_CONST} from \"../const\";\nexport function RotateAngleTo(currentAngle, targetAngle, lerp = 0.05) {\n  if (currentAngle === targetAngle) {\n    return currentAngle;\n  }\n  if (Math.abs(targetAngle - currentAngle) <= lerp || Math.abs(targetAngle - currentAngle) >= MATH_CONST.PI2 - lerp) {\n    currentAngle = targetAngle;\n  } else {\n    if (Math.abs(targetAngle - currentAngle) > Math.PI) {\n      if (targetAngle < currentAngle) {\n        targetAngle += MATH_CONST.PI2;\n      } else {\n        targetAngle -= MATH_CONST.PI2;\n      }\n    }\n    if (targetAngle > currentAngle) {\n      currentAngle += lerp;\n    } else if (targetAngle < currentAngle) {\n      currentAngle -= lerp;\n    }\n  }\n  return currentAngle;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function ShortestAngleBetween(angle1, angle2) {\n  const difference = angle2 - angle1;\n  if (difference === 0) {\n    return 0;\n  }\n  const times = Math.floor((difference - -180) / 360);\n  return difference - times * 360;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function Wrap(value, min, max) {\n  const range = max - min;\n  return min + ((value - min) % range + range) % range;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Wrap} from \"../Wrap\";\nexport function WrapAngle(angle) {\n  return Wrap(angle, -Math.PI, Math.PI);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Wrap} from \"../Wrap\";\nexport function WrapAngleDegrees(angle) {\n  return Wrap(angle, -180, 180);\n}\n", "import {GameInstance} from \"../GameInstance\";\nimport {Mat4Identity} from \"../math/mat4\";\nimport {Matrix2D} from \"../math/mat2d/Matrix2D\";\nimport {Rectangle} from \"../geom/rectangle/Rectangle\";\nimport {Vec2Callback} from \"../math/vec2/Vec2Callback\";\nimport {WrapAngle} from \"../math/angle\";\nexport class Camera {\n  constructor() {\n    this._rotation = 0;\n    this.type = \"Camera\";\n    this.dirtyRender = true;\n    const game = GameInstance.get();\n    this.renderer = game.renderer;\n    this.matrix = Mat4Identity();\n    this.bounds = new Rectangle();\n    this.worldTransform = new Matrix2D();\n    this.position = new Vec2Callback(() => this.updateTransform(), 0, 0);\n    this.scale = new Vec2Callback(() => this.updateTransform(), 1, 1);\n    this.origin = new Vec2Callback(() => this.updateTransform(), 0.5, 0.5);\n    this.reset();\n  }\n  updateTransform() {\n    const matrix = this.matrix.data;\n    const px = this.position.x;\n    const py = this.position.y;\n    const sx = this.scale.x;\n    const sy = this.scale.y;\n    const ox = -px + this.width * this.origin.x;\n    const oy = -py + this.height * this.origin.y;\n    const z = Math.sin(this.rotation);\n    const w = Math.cos(this.rotation);\n    const z2 = z + z;\n    const zz = z * z2;\n    const wz = w * z2;\n    const out0 = (1 - zz) * sx;\n    const out1 = wz * sx;\n    const out4 = -wz * sy;\n    const out5 = (1 - zz) * sy;\n    matrix[0] = out0;\n    matrix[1] = out1;\n    matrix[4] = out4;\n    matrix[5] = out5;\n    matrix[12] = px + ox - (out0 * ox + out4 * oy);\n    matrix[13] = py + oy - (out1 * ox + out5 * oy);\n    this.worldTransform.set(w * sx, z * sx, -z * sy, w * sy, -px, -py);\n    const bw = this.width * (1 / sx);\n    const bh = this.height * (1 / sy);\n    this.bounds.set(ox - bw / 2, oy - bh / 2, bw, bh);\n    this.dirtyRender = true;\n  }\n  reset() {\n    const width = this.renderer.width;\n    const height = this.renderer.height;\n    this.width = width;\n    this.height = height;\n    this.bounds.set(0, 0, width, height);\n  }\n  set rotation(value) {\n    if (value !== this._rotation) {\n      this._rotation = WrapAngle(value);\n      this.updateTransform();\n    }\n  }\n  get rotation() {\n    return this._rotation;\n  }\n  destroy() {\n    this.position.destroy();\n    this.scale.destroy();\n    this.origin.destroy();\n    this.world = null;\n    this.worldTransform = null;\n    this.renderer = null;\n    this.matrix = null;\n    this.bounds = null;\n  }\n}\n", "import {GameInstance} from \"../GameInstance\";\nimport {Mat4Identity} from \"../math/mat4\";\nimport {Matrix2D} from \"../math/mat2d/Matrix2D\";\nimport {Rectangle} from \"../geom/rectangle/Rectangle\";\nexport class StaticCamera {\n  constructor() {\n    this.type = \"StaticCamera\";\n    this.dirtyRender = true;\n    const game = GameInstance.get();\n    this.renderer = game.renderer;\n    this.matrix = Mat4Identity();\n    this.bounds = new Rectangle();\n    this.worldTransform = new Matrix2D();\n    this.reset();\n  }\n  reset() {\n    const renderer = this.renderer;\n    if (renderer) {\n      const width = renderer.width;\n      const height = renderer.height;\n      this.width = width;\n      this.height = height;\n    }\n    this.bounds.set(0, 0, this.width, this.height);\n  }\n  destroy() {\n    this.world = null;\n    this.worldTransform = null;\n    this.renderer = null;\n    this.matrix = null;\n    this.bounds = null;\n  }\n}\n", "import {GetQuatAngle} from \"./GetQuatAngle\";\nimport {GetQuatAngleTo} from \"./GetQuatAngleTo\";\nimport {GetQuatAreClose} from \"./GetQuatAreClose\";\nimport {GetQuatAxisAngle} from \"./GetQuatAxisAngle\";\nimport {GetQuatLength} from \"./GetQuatLength\";\nimport {GetQuatLengthSquared} from \"./GetQuatLengthSquared\";\nimport {QuatAdd} from \"./QuatAdd\";\nimport {QuatAddScalar} from \"./QuatAddScalar\";\nimport {QuatClone} from \"./QuatClone\";\nimport {QuatConjugate} from \"./QuatConjugate\";\nimport {QuatCopyFrom} from \"./QuatCopyFrom\";\nimport {QuatDot} from \"./QuatDot\";\nimport {QuatEquals} from \"./QuatEquals\";\nimport {QuatFromEulerAngles} from \"./QuatFromEulerAngles\";\nimport {QuatFromEulerVector} from \"./QuatFromEulerVector\";\nimport {QuatFromRotationAxis} from \"./QuatFromRotationAxis\";\nimport {QuatFromRotationMatrix} from \"./QuatFromRotationMatrix\";\nimport {QuatFuzzyEquals} from \"./QuatFuzzyEquals\";\nimport {QuatHermite} from \"./QuatHermite\";\nimport {QuatInvert} from \"./QuatInvert\";\nimport {QuatMultiply} from \"./QuatMultiply\";\nimport {QuatMultiplyByFloats} from \"./QuatMultiplyByFloats\";\nimport {QuatNormalize} from \"./QuatNormalize\";\nimport {QuatRotateTowards} from \"./QuatRotateTowards\";\nimport {QuatRotateX} from \"./QuatRotateX\";\nimport {QuatRotateY} from \"./QuatRotateY\";\nimport {QuatRotateZ} from \"./QuatRotateZ\";\nimport {QuatRotationAlphaBetaGamma} from \"./QuatRotationAlphaBetaGamma\";\nimport {QuatRotationYawPitchRoll} from \"./QuatRotationYawPitchRoll\";\nimport {QuatScale} from \"./QuatScale\";\nimport {QuatScaleAndAdd} from \"./QuatScaleAndAdd\";\nimport {QuatSetAxisAngle} from \"./QuatSetAxisAngle\";\nimport {QuatSetFromUnitVectors} from \"./QuatSetFromUnitVectors\";\nimport {QuatSlerp} from \"./QuatSlerp\";\nimport {QuatSubtract} from \"./QuatSubtract\";\nimport {QuatSubtractScalar} from \"./QuatSubtractScalar\";\nimport {QuatToEulerAngles} from \"./QuatToEulerAngles\";\nimport {QuatZero} from \"./QuatZero\";\nimport {Quaternion} from \"./Quaternion\";\nexport {\n  GetQuatAngle,\n  GetQuatAngleTo,\n  GetQuatAreClose,\n  GetQuatAxisAngle,\n  GetQuatLength,\n  GetQuatLengthSquared,\n  QuatAdd,\n  QuatAddScalar,\n  QuatClone,\n  QuatConjugate,\n  QuatCopyFrom,\n  QuatDot,\n  QuatEquals,\n  Quaternion,\n  QuatFromEulerAngles,\n  QuatFromEulerVector,\n  QuatFromRotationAxis,\n  QuatFromRotationMatrix,\n  QuatFuzzyEquals,\n  QuatHermite,\n  QuatInvert,\n  QuatMultiply,\n  QuatMultiplyByFloats,\n  QuatNormalize,\n  QuatRotateTowards,\n  QuatRotateX,\n  QuatRotateY,\n  QuatRotateZ,\n  QuatRotationAlphaBetaGamma,\n  QuatRotationYawPitchRoll,\n  QuatScale,\n  QuatScaleAndAdd,\n  QuatSetAxisAngle,\n  QuatSetFromUnitVectors,\n  QuatSlerp,\n  QuatSubtract,\n  QuatSubtractScalar,\n  QuatToEulerAngles,\n  QuatZero\n};\n", "export function QuatDot(a, b) {\n  return a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;\n}\n", "import {QuatDot} from \"./QuatDot\";\nexport function GetQuatAngle(a, b) {\n  const dot = QuatDot(a, b);\n  return Math.acos(2 * dot * dot - 1);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function Clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n", "import {Clamp} from \"../Clamp\";\nimport {QuatDot} from \"./QuatDot\";\nexport function GetQuatAngleTo(a, b) {\n  return 2 * Math.acos(Math.abs(Clamp(QuatDot(a, b), -1, 1)));\n}\n", "import {QuatDot} from \"./QuatDot\";\nexport function GetQuatAreClose(a, b) {\n  return QuatDot(a, b) >= 0;\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function GetQuatAxisAngle(a, out = new Quaternion()) {\n  const rad = Math.acos(a.w) * 2;\n  const s = Math.sin(rad / 2);\n  const epsilon = 1e-6;\n  if (s > epsilon) {\n    out.set(a.x / s, a.y / s, a.z / s);\n  } else {\n    out.set(1, 0, 0);\n  }\n  return rad;\n}\n", "export function GetQuatLength(a) {\n  const {x, y, z, w} = a;\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n", "export function GetQuatLengthSquared(a) {\n  const {x, y, z, w} = a;\n  return x * x + y * y + z * z + w * w;\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatAdd(a, b, out = new Quaternion()) {\n  return out.set(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatAddScalar(a, scalar, out = new Quaternion()) {\n  return out.set(a.x + scalar, a.y + scalar, a.z + scalar, a.w + scalar);\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatClone(source) {\n  const {x, y, z, w} = source;\n  return new Quaternion(x, y, z, w);\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatConjugate(a, out = new Quaternion()) {\n  const {x, y, z, w} = a;\n  return out.set(x * -1, y * -1, z * -1, w);\n}\n", "export function QuatCopyFrom(source, dest) {\n  const {x, y, z, w} = source;\n  return dest.set(x, y, z, w);\n}\n", "export function QuatEquals(a, b) {\n  return a.x === b.x && a.y === b.y && a.z === b.z && a.w === b.w;\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatRotationYawPitchRoll(yaw, pitch, roll, out = new Quaternion()) {\n  const halfRoll = roll * 0.5;\n  const halfPitch = pitch * 0.5;\n  const halfYaw = yaw * 0.5;\n  const sinRoll = Math.sin(halfRoll);\n  const cosRoll = Math.cos(halfRoll);\n  const sinPitch = Math.sin(halfPitch);\n  const cosPitch = Math.cos(halfPitch);\n  const sinYaw = Math.sin(halfYaw);\n  const cosYaw = Math.cos(halfYaw);\n  return out.set(cosYaw * sinPitch * cosRoll + sinYaw * cosPitch * sinRoll, sinYaw * cosPitch * cosRoll - cosYaw * sinPitch * sinRoll, cosYaw * cosPitch * sinRoll - sinYaw * sinPitch * cosRoll, cosYaw * cosPitch * cosRoll + sinYaw * sinPitch * sinRoll);\n}\n", "import {QuatRotationYawPitchRoll} from \"./QuatRotationYawPitchRoll\";\nimport {Quaternion} from \"./Quaternion\";\nexport function QuatFromEulerAngles(x, y, z, out = new Quaternion()) {\n  return QuatRotationYawPitchRoll(y, x, z, out);\n}\n", "import {QuatRotationYawPitchRoll} from \"./QuatRotationYawPitchRoll\";\nimport {Quaternion} from \"./Quaternion\";\nexport function QuatFromEulerVector(v, out = new Quaternion()) {\n  return QuatRotationYawPitchRoll(v.y, v.x, v.z, out);\n}\n", "import {BACKWARD, DOWN, FORWARD, LEFT, RIGHT, UP, ZERO} from \"./const\";\nimport {GetVec3Angle} from \"./GetVec3Angle\";\nimport {GetVec3Distance} from \"./GetVec3Distance\";\nimport {GetVec3DistanceSquared} from \"./GetVec3DistanceSquared\";\nimport {GetVec3Length} from \"./GetVec3Length\";\nimport {GetVec3LengthSquared} from \"./GetVec3LengthSquared\";\nimport {GetVec3ManhattanDistance} from \"./GetVec3ManhattanDistance\";\nimport {GetVec3ManhattanLength} from \"./GetVec3ManhattanLength\";\nimport {RGBCallback} from \"./RGBCallback\";\nimport {Vec3} from \"./Vec3\";\nimport {Vec3Abs} from \"./Vec3Abs\";\nimport {Vec3Add} from \"./Vec3Add\";\nimport {Vec3AddScalar} from \"./Vec3AddScalar\";\nimport {Vec3Backward} from \"./Vec3Backward\";\nimport {Vec3Bezier} from \"./Vec3Bezier\";\nimport {Vec3Callback} from \"./Vec3Callback\";\nimport {Vec3CatmullRom} from \"./Vec3CatmullRom\";\nimport {Vec3Ceil} from \"./Vec3Ceil\";\nimport {Vec3Center} from \"./Vec3Center\";\nimport {Vec3Clamp} from \"./Vec3Clamp\";\nimport {Vec3ClampLength} from \"./Vec3ClampLength\";\nimport {Vec3ClampScalar} from \"./Vec3ClampScalar\";\nimport {Vec3Clone} from \"./Vec3Clone\";\nimport {Vec3CopyFrom} from \"./Vec3CopyFrom\";\nimport {Vec3Cross} from \"./Vec3Cross\";\nimport {Vec3CrossNormalize} from \"./Vec3CrossNormalize\";\nimport {Vec3Divide} from \"./Vec3Divide\";\nimport {Vec3DivideScalar} from \"./Vec3DivideScalar\";\nimport {Vec3Dot} from \"./Vec3Dot\";\nimport {Vec3Down} from \"./Vec3Down\";\nimport {Vec3Equals} from \"./Vec3Equals\";\nimport {Vec3Floor} from \"./Vec3Floor\";\nimport {Vec3Forward} from \"./Vec3Forward\";\nimport {Vec3Fract} from \"./Vec3Fract\";\nimport {Vec3FromCylindricalCoords} from \"./Vec3FromCylindricalCoords\";\nimport {Vec3FromSphericalCoords} from \"./Vec3FromSphericalCoords\";\nimport {Vec3FuzzyEquals} from \"./Vec3FuzzyEquals\";\nimport {Vec3Hermite} from \"./Vec3Hermite\";\nimport {Vec3Inverse} from \"./Vec3Inverse\";\nimport {Vec3IsNonUniform} from \"./Vec3IsNonUniform\";\nimport {Vec3Left} from \"./Vec3Left\";\nimport {Vec3Lerp} from \"./Vec3Lerp\";\nimport {Vec3Max} from \"./Vec3Max\";\nimport {Vec3Min} from \"./Vec3Min\";\nimport {Vec3Multiply} from \"./Vec3Multiply\";\nimport {Vec3MultiplyByFloats} from \"./Vec3MultiplyByFloats\";\nimport {Vec3Negate} from \"./Vec3Negate\";\nimport {Vec3Normalize} from \"./Vec3Normalize\";\nimport {Vec3One} from \"./Vec3One\";\nimport {Vec3Project} from \"./Vec3Project\";\nimport {Vec3Random} from \"./Vec3Random\";\nimport {Vec3Reflect} from \"./Vec3Reflect\";\nimport {Vec3Right} from \"./Vec3Right\";\nimport {Vec3RotateX} from \"./Vec3RotateX\";\nimport {Vec3RotateY} from \"./Vec3RotateY\";\nimport {Vec3RotateZ} from \"./Vec3RotateZ\";\nimport {Vec3Round} from \"./Vec3Round\";\nimport {Vec3RoundToZero} from \"./Vec3RoundToZero\";\nimport {Vec3Scale} from \"./Vec3Scale\";\nimport {Vec3ScaleAndAdd} from \"./Vec3ScaleAndAdd\";\nimport {Vec3SetLength} from \"./Vec3SetLength\";\nimport {Vec3Subtract} from \"./Vec3Subtract\";\nimport {Vec3SubtractScalar} from \"./Vec3SubtractScalar\";\nimport {Vec3TransformMat4} from \"./Vec3TransformMat4\";\nimport {Vec3TransformMat4Zero} from \"./Vec3TransformMat4Zero\";\nimport {Vec3TransformQuat} from \"./Vec3TransformQuat\";\nimport {Vec3Unproject} from \"./Vec3Unproject\";\nimport {Vec3Up} from \"./Vec3Up\";\nimport {Vec3Zero} from \"./Vec3Zero\";\nexport {\n  GetVec3Angle,\n  GetVec3Distance,\n  GetVec3DistanceSquared,\n  GetVec3Length,\n  GetVec3LengthSquared,\n  GetVec3ManhattanDistance,\n  GetVec3ManhattanLength,\n  RGBCallback,\n  Vec3,\n  Vec3Abs,\n  Vec3Add,\n  Vec3AddScalar,\n  Vec3Backward,\n  Vec3Bezier,\n  Vec3Callback,\n  Vec3CatmullRom,\n  Vec3Ceil,\n  Vec3Center,\n  Vec3Clamp,\n  Vec3ClampLength,\n  Vec3ClampScalar,\n  Vec3Clone,\n  Vec3CopyFrom,\n  Vec3Cross,\n  Vec3CrossNormalize,\n  Vec3Divide,\n  Vec3DivideScalar,\n  Vec3Dot,\n  Vec3Down,\n  Vec3Equals,\n  Vec3Floor,\n  Vec3Forward,\n  Vec3Fract,\n  Vec3FromCylindricalCoords,\n  Vec3FromSphericalCoords,\n  Vec3FuzzyEquals,\n  Vec3Hermite,\n  Vec3Inverse,\n  Vec3IsNonUniform,\n  Vec3Left,\n  Vec3Lerp,\n  Vec3Max,\n  Vec3Min,\n  Vec3Multiply,\n  Vec3MultiplyByFloats,\n  Vec3Negate,\n  Vec3Normalize,\n  Vec3One,\n  Vec3Project,\n  Vec3Random,\n  Vec3Reflect,\n  Vec3Right,\n  Vec3RotateX,\n  Vec3RotateY,\n  Vec3RotateZ,\n  Vec3Round,\n  Vec3RoundToZero,\n  Vec3Scale,\n  Vec3ScaleAndAdd,\n  Vec3SetLength,\n  Vec3Subtract,\n  Vec3SubtractScalar,\n  Vec3TransformMat4,\n  Vec3TransformMat4Zero,\n  Vec3TransformQuat,\n  Vec3Unproject,\n  Vec3Up,\n  Vec3Zero,\n  BACKWARD,\n  DOWN,\n  FORWARD,\n  LEFT,\n  RIGHT,\n  UP,\n  ZERO\n};\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Backward() {\n  return new Vec3(0, 0, -1);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Down() {\n  return new Vec3(0, -1, 0);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Forward() {\n  return new Vec3(0, 0, 1);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Left() {\n  return new Vec3(-1, 0, 0);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Right() {\n  return new Vec3(1, 0, 0);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Up() {\n  return new Vec3(0, 1, 0);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Zero() {\n  return new Vec3(0, 0, 0);\n}\n", "import {Vec3Backward} from \"./Vec3Backward\";\nimport {Vec3Down} from \"./Vec3Down\";\nimport {Vec3Forward} from \"./Vec3Forward\";\nimport {Vec3Left} from \"./Vec3Left\";\nimport {Vec3Right} from \"./Vec3Right\";\nimport {Vec3Up} from \"./Vec3Up\";\nimport {Vec3Zero} from \"./Vec3Zero\";\nexport const UP = Vec3Up();\nexport const DOWN = Vec3Down();\nexport const LEFT = Vec3Left();\nexport const RIGHT = Vec3Right();\nexport const FORWARD = Vec3Forward();\nexport const BACKWARD = Vec3Backward();\nexport const ZERO = Vec3Zero();\n", "export function Vec3Dot(a, b) {\n  return a.x * b.x + a.y * b.y + a.z * b.z;\n}\n", "import {Vec3Dot} from \"./Vec3Dot\";\nexport function GetVec3Angle(a, b) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = b;\n  const mag1 = Math.sqrt(ax * ax + ay * ay + az * az);\n  const mag2 = Math.sqrt(bx * bx + by * by + bz * bz);\n  const mag = mag1 * mag2;\n  const c = mag && Vec3Dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(c, -1), 1));\n}\n", "export function GetVec3DistanceSquared(a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  const z = a.z - b.z;\n  return x * x + y * y + z * z;\n}\n", "import {GetVec3DistanceSquared} from \"./GetVec3DistanceSquared\";\nexport function GetVec3Distance(a, b) {\n  return Math.sqrt(GetVec3DistanceSquared(a, b));\n}\n", "export function GetVec3Length(a) {\n  const {x, y, z} = a;\n  return Math.sqrt(x * x + y * y + z * z);\n}\n", "export function GetVec3LengthSquared(a) {\n  const {x, y, z} = a;\n  return x * x + y * y + z * z;\n}\n", "export function GetVec3ManhattanDistance(a, b) {\n  return Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z);\n}\n", "export function GetVec3ManhattanLength(a) {\n  return Math.abs(a.x) + Math.abs(a.y) + Math.abs(a.z);\n}\n", "import {NOOP} from \"../../utils/NOOP\";\nexport class Vec3Callback {\n  constructor(onChange, x = 0, y = 0, z = 0) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this.onChange = onChange;\n  }\n  destroy() {\n    this.onChange = NOOP;\n  }\n  set(x = 0, y = 0, z = 0) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    if (this.onChange) {\n      this.onChange(this);\n    }\n    return this;\n  }\n  get x() {\n    return this._x;\n  }\n  set x(value) {\n    const prev = this._x;\n    this._x = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get y() {\n    return this._y;\n  }\n  set y(value) {\n    const prev = this._y;\n    this._y = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get z() {\n    return this._z;\n  }\n  set z(value) {\n    const prev = this._z;\n    this._z = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y, z} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    dst[index + 2] = z;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1], src[index + 2]);\n  }\n  toString() {\n    const {x, y, z} = this;\n    return `{ x=${x}, y=${y}, z=${z} }`;\n  }\n}\n", "import {Vec3Callback} from \"./Vec3Callback\";\nexport class RGBCallback extends Vec3Callback {\n  constructor(onChange, r = 0, g = 0, b = 0) {\n    super(onChange, r, g, b);\n  }\n  set r(value) {\n    this.x = value;\n  }\n  get r() {\n    return this.x;\n  }\n  set g(value) {\n    this.y = value;\n  }\n  get g() {\n    return this.y;\n  }\n  set b(value) {\n    this.z = value;\n  }\n  get b() {\n    return this.z;\n  }\n  toString() {\n    const {x, y, z} = this;\n    return `[ r=${x}, g=${y}, b=${z} ]`;\n  }\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Abs(a, out = new Vec3()) {\n  return out.set(Math.abs(a.x), Math.abs(a.y), Math.abs(a.z));\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Add(a, b, out = new Vec3()) {\n  return out.set(a.x + b.x, a.y + b.y, a.z + b.z);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3AddScalar(a, scalar, out = new Vec3()) {\n  return out.set(a.x + scalar, a.y + scalar, a.z + scalar);\n}\n", "export function Bezier(a, b, c, d, t) {\n  const inverseFactor = 1 - t;\n  const inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  const factorTimes2 = t * t;\n  const factor1 = inverseFactorTimesTwo * inverseFactor;\n  const factor2 = 3 * t * inverseFactorTimesTwo;\n  const factor3 = 3 * factorTimes2 * inverseFactor;\n  const factor4 = factorTimes2 * t;\n  return a * factor1 + b * factor2 + c * factor3 + d * factor4;\n}\n", "import {Bezier} from \"../Bezier\";\nimport {Vec3} from \"./Vec3\";\nexport function Vec3Bezier(a, b, c, d, t, out = new Vec3()) {\n  return out.set(Bezier(t, a.x, b.x, c.x, d.x), Bezier(t, a.y, b.y, c.y, d.y), Bezier(t, a.z, b.z, c.z, d.z));\n}\n", "export function CatmullRom(t, p0, p1, p2, p3) {\n  const v0 = (p2 - p0) * 0.5;\n  const v1 = (p3 - p1) * 0.5;\n  const t2 = t * t;\n  const t3 = t * t2;\n  return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n", "import {CatmullRom} from \"../CatmullRom\";\nimport {Vec3} from \"./Vec3\";\nexport function Vec3CatmullRom(p1, p2, p3, p4, t, out = new Vec3()) {\n  return out.set(CatmullRom(t, p1.x, p2.x, p3.x, p4.x), CatmullRom(t, p1.y, p2.y, p3.y, p4.y), CatmullRom(t, p1.z, p2.z, p3.z, p4.z));\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Ceil(a, out = new Vec3()) {\n  return out.set(Math.ceil(a.x), Math.ceil(a.y), Math.ceil(a.z));\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Scale(a, scalar, out = new Vec3()) {\n  return out.set(a.x * scalar, a.y * scalar, a.z * scalar);\n}\n", "import {Vec3} from \"./Vec3\";\nimport {Vec3Add} from \"./Vec3Add\";\nimport {Vec3Scale} from \"./Vec3Scale\";\nexport function Vec3Center(a, b, out = new Vec3()) {\n  Vec3Add(a, b, out);\n  return Vec3Scale(out, 0.5, out);\n}\n", "import {Clamp} from \"../Clamp\";\nimport {Vec3} from \"./Vec3\";\nexport function Vec3Clamp(a, min, max, out = new Vec3()) {\n  return out.set(Clamp(a.x, min.x, max.x), Clamp(a.y, min.y, max.y), Clamp(a.z, min.z, max.z));\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3DivideScalar(a, scalar, out = new Vec3()) {\n  const {x, y, z} = a;\n  return out.set(x / scalar, y / scalar, z / scalar);\n}\n", "import {Clamp} from \"../Clamp\";\nimport {GetVec3Length} from \"./GetVec3Length\";\nimport {Vec3} from \"./Vec3\";\nimport {Vec3DivideScalar} from \"./Vec3DivideScalar\";\nimport {Vec3Scale} from \"./Vec3Scale\";\nexport function Vec3ClampLength(a, min, max, out = new Vec3()) {\n  const length = GetVec3Length(a);\n  Vec3DivideScalar(a, length || 1, out);\n  return Vec3Scale(out, Clamp(min, max, length), out);\n}\n", "import {Clamp} from \"../Clamp\";\nimport {Vec3} from \"./Vec3\";\nexport function Vec3ClampScalar(a, min, max, out = new Vec3()) {\n  return out.set(Clamp(a.x, min, max), Clamp(a.y, min, max), Clamp(a.z, min, max));\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Clone(source) {\n  const {x, y, z} = source;\n  return new Vec3(x, y, z);\n}\n", "export function Vec3CopyFrom(source, dest) {\n  const {x, y, z} = source;\n  return dest.set(x, y, z);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Cross(a, b, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = b;\n  return out.set(ay * bz - az * by, az * bx - ax * bz, ax * by - ay * bx);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3CrossNormalize(a, b, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = b;\n  const x = ay * bz - az * by;\n  const y = az * bx - ax * bz;\n  const z = ax * by - ay * bx;\n  let len = x * x + y * y + z * z;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n  return out.set(x * len, y * len, z * len);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Divide(a, b, out = new Vec3()) {\n  return out.set(a.x / b.x, a.y / b.y, a.z / b.z);\n}\n", "export function Vec3Equals(a, b) {\n  return a.x === b.x && a.y === b.y && a.z === b.z;\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Floor(a, out = new Vec3()) {\n  return out.set(Math.floor(a.x), Math.floor(a.y), Math.floor(a.z));\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Fract(a, out = new Vec3()) {\n  return out.set(a.x - Math.floor(a.x), a.y - Math.floor(a.y), a.z - Math.floor(a.z));\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3FromCylindricalCoords(radius, theta, y, out = new Vec3()) {\n  return out.set(radius * Math.sin(theta), y, radius * Math.cos(theta));\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3FromSphericalCoords(radius, phi, theta, out = new Vec3()) {\n  const sinPhiRadius = Math.sin(phi) * radius;\n  return out.set(sinPhiRadius * Math.sin(theta), Math.cos(phi) * radius, sinPhiRadius * Math.cos(theta));\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function FuzzyEqual(a, b, epsilon = 1e-4) {\n  return Math.abs(a - b) < epsilon;\n}\n", "import {FuzzyEqual} from \"../fuzzy/FuzzyEqual\";\nexport function Vec3FuzzyEquals(a, b, epsilon = 1e-4) {\n  return FuzzyEqual(a.x, b.x, epsilon) && FuzzyEqual(a.y, b.y, epsilon) && FuzzyEqual(a.z, b.z, epsilon);\n}\n", "export function Hermite(a, b, c, d, t) {\n  const squared = t * t;\n  const factor1 = squared * (2 * t - 3) + 1;\n  const factor2 = squared * (t - 2) + t;\n  const factor3 = squared * (t - 1);\n  const factor4 = squared * (3 - 2 * t);\n  return a * factor1 + b * factor2 + c * factor3 + d * factor4;\n}\n", "import {Hermite} from \"../Hermite\";\nimport {Vec3} from \"./Vec3\";\nexport function Vec3Hermite(a, b, c, d, t, out = new Vec3()) {\n  return out.set(Hermite(t, a.x, b.x, c.x, d.x), Hermite(t, a.y, b.y, c.y, d.y), Hermite(t, a.z, b.z, c.z, d.z));\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Inverse(a, out = new Vec3()) {\n  return out.set(1 / a.x, 1 / a.y, 1 / a.z);\n}\n", "export function Vec3IsNonUniform(a) {\n  const absX = Math.abs(a.x);\n  const absY = Math.abs(a.y);\n  const absZ = Math.abs(a.z);\n  return absX !== absY || absX !== absZ || absY !== absZ;\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Lerp(a, b, t, out = new Vec3()) {\n  const {x, y, z} = a;\n  return out.set(x + t * (b.x - x), y + t * (b.y - y), z + t * (b.z - z));\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Max(a, b, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = b;\n  return out.set(Math.max(ax, bx), Math.max(ay, by), Math.max(az, bz));\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Min(a, b, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = b;\n  return out.set(Math.min(ax, bx), Math.min(ay, by), Math.min(az, bz));\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Multiply(a, b, out = new Vec3()) {\n  return out.set(a.x * b.x, a.y * b.y, a.z * b.z);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3MultiplyByFloats(a, x, y, z, out = new Vec3()) {\n  return out.set(a.x * x, a.y * y, a.z * z);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Negate(a, out = new Vec3()) {\n  return out.set(-a.x, -a.y, -a.z);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Normalize(a, out = new Vec3()) {\n  const {x, y, z} = a;\n  let len = x * x + y * y + z * z;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n  return out.set(x * len, y * len, z * len);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3One() {\n  return new Vec3(1, 1, 1);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3TransformMat4(a, m, out = new Vec3()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = m.data;\n  const {x, y, z} = a;\n  let w = m03 * x + m13 * y + m23 * z + m33;\n  w = w || 1;\n  return out.set((m00 * x + m10 * y + m20 * z + m30) / w, (m01 * x + m11 * y + m21 * z + m31) / w, (m02 * x + m12 * y + m22 * z + m32) / w);\n}\n", "import {Mat4Multiply} from \"../mat4/Mat4Multiply\";\nimport {Matrix4} from \"../mat4/Matrix4\";\nimport {Vec3} from \"./Vec3\";\nimport {Vec3TransformMat4} from \"./Vec3TransformMat4\";\nconst tempMatrix1 = new Matrix4();\nconst tempMatrix2 = new Matrix4();\nexport function Vec3Project(v, world, transform, viewport, out = new Vec3()) {\n  const {x, y, width, height} = viewport;\n  tempMatrix1.set(width / 2, 0, 0, 0, 0, -height / 2, 0, 0, 0, 0, 0.5, 0, x + width / 2, height / 2 + y, 0.5, 1);\n  Mat4Multiply(world, transform, tempMatrix2);\n  Mat4Multiply(tempMatrix2, tempMatrix1, tempMatrix2);\n  return Vec3TransformMat4(v, tempMatrix2, out);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Random(a, scale = 1, out = new Vec3()) {\n  const r = Math.random() * 2 * Math.PI;\n  const z = Math.random() * 2 - 1;\n  const zScale = Math.sqrt(1 - z * z) * scale;\n  return out.set(Math.cos(r) * zScale, Math.sin(r) * zScale, z * scale);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Subtract(a, b, out = new Vec3()) {\n  return out.set(a.x - b.x, a.y - b.y, a.z - b.z);\n}\n", "import {Vec3} from \"./Vec3\";\nimport {Vec3Dot} from \"./Vec3Dot\";\nimport {Vec3Scale} from \"./Vec3Scale\";\nimport {Vec3Subtract} from \"./Vec3Subtract\";\nexport function Vec3Reflect(a, normal, out = new Vec3()) {\n  Vec3Scale(normal, 2 * Vec3Dot(a, normal), out);\n  return Vec3Subtract(a, out, out);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3RotateX(a, origin, angle, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = origin;\n  const px = ax - bx;\n  const py = ay - by;\n  const pz = az - bz;\n  const rx = px;\n  const ry = py * Math.cos(angle) - pz * Math.sin(angle);\n  const rz = py * Math.sin(angle) + pz * Math.cos(angle);\n  return out.set(rx + bx, ry + by, rz + bz);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3RotateY(a, origin, angle, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = origin;\n  const px = ax - bx;\n  const py = ay - by;\n  const pz = az - bz;\n  const rx = pz * Math.sin(angle) + px * Math.cos(angle);\n  const ry = py;\n  const rz = pz * Math.cos(angle) - px * Math.sin(angle);\n  return out.set(rx + bx, ry + by, rz + bz);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3RotateZ(a, origin, angle, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = origin;\n  const px = ax - bx;\n  const py = ay - by;\n  const pz = az - bz;\n  const rx = px * Math.cos(angle) - py * Math.sin(angle);\n  const ry = px * Math.sin(angle) + py * Math.cos(angle);\n  const rz = pz;\n  return out.set(rx + bx, ry + by, rz + bz);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3Round(a, out = new Vec3()) {\n  return out.set(Math.round(a.x), Math.round(a.y), Math.round(a.z));\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3RoundToZero(a, out = new Vec3()) {\n  return out.set(a.x < 0 ? Math.ceil(a.x) : Math.floor(a.x), a.y < 0 ? Math.ceil(a.y) : Math.floor(a.y), a.z < 0 ? Math.ceil(a.z) : Math.floor(a.z));\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3ScaleAndAdd(a, b, scalar, out = new Vec3()) {\n  return out.set(a.x + b.x * scalar, a.y + b.y * scalar, a.z + b.z * scalar);\n}\n", "import {Vec3} from \"./Vec3\";\nimport {Vec3Normalize} from \"./Vec3Normalize\";\nimport {Vec3Scale} from \"./Vec3Scale\";\nexport function Vec3SetLength(a, length, out = new Vec3()) {\n  Vec3Normalize(a, out);\n  return Vec3Scale(out, length, out);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3SubtractScalar(a, scalar, out = new Vec3()) {\n  return out.set(a.x - scalar, a.y - scalar, a.z - scalar);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3TransformMat4Zero(a, m, out = new Vec3()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22] = m.data;\n  const {x, y, z} = a;\n  return out.set(m00 * x + m10 * y + m20 * z, m01 * x + m11 * y + m21 * z, m02 * x + m12 * y + m22 * z);\n}\n", "import {Vec3} from \"./Vec3\";\nexport function Vec3TransformQuat(a, q, out = new Vec3()) {\n  const {x: qx, y: qy, z: qz, w: qw} = q;\n  const {x, y, z} = a;\n  let uvx = qy * z - qz * y;\n  let uvy = qz * x - qx * z;\n  let uvz = qx * y - qy * x;\n  let uuvx = qy * uvz - qz * uvy;\n  let uuvy = qz * uvx - qx * uvz;\n  let uuvz = qx * uvy - qy * uvx;\n  const w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2;\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2;\n  return out.set(x + uvx + uuvx, y + uvy + uuvy, z + uvz + uuvz);\n}\n", "import {Mat4Invert} from \"../mat4/Mat4Invert\";\nimport {Mat4Multiply} from \"../mat4/Mat4Multiply\";\nimport {Matrix4} from \"../mat4/Matrix4\";\nimport {Vec3} from \"./Vec3\";\nimport {Vec3Scale} from \"./Vec3Scale\";\nimport {Vec3TransformMat4} from \"./Vec3TransformMat4\";\nconst matrix = new Matrix4();\nconst screenSource = new Vec3();\nexport function Vec3Unproject(v, viewportWidth, viewportHeight, world, view, projection, out = new Vec3()) {\n  Mat4Multiply(world, view, matrix);\n  Mat4Multiply(matrix, projection, matrix);\n  Mat4Invert(matrix, matrix);\n  const {x, y, z} = v;\n  screenSource.set(x / viewportWidth * 2 - 1, -(y / viewportHeight * 2 - 1), 2 * z - 1);\n  Vec3TransformMat4(screenSource, matrix, out);\n  const data = matrix.data;\n  const num = screenSource.x * data[3] + screenSource.y * data[7] + screenSource.z * data[11] + data[15];\n  return Vec3Scale(out, 1 / num, out);\n}\n", "import {Vec3Normalize} from \"../vec3\";\nimport {Quaternion} from \"./Quaternion\";\nexport function QuatFromRotationAxis(axis, angle, out = new Quaternion()) {\n  const sin = Math.sin(angle / 2);\n  Vec3Normalize(axis, axis);\n  const {x, y, z} = axis;\n  return out.set(x * sin, y * sin, z * sin, Math.cos(angle / 2));\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatFromRotationMatrix(matrix, out = new Quaternion()) {\n  const [m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33] = matrix.data;\n  const trace = m11 + m22 + m33;\n  let s;\n  if (trace > 0) {\n    s = 0.5 / Math.sqrt(trace + 1);\n    return out.set((m32 - m23) * s, (m13 - m31) * s, (m21 - m12) * s, 0.25 / s);\n  } else if (m11 > m22 && m11 > m33) {\n    s = 2 * Math.sqrt(1 + m11 - m22 - m33);\n    return out.set(0.25 * s, (m12 + m21) / s, (m13 + m31) / s, (m32 - m23) / s);\n  } else if (m22 > m33) {\n    s = 2 * Math.sqrt(1 + m22 - m11 - m33);\n    return out.set((m12 + m21) / s, 0.25 * s, (m23 + m32) / s, (m13 - m31) / s);\n  } else {\n    s = 2 * Math.sqrt(1 + m33 - m11 - m22);\n    return out.set((m13 + m31) / s, (m23 + m32) / s, 0.25 * s, (m21 - m12) / s);\n  }\n}\n", "import {FuzzyEqual} from \"../fuzzy/FuzzyEqual\";\nexport function QuatFuzzyEquals(a, b, epsilon = 1e-4) {\n  return FuzzyEqual(a.x, b.x, epsilon) && FuzzyEqual(a.y, b.y, epsilon) && FuzzyEqual(a.z, b.z, epsilon) && FuzzyEqual(a.w, b.w, epsilon);\n}\n", "import {Hermite} from \"../Hermite\";\nimport {Quaternion} from \"./Quaternion\";\nexport function QuatHermite(a, b, c, d, t, out = new Quaternion()) {\n  return out.set(Hermite(t, a.x, b.x, c.x, d.x), Hermite(t, a.y, b.y, c.y, d.y), Hermite(t, a.z, b.z, c.z, d.z), Hermite(t, a.w, b.w, c.w, d.w));\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatInvert(a, out = new Quaternion()) {\n  const {x, y, z, w} = a;\n  const dot = x * x + y * y + z * z + w * w;\n  const invDot = dot ? 1 / dot : 0;\n  return out.set(-x * invDot, -y * invDot, -z * invDot, w * invDot);\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatMultiply(a, b, out = new Quaternion()) {\n  const {x: ax, y: ay, z: az, w: aw} = a;\n  const {x: bx, y: by, z: bz, w: bw} = b;\n  return out.set(ax * bw + aw * bx + ay * bz - az * by, ay * bw + aw * by + az * bx - ax * bz, az * bw + aw * bz + ax * by - ay * bx, aw * bw - ax * bx - ay * by - az * bz);\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatMultiplyByFloats(a, x, y, z, w, out = new Quaternion()) {\n  return out.set(a.x * x, a.y * y, a.z * z, a.w * w);\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatScale(a, scalar, out = new Quaternion()) {\n  const {x, y, z, w} = a;\n  return out.set(x * scalar, y * scalar, z * scalar, w * scalar);\n}\n", "import {GetQuatLength} from \"./GetQuatLength\";\nimport {QuatScale} from \"./QuatScale\";\nimport {Quaternion} from \"./Quaternion\";\nexport function QuatNormalize(a, out = new Quaternion()) {\n  const length = GetQuatLength(a);\n  if (length === 0) {\n    return out.set(0, 0, 0, 1);\n  } else {\n    return QuatScale(a, length, out);\n  }\n}\n", "import {QuatCopyFrom} from \"./QuatCopyFrom\";\nimport {QuatNormalize} from \"./QuatNormalize\";\nimport {Quaternion} from \"./Quaternion\";\nexport function QuatSlerp(a, b, t, out = new Quaternion()) {\n  if (t === 0) {\n    return QuatCopyFrom(a, out);\n  } else if (t === 1) {\n    return QuatCopyFrom(b, out);\n  }\n  const {x, y, z, w} = a;\n  const {x: bx, y: by, z: bz, w: bw} = b;\n  let cosHalfTheta = w * bw + x * bx + y * by + z * bz;\n  if (cosHalfTheta < 0) {\n    out.set(-bx, -by, -bz, -bw);\n    cosHalfTheta = -cosHalfTheta;\n  } else {\n    QuatCopyFrom(b, out);\n  }\n  if (cosHalfTheta >= 1) {\n    return out.set(x, y, z, w);\n  }\n  const sqrSinHalfTheta = 1 - cosHalfTheta * cosHalfTheta;\n  if (sqrSinHalfTheta <= Number.EPSILON) {\n    const s = 1 - t;\n    out.set(s * x + t * out.x, s * y + t * out.y, s * z + t * out.z, s * w + t * out.w);\n    return QuatNormalize(out, out);\n  }\n  const sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n  const halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n  const ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta;\n  const ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n  return out.set(x * ratioA + out.x * ratioB, y * ratioA + out.y * ratioB, z * ratioA + out.z * ratioB, w * ratioA + out.w * ratioB);\n}\n", "import {GetQuatAngle} from \"./GetQuatAngle\";\nimport {QuatCopyFrom} from \"./QuatCopyFrom\";\nimport {QuatSlerp} from \"./QuatSlerp\";\nimport {Quaternion} from \"./Quaternion\";\nexport function QuatRotateTowards(a, b, step, out = new Quaternion()) {\n  const angle = GetQuatAngle(a, b);\n  if (angle === 0) {\n    return QuatCopyFrom(a, out);\n  }\n  const t = Math.min(1, step / angle);\n  return QuatSlerp(a, b, t, out);\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatRotateX(a, angle, out = new Quaternion()) {\n  angle *= 0.5;\n  const {x, y, z, w} = a;\n  const bx = Math.sin(angle);\n  const bw = Math.cos(angle);\n  return out.set(x * bw + w * bx, y * bw + z * bx, z * bw - y * bx, w * bw - x * bx);\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatRotateY(a, angle, out = new Quaternion()) {\n  angle *= 0.5;\n  const {x, y, z, w} = a;\n  const by = Math.sin(angle);\n  const bw = Math.cos(angle);\n  return out.set(x * bw - z * by, y * bw + w * by, z * bw + x * by, w * bw - y * by);\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatRotateZ(a, angle, out = new Quaternion()) {\n  angle *= 0.5;\n  const {x, y, z, w} = a;\n  const bz = Math.sin(angle);\n  const bw = Math.cos(angle);\n  return out.set(x * bw + y * bz, y * bw - x * bz, z * bw + w * bz, w * bw - z * bz);\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatRotationAlphaBetaGamma(alpha, beta, gamma, out = new Quaternion()) {\n  const halfGammaPlusAlpha = (gamma + alpha) * 0.5;\n  const halfGammaMinusAlpha = (gamma - alpha) * 0.5;\n  const halfBeta = beta * 0.5;\n  return out.set(Math.cos(halfGammaMinusAlpha) * Math.sin(halfBeta), Math.sin(halfGammaMinusAlpha) * Math.sin(halfBeta), Math.sin(halfGammaPlusAlpha) * Math.cos(halfBeta), Math.cos(halfGammaPlusAlpha) * Math.cos(halfBeta));\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatScaleAndAdd(a, b, scalar, out = new Quaternion()) {\n  return out.set(a.x + b.x * scalar, a.y + b.y * scalar, a.z + b.z * scalar, a.w + b.w * scalar);\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatSetAxisAngle(axis, angle, out = new Quaternion()) {\n  const {x, y, z} = axis;\n  angle *= 0.5;\n  const s = Math.sin(angle);\n  return out.set(x * s, y * s, z * s, Math.cos(angle));\n}\n", "import {Quaternion} from \"./Quaternion\";\nimport {Vec3Dot} from \"../vec3\";\nexport function QuatSetFromUnitVectors(a, from, to, out = new Quaternion()) {\n  const {x: fx, y: fy, z: fz} = from;\n  const {x: tx, y: ty, z: tz} = to;\n  const epsilon = 1e-6;\n  let r = Vec3Dot(from, to) + 1;\n  if (r < epsilon) {\n    r = 0;\n    if (Math.abs(fx) > Math.abs(fz)) {\n      return out.set(-fy, fx, 0, r);\n    } else {\n      return out.set(0, -fz, fy, r);\n    }\n  } else {\n    return out.set(fy * tz - fz * ty, fz * tx - fx * tz, fx * ty - fy * tx, r);\n  }\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatSubtract(a, b, out = new Quaternion()) {\n  return out.set(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatSubtractScalar(a, scalar, out = new Quaternion()) {\n  const {x, y, z, w} = a;\n  return out.set(x - scalar, y - scalar, z - scalar, w - scalar);\n}\n", "import {Vec3} from \"../vec3\";\nexport function QuatToEulerAngles(q, out = new Vec3()) {\n  const {x, y, z, w} = q;\n  const sqw = w * w;\n  const sqz = z * z;\n  const sqx = x * x;\n  const sqy = y * y;\n  const zAxisY = y * z - x * w;\n  const limit = 0.4999999;\n  if (zAxisY < -limit) {\n    return out.set(Math.PI / 2, 2 * Math.atan2(y, w), 0);\n  } else if (zAxisY > limit) {\n    return out.set(-Math.PI / 2, 2 * Math.atan2(y, w), 0);\n  } else {\n    return out.set(Math.asin(-2 * (z * y - x * w)), Math.atan2(2 * (z * x + y * w), sqz - sqx - sqy + sqw), Math.atan2(2 * (x * y + z * w), -sqz - sqx + sqy + sqw));\n  }\n}\n", "import {Quaternion} from \"./Quaternion\";\nexport function QuatZero() {\n  return new Quaternion(0, 0, 0, 0);\n}\n", "import * as Angle from \"./angle\";\nimport * as Easing from \"./easing\";\nimport * as Fuzzy from \"./fuzzy\";\nimport * as Interpolation from \"./interpolation\";\nimport * as Matrix2D from \"./mat2d\";\nimport * as Matrix4 from \"./mat4\";\nimport * as Pow2 from \"./pow2\";\nimport * as Quaternion from \"./quaternion\";\nimport * as Snap from \"./snap\";\nimport * as Vec2 from \"./vec2\";\nimport * as Vec3 from \"./vec3\";\nimport * as Vec4 from \"./vec4\";\nimport {Average} from \"./Average\";\nimport {Bernstein} from \"./Bernstein\";\nimport {Between} from \"./Between\";\nimport {Bezier} from \"./Bezier\";\nimport {CatmullRom} from \"./CatmullRom\";\nimport {CeilTo} from \"./CeilTo\";\nimport {Clamp} from \"./Clamp\";\nimport {DegToRad} from \"./DegToRad\";\nimport {Difference} from \"./Difference\";\nimport {Factorial} from \"./Factorial\";\nimport {FloatBetween} from \"./FloatBetween\";\nimport {FloorTo} from \"./FloorTo\";\nimport {FromPercent} from \"./FromPercent\";\nimport {GetSpeed} from \"./GetSpeed\";\nimport {Hermite} from \"./Hermite\";\nimport {Linear} from \"./Linear\";\nimport {MATH_CONST} from \"./const\";\nimport {MaxAdd} from \"./MaxAdd\";\nimport {MinSub} from \"./MinSub\";\nimport {Percent} from \"./Percent\";\nimport {RadToDeg} from \"./RadToDeg\";\nimport {RoundAwayFromZero} from \"./RoundAwayFromZero\";\nimport {RoundTo} from \"./RoundTo\";\nimport {SinCosTableGenerator} from \"./SinCosTableGenerator\";\nimport {SmoothStep} from \"./SmoothStep\";\nimport {SmootherStep} from \"./SmootherStep\";\nimport {Within} from \"./Within\";\nimport {Wrap} from \"./Wrap\";\nexport {\n  Angle,\n  Easing,\n  Average,\n  Bernstein,\n  Between,\n  Bezier,\n  CatmullRom,\n  CeilTo,\n  Clamp,\n  DegToRad,\n  Difference,\n  Factorial,\n  FloatBetween,\n  FloorTo,\n  FromPercent,\n  Fuzzy,\n  GetSpeed,\n  Hermite,\n  Interpolation,\n  Linear,\n  MATH_CONST,\n  Matrix2D,\n  Matrix4,\n  MaxAdd,\n  MinSub,\n  Percent,\n  Pow2,\n  Quaternion,\n  RadToDeg,\n  RoundAwayFromZero,\n  RoundTo,\n  SinCosTableGenerator,\n  SmootherStep,\n  SmoothStep,\n  Snap,\n  Vec2,\n  Vec3,\n  Vec4,\n  Within,\n  Wrap\n};\n", "import * as Back from \"./back\";\nimport * as Bounce from \"./bounce\";\nimport * as Circular from \"./circular\";\nimport * as Cubic from \"./cubic\";\nimport * as Elastic from \"./elastic\";\nimport * as Expo from \"./expo\";\nimport * as GetEase from \"./GetEase\";\nimport * as Linear from \"./Linear\";\nimport * as Quadratic from \"./quadratic\";\nimport * as Quartic from \"./quartic\";\nimport * as Quintic from \"./quintic\";\nimport * as Sine from \"./sine\";\nimport * as Stepped from \"./Stepped\";\nexport {\n  Back,\n  Bounce,\n  Circular,\n  Cubic,\n  Elastic,\n  Expo,\n  GetEase,\n  Linear,\n  Quadratic,\n  Quartic,\n  Quintic,\n  Sine,\n  Stepped\n};\n", "import {In} from \"./In\";\nimport {InOut} from \"./InOut\";\nimport {Out} from \"./Out\";\nexport {\n  In,\n  InOut,\n  Out\n};\n", "export function In(v, overshoot = 1.70158) {\n  return v * v * ((overshoot + 1) * v - overshoot);\n}\n", "export function InOut(v, overshoot = 1.70158) {\n  const s = overshoot * 1.525;\n  if ((v *= 2) < 1) {\n    return 0.5 * (v * v * ((s + 1) * v - s));\n  } else {\n    return 0.5 * ((v -= 2) * v * ((s + 1) * v + s) + 2);\n  }\n}\n", "export function Out(v, overshoot = 1.70158) {\n  return --v * v * ((overshoot + 1) * v + overshoot) + 1;\n}\n", "import {In} from \"./In\";\nimport {InOut} from \"./InOut\";\nimport {Out} from \"./Out\";\nexport {\n  In,\n  InOut,\n  Out\n};\n", "export function In(v) {\n  v = 1 - v;\n  if (v < 1 / 2.75) {\n    return 1 - 7.5625 * v * v;\n  } else if (v < 2 / 2.75) {\n    return 1 - (7.5625 * (v -= 1.5 / 2.75) * v + 0.75);\n  } else if (v < 2.5 / 2.75) {\n    return 1 - (7.5625 * (v -= 2.25 / 2.75) * v + 0.9375);\n  } else {\n    return 1 - (7.5625 * (v -= 2.625 / 2.75) * v + 0.984375);\n  }\n}\n", "export function InOut(v) {\n  let reverse = false;\n  if (v < 0.5) {\n    v = 1 - v * 2;\n    reverse = true;\n  } else {\n    v = v * 2 - 1;\n  }\n  if (v < 1 / 2.75) {\n    v = 7.5625 * v * v;\n  } else if (v < 2 / 2.75) {\n    v = 7.5625 * (v -= 1.5 / 2.75) * v + 0.75;\n  } else if (v < 2.5 / 2.75) {\n    v = 7.5625 * (v -= 2.25 / 2.75) * v + 0.9375;\n  } else {\n    v = 7.5625 * (v -= 2.625 / 2.75) * v + 0.984375;\n  }\n  if (reverse) {\n    return (1 - v) * 0.5;\n  } else {\n    return v * 0.5 + 0.5;\n  }\n}\n", "export function Out(v) {\n  if (v < 1 / 2.75) {\n    return 7.5625 * v * v;\n  } else if (v < 2 / 2.75) {\n    return 7.5625 * (v -= 1.5 / 2.75) * v + 0.75;\n  } else if (v < 2.5 / 2.75) {\n    return 7.5625 * (v -= 2.25 / 2.75) * v + 0.9375;\n  } else {\n    return 7.5625 * (v -= 2.625 / 2.75) * v + 0.984375;\n  }\n}\n", "import {In} from \"./In\";\nimport {InOut} from \"./InOut\";\nimport {Out} from \"./Out\";\nexport {\n  In,\n  InOut,\n  Out\n};\n", "export function In(v) {\n  return 1 - Math.sqrt(1 - v * v);\n}\n", "export function InOut(v) {\n  if ((v *= 2) < 1) {\n    return -0.5 * (Math.sqrt(1 - v * v) - 1);\n  } else {\n    return 0.5 * (Math.sqrt(1 - (v -= 2) * v) + 1);\n  }\n}\n", "export function Out(v) {\n  return Math.sqrt(1 - --v * v);\n}\n", "import {In} from \"./In\";\nimport {InOut} from \"./InOut\";\nimport {Out} from \"./Out\";\nexport {\n  In,\n  InOut,\n  Out\n};\n", "export function In(v) {\n  return v * v * v;\n}\n", "export function InOut(v) {\n  if ((v *= 2) < 1) {\n    return 0.5 * v * v * v;\n  } else {\n    return 0.5 * ((v -= 2) * v * v + 2);\n  }\n}\n", "export function Out(v) {\n  return --v * v * v + 1;\n}\n", "import {In} from \"./In\";\nimport {InOut} from \"./InOut\";\nimport {Out} from \"./Out\";\nexport {\n  In,\n  InOut,\n  Out\n};\n", "export function In(v, amplitude = 0.1, period = 0.1) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    let s = period / 4;\n    if (amplitude < 1) {\n      amplitude = 1;\n    } else {\n      s = period * Math.asin(1 / amplitude) / (2 * Math.PI);\n    }\n    return -(amplitude * Math.pow(2, 10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period));\n  }\n}\n", "export function InOut(v, amplitude = 0.1, period = 0.1) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    let s = period / 4;\n    if (amplitude < 1) {\n      amplitude = 1;\n    } else {\n      s = period * Math.asin(1 / amplitude) / (2 * Math.PI);\n    }\n    if ((v *= 2) < 1) {\n      return -0.5 * (amplitude * Math.pow(2, 10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period));\n    } else {\n      return amplitude * Math.pow(2, -10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period) * 0.5 + 1;\n    }\n  }\n}\n", "export function Out(v, amplitude = 0.1, period = 0.1) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    let s = period / 4;\n    if (amplitude < 1) {\n      amplitude = 1;\n    } else {\n      s = period * Math.asin(1 / amplitude) / (2 * Math.PI);\n    }\n    return amplitude * Math.pow(2, -10 * v) * Math.sin((v - s) * (2 * Math.PI) / period) + 1;\n  }\n}\n", "import {In} from \"./In\";\nimport {InOut} from \"./InOut\";\nimport {Out} from \"./Out\";\nexport {\n  In,\n  InOut,\n  Out\n};\n", "export function In(v) {\n  return Math.pow(2, 10 * (v - 1)) - 1e-3;\n}\n", "export function InOut(v) {\n  if (v == 0) {\n    return 0;\n  }\n  if (v == 1) {\n    return 1;\n  }\n  if ((v *= 2) < 1) {\n    return 0.5 * Math.pow(2, 10 * (v - 1));\n  } else {\n    return 0.5 * (2 - Math.pow(2, -10 * (v - 1)));\n  }\n}\n", "export function Out(v) {\n  return 1 - Math.pow(2, -10 * v);\n}\n", "import * as Back from \"./back\";\nimport * as Bounce from \"./bounce\";\nimport * as Circular from \"./circular\";\nimport * as Cubic from \"./cubic\";\nimport * as Elastic from \"./elastic\";\nimport * as Expo from \"./expo\";\nimport * as Quadratic from \"./quadratic\";\nimport * as Quartic from \"./quartic\";\nimport * as Quintic from \"./quintic\";\nimport * as Sine from \"./sine\";\nimport {Linear} from \"./Linear\";\nimport {Stepped} from \"./Stepped\";\nconst EaseMap = new Map([\n  [\"power0\", Linear],\n  [\"power1\", Quadratic.Out],\n  [\"power2\", Cubic.Out],\n  [\"power3\", Quartic.Out],\n  [\"power4\", Quintic.Out],\n  [\"linear\", Linear],\n  [\"quad\", Quadratic.Out],\n  [\"cubic\", Cubic.Out],\n  [\"quart\", Quartic.Out],\n  [\"quint\", Quintic.Out],\n  [\"sine\", Sine.Out],\n  [\"expo\", Expo.Out],\n  [\"circ\", Circular.Out],\n  [\"elastic\", Elastic.Out],\n  [\"back\", Back.Out],\n  [\"bounce\", Bounce.Out],\n  [\"stepped\", Stepped],\n  [\"quad.in\", Quadratic.In],\n  [\"cubic.in\", Cubic.In],\n  [\"quart.in\", Quartic.In],\n  [\"quint.in\", Quintic.In],\n  [\"sine.in\", Sine.In],\n  [\"expo.in\", Expo.In],\n  [\"circ.in\", Circular.In],\n  [\"elastic.in\", Elastic.In],\n  [\"back.in\", Back.In],\n  [\"bounce.in\", Bounce.In],\n  [\"quad.out\", Quadratic.Out],\n  [\"cubic.out\", Cubic.Out],\n  [\"quart.out\", Quartic.Out],\n  [\"quint.out\", Quintic.Out],\n  [\"sine.out\", Sine.Out],\n  [\"expo.out\", Expo.Out],\n  [\"circ.out\", Circular.Out],\n  [\"elastic.out\", Elastic.Out],\n  [\"back.out\", Back.Out],\n  [\"bounce.out\", Bounce.Out],\n  [\"quad.inout\", Quadratic.InOut],\n  [\"cubic.inout\", Cubic.InOut],\n  [\"quart.inout\", Quartic.InOut],\n  [\"quint.inout\", Quintic.InOut],\n  [\"sine.inout\", Sine.InOut],\n  [\"expo.inout\", Expo.InOut],\n  [\"circ.inout\", Circular.InOut],\n  [\"elastic.inout\", Elastic.InOut],\n  [\"back.inout\", Back.InOut],\n  [\"bounce.inout\", Bounce.InOut]\n]);\nexport function GetEase(name) {\n  name = name.toLowerCase();\n  name = name.replace(\"ease\", \"\");\n  if (EaseMap.has(name)) {\n    return EaseMap.get(name);\n  } else {\n    return Linear;\n  }\n}\n", "import {In} from \"./In\";\nimport {InOut} from \"./InOut\";\nimport {Out} from \"./Out\";\nexport {\n  In,\n  InOut,\n  Out\n};\n", "export function In(v) {\n  return v * v;\n}\n", "export function InOut(v) {\n  if ((v *= 2) < 1) {\n    return 0.5 * v * v;\n  } else {\n    return -0.5 * (--v * (v - 2) - 1);\n  }\n}\n", "export function Out(v) {\n  return v * (2 - v);\n}\n", "import {In} from \"./In\";\nimport {InOut} from \"./InOut\";\nimport {Out} from \"./Out\";\nexport {\n  In,\n  InOut,\n  Out\n};\n", "export function In(v) {\n  return v * v * v * v;\n}\n", "export function InOut(v) {\n  if ((v *= 2) < 1) {\n    return 0.5 * v * v * v * v;\n  } else {\n    return -0.5 * ((v -= 2) * v * v * v - 2);\n  }\n}\n", "export function Out(v) {\n  return -(--v * v * v * v - 1);\n}\n", "import {In} from \"./In\";\nimport {InOut} from \"./InOut\";\nimport {Out} from \"./Out\";\nexport {\n  In,\n  InOut,\n  Out\n};\n", "export function In(v) {\n  return v * v * v * v * v;\n}\n", "export function InOut(v) {\n  if ((v *= 2) < 1) {\n    return 0.5 * v * v * v * v * v;\n  } else {\n    return 0.5 * ((v -= 2) * v * v * v * v + 2);\n  }\n}\n", "export function Out(v) {\n  return (v = v - 1) * v * v * v * v + 1;\n}\n", "import {In} from \"./In\";\nimport {InOut} from \"./InOut\";\nimport {Out} from \"./Out\";\nexport {\n  In,\n  InOut,\n  Out\n};\n", "export function In(v) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    return 1 - Math.cos(v * Math.PI / 2);\n  }\n}\n", "export function InOut(v) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    return 0.5 * (1 - Math.cos(Math.PI * v));\n  }\n}\n", "export function Out(v) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    return Math.sin(v * Math.PI / 2);\n  }\n}\n", "export function Linear(v) {\n  return v;\n}\n", "export function Stepped(v, steps = 1) {\n  if (v <= 0) {\n    return 0;\n  } else if (v >= 1) {\n    return 1;\n  } else {\n    return ((steps * v | 0) + 1) * (1 / steps);\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {FuzzyCeil} from \"./FuzzyCeil\";\nimport {FuzzyEqual} from \"./FuzzyEqual\";\nimport {FuzzyFloor} from \"./FuzzyFloor\";\nimport {FuzzyGreaterThan} from \"./FuzzyGreaterThan\";\nimport {FuzzyLessThan} from \"./FuzzyLessThan\";\nexport {\n  FuzzyCeil,\n  FuzzyEqual,\n  FuzzyFloor,\n  FuzzyGreaterThan,\n  FuzzyLessThan\n};\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function FuzzyCeil(value, epsilon = 1e-4) {\n  return Math.ceil(value - epsilon);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function FuzzyFloor(value, epsilon = 1e-4) {\n  return Math.floor(value + epsilon);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function FuzzyGreaterThan(a, b, epsilon = 1e-4) {\n  return a > b - epsilon;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function FuzzyLessThan(a, b, epsilon = 1e-4) {\n  return a < b + epsilon;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {BezierInterpolation} from \"./BezierInterpolation\";\nimport {CatmullRomInterpolation} from \"./CatmullRomInterpolation\";\nimport {CubicBezierInterpolation} from \"./CubicBezierInterpolation\";\nimport {LinearInterpolation} from \"./LinearInterpolation\";\nimport {QuadraticBezierInterpolation} from \"./QuadraticBezierInterpolation\";\nimport {SmoothStepInterpolation} from \"./SmoothStepInterpolation\";\nimport {SmootherStepInterpolation} from \"./SmootherStepInterpolation\";\nexport {\n  BezierInterpolation,\n  CatmullRomInterpolation,\n  CubicBezierInterpolation,\n  LinearInterpolation,\n  QuadraticBezierInterpolation,\n  SmoothStepInterpolation,\n  SmootherStepInterpolation\n};\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function Factorial(value) {\n  if (value === 0) {\n    return 1;\n  }\n  let res = value;\n  while (--value) {\n    res *= value;\n  }\n  return res;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Factorial} from \"./Factorial\";\nexport function Bernstein(n, i) {\n  return Factorial(n) / Factorial(i) / Factorial(n - i);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Bernstein} from \"../Bernstein\";\nexport function BezierInterpolation(v, k) {\n  let b = 0;\n  const n = v.length - 1;\n  for (let i = 0; i <= n; i++) {\n    b += Math.pow(1 - k, n - i) * Math.pow(k, i) * v[i] * Bernstein(n, i);\n  }\n  return b;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CatmullRom} from \"../CatmullRom\";\nexport function CatmullRomInterpolation(v, k) {\n  const m = v.length - 1;\n  let f = m * k;\n  let i = Math.floor(f);\n  if (v[0] === v[m]) {\n    if (k < 0) {\n      i = Math.floor(f = m * (1 + k));\n    }\n    return CatmullRom(f - i, v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m]);\n  } else {\n    if (k < 0) {\n      return v[0] - (CatmullRom(-f, v[0], v[0], v[1], v[1]) - v[0]);\n    }\n    if (k > 1) {\n      return v[m] - (CatmullRom(f - m, v[m], v[m], v[m - 1], v[m - 1]) - v[m]);\n    }\n    return CatmullRom(f - i, v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2]);\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nfunction P0(t, p) {\n  const k = 1 - t;\n  return k * k * k * p;\n}\nfunction P1(t, p) {\n  const k = 1 - t;\n  return 3 * k * k * t * p;\n}\nfunction P2(t, p) {\n  return 3 * (1 - t) * t * t * p;\n}\nfunction P3(t, p) {\n  return t * t * t * p;\n}\nexport function CubicBezierInterpolation(t, p0, p1, p2, p3) {\n  return P0(t, p0) + P1(t, p1) + P2(t, p2) + P3(t, p3);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function Linear(p0, p1, t) {\n  return (p1 - p0) * t + p0;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Linear} from \"../Linear\";\nexport function LinearInterpolation(v, k) {\n  const m = v.length - 1;\n  const f = m * k;\n  const i = Math.floor(f);\n  if (k < 0) {\n    return Linear(v[0], v[1], f);\n  } else if (k > 1) {\n    return Linear(v[m], v[m - 1], m - f);\n  } else {\n    return Linear(v[i], v[i + 1 > m ? m : i + 1], f - i);\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nfunction P0(t, p) {\n  const k = 1 - t;\n  return k * k * p;\n}\nfunction P1(t, p) {\n  return 2 * (1 - t) * t * p;\n}\nfunction P2(t, p) {\n  return t * t * p;\n}\nexport function QuadraticBezierInterpolation(t, p0, p1, p2) {\n  return P0(t, p0) + P1(t, p1) + P2(t, p2);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function SmoothStep(x, min, max) {\n  if (x <= min) {\n    return 0;\n  }\n  if (x >= max) {\n    return 1;\n  }\n  x = (x - min) / (max - min);\n  return x * x * (3 - 2 * x);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {SmoothStep} from \"../SmoothStep\";\nexport function SmoothStepInterpolation(t, min, max) {\n  return min + (max - min) * SmoothStep(t, 0, 1);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function SmootherStep(x, min, max) {\n  x = Math.max(0, Math.min(1, (x - min) / (max - min)));\n  return x * x * x * (x * (x * 6 - 15) + 10);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {SmootherStep} from \"../SmootherStep\";\nexport function SmootherStepInterpolation(t, min, max) {\n  return min + (max - min) * SmootherStep(t, 0, 1);\n}\n", "import {GetMat2dDeterminant} from \"./GetMat2dDeterminant\";\nimport {GetMat2dFrobenius} from \"./GetMat2dFrobenius\";\nimport {Mat2dAdd} from \"./Mat2dAdd\";\nimport {Mat2dAppend} from \"./Mat2dAppend\";\nimport {Mat2dClone} from \"./Mat2dClone\";\nimport {Mat2dCopyFrom} from \"./Mat2dCopyFrom\";\nimport {Mat2dCopyToContext} from \"./Mat2dCopyToContext\";\nimport {Mat2dEquals} from \"./Mat2dEquals\";\nimport {Mat2dFromRotation} from \"./Mat2dFromRotation\";\nimport {Mat2dFromScaling} from \"./Mat2dFromScaling\";\nimport {Mat2dFromTranslation} from \"./Mat2dFromTranslation\";\nimport {Mat2dFuzzyEquals} from \"./Mat2dFuzzyEquals\";\nimport {Mat2dGlobalToLocal} from \"./Mat2dGlobalToLocal\";\nimport {Mat2dITRS} from \"./Mat2dITRS\";\nimport {Mat2dITRSS} from \"./Mat2dITRSS\";\nimport {Mat2dIdentity} from \"./Mat2dIdentity\";\nimport {Mat2dInvert} from \"./Mat2dInvert\";\nimport {Mat2dLocalToGlobal} from \"./Mat2dLocalToGlobal\";\nimport {Mat2dMultiply} from \"./Mat2dMultiply\";\nimport {Mat2dMultiplyScalar} from \"./Mat2dMultiplyScalar\";\nimport {Mat2dMultiplyScalarAndAdd} from \"./Mat2dMultiplyScalarAndAdd\";\nimport {Mat2dRotate} from \"./Mat2dRotate\";\nimport {Mat2dScale} from \"./Mat2dScale\";\nimport {Mat2dSetToContext} from \"./Mat2dSetToContext\";\nimport {Mat2dSkew} from \"./Mat2dSkew\";\nimport {Mat2dSubtract} from \"./Mat2dSubtract\";\nimport {Mat2dTranslate} from \"./Mat2dTranslate\";\nimport {Mat2dZero} from \"./Mat2dZero\";\nimport {Matrix2D} from \"./Matrix2D\";\nexport {\n  GetMat2dDeterminant,\n  GetMat2dFrobenius,\n  Mat2dAdd,\n  Mat2dAppend,\n  Mat2dClone,\n  Mat2dCopyFrom,\n  Mat2dCopyToContext,\n  Mat2dEquals,\n  Mat2dFromRotation,\n  Mat2dFromScaling,\n  Mat2dFromTranslation,\n  Mat2dFuzzyEquals,\n  Mat2dGlobalToLocal,\n  Mat2dIdentity,\n  Mat2dInvert,\n  Mat2dITRS,\n  Mat2dITRSS,\n  Mat2dLocalToGlobal,\n  Mat2dMultiply,\n  Mat2dMultiplyScalar,\n  Mat2dMultiplyScalarAndAdd,\n  Mat2dRotate,\n  Mat2dScale,\n  Mat2dSetToContext,\n  Mat2dSkew,\n  Mat2dSubtract,\n  Mat2dTranslate,\n  Mat2dZero,\n  Matrix2D\n};\n", "export function GetMat2dDeterminant(src) {\n  const {a, b, c, d} = src;\n  return a * d - b * c;\n}\n", "export function GetMat2dFrobenius(src) {\n  return Math.hypot(src.a, src.b, src.c, src.d, src.tx, src.ty, 1);\n}\n", "import {Matrix2D} from \"./Matrix2D\";\nexport function Mat2dAdd(a, b, out = new Matrix2D()) {\n  return out.set(a.a + b.a, a.b + b.b, a.c + b.c, a.d + b.d, a.tx + b.tx, a.ty + b.ty);\n}\n", "import {Matrix2D} from \"./Matrix2D\";\nexport function Mat2dAppend(mat1, mat2, out = new Matrix2D()) {\n  const {a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1} = mat1;\n  const {a: a2, b: b2, c: c2, d: d2, tx: tx2, ty: ty2} = mat2;\n  return out.set(a2 * a1 + b2 * c1, a2 * b1 + b2 * d1, c2 * a1 + d2 * c1, c2 * b1 + d2 * d1, tx2 * a1 + ty2 * c1 + tx1, tx2 * b1 + ty2 * d1 + ty1);\n}\n", "import {Matrix2D} from \"./Matrix2D\";\nexport function Mat2dClone(src) {\n  return new Matrix2D(src.a, src.b, src.c, src.d, src.tx, src.ty);\n}\n", "export function Mat2dCopyFrom(src, target) {\n  const {a, b, c, d, tx, ty} = src;\n  return target.set(a, b, c, d, tx, ty);\n}\n", "export function Mat2dCopyToContext(src, context) {\n  const {a, b, c, d, tx, ty} = src;\n  context.transform(a, b, c, d, tx, ty);\n  return context;\n}\n", "export function Mat2dEquals(a, b) {\n  return a.a === b.a && a.b === b.b && a.c === b.c && a.d === b.d && a.tx === b.tx && a.ty === b.ty;\n}\n", "import {Matrix2D} from \"./Matrix2D\";\nexport function Mat2dRotate(target, angle, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  return out.set(a * cos + c * sin, b * cos + d * sin, a * -sin + c * cos, b * -sin + d * cos, tx, ty);\n}\n", "import {Mat2dRotate} from \"./Mat2dRotate\";\nimport {Matrix2D} from \"./Matrix2D\";\nexport function Mat2dFromRotation(angle) {\n  const target = new Matrix2D();\n  return Mat2dRotate(target, angle, target);\n}\n", "import {Matrix2D} from \"./Matrix2D\";\nexport function Mat2dScale(target, scaleX, scaleY, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  return out.set(a * scaleX, b * scaleX, c * scaleY, d * scaleY, tx, ty);\n}\n", "import {Mat2dScale} from \"./Mat2dScale\";\nimport {Matrix2D} from \"./Matrix2D\";\nexport function Mat2dFromScaling(scaleX, scaleY = scaleX) {\n  const target = new Matrix2D();\n  return Mat2dScale(target, scaleX, scaleY, target);\n}\n", "import {Matrix2D} from \"./Matrix2D\";\nexport function Mat2dTranslate(target, x, y, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  out.tx = a * x + c * y + tx;\n  out.ty = b * x + d * y + ty;\n  return out;\n}\n", "import {Mat2dTranslate} from \"./Mat2dTranslate\";\nimport {Matrix2D} from \"./Matrix2D\";\nexport function Mat2dFromTranslation(x, y) {\n  const target = new Matrix2D();\n  return Mat2dTranslate(target, x, y, target);\n}\n", "export function Mat2dFuzzyEquals(a, b, epsilon = 1e-6) {\n  const {a: a0, b: b0, c: c0, d: d0, tx: tx0, ty: ty0} = a;\n  const {a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1} = b;\n  return Math.abs(a0 - a1) <= epsilon * Math.max(1, Math.abs(a0), Math.abs(a1)) && Math.abs(b0 - b1) <= epsilon * Math.max(1, Math.abs(b0), Math.abs(b1)) && Math.abs(c0 - c1) <= epsilon * Math.max(1, Math.abs(c0), Math.abs(c1)) && Math.abs(d0 - d1) <= epsilon * Math.max(1, Math.abs(d0), Math.abs(d1)) && Math.abs(tx0 - tx1) <= epsilon * Math.max(1, Math.abs(tx0), Math.abs(tx1)) && Math.abs(ty0 - ty1) <= epsilon * Math.max(1, Math.abs(ty0), Math.abs(ty1));\n}\n", "export class Vec2 {\n  constructor(x = 0, y = 0) {\n    this.set(x, y);\n  }\n  set(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1]);\n  }\n  toString() {\n    const {x, y} = this;\n    return `{ x=${x}, y=${y} }`;\n  }\n}\n", "import {Vec2} from \"../vec2/Vec2\";\nexport function Mat2dGlobalToLocal(mat, x, y, out = new Vec2()) {\n  const {a, b, c, d, tx, ty} = mat;\n  const id = 1 / (a * d + c * -b);\n  return out.set(d * id * x + -c * id * y + (ty * c - tx * d) * id, a * id * y + -b * id * x + (-ty * a + tx * b) * id);\n}\n", "export function Mat2dITRS(target, x, y, angle, scaleX, scaleY) {\n  if (angle === 0) {\n    return target.set(1, 0, 0, 1, x, y);\n  } else {\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n    return target.set(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n  }\n}\n", "export function Mat2dITRSS(target, x, y, angle = 0, scaleX = 1, scaleY = 1, skewX = 0, skewY = 0) {\n  if (angle === 0) {\n    return target.set(1, 0, 0, 1, x, y);\n  } else {\n    return target.set(Math.cos(angle + skewY) * scaleX, Math.sin(angle + skewY) * scaleX, -Math.sin(angle - skewX) * scaleY, Math.cos(angle - skewX) * scaleY, x, y);\n  }\n}\n", "import {Matrix2D} from \"./Matrix2D\";\nexport function Mat2dIdentity() {\n  return new Matrix2D();\n}\n", "import {Matrix2D} from \"./Matrix2D\";\nexport function Mat2dInvert(target, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  let determinant = a * d - b * c;\n  if (determinant) {\n    determinant = 1 / determinant;\n    out.set(d * determinant, -b * determinant, -c * determinant, a * determinant, (c * ty - d * tx) * determinant, (b * tx - a * ty) * determinant);\n  }\n  return out;\n}\n", "import {Vec2} from \"../vec2/Vec2\";\nexport function Mat2dLocalToGlobal(mat, x, y, out = new Vec2()) {\n  const {a, b, c, d, tx, ty} = mat;\n  return out.set(a * x + c * y + tx, b * x + d * y + ty);\n}\n", "import {Matrix2D} from \"./Matrix2D\";\nexport function Mat2dMultiply(target, src, out = new Matrix2D()) {\n  const {a: a0, b: b0, c: c0, d: d0, tx: tx0, ty: ty0} = target;\n  const {a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1} = src;\n  return out.set(a0 * a1 + c0 * b1, b0 * a1 + d0 * b1, a0 * c1 + c0 * d1, b0 * c1 + d0 * d1, a0 * tx1 + c0 * ty1 + tx0, b0 * tx1 + d0 * ty1 + ty0);\n}\n", "import {Matrix2D} from \"./Matrix2D\";\nexport function Mat2dMultiplyScalar(target, scalar, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  return out.set(a * scalar, b * scalar, c * scalar, d * scalar, tx * scalar, ty * scalar);\n}\n", "import {Matrix2D} from \"./Matrix2D\";\nexport function Mat2dMultiplyScalarAndAdd(target, src, scalar, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = src;\n  const {a: ta, b: tb, c: tc, d: td, tx: ttx, ty: tty} = target;\n  return out.set(ta + a * scalar, tb + b * scalar, tc + c * scalar, td + d * scalar, ttx + tx * scalar, tty + ty * scalar);\n}\n", "export function Mat2dSetToContext(src, context) {\n  const {a, b, c, d, tx, ty} = src;\n  context.setTransform(a, b, c, d, tx, ty);\n  return context;\n}\n", "import {Matrix2D} from \"./Matrix2D\";\nexport function Mat2dSkew(target, angleX, angleY, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  return out.set(a, b + Math.tan(angleX), c + Math.tan(angleY), d, tx, ty);\n}\n", "import {Matrix2D} from \"./Matrix2D\";\nexport function Mat2dSubtract(a, b, out = new Matrix2D()) {\n  return out.set(a.a - b.a, a.b - b.b, a.c - b.c, a.d - b.d, a.tx - b.tx, a.ty - b.ty);\n}\n", "export function Mat2dZero(target) {\n  return target.set(0, 0, 0, 0, 0, 0);\n}\n", "import {GetPowerOfTwo} from \"./GetPowerOfTwo\";\nimport {IsSizePowerOfTwo} from \"./IsSizePowerOfTwo\";\nimport {IsValuePowerOfTwo} from \"./IsValuePowerOfTwo\";\nexport {\n  GetPowerOfTwo,\n  IsSizePowerOfTwo,\n  IsValuePowerOfTwo\n};\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetPowerOfTwo(value) {\n  const index = Math.log(value) / 0.6931471805599453;\n  return 1 << Math.ceil(index);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function IsSizePowerOfTwo(width, height) {\n  if (width < 1 || height < 1) {\n    return false;\n  }\n  return (width & width - 1) === 0 && (height & height - 1) === 0;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function IsValuePowerOfTwo(value) {\n  return value > 0 && (value & value - 1) === 0;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {SnapCeil} from \"./SnapCeil\";\nimport {SnapFloor} from \"./SnapFloor\";\nimport {SnapTo} from \"./SnapTo\";\nexport {\n  SnapCeil,\n  SnapFloor,\n  SnapTo\n};\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function SnapCeil(value, gap, start = 0, divide = false) {\n  if (gap === 0) {\n    return value;\n  }\n  value -= start;\n  value = gap * Math.ceil(value / gap);\n  return divide ? (start + value) / gap : start + value;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function SnapFloor(value, gap, start = 0, divide = false) {\n  if (gap === 0) {\n    return value;\n  }\n  value -= start;\n  value = gap * Math.floor(value / gap);\n  return divide ? (start + value) / gap : start + value;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function SnapTo(value, gap, start = 0, divide = false) {\n  if (gap === 0) {\n    return value;\n  }\n  value -= start;\n  value = gap * Math.round(value / gap);\n  return divide ? (start + value) / gap : start + value;\n}\n", "import {GetChebyshevDistance} from \"./GetChebyshevDistance\";\nimport {GetDistanceFromSegment} from \"./GetDistanceFromSegment\";\nimport {GetVec2Angle} from \"./GetVec2Angle\";\nimport {GetVec2AngleY} from \"./GetVec2AngleY\";\nimport {GetVec2Distance} from \"./GetVec2Distance\";\nimport {GetVec2DistancePower} from \"./GetVec2DistancePower\";\nimport {GetVec2DistanceSquared} from \"./GetVec2DistanceSquared\";\nimport {GetVec2Length} from \"./GetVec2Length\";\nimport {GetVec2LengthSquared} from \"./GetVec2LengthSquared\";\nimport {GetVec2ManhattanDistance} from \"./GetVec2ManhattanDistance\";\nimport {GetVec2ManhattanLength} from \"./GetVec2ManhattanLength\";\nimport {Vec2} from \"./Vec2\";\nimport {Vec2Abs} from \"./Vec2Abs\";\nimport {Vec2Add} from \"./Vec2Add\";\nimport {Vec2AddScalar} from \"./Vec2AddScalar\";\nimport {Vec2Bezier} from \"./Vec2Bezier\";\nimport {Vec2Callback} from \"./Vec2Callback\";\nimport {Vec2CatmullRom} from \"./Vec2CatmullRom\";\nimport {Vec2Ceil} from \"./Vec2Ceil\";\nimport {Vec2Center} from \"./Vec2Center\";\nimport {Vec2Clamp} from \"./Vec2Clamp\";\nimport {Vec2ClampScalar} from \"./Vec2ClampScalar\";\nimport {Vec2Clone} from \"./Vec2Clone\";\nimport {Vec2CopyFrom} from \"./Vec2CopyFrom\";\nimport {Vec2Cross} from \"./Vec2Cross\";\nimport {Vec2Divide} from \"./Vec2Divide\";\nimport {Vec2DivideScalar} from \"./Vec2DivideScalar\";\nimport {Vec2Dot} from \"./Vec2Dot\";\nimport {Vec2Equals} from \"./Vec2Equals\";\nimport {Vec2Floor} from \"./Vec2Floor\";\nimport {Vec2Fract} from \"./Vec2Fract\";\nimport {Vec2FromGridIndex} from \"./Vec2FromGridIndex\";\nimport {Vec2FromTransform} from \"./Vec2FromTransform\";\nimport {Vec2FuzzyEquals} from \"./Vec2FuzzyEquals\";\nimport {Vec2Hermite} from \"./Vec2Hermite\";\nimport {Vec2Inverse} from \"./Vec2Inverse\";\nimport {Vec2Lerp} from \"./Vec2Lerp\";\nimport {Vec2Max} from \"./Vec2Max\";\nimport {Vec2Min} from \"./Vec2Min\";\nimport {Vec2Multiply} from \"./Vec2Multiply\";\nimport {Vec2MultiplyByFloats} from \"./Vec2MultiplyByFloats\";\nimport {Vec2Negate} from \"./Vec2Negate\";\nimport {Vec2Normalize} from \"./Vec2Normalize\";\nimport {Vec2One} from \"./Vec2One\";\nimport {Vec2PerpDot} from \"./Vec2PerpDot\";\nimport {Vec2Random} from \"./Vec2Random\";\nimport {Vec2Rotate} from \"./Vec2Rotate\";\nimport {Vec2Round} from \"./Vec2Round\";\nimport {Vec2RoundToZero} from \"./Vec2RoundToZero\";\nimport {Vec2Scale} from \"./Vec2Scale\";\nimport {Vec2ScaleAndAdd} from \"./Vec2ScaleAndAdd\";\nimport {Vec2SetLength} from \"./Vec2SetLength\";\nimport {Vec2Subtract} from \"./Vec2Subtract\";\nimport {Vec2SubtractScalar} from \"./Vec2SubtractScalar\";\nimport {Vec2Transform} from \"./Vec2Transform\";\nimport {Vec2TransformMat2d} from \"./Vec2TransformMat2d\";\nimport {Vec2TransformMat4} from \"./Vec2TransformMat4\";\nimport {Vec2Zero} from \"./Vec2Zero\";\nexport {\n  GetChebyshevDistance,\n  GetDistanceFromSegment,\n  GetVec2ManhattanDistance,\n  GetVec2ManhattanLength,\n  GetVec2Length,\n  GetVec2LengthSquared,\n  Vec2,\n  Vec2Abs,\n  Vec2Add,\n  Vec2AddScalar,\n  GetVec2Angle,\n  GetVec2AngleY,\n  Vec2Bezier,\n  Vec2Callback,\n  Vec2CatmullRom,\n  Vec2Ceil,\n  Vec2Center,\n  Vec2Clamp,\n  Vec2ClampScalar,\n  Vec2Clone,\n  Vec2CopyFrom,\n  Vec2Cross,\n  GetVec2Distance,\n  GetVec2DistancePower,\n  GetVec2DistanceSquared,\n  Vec2Divide,\n  Vec2DivideScalar,\n  Vec2Dot,\n  Vec2Equals,\n  Vec2Floor,\n  Vec2Fract,\n  Vec2FromGridIndex,\n  Vec2FromTransform,\n  Vec2FuzzyEquals,\n  Vec2Hermite,\n  Vec2Inverse,\n  Vec2Lerp,\n  Vec2Max,\n  Vec2Min,\n  Vec2Multiply,\n  Vec2MultiplyByFloats,\n  Vec2Negate,\n  Vec2Normalize,\n  Vec2One,\n  Vec2PerpDot,\n  Vec2Random,\n  Vec2Rotate,\n  Vec2Round,\n  Vec2RoundToZero,\n  Vec2Scale,\n  Vec2ScaleAndAdd,\n  Vec2SetLength,\n  Vec2Subtract,\n  Vec2SubtractScalar,\n  Vec2Transform,\n  Vec2TransformMat2d,\n  Vec2TransformMat4,\n  Vec2Zero\n};\n", "export function GetChebyshevDistance(a, b) {\n  return Math.max(Math.abs(a.x - b.x), Math.abs(a.y - b.y));\n}\n", "export function GetVec2DistanceSquared(a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  return x * x + y * y;\n}\n", "import {GetVec2DistanceSquared} from \"./GetVec2DistanceSquared\";\nexport function GetVec2Distance(a, b) {\n  return Math.sqrt(GetVec2DistanceSquared(a, b));\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Add(a, b, out = new Vec2()) {\n  return out.set(a.x + b.x, a.y + b.y);\n}\n", "export function Vec2Dot(a, b) {\n  return a.x * b.x + a.y * b.y;\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2MultiplyByFloats(a, x, y, out = new Vec2()) {\n  return out.set(a.x * x, a.y * y);\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Subtract(a, b, out = new Vec2()) {\n  return out.set(a.x - b.x, a.y - b.y);\n}\n", "import {GetVec2Distance} from \"./GetVec2Distance\";\nimport {GetVec2DistanceSquared} from \"./GetVec2DistanceSquared\";\nimport {Vec2Add} from \"./Vec2Add\";\nimport {Vec2Dot} from \"./Vec2Dot\";\nimport {Vec2MultiplyByFloats} from \"./Vec2MultiplyByFloats\";\nimport {Vec2Subtract} from \"./Vec2Subtract\";\nexport function GetDistanceFromSegment(p, a, b) {\n  const d = GetVec2DistanceSquared(a, b);\n  if (d === 0) {\n    return GetVec2Distance(p, a);\n  }\n  const v = Vec2Subtract(b, a);\n  Vec2Subtract(p, a, p);\n  const t = Math.max(0, Math.min(1, Vec2Dot(p, v) / 12));\n  const proj = Vec2Add(a, Vec2MultiplyByFloats(v, t, t, v));\n  return GetVec2Distance(p, proj);\n}\n", "export function GetVec2Angle(a, b) {\n  return Math.atan2(b.y - a.y, b.x - a.x);\n}\n", "export function GetVec2AngleY(a, b) {\n  return Math.atan2(b.x - a.x, b.y - a.y);\n}\n", "export function GetVec2DistancePower(a, b, pow = 2) {\n  return Math.sqrt(Math.pow(b.x - a.x, pow) + Math.pow(b.y - a.y, pow));\n}\n", "export function GetVec2Length(a) {\n  return Math.sqrt(a.x * a.x + a.y * a.y);\n}\n", "export function GetVec2LengthSquared(a) {\n  return a.x * a.x + a.y * a.y;\n}\n", "export function GetVec2ManhattanDistance(a, b) {\n  return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n}\n", "export function GetVec2ManhattanLength(a) {\n  return Math.abs(a.x) + Math.abs(a.y);\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Abs(a, out = new Vec2()) {\n  return out.set(Math.abs(a.x), Math.abs(a.y));\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2AddScalar(a, scalar, out = new Vec2()) {\n  return out.set(a.x + scalar, a.y + scalar);\n}\n", "import {Bezier} from \"../Bezier\";\nimport {Vec2} from \"./Vec2\";\nexport function Vec2Bezier(a, b, c, d, t, out = new Vec2()) {\n  return out.set(Bezier(t, a.x, b.x, c.x, d.x), Bezier(t, a.y, b.y, c.y, d.y));\n}\n", "import {CatmullRom} from \"../CatmullRom\";\nimport {Vec2} from \"./Vec2\";\nexport function Vec2CatmullRom(p1, p2, p3, p4, t, out = new Vec2()) {\n  return out.set(CatmullRom(t, p1.x, p2.x, p3.x, p4.x), CatmullRom(t, p1.y, p2.y, p3.y, p4.y));\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Ceil(a, out = new Vec2()) {\n  return out.set(Math.ceil(a.x), Math.ceil(a.y));\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Scale(a, scalar, out = new Vec2()) {\n  return out.set(a.x * scalar, a.y * scalar);\n}\n", "import {Vec2} from \"./Vec2\";\nimport {Vec2Add} from \"./Vec2Add\";\nimport {Vec2Scale} from \"./Vec2Scale\";\nexport function Vec2Center(a, b, out = new Vec2()) {\n  Vec2Add(a, b, out);\n  return Vec2Scale(out, 0.5, out);\n}\n", "import {Clamp} from \"../Clamp\";\nimport {Vec2} from \"./Vec2\";\nexport function Vec2Clamp(a, min, max, out = new Vec2()) {\n  return out.set(Clamp(a.x, min.x, max.x), Clamp(a.y, min.y, max.y));\n}\n", "import {Clamp} from \"../Clamp\";\nimport {Vec2} from \"./Vec2\";\nexport function Vec2ClampScalar(a, min, max, out = new Vec2()) {\n  return out.set(Clamp(a.x, min, max), Clamp(a.y, min, max));\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Clone(source) {\n  return new Vec2(source.x, source.y);\n}\n", "export function Vec2CopyFrom(source, dest) {\n  return dest.set(source.x, source.y);\n}\n", "export function Vec2Cross(a, b) {\n  return a.x * b.y - a.y * b.x;\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Divide(a, b, out = new Vec2()) {\n  return out.set(a.x / b.x, a.y / b.y);\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2DivideScalar(a, scalar, out = new Vec2()) {\n  return out.set(a.x / scalar, a.y / scalar);\n}\n", "export function Vec2Equals(a, b) {\n  return a.x === b.x && a.y === b.y;\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Floor(a, out = new Vec2()) {\n  return out.set(Math.floor(a.x), Math.floor(a.y));\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Fract(a, out = new Vec2()) {\n  return out.set(a.x - Math.floor(a.x), a.y - Math.floor(a.y));\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2FromGridIndex(index, width, height, out = new Vec2()) {\n  let x = 0;\n  let y = 0;\n  const total = width * height;\n  if (index > 0 && index <= total) {\n    if (index > width - 1) {\n      y = Math.floor(index / width);\n      x = index - y * width;\n    } else {\n      x = index;\n    }\n    out.set(x, y);\n  }\n  return out;\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2FromTransform(x, y, positionX, positionY, rotation, scaleX, scaleY, out = new Vec2()) {\n  const sin = Math.sin(rotation);\n  const cos = Math.cos(rotation);\n  const a = cos * scaleX;\n  const b = sin * scaleX;\n  const c = -sin * scaleY;\n  const d = cos * scaleY;\n  const id = 1 / (a * d + c * -b);\n  return out.set(d * id * x + -c * id * y + (positionY * c - positionX * d) * id, a * id * y + -b * id * x + (-positionY * a + positionX * b) * id);\n}\n", "import {FuzzyEqual} from \"../fuzzy/FuzzyEqual\";\nexport function Vec2FuzzyEquals(a, b, epsilon = 1e-4) {\n  return FuzzyEqual(a.x, b.x, epsilon) && FuzzyEqual(a.y, b.y, epsilon);\n}\n", "import {Hermite} from \"../Hermite\";\nimport {Vec2} from \"./Vec2\";\nexport function Vec2Hermite(a, b, c, d, t, out = new Vec2()) {\n  return out.set(Hermite(t, a.x, b.x, c.x, d.x), Hermite(t, a.y, b.y, c.y, d.y));\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Inverse(a, out = new Vec2()) {\n  return out.set(1 / a.x, 1 / a.y);\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Lerp(a, b, t, out = new Vec2()) {\n  const x = a.x;\n  const y = a.y;\n  return out.set(x + t * (b.x - x), y + t * (b.y - y));\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Max(a, b, out = new Vec2()) {\n  const {x: ax, y: ay} = a;\n  const {x: bx, y: by} = b;\n  return out.set(Math.max(ax, bx), Math.max(ay, by));\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Min(a, b, out = new Vec2()) {\n  const {x: ax, y: ay} = a;\n  const {x: bx, y: by} = b;\n  return out.set(Math.min(ax, bx), Math.min(ay, by));\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Multiply(a, b, out = new Vec2()) {\n  return out.set(a.x * b.x, a.y * b.y);\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Negate(a, out = new Vec2()) {\n  return out.set(-a.x, -a.y);\n}\n", "import {GetVec2Length} from \"./GetVec2Length\";\nimport {Vec2} from \"./Vec2\";\nimport {Vec2DivideScalar} from \"./Vec2DivideScalar\";\nexport function Vec2Normalize(a, out = new Vec2()) {\n  return Vec2DivideScalar(a, GetVec2Length(a) || 1, out);\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2One() {\n  return new Vec2(1, 1);\n}\n", "export function Vec2PerpDot(a, b) {\n  return a.x * b.y - a.y * b.x;\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Random(a, scale = 1, out = new Vec2()) {\n  const r = Math.random() * 2 * Math.PI;\n  return out.set(Math.cos(r) * scale, Math.sin(r) * scale);\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Rotate(a, origin, angle, out = new Vec2()) {\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const x = a.x - origin.x;\n  const y = a.y - origin.y;\n  return out.set(x * c - y * s + origin.x, x * s + y * c + origin.y);\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Round(a, out = new Vec2()) {\n  return out.set(Math.round(a.x), Math.round(a.y));\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2RoundToZero(a, out = new Vec2()) {\n  return out.set(a.x < 0 ? Math.ceil(a.x) : Math.floor(a.x), a.y < 0 ? Math.ceil(a.y) : Math.floor(a.y));\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2ScaleAndAdd(a, b, scalar, out = new Vec2()) {\n  return out.set(a.x + b.x * scalar, a.y + b.y * scalar);\n}\n", "import {Vec2} from \"./Vec2\";\nimport {Vec2Normalize} from \"./Vec2Normalize\";\nimport {Vec2Scale} from \"./Vec2Scale\";\nexport function Vec2SetLength(a, length, out = new Vec2()) {\n  Vec2Normalize(a, out);\n  return Vec2Scale(out, length, out);\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2SubtractScalar(a, scalar, out = new Vec2()) {\n  return out.set(a.x - scalar, a.y - scalar);\n}\n", "import {Vec2} from \"./Vec2\";\nimport {Vec2FromTransform} from \"./Vec2FromTransform\";\nexport function Vec2Transform(v, positionX, positionY, rotation, scaleX, scaleY, out = new Vec2()) {\n  return Vec2FromTransform(v.x, v.y, positionX, positionY, rotation, scaleX, scaleY, out);\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2TransformMat2d(v, m, out = new Vec2()) {\n  const {a, b, c, d, tx, ty} = m;\n  return out.set(a * v.x + c * v.y + tx, b * v.x + d * v.y + ty);\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2TransformMat4(v, m, out = new Vec2()) {\n  const data = m.data;\n  return out.set(data[0] * v.x + data[4] * v.y + data[12], data[1] * v.x + data[5] * v.y + data[13]);\n}\n", "import {Vec2} from \"./Vec2\";\nexport function Vec2Zero() {\n  return new Vec2(0, 0);\n}\n", "import {GetVec4Distance} from \"./GetVec4Distance\";\nimport {GetVec4DistanceSquared} from \"./GetVec4DistanceSquared\";\nimport {GetVec4Length} from \"./GetVec4Length\";\nimport {GetVec4LengthSquared} from \"./GetVec4LengthSquared\";\nimport {GetVec4ManhattanDistance} from \"./GetVec4ManhattanDistance\";\nimport {GetVec4ManhattanLength} from \"./GetVec4ManhattanLength\";\nimport {RGBACallback} from \"./RGBACallback\";\nimport {Vec4} from \"./Vec4\";\nimport {Vec4Abs} from \"./Vec4Abs\";\nimport {Vec4Add} from \"./Vec4Add\";\nimport {Vec4AddScalar} from \"./Vec4AddScalar\";\nimport {Vec4Bezier} from \"./Vec4Bezier\";\nimport {Vec4Callback} from \"./Vec4Callback\";\nimport {Vec4CatmullRom} from \"./Vec4CatmullRom\";\nimport {Vec4Ceil} from \"./Vec4Ceil\";\nimport {Vec4Center} from \"./Vec4Center\";\nimport {Vec4Clamp} from \"./Vec4Clamp\";\nimport {Vec4ClampLength} from \"./Vec4ClampLength\";\nimport {Vec4ClampScalar} from \"./Vec4ClampScalar\";\nimport {Vec4Clone} from \"./Vec4Clone\";\nimport {Vec4CopyFrom} from \"./Vec4CopyFrom\";\nimport {Vec4Cross} from \"./Vec4Cross\";\nimport {Vec4Divide} from \"./Vec4Divide\";\nimport {Vec4DivideScalar} from \"./Vec4DivideScalar\";\nimport {Vec4Dot} from \"./Vec4Dot\";\nimport {Vec4Equals} from \"./Vec4Equals\";\nimport {Vec4Floor} from \"./Vec4Floor\";\nimport {Vec4Fract} from \"./Vec4Fract\";\nimport {Vec4FuzzyEquals} from \"./Vec4FuzzyEquals\";\nimport {Vec4Hermite} from \"./Vec4Hermite\";\nimport {Vec4Lerp} from \"./Vec4Lerp\";\nimport {Vec4Max} from \"./Vec4Max\";\nimport {Vec4Min} from \"./Vec4Min\";\nimport {Vec4Multiply} from \"./Vec4Multiply\";\nimport {Vec4MultiplyByFloats} from \"./Vec4MultiplyByFloats\";\nimport {Vec4Negate} from \"./Vec4Negate\";\nimport {Vec4Normalize} from \"./Vec4Normalize\";\nimport {Vec4One} from \"./Vec4One\";\nimport {Vec4Random} from \"./Vec4Random\";\nimport {Vec4Round} from \"./Vec4Round\";\nimport {Vec4RoundToZero} from \"./Vec4RoundToZero\";\nimport {Vec4Scale} from \"./Vec4Scale\";\nimport {Vec4ScaleAndAdd} from \"./Vec4ScaleAndAdd\";\nimport {Vec4SetLength} from \"./Vec4SetLength\";\nimport {Vec4Subtract} from \"./Vec4Subtract\";\nimport {Vec4SubtractScalar} from \"./Vec4SubtractScalar\";\nimport {Vec4TransformMat4} from \"./Vec4TransformMat4\";\nimport {Vec4Zero} from \"./Vec4Zero\";\nexport {\n  GetVec4Distance,\n  GetVec4DistanceSquared,\n  GetVec4Length,\n  GetVec4LengthSquared,\n  GetVec4ManhattanDistance,\n  GetVec4ManhattanLength,\n  RGBACallback,\n  Vec4,\n  Vec4Abs,\n  Vec4Add,\n  Vec4AddScalar,\n  Vec4Bezier,\n  Vec4Callback,\n  Vec4CatmullRom,\n  Vec4Ceil,\n  Vec4Center,\n  Vec4Clamp,\n  Vec4ClampLength,\n  Vec4ClampScalar,\n  Vec4Clone,\n  Vec4CopyFrom,\n  Vec4Cross,\n  Vec4Divide,\n  Vec4DivideScalar,\n  Vec4Dot,\n  Vec4Equals,\n  Vec4Floor,\n  Vec4Fract,\n  Vec4FuzzyEquals,\n  Vec4Hermite,\n  Vec4Lerp,\n  Vec4Max,\n  Vec4Min,\n  Vec4Multiply,\n  Vec4MultiplyByFloats,\n  Vec4Negate,\n  Vec4Normalize,\n  Vec4One,\n  Vec4Random,\n  Vec4Round,\n  Vec4RoundToZero,\n  Vec4Scale,\n  Vec4ScaleAndAdd,\n  Vec4SetLength,\n  Vec4Subtract,\n  Vec4SubtractScalar,\n  Vec4TransformMat4,\n  Vec4Zero\n};\n", "export function GetVec4DistanceSquared(a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  const z = a.z - b.z;\n  const w = a.w - b.w;\n  return x * x + y * y + z * z + w * w;\n}\n", "import {GetVec4DistanceSquared} from \"./GetVec4DistanceSquared\";\nexport function GetVec4Distance(a, b) {\n  return Math.sqrt(GetVec4DistanceSquared(a, b));\n}\n", "export function GetVec4Length(a) {\n  const {x, y, z, w} = a;\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n", "export function GetVec4LengthSquared(a) {\n  const {x, y, z, w} = a;\n  return x * x + y * y + z * z + w * w;\n}\n", "export function GetVec4ManhattanDistance(a, b) {\n  return Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z) + Math.abs(a.w - b.w);\n}\n", "export function GetVec4ManhattanLength(a) {\n  const {x, y, z, w} = a;\n  return Math.abs(x) + Math.abs(y) + Math.abs(z) + Math.abs(w);\n}\n", "import {NOOP} from \"../../utils/NOOP\";\nexport class Vec4Callback {\n  constructor(onChange, x = 0, y = 0, z = 0, w = 0) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChange = onChange;\n  }\n  destroy() {\n    this.onChange = NOOP;\n  }\n  set(x = 0, y = 0, z = 0, w = 0) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    if (this.onChange) {\n      this.onChange(this);\n    }\n    return this;\n  }\n  get x() {\n    return this._x;\n  }\n  set x(value) {\n    const prev = this._x;\n    this._x = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get y() {\n    return this._y;\n  }\n  set y(value) {\n    const prev = this._y;\n    this._y = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get z() {\n    return this._z;\n  }\n  set z(value) {\n    const prev = this._z;\n    this._z = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get w() {\n    return this._w;\n  }\n  set w(value) {\n    const prev = this._w;\n    this._w = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y, z, w} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    dst[index + 2] = z;\n    dst[index + 3] = w;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1], src[index + 2], src[index + 3]);\n  }\n  toString() {\n    const {x, y, z, w} = this;\n    return `{ x=${x}, y=${y}, z=${z}, w=${w} }`;\n  }\n}\n", "import {Vec4Callback} from \"./Vec4Callback\";\nexport class RGBACallback extends Vec4Callback {\n  constructor(onChange, r = 0, g = 0, b = 0, a = 1) {\n    super(onChange, r, g, b, a);\n  }\n  set r(value) {\n    this.x = value;\n  }\n  get r() {\n    return this.x;\n  }\n  set g(value) {\n    this.y = value;\n  }\n  get g() {\n    return this.y;\n  }\n  set b(value) {\n    this.z = value;\n  }\n  get b() {\n    return this.z;\n  }\n  set a(value) {\n    this.w = value;\n  }\n  get a() {\n    return this.w;\n  }\n  toString() {\n    const {x, y, z, w} = this;\n    return `[ r=${x}, g=${y}, b=${z}, a=${w} ]`;\n  }\n}\n", "export class Vec4 {\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    this.set(x, y, z, w);\n  }\n  set(x = 0, y = 0, z = 0, w = 1) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y, z, w} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    dst[index + 2] = z;\n    dst[index + 3] = w;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1], src[index + 2], src[index + 3]);\n  }\n  toString() {\n    const {x, y, z, w} = this;\n    return `{ x=${x}, y=${y}, z=${z}, w=${w} }`;\n  }\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Abs(a, out = new Vec4()) {\n  return out.set(Math.abs(a.x), Math.abs(a.y), Math.abs(a.z), Math.abs(a.w));\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Add(a, b, out = new Vec4()) {\n  return out.set(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4AddScalar(a, scalar, out = new Vec4()) {\n  return out.set(a.x + scalar, a.y + scalar, a.z + scalar, a.w + scalar);\n}\n", "import {Bezier} from \"../Bezier\";\nimport {Vec4} from \"./Vec4\";\nexport function Vec4Bezier(a, b, c, d, t, out = new Vec4()) {\n  return out.set(Bezier(t, a.x, b.x, c.x, d.x), Bezier(t, a.y, b.y, c.y, d.y), Bezier(t, a.z, b.z, c.z, d.z), Bezier(t, a.w, b.w, c.w, d.w));\n}\n", "import {CatmullRom} from \"../CatmullRom\";\nimport {Vec4} from \"./Vec4\";\nexport function Vec4CatmullRom(p1, p2, p3, p4, t, out = new Vec4()) {\n  return out.set(CatmullRom(t, p1.x, p2.x, p3.x, p4.x), CatmullRom(t, p1.y, p2.y, p3.y, p4.y), CatmullRom(t, p1.z, p2.z, p3.z, p4.z), CatmullRom(t, p1.w, p2.w, p3.w, p4.w));\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Ceil(a, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(Math.ceil(x), Math.ceil(y), Math.ceil(z), Math.ceil(w));\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Scale(a, scalar, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(x * scalar, y * scalar, z * scalar, w * scalar);\n}\n", "import {Vec4} from \"./Vec4\";\nimport {Vec4Add} from \"./Vec4Add\";\nimport {Vec4Scale} from \"./Vec4Scale\";\nexport function Vec4Center(a, b, out = new Vec4()) {\n  Vec4Add(a, b, out);\n  return Vec4Scale(out, 0.5, out);\n}\n", "import {Clamp} from \"../Clamp\";\nimport {Vec4} from \"./Vec4\";\nexport function Vec4Clamp(a, min, max, out = new Vec4()) {\n  return out.set(Clamp(a.x, min.x, max.x), Clamp(a.y, min.y, max.y), Clamp(a.z, min.z, max.z), Clamp(a.w, min.w, max.w));\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4DivideScalar(a, scalar, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(x / scalar, y / scalar, z / scalar, w / scalar);\n}\n", "import {Clamp} from \"../Clamp\";\nimport {GetVec4Length} from \"./GetVec4Length\";\nimport {Vec4} from \"./Vec4\";\nimport {Vec4DivideScalar} from \"./Vec4DivideScalar\";\nimport {Vec4Scale} from \"./Vec4Scale\";\nexport function Vec4ClampLength(a, min, max, out = new Vec4()) {\n  const length = GetVec4Length(a);\n  Vec4DivideScalar(a, length || 1, out);\n  return Vec4Scale(out, Clamp(min, max, length), out);\n}\n", "import {Clamp} from \"../Clamp\";\nimport {Vec4} from \"./Vec4\";\nexport function Vec4ClampScalar(a, min, max, out = new Vec4()) {\n  return out.set(Clamp(a.x, min, max), Clamp(a.y, min, max), Clamp(a.z, min, max), Clamp(a.w, min, max));\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Clone(source) {\n  const {x, y, z, w} = source;\n  return new Vec4(x, y, z, w);\n}\n", "export function Vec4CopyFrom(source, dest) {\n  const {x, y, z, w} = source;\n  return dest.set(x, y, z, w);\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Cross(u, v, w, out = new Vec4()) {\n  const {x: ux, y: uy, z: uz, w: uw} = u;\n  const {x: vx, y: vy, z: vz, w: vw} = v;\n  const {x: wx, y: wy, z: wz, w: ww} = w;\n  const A = vx * wy - vy * wx;\n  const B = vx * wz - vz * wx;\n  const C = vx * ww - vw * wx;\n  const D = vy * wz - vz * wy;\n  const E = vy * ww - vw * wy;\n  const F = vz * ww - vw * wz;\n  const G = ux;\n  const H = uy;\n  const I = uz;\n  const J = uw;\n  return out.set(H * F - I * E + J * D, -(G * F) + I * C - J * B, G * E - H * C + J * A, -(G * D) + H * B - I * A);\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Divide(a, b, out = new Vec4()) {\n  return out.set(a.x / b.x, a.y / b.y, a.z / b.z, a.w / b.w);\n}\n", "export function Vec4Dot(a, b) {\n  return a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;\n}\n", "export function Vec4Equals(a, b) {\n  return a.x === b.x && a.y === b.y && a.z === b.z && a.w === b.w;\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Floor(a, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(Math.floor(x), Math.floor(y), Math.floor(z), Math.floor(w));\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Fract(a, out = new Vec4()) {\n  return out.set(a.x - Math.floor(a.x), a.y - Math.floor(a.y), a.z - Math.floor(a.z), a.w - Math.floor(a.w));\n}\n", "import {FuzzyEqual} from \"../fuzzy/FuzzyEqual\";\nexport function Vec4FuzzyEquals(a, b, epsilon = 1e-4) {\n  return FuzzyEqual(a.x, b.x, epsilon) && FuzzyEqual(a.y, b.y, epsilon) && FuzzyEqual(a.z, b.z, epsilon) && FuzzyEqual(a.w, b.w, epsilon);\n}\n", "import {Hermite} from \"../Hermite\";\nimport {Vec4} from \"./Vec4\";\nexport function Vec4Hermite(a, b, c, d, t, out = new Vec4()) {\n  return out.set(Hermite(t, a.x, b.x, c.x, d.x), Hermite(t, a.y, b.y, c.y, d.y), Hermite(t, a.z, b.z, c.z, d.z), Hermite(t, a.w, b.w, c.w, d.w));\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Lerp(a, b, t, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(x + t * (b.x - x), y + t * (b.y - y), z + t * (b.z - z), w + t * (b.w - w));\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Max(a, b, out = new Vec4()) {\n  const {x: ax, y: ay, z: az, w: aw} = a;\n  const {x: bx, y: by, z: bz, w: bw} = b;\n  return out.set(Math.max(ax, bx), Math.max(ay, by), Math.max(az, bz), Math.max(aw, bw));\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Min(a, b, out = new Vec4()) {\n  const {x: ax, y: ay, z: az, w: aw} = a;\n  const {x: bx, y: by, z: bz, w: bw} = b;\n  return out.set(Math.min(ax, bx), Math.min(ay, by), Math.min(az, bz), Math.min(aw, bw));\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Multiply(a, b, out = new Vec4()) {\n  return out.set(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4MultiplyByFloats(a, x, y, z, w, out = new Vec4()) {\n  return out.set(a.x * x, a.y * y, a.z * z, a.w * w);\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Negate(a, out = new Vec4()) {\n  return out.set(-a.x, -a.y, -a.z, -a.w);\n}\n", "import {GetVec4Length} from \"./GetVec4Length\";\nimport {Vec4} from \"./Vec4\";\nimport {Vec4DivideScalar} from \"./Vec4DivideScalar\";\nexport function Vec4Normalize(a, out = new Vec4()) {\n  return Vec4DivideScalar(a, GetVec4Length(a) || 1, out);\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4One() {\n  return new Vec4(1, 1, 1, 1);\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Random(a, scale = 1, out = new Vec4()) {\n  let v1;\n  let v2;\n  let v3;\n  let v4;\n  let s1;\n  let s2;\n  do {\n    v1 = Math.random() * 2 - 1;\n    v2 = Math.random() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n  do {\n    v3 = Math.random() * 2 - 1;\n    v4 = Math.random() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n  const d = Math.sqrt((1 - s1) / s2);\n  return out.set(scale * v1, scale * v2, scale * v3 * d, scale * v4 * d);\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Round(a, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(Math.round(x), Math.round(y), Math.round(z), Math.round(w));\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4RoundToZero(a, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(x < 0 ? Math.ceil(x) : Math.floor(x), y < 0 ? Math.ceil(y) : Math.floor(y), z < 0 ? Math.ceil(z) : Math.floor(z), w < 0 ? Math.ceil(w) : Math.floor(w));\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4ScaleAndAdd(a, b, scalar, out = new Vec4()) {\n  return out.set(a.x + b.x * scalar, a.y + b.y * scalar, a.z + b.z * scalar, a.w + b.w * scalar);\n}\n", "import {Vec4} from \"./Vec4\";\nimport {Vec4Normalize} from \"./Vec4Normalize\";\nimport {Vec4Scale} from \"./Vec4Scale\";\nexport function Vec4SetLength(a, length, out = new Vec4()) {\n  Vec4Normalize(a, out);\n  return Vec4Scale(out, length, out);\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Subtract(a, b, out = new Vec4()) {\n  return out.set(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4SubtractScalar(a, scalar, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(x - scalar, y - scalar, z - scalar, w - scalar);\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4TransformMat4(a, m, out = new Vec4()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = m.data;\n  const {x, y, z, w} = a;\n  return out.set(m00 * x + m10 * y + m20 * z + m30 * w, m01 * x + m11 * y + m21 * z + m31 * w, m02 * x + m12 * y + m22 * z + m32 * w, m03 * x + m13 * y + m23 * z + m33 * w);\n}\n", "import {Vec4} from \"./Vec4\";\nexport function Vec4Zero() {\n  return new Vec4(0, 0, 0, 0);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function Average(values) {\n  let sum = 0;\n  for (let i = 0; i < values.length; i++) {\n    sum += +values[i];\n  }\n  return sum / values.length;\n}\n", "export function Between(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CeilTo(value, place = 0, base = 10) {\n  const p = Math.pow(base, -place);\n  return Math.ceil(value * p) / p;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {MATH_CONST} from \"./const\";\nexport function DegToRad(degrees) {\n  return degrees * MATH_CONST.DEG_TO_RAD;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function Difference(a, b) {\n  return Math.abs(a - b);\n}\n", "export function FloatBetween(min, max) {\n  return Math.random() * (max - min) + min;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function FloorTo(value, place = 0, base = 10) {\n  const p = Math.pow(base, -place);\n  return Math.floor(value * p) / p;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Clamp} from \"./Clamp\";\nexport function FromPercent(percent, min, max) {\n  percent = Clamp(percent, 0, 1);\n  return (max - min) * percent;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetSpeed(distance, time) {\n  return distance / time / 1e3;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function MaxAdd(value, amount, max) {\n  return Math.min(value + amount, max);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function MinSub(value, amount, min) {\n  return Math.max(value - amount, min);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function Percent(value, min, max, upperMax) {\n  if (max === void 0) {\n    max = min + 1;\n  }\n  let percentage = (value - min) / (max - min);\n  if (percentage > 1) {\n    if (upperMax !== void 0) {\n      percentage = (upperMax - value) / (upperMax - max);\n      if (percentage < 0) {\n        percentage = 0;\n      }\n    } else {\n      percentage = 1;\n    }\n  } else if (percentage < 0) {\n    percentage = 0;\n  }\n  return percentage;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {MATH_CONST} from \"./const\";\nexport function RadToDeg(radians) {\n  return radians * MATH_CONST.RAD_TO_DEG;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function RoundTo(value, place = 0, base = 10) {\n  const p = Math.pow(base, -place);\n  return Math.round(value * p) / p;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function SinCosTableGenerator(length, sinAmp = 1, cosAmp = 1, frequency = 1) {\n  frequency *= Math.PI / length;\n  const cos = [];\n  const sin = [];\n  for (let c = 0; c < length; c++) {\n    cosAmp -= sinAmp * frequency;\n    sinAmp += cosAmp * frequency;\n    cos[c] = cosAmp;\n    sin[c] = sinAmp;\n  }\n  return {\n    sin,\n    cos,\n    length\n  };\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function Within(a, b, tolerance) {\n  return Math.abs(a - b) <= tolerance;\n}\n", "export const CONFIG_DEFAULTS = {\n  BACKGROUND_COLOR: \"BackgroundColor\",\n  BATCH_SIZE: \"BatchSize\",\n  DEFAULT_ORIGIN: \"DefaultOrigin\",\n  MAX_TEXTURES: \"MaxTextures\",\n  PARENT: \"Parent\",\n  SIZE: \"Size\",\n  SCENES: \"Scenes\",\n  RENDERER: \"Renderer\",\n  AUTO: \"Auto\",\n  WEBGL: \"WebGL\",\n  CANVAS: \"Canvas\",\n  WEBGL_CONTEXT: \"WebGLContext\",\n  CANVAS_CONTEXT: \"CanvasContext\",\n  BANNER: \"Banner\"\n};\n", "export const ConfigStore = new Map();\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function SetBackgroundColor(color) {\n  ConfigStore.set(CONFIG_DEFAULTS.BACKGROUND_COLOR, color);\n}\n", "import {SetBackgroundColor} from \"./SetBackgroundColor\";\nexport function BackgroundColor(color) {\n  return () => {\n    SetBackgroundColor(color);\n  };\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function SetBanner(title = \"\", version = \"\", url = \"\", color = \"#fff\", background = \"linear-gradient(#3e0081 40%, #00bcc3)\") {\n  ConfigStore.set(CONFIG_DEFAULTS.BANNER, {title, version, url, color, background});\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function SetBatchSize(size) {\n  ConfigStore.set(CONFIG_DEFAULTS.BATCH_SIZE, size);\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetHeight() {\n  return ConfigStore.get(CONFIG_DEFAULTS.SIZE).height;\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetResolution() {\n  return ConfigStore.get(CONFIG_DEFAULTS.SIZE).resolution;\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetWidth() {\n  return ConfigStore.get(CONFIG_DEFAULTS.SIZE).width;\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function SetSize(width = 800, height = 600, resolution = 1) {\n  if (resolution === 0) {\n    resolution = window.devicePixelRatio;\n  }\n  ConfigStore.set(CONFIG_DEFAULTS.SIZE, {width, height, resolution});\n}\n", "const queue = [];\nexport const BindingQueue = {\n  add: (texture, glConfig) => {\n    queue.push({texture, glConfig});\n  },\n  get: () => {\n    return queue;\n  },\n  clear: () => {\n    queue.length = 0;\n  }\n};\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetBackgroundColor() {\n  return ConfigStore.get(CONFIG_DEFAULTS.BACKGROUND_COLOR);\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function SetRenderer(renderer) {\n  ConfigStore.set(CONFIG_DEFAULTS.RENDERER, renderer);\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function SetDefaultOrigin(x = 0.5, y = x) {\n  ConfigStore.set(CONFIG_DEFAULTS.DEFAULT_ORIGIN, {x, y});\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function SetMaxTextures(max) {\n  ConfigStore.set(CONFIG_DEFAULTS.MAX_TEXTURES, max);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetElement(target) {\n  let element;\n  if (target) {\n    if (typeof target === \"string\") {\n      element = document.getElementById(target);\n    } else if (typeof target === \"object\" && target.nodeType === 1) {\n      element = target;\n    }\n  }\n  if (!element) {\n    element = document.body;\n  }\n  return element;\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nimport {GetElement} from \"../../dom/GetElement\";\nexport function SetParent(parentElement) {\n  if (parentElement) {\n    ConfigStore.set(CONFIG_DEFAULTS.PARENT, GetElement(parentElement));\n  }\n}\n", "import {SetParent} from \"./SetParent\";\nexport function Parent(parentElement) {\n  return () => {\n    SetParent(parentElement);\n  };\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function SetScenes(scenes) {\n  ConfigStore.set(CONFIG_DEFAULTS.SCENES, [].concat(scenes));\n}\n", "import {SetScenes} from \"./SetScenes\";\nexport function Scenes(scenes) {\n  return () => {\n    SetScenes(scenes);\n  };\n}\n", "import {Rectangle} from \"../../../geom/rectangle/Rectangle\";\nexport function AddViewport(renderPass, x = 0, y = 0, width = 0, height = 0) {\n  const viewport = new Rectangle(x, y, width, height);\n  renderPass.viewportStack.push(viewport);\n  return viewport;\n}\n", "export let gl;\nexport const GL = {\n  get: () => {\n    return gl;\n  },\n  set: (context) => {\n    gl = context;\n  }\n};\n", "import {gl} from \"../GL\";\nexport function BindViewport(renderPass, viewport) {\n  if (!viewport) {\n    viewport = renderPass.currentViewport;\n    if (!viewport) {\n      return;\n    }\n  }\n  const glv = gl.getParameter(gl.VIEWPORT);\n  if (glv[0] !== viewport.x || glv[1] !== viewport.y || glv[2] !== viewport.width || glv[3] !== viewport.height) {\n    gl.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n  }\n}\n", "import {AddViewport} from \"./AddViewport\";\nimport {BindViewport} from \"./BindViewport\";\nexport function SetViewport(renderPass, x = 0, y = 0, width = 0, height = 0) {\n  const entry = AddViewport(renderPass, x, y, width, height);\n  BindViewport(renderPass, entry);\n  renderPass.currentViewport = entry;\n}\n", "import {SetViewport} from \"./SetViewport\";\nimport {gl} from \"../GL\";\nexport function BindFramebuffer(renderPass, clear = true, entry) {\n  if (!entry) {\n    entry = renderPass.currentFramebuffer;\n  }\n  const {framebuffer, viewport} = entry;\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  if (clear) {\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  }\n  if (viewport) {\n    SetViewport(renderPass, viewport.x, viewport.y, viewport.width, viewport.height);\n  }\n}\n", "import {BindViewport} from \"./BindViewport\";\nexport function PopViewport(renderPass) {\n  const stack = renderPass.viewportStack;\n  if (stack.length > 1) {\n    stack.pop();\n  }\n  renderPass.currentViewport = stack[stack.length - 1];\n  BindViewport(renderPass);\n}\n", "import {BindFramebuffer} from \"./BindFramebuffer\";\nimport {PopViewport} from \"./PopViewport\";\nexport function PopFramebuffer(renderPass) {\n  const stack = renderPass.framebufferStack;\n  if (stack.length > 1) {\n    if (renderPass.currentFramebuffer.viewport) {\n      PopViewport(renderPass);\n    }\n    stack.pop();\n  }\n  renderPass.currentFramebuffer = stack[stack.length - 1];\n  BindFramebuffer(renderPass, false);\n}\n", "export function AddFramebuffer(renderPass, framebuffer, viewport) {\n  const entry = {framebuffer, viewport};\n  renderPass.framebufferStack.push(entry);\n  return entry;\n}\n", "import {AddFramebuffer} from \"./AddFramebuffer\";\nimport {BindFramebuffer} from \"./BindFramebuffer\";\nexport function SetFramebuffer(renderPass, framebuffer, clear = true, viewport) {\n  const entry = AddFramebuffer(renderPass, framebuffer, viewport);\n  BindFramebuffer(renderPass, clear, entry);\n  renderPass.currentFramebuffer = entry;\n}\n", "import {PopFramebuffer} from \"./PopFramebuffer\";\nimport {SetFramebuffer} from \"./SetFramebuffer\";\nimport {gl} from \"../GL\";\nexport function Draw(renderPass) {\n  const count = renderPass.count;\n  if (count === 0) {\n    return;\n  }\n  const currentBuffer = renderPass.currentVertexBuffer;\n  const currentShader = renderPass.currentShader;\n  const renderToFramebuffer = currentShader.shader.renderToFramebuffer;\n  if (renderToFramebuffer) {\n    SetFramebuffer(renderPass, currentShader.shader.framebuffer, true);\n  }\n  if (count === currentBuffer.batchSize) {\n    const type = currentBuffer.isDynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n    gl.bufferData(gl.ARRAY_BUFFER, currentBuffer.data, type);\n  } else {\n    const subsize = currentBuffer.indexed ? count * currentBuffer.entryElementSize : count * currentBuffer.vertexElementSize;\n    const view = currentBuffer.vertexViewF32.subarray(0, subsize);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\n  }\n  if (currentBuffer.indexed) {\n    gl.drawElements(gl.TRIANGLES, count * currentBuffer.entryIndexSize, gl.UNSIGNED_SHORT, 0);\n  } else {\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n  }\n  if (renderToFramebuffer) {\n    PopFramebuffer(renderPass);\n  }\n}\n", "import {Draw} from \"./Draw\";\nexport function Flush(renderPass, forceCount) {\n  if (forceCount) {\n    renderPass.count = forceCount;\n  }\n  const count = renderPass.count;\n  if (count === 0) {\n    return false;\n  }\n  Draw(renderPass);\n  renderPass.prevCount = count;\n  renderPass.count = 0;\n  renderPass.flushTotal++;\n  return true;\n}\n", "import {Flush} from \"./Flush\";\nexport function End(renderPass) {\n  Flush(renderPass);\n}\n", "export function GetRGBArray(color, output = []) {\n  const r = color >> 16 & 255;\n  const g = color >> 8 & 255;\n  const b = color & 255;\n  const a = color > 16777215 ? color >>> 24 : 255;\n  output[0] = r / 255;\n  output[1] = g / 255;\n  output[2] = b / 255;\n  output[3] = a / 255;\n  return output;\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetWebGLContext() {\n  return ConfigStore.get(CONFIG_DEFAULTS.WEBGL_CONTEXT);\n}\n", "import {gl} from \"../GL\";\nexport function CreateGLTexture(binding) {\n  const {parent, flipY, unpackPremultiplyAlpha, minFilter, magFilter, wrapS, wrapT, generateMipmap, isPOT} = binding;\n  const source = parent.image;\n  let width = parent.width;\n  let height = parent.height;\n  const glTexture = gl.createTexture();\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(gl.TEXTURE_2D, glTexture);\n  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n  gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, unpackPremultiplyAlpha);\n  if (source) {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\n    width = source.width;\n    height = source.height;\n  } else {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  }\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n  if (generateMipmap && isPOT) {\n    gl.generateMipmap(gl.TEXTURE_2D);\n  }\n  binding.texture = glTexture;\n  return glTexture;\n}\n", "import {gl} from \"../GL\";\nexport function DeleteFramebuffer(framebuffer) {\n  if (gl && gl.isFramebuffer(framebuffer)) {\n    gl.deleteFramebuffer(framebuffer);\n  }\n}\n", "import {gl} from \"../GL\";\nexport function DeleteGLTexture(texture) {\n  if (gl.isTexture(texture)) {\n    gl.deleteTexture(texture);\n  }\n}\n", "import {gl} from \"../GL\";\nexport function SetGLTextureFilterMode(texture, linear = true) {\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  const mode = linear ? gl.LINEAR : gl.NEAREST;\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, mode);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mode);\n}\n", "import {gl} from \"../GL\";\nexport function UpdateGLTexture(binding) {\n  const source = binding.parent.image;\n  const width = source.width;\n  const height = source.height;\n  if (width > 0 && height > 0) {\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, binding.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, binding.flipY);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\n  }\n  return binding.texture;\n}\n", "import {CreateGLTexture} from \"./CreateGLTexture\";\nimport {DeleteFramebuffer} from \"../fbo/DeleteFramebuffer\";\nimport {DeleteGLTexture} from \"./DeleteGLTexture\";\nimport {IsSizePowerOfTwo} from \"../../../math/pow2/IsSizePowerOfTwo\";\nimport {SetGLTextureFilterMode} from \"./SetGLTextureFilterMode\";\nimport {UpdateGLTexture} from \"./UpdateGLTexture\";\nimport {gl} from \"../GL\";\nexport class GLTextureBinding {\n  constructor(parent, config = {}) {\n    this.index = 0;\n    this.indexCounter = -1;\n    this.dirtyIndex = true;\n    this.unpackPremultiplyAlpha = true;\n    this.flipY = false;\n    this.isPOT = false;\n    this.generateMipmap = false;\n    this.parent = parent;\n    this.isPOT = IsSizePowerOfTwo(parent.width, parent.height);\n    const {\n      texture = null,\n      framebuffer = null,\n      depthbuffer = null,\n      unpackPremultiplyAlpha = true,\n      minFilter = this.isPOT ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR,\n      magFilter = gl.LINEAR,\n      wrapS = gl.CLAMP_TO_EDGE,\n      wrapT = gl.CLAMP_TO_EDGE,\n      generateMipmap = this.isPOT,\n      flipY = false\n    } = config;\n    this.minFilter = minFilter;\n    this.magFilter = magFilter;\n    this.wrapS = wrapS;\n    this.wrapT = wrapT;\n    this.generateMipmap = generateMipmap;\n    this.flipY = flipY;\n    this.unpackPremultiplyAlpha = unpackPremultiplyAlpha;\n    if (framebuffer) {\n      this.framebuffer = framebuffer;\n    }\n    if (depthbuffer) {\n      this.depthbuffer = depthbuffer;\n    }\n    if (texture) {\n      this.texture = texture;\n    } else {\n      CreateGLTexture(this);\n    }\n  }\n  setFilter(linear) {\n    if (this.texture) {\n      SetGLTextureFilterMode(this.texture, linear);\n    }\n  }\n  create() {\n    const texture = this.texture;\n    if (texture) {\n      DeleteGLTexture(texture);\n    }\n    return CreateGLTexture(this);\n  }\n  update() {\n    const texture = this.texture;\n    if (!texture) {\n      return CreateGLTexture(this);\n    } else {\n      return UpdateGLTexture(this);\n    }\n  }\n  setIndex(index) {\n    this.dirtyIndex = index !== this.index;\n    this.index = index;\n  }\n  destroy() {\n    DeleteGLTexture(this.texture);\n    DeleteFramebuffer(this.framebuffer);\n    this.parent = null;\n    this.texture = null;\n    this.framebuffer = null;\n  }\n}\n", "import {BindingQueue} from \"../../BindingQueue\";\nimport {GLTextureBinding} from \"../textures/GLTextureBinding\";\nexport function ProcessBindingQueue() {\n  const queue = BindingQueue.get();\n  queue.forEach((entry) => {\n    const {texture, glConfig} = entry;\n    if (!texture.binding) {\n      texture.binding = new GLTextureBinding(texture, glConfig);\n    }\n  });\n  BindingQueue.clear();\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetMaxTextures() {\n  return ConfigStore.get(CONFIG_DEFAULTS.MAX_TEXTURES);\n}\n", "import {gl} from \"../GL\";\nconst fragTemplate = [\n  \"precision mediump float;\",\n  \"void main(void){\",\n  \"float test = 0.1;\",\n  \"%forloop%\",\n  \"gl_FragColor = vec4(0.0);\",\n  \"}\"\n].join(\"\\n\");\nfunction GenerateSrc(maxIfs) {\n  let src = \"\";\n  for (let i = 0; i < maxIfs; ++i) {\n    if (i > 0) {\n      src += \"\\nelse \";\n    }\n    if (i < maxIfs - 1) {\n      src += `if(test == ${i}.0){}`;\n    }\n  }\n  return src;\n}\nexport function CheckShaderMaxIfStatements(maxIfs) {\n  const shader = gl.createShader(gl.FRAGMENT_SHADER);\n  while (true) {\n    const fragmentSrc = fragTemplate.replace(/%forloop%/gi, GenerateSrc(maxIfs));\n    gl.shaderSource(shader, fragmentSrc);\n    gl.compileShader(shader);\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      maxIfs = maxIfs / 2 | 0;\n    } else {\n      break;\n    }\n  }\n  return maxIfs;\n}\n", "import {GetMaxTextures, SetMaxTextures} from \"../../../config/maxtextures/\";\nimport {CheckShaderMaxIfStatements} from \"../shaders/CheckShaderMaxIfStatements\";\nimport {gl} from \"../GL\";\nexport function CreateTempTextures(renderPass) {\n  let maxGPUTextures = CheckShaderMaxIfStatements(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\n  const maxConfigTextures = GetMaxTextures();\n  if (maxConfigTextures === 0 || maxConfigTextures > 0 && maxConfigTextures > maxGPUTextures) {\n    SetMaxTextures(maxGPUTextures);\n  } else if (maxConfigTextures > 0 && maxConfigTextures < maxGPUTextures) {\n    maxGPUTextures = Math.max(8, maxConfigTextures);\n  }\n  const tempTextures = renderPass.tempTextures;\n  if (tempTextures.length) {\n    tempTextures.forEach((texture) => {\n      gl.deleteTexture(texture);\n    });\n  }\n  const index = [];\n  for (let texturesIndex = 0; texturesIndex < maxGPUTextures; texturesIndex++) {\n    const tempTexture = gl.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + texturesIndex);\n    gl.bindTexture(gl.TEXTURE_2D, tempTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0, 0, 255, 255]));\n    tempTextures[texturesIndex] = tempTexture;\n    index.push(texturesIndex);\n  }\n  renderPass.maxTextures = maxGPUTextures;\n  renderPass.textureIndex = index;\n  renderPass.currentActiveTexture = 1;\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetBatchSize() {\n  return ConfigStore.get(CONFIG_DEFAULTS.BATCH_SIZE);\n}\n", "import {gl} from \"../GL\";\nexport function DeleteGLBuffer(buffer) {\n  if (gl.isBuffer(buffer)) {\n    gl.deleteBuffer(buffer);\n  }\n}\n", "import {DeleteGLBuffer} from \"./DeleteGLBuffer\";\nimport {gl} from \"../GL\";\nexport class VertexBuffer {\n  constructor(config = {}) {\n    this.indexed = false;\n    this.isDynamic = false;\n    this.count = 0;\n    this.offset = 0;\n    const {\n      batchSize = 1,\n      dataSize = 4,\n      isDynamic = true,\n      elementsPerEntry = 4,\n      vertexElementSize = 6\n    } = config;\n    this.batchSize = batchSize;\n    this.dataSize = dataSize;\n    this.vertexElementSize = vertexElementSize;\n    this.isDynamic = isDynamic;\n    this.elementsPerEntry = elementsPerEntry;\n    this.vertexByteSize = vertexElementSize * dataSize;\n    this.entryByteSize = this.vertexByteSize * elementsPerEntry;\n    this.bufferByteSize = batchSize * this.entryByteSize;\n    this.create();\n  }\n  resize(batchSize) {\n    this.batchSize = batchSize;\n    this.bufferByteSize = batchSize * this.entryByteSize;\n    if (this.vertexBuffer) {\n      DeleteGLBuffer(this.vertexBuffer);\n    }\n    this.create();\n  }\n  create() {\n    const data = new ArrayBuffer(this.bufferByteSize);\n    this.data = data;\n    this.vertexViewF32 = new Float32Array(data);\n    this.vertexViewU32 = new Uint32Array(data);\n    this.vertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n    const type = this.isDynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n    gl.bufferData(gl.ARRAY_BUFFER, data, type);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  }\n  add(count) {\n    this.count += count;\n    this.offset += this.vertexElementSize * count;\n  }\n  reset() {\n    this.count = 0;\n    this.offset = 0;\n  }\n  canContain(count) {\n    return this.count + count <= this.batchSize;\n  }\n  free() {\n    return Math.max(0, 1 - this.count / this.batchSize);\n  }\n  bind() {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n  }\n  destroy() {\n    DeleteGLBuffer(this.vertexBuffer);\n    this.data = null;\n    this.vertexViewF32 = null;\n    this.vertexViewU32 = null;\n    this.vertexBuffer = null;\n  }\n}\n", "import {DeleteGLBuffer} from \"./DeleteGLBuffer\";\nimport {VertexBuffer} from \"./VertexBuffer\";\nimport {gl} from \"../GL\";\nexport class IndexedVertexBuffer extends VertexBuffer {\n  constructor(config = {}) {\n    super(config);\n    const {\n      indexSize = 4,\n      entryIndexSize = 6,\n      indexLayout = null\n    } = config;\n    this.indexed = true;\n    this.indexSize = indexSize;\n    this.entryIndexSize = entryIndexSize;\n    this.entryElementSize = this.vertexElementSize * this.elementsPerEntry;\n    const seededIndexBuffer = [];\n    if (indexLayout) {\n      this.indexLayout = indexLayout;\n      for (let i = 0; i < this.batchSize * indexSize; i += indexSize) {\n        for (let c = 0; c < indexLayout.length; c++) {\n          seededIndexBuffer.push(i + indexLayout[c]);\n        }\n      }\n    }\n    this.create();\n    this.createIndexBuffer(seededIndexBuffer);\n  }\n  createIndexBuffer(seededIndex) {\n    this.index = new Uint16Array(seededIndex);\n    this.indexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.index, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    seededIndex = [];\n  }\n  bind() {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n  }\n  destroy() {\n    super.destroy();\n    DeleteGLBuffer(this.indexBuffer);\n    this.index = null;\n    this.indexLayout = null;\n    this.indexBuffer = null;\n  }\n}\n", "import {gl} from \"../GL\";\nexport function CreateAttributes(program, config) {\n  const attributes = new Map();\n  const defaultSettings = {\n    size: 1,\n    type: gl.FLOAT,\n    normalized: false,\n    stride: 0,\n    offset: 0\n  };\n  const total = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < total; i++) {\n    const attrib = gl.getActiveAttrib(program, i);\n    if (!attrib) {\n      break;\n    }\n    const name = attrib.name;\n    const index = gl.getAttribLocation(program, name);\n    gl.enableVertexAttribArray(index);\n    const setting = config.hasOwnProperty(name) ? config[name] : {};\n    const {\n      size = defaultSettings.size,\n      type = defaultSettings.type,\n      normalized = defaultSettings.normalized,\n      stride = defaultSettings.stride,\n      offset = defaultSettings.offset\n    } = setting;\n    attributes.set(name, {index, size, type, normalized, stride, offset});\n  }\n  return attributes;\n}\n", "import {gl} from \"../GL\";\nexport function DeleteShaders(...shaders) {\n  shaders.forEach((shader) => {\n    gl.deleteShader(shader);\n  });\n}\n", "import {DeleteShaders} from \"./DeleteShaders\";\nimport {gl} from \"../GL\";\nexport function CreateProgram(...shaders) {\n  const program = gl.createProgram();\n  shaders.forEach((shader) => {\n    gl.attachShader(program, shader);\n  });\n  gl.linkProgram(program);\n  const status = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (!status) {\n    const info = gl.getProgramInfoLog(program);\n    console.error(`Error linking program: ${info}`);\n    gl.deleteProgram(program);\n    DeleteShaders(...shaders);\n    return null;\n  }\n  return program;\n}\n", "import {gl} from \"../GL\";\nexport function CreateShader(source, type) {\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (!status) {\n    const info = gl.getShaderInfoLog(shader);\n    const sourceLines = source.split(\"\\n\").map((line, index) => {\n      return `${index}: ${line}`;\n    });\n    console.error(`Error compiling shader: ${info}`, sourceLines.join(\"\\n\"));\n    gl.deleteShader(shader);\n    return null;\n  }\n  return shader;\n}\n", "import {gl} from \"../GL\";\nexport function CreateUniformSetter(uniform, location, isArray = false) {\n  switch (uniform.type) {\n    case gl.INT:\n    case gl.BOOL: {\n      if (isArray) {\n        return (v) => {\n          gl.uniform1iv(location, v);\n        };\n      } else {\n        return (v) => {\n          gl.uniform1i(location, v);\n        };\n      }\n    }\n    case gl.INT_VEC2:\n    case gl.BOOL_VEC2: {\n      return (v) => {\n        gl.uniform2iv(location, v);\n      };\n    }\n    case gl.INT_VEC3:\n    case gl.BOOL_VEC3: {\n      return (v) => {\n        gl.uniform3iv(location, v);\n      };\n    }\n    case gl.INT_VEC4:\n    case gl.BOOL_VEC4: {\n      return (v) => {\n        gl.uniform4iv(location, v);\n      };\n    }\n    case gl.FLOAT: {\n      if (isArray) {\n        return (v) => {\n          gl.uniform1fv(location, v);\n        };\n      } else {\n        return (v) => {\n          gl.uniform1f(location, v);\n        };\n      }\n    }\n    case gl.FLOAT_VEC2: {\n      return (v) => {\n        gl.uniform2fv(location, v);\n      };\n    }\n    case gl.FLOAT_VEC3: {\n      return (v) => {\n        gl.uniform3fv(location, v);\n      };\n    }\n    case gl.FLOAT_VEC4: {\n      return (v) => {\n        gl.uniform4fv(location, v);\n      };\n    }\n    case gl.FLOAT_MAT2: {\n      return (v) => {\n        gl.uniformMatrix2fv(location, false, v);\n      };\n    }\n    case gl.FLOAT_MAT3: {\n      return (v) => {\n        gl.uniformMatrix3fv(location, false, v);\n      };\n    }\n    case gl.FLOAT_MAT4: {\n      return (v) => {\n        gl.uniformMatrix4fv(location, false, v);\n      };\n    }\n    case gl.SAMPLER_2D:\n    case gl.SAMPLER_CUBE: {\n      if (uniform.size > 1) {\n        return (v) => {\n          gl.uniform1iv(location, v);\n        };\n      } else {\n        return (v) => {\n          gl.uniform1i(location, v);\n        };\n      }\n    }\n  }\n}\n", "import {CreateUniformSetter} from \"./CreateUniformSetter\";\nimport {gl} from \"../GL\";\nexport function CreateUniforms(program) {\n  const uniforms = new Map();\n  const total = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (let i = 0; i < total; i++) {\n    const uniform = gl.getActiveUniform(program, i);\n    let name = uniform.name;\n    if (name.startsWith(\"gl_\") || name.startsWith(\"webgl_\")) {\n      continue;\n    }\n    const location = gl.getUniformLocation(program, uniform.name);\n    if (location) {\n      let isArray = false;\n      if (name.substr(-3) === \"[0]\") {\n        name = name.substr(0, name.length - 3);\n        isArray = uniform.size > 1;\n      }\n      uniforms.set(name, CreateUniformSetter(uniform, location, isArray));\n    }\n  }\n  return uniforms;\n}\n", "const BYTE = 5120;\nconst UNSIGNED_BYTE = 5121;\nconst SHORT = 5122;\nconst UNSIGNED_SHORT = 5123;\nconst INT = 5124;\nconst UNSIGNED_INT = 5125;\nconst FLOAT = 5126;\nconst REPEAT = 10497;\nconst CLAMP_TO_EDGE = 33071;\nconst MIRRORED_REPEAT = 33648;\nconst NEAREST = 9728;\nconst LINEAR = 9729;\nconst NEAREST_MIPMAP_NEAREST = 9984;\nconst LINEAR_MIPMAP_NEAREST = 9985;\nconst NEAREST_MIPMAP_LINEAR = 9986;\nconst LINEAR_MIPMAP_LINEAR = 9987;\nexport {\n  BYTE,\n  UNSIGNED_BYTE,\n  SHORT,\n  UNSIGNED_SHORT,\n  INT,\n  UNSIGNED_INT,\n  FLOAT,\n  REPEAT,\n  CLAMP_TO_EDGE,\n  MIRRORED_REPEAT,\n  NEAREST,\n  LINEAR,\n  NEAREST_MIPMAP_NEAREST,\n  LINEAR_MIPMAP_NEAREST,\n  NEAREST_MIPMAP_LINEAR,\n  LINEAR_MIPMAP_LINEAR\n};\n", "import * as GL_CONST from \"../GL_CONST\";\nexport const DefaultQuadAttributes = {\n  aVertexPosition: {size: 2, type: GL_CONST.FLOAT, normalized: false, offset: 0},\n  aTextureCoord: {size: 2, type: GL_CONST.FLOAT, normalized: false, offset: 8},\n  aTextureId: {size: 1, type: GL_CONST.FLOAT, normalized: false, offset: 16},\n  aTintColor: {size: 4, type: GL_CONST.UNSIGNED_BYTE, normalized: true, offset: 20}\n};\n", "export const DefaultQuadUniforms = {\n  uProjectionMatrix: new Float32Array(),\n  uCameraMatrix: new Float32Array(),\n  uTexture: 0\n};\n", "import {gl} from \"../GL\";\nexport function CreateDepthBuffer(framebuffer, textureWidth, textureHeight) {\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  const depthBuffer = gl.createRenderbuffer();\n  gl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer);\n  gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, textureWidth, textureHeight);\n  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthBuffer);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  return depthBuffer;\n}\n", "import {gl} from \"../GL\";\nexport function CreateFramebuffer(texture, attachment) {\n  if (!attachment) {\n    attachment = gl.COLOR_ATTACHMENT0;\n  }\n  const framebuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture, 0);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  return framebuffer;\n}\n", "export const SINGLE_QUAD_FRAG = `#define SHADER_NAME SINGLE_QUAD_FRAG\n\nprecision highp float;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\n\nuniform sampler2D uTexture;\n\nvoid main (void)\n{\n    vec4 color = texture2D(uTexture, vTextureCoord);\n\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\n}`;\n", "export const SINGLE_QUAD_VERT = `#define SHADER_NAME SINGLE_QUAD_VERT\n\nprecision highp float;\n\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute float aTextureId;\nattribute vec4 aTintColor;\n\nuniform mat4 uProjectionMatrix;\nuniform mat4 uCameraMatrix;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\n\nvoid main (void)\n{\n    vTextureCoord = aTextureCoord;\n    vTextureId = aTextureId;\n    vTintColor = aTintColor;\n\n    gl_Position = uProjectionMatrix * uCameraMatrix * vec4(aVertexPosition, 0.0, 1.0);\n}`;\n", "export class Frame {\n  constructor(texture, key, x, y, width, height) {\n    this.trimmed = false;\n    this.texture = texture;\n    this.key = key;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.sourceSizeWidth = width;\n    this.sourceSizeHeight = height;\n    this.updateUVs();\n  }\n  setPivot(x, y) {\n    this.pivot = {x, y};\n  }\n  setSize(width, height) {\n    this.width = width;\n    this.height = height;\n    this.sourceSizeWidth = width;\n    this.sourceSizeHeight = height;\n    this.updateUVs();\n  }\n  setSourceSize(width, height) {\n    this.sourceSizeWidth = width;\n    this.sourceSizeHeight = height;\n  }\n  setTrim(width, height, x, y, w, h) {\n    this.trimmed = true;\n    this.sourceSizeWidth = width;\n    this.sourceSizeHeight = height;\n    this.spriteSourceSizeX = x;\n    this.spriteSourceSizeY = y;\n    this.spriteSourceSizeWidth = w;\n    this.spriteSourceSizeHeight = h;\n  }\n  getExtent(originX, originY) {\n    const sourceSizeWidth = this.sourceSizeWidth;\n    const sourceSizeHeight = this.sourceSizeHeight;\n    let left;\n    let right;\n    let top;\n    let bottom;\n    if (this.trimmed) {\n      left = this.spriteSourceSizeX - originX * sourceSizeWidth;\n      right = left + this.spriteSourceSizeWidth;\n      top = this.spriteSourceSizeY - originY * sourceSizeHeight;\n      bottom = top + this.spriteSourceSizeHeight;\n    } else {\n      left = -originX * sourceSizeWidth;\n      right = left + sourceSizeWidth;\n      top = -originY * sourceSizeHeight;\n      bottom = top + sourceSizeHeight;\n    }\n    return {left, right, top, bottom};\n  }\n  setExtent(child) {\n    const transform = child.transform;\n    const originX = transform.origin.x;\n    const originY = transform.origin.y;\n    const sourceSizeWidth = this.sourceSizeWidth;\n    const sourceSizeHeight = this.sourceSizeHeight;\n    let x;\n    let y;\n    let width;\n    let height;\n    if (this.trimmed) {\n      x = this.spriteSourceSizeX - originX * sourceSizeWidth;\n      y = this.spriteSourceSizeY - originY * sourceSizeHeight;\n      width = this.spriteSourceSizeWidth;\n      height = this.spriteSourceSizeHeight;\n    } else {\n      x = -originX * sourceSizeWidth;\n      y = -originY * sourceSizeHeight;\n      width = sourceSizeWidth;\n      height = sourceSizeHeight;\n    }\n    transform.setExtent(x, y, width, height);\n  }\n  updateUVs() {\n    const {x, y, width, height} = this;\n    const baseTextureWidth = this.texture.width;\n    const baseTextureHeight = this.texture.height;\n    this.u0 = x / baseTextureWidth;\n    this.v0 = y / baseTextureHeight;\n    this.u1 = (x + width) / baseTextureWidth;\n    this.v1 = (y + height) / baseTextureHeight;\n  }\n}\n", "import {BindingQueue} from \"../renderer/BindingQueue\";\nimport {Frame} from \"./Frame\";\nexport class Texture {\n  constructor(image, width, height, glConfig) {\n    this.key = \"\";\n    if (image) {\n      width = image.width;\n      height = image.height;\n    }\n    this.image = image;\n    this.width = width;\n    this.height = height;\n    this.frames = new Map();\n    this.data = {};\n    this.addFrame(\"__BASE\", 0, 0, width, height);\n    BindingQueue.add(this, glConfig);\n  }\n  addFrame(key, x, y, width, height) {\n    if (this.frames.has(key)) {\n      return null;\n    }\n    const frame = new Frame(this, key, x, y, width, height);\n    this.frames.set(key, frame);\n    if (!this.firstFrame || this.firstFrame.key === \"__BASE\") {\n      this.firstFrame = frame;\n    }\n    return frame;\n  }\n  getFrame(key) {\n    if (!key) {\n      return this.firstFrame;\n    }\n    if (key instanceof Frame) {\n      key = key.key;\n    }\n    let frame = this.frames.get(key);\n    if (!frame) {\n      console.warn(`Frame missing: ${key}`);\n      frame = this.firstFrame;\n    }\n    return frame;\n  }\n  setSize(width, height) {\n    this.width = width;\n    this.height = height;\n    const frame = this.frames.get(\"__BASE\");\n    frame.setSize(width, height);\n  }\n  destroy() {\n    if (this.binding) {\n      this.binding.destroy();\n    }\n    this.frames.clear();\n    this.data = null;\n    this.image = null;\n    this.firstFrame = null;\n  }\n}\n", "import {GetHeight, GetResolution, GetWidth} from \"../../../config/size/\";\nimport {CreateAttributes} from \"./CreateAttributes\";\nimport {CreateDepthBuffer} from \"../fbo/CreateDepthBuffer\";\nimport {CreateFramebuffer} from \"../fbo/CreateFramebuffer\";\nimport {CreateProgram} from \"./CreateProgram\";\nimport {CreateShader} from \"./CreateShader\";\nimport {CreateUniforms} from \"./CreateUniforms\";\nimport {DefaultQuadAttributes} from \"./DefaultQuadAttributes\";\nimport {DefaultQuadUniforms} from \"./DefaultQuadUniforms\";\nimport {DeleteFramebuffer} from \"../fbo/DeleteFramebuffer\";\nimport {DeleteGLTexture} from \"../textures/DeleteGLTexture\";\nimport {DeleteShaders} from \"./DeleteShaders\";\nimport {GLTextureBinding} from \"../textures/GLTextureBinding\";\nimport {SINGLE_QUAD_FRAG} from \"../glsl/SINGLE_QUAD_FRAG\";\nimport {SINGLE_QUAD_VERT} from \"../glsl/SINGLE_QUAD_VERT\";\nimport {Texture} from \"../../../textures/Texture\";\nimport {gl} from \"../GL\";\nexport class Shader {\n  constructor(config) {\n    this.renderToFramebuffer = false;\n    this.renderToDepthbuffer = false;\n    if (config) {\n      this.fromConfig(config);\n    }\n  }\n  fromConfig(config) {\n    const {\n      attributes = DefaultQuadAttributes,\n      fragmentShader = SINGLE_QUAD_FRAG,\n      height = GetHeight(),\n      renderToFramebuffer = false,\n      renderToDepthbuffer = false,\n      resolution = GetResolution(),\n      vertexShader = SINGLE_QUAD_VERT,\n      width = GetWidth(),\n      uniforms = DefaultQuadUniforms\n    } = config;\n    this.create(fragmentShader, vertexShader, uniforms, attributes);\n    if (renderToFramebuffer) {\n      this.renderToFramebuffer = true;\n      const texture = new Texture(null, width * resolution, height * resolution);\n      const binding = new GLTextureBinding(texture);\n      texture.binding = binding;\n      binding.framebuffer = CreateFramebuffer(binding.texture);\n      if (renderToDepthbuffer) {\n        this.renderToDepthbuffer = true;\n        binding.depthbuffer = CreateDepthBuffer(binding.framebuffer, texture.width, texture.height);\n      }\n      this.texture = texture;\n      this.framebuffer = binding.framebuffer;\n    }\n  }\n  create(fragmentShaderSource, vertexShaderSource, uniforms, attribs) {\n    const fragmentShader = CreateShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n    const vertexShader = CreateShader(vertexShaderSource, gl.VERTEX_SHADER);\n    if (!fragmentShader || !vertexShader) {\n      return;\n    }\n    const program = CreateProgram(fragmentShader, vertexShader);\n    if (!program) {\n      return;\n    }\n    const currentProgram = gl.getParameter(gl.CURRENT_PROGRAM);\n    gl.useProgram(program);\n    this.program = program;\n    this.uniformSetters = CreateUniforms(program);\n    this.uniforms = new Map();\n    for (const [key, value] of Object.entries(uniforms)) {\n      this.uniforms.set(key, value);\n    }\n    this.attributes = CreateAttributes(program, attribs);\n    gl.useProgram(currentProgram);\n  }\n  updateUniforms(renderPass) {\n  }\n  bind(renderPass) {\n    this.updateUniforms(renderPass);\n    return this.setUniforms(renderPass);\n  }\n  setUniform(key, value) {\n    const uniforms = this.uniforms;\n    if (uniforms.has(key)) {\n      uniforms.set(key, value);\n      const setter = this.uniformSetters.get(key);\n      setter(value);\n    }\n  }\n  setUniforms(renderPass) {\n    if (!this.program) {\n      return false;\n    }\n    gl.useProgram(this.program);\n    const uniforms = this.uniforms;\n    for (const [name, setter] of this.uniformSetters.entries()) {\n      setter(uniforms.get(name));\n    }\n    return true;\n  }\n  setAttributes(renderPass) {\n    if (this.program) {\n      const stride = renderPass.currentVertexBuffer.vertexByteSize;\n      this.attributes.forEach((attrib) => {\n        gl.vertexAttribPointer(attrib.index, attrib.size, attrib.type, attrib.normalized, stride, attrib.offset);\n      });\n    }\n  }\n  destroy() {\n    DeleteShaders(this.program);\n    DeleteGLTexture(this.texture);\n    DeleteFramebuffer(this.framebuffer);\n    this.uniforms.clear();\n    this.uniformSetters.clear();\n    this.attributes.clear();\n    this.program = null;\n    this.texture = null;\n    this.framebuffer = null;\n  }\n}\n", "import {DefaultQuadAttributes} from \"./DefaultQuadAttributes\";\nimport {Shader} from \"./Shader\";\nexport class QuadShader extends Shader {\n  constructor(config = {}) {\n    const shaderConfig = config;\n    shaderConfig.attributes = !shaderConfig.attributes ? DefaultQuadAttributes : shaderConfig.attributes;\n    super(shaderConfig);\n  }\n  bind(renderPass) {\n    const uniforms = this.uniforms;\n    uniforms.set(\"uProjectionMatrix\", renderPass.projectionMatrix.data);\n    uniforms.set(\"uCameraMatrix\", renderPass.cameraMatrix.data);\n    return super.bind(renderPass);\n  }\n}\n", "export const MULTI_QUAD_FRAG = `#define SHADER_NAME MULTI_QUAD_FRAG\n\nprecision highp float;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\n\nuniform sampler2D uTexture[%count%];\n\nvoid main (void)\n{\n    vec4 color;\n\n    %forloop%\n\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\n}`;\n", "import {GetMaxTextures} from \"../../../config/maxtextures/GetMaxTextures\";\nimport {MULTI_QUAD_FRAG} from \"../glsl/MULTI_QUAD_FRAG\";\nimport {QuadShader} from \"./QuadShader\";\nexport class MultiTextureQuadShader extends QuadShader {\n  constructor(config = {}) {\n    if (!config.fragmentShader) {\n      config.fragmentShader = MULTI_QUAD_FRAG;\n    }\n    super(config);\n  }\n  create(fragmentShaderSource, vertexShaderSource, uniforms, attribs) {\n    const maxTextures = GetMaxTextures();\n    let src = \"\";\n    for (let i = 1; i < maxTextures; i++) {\n      if (i > 1) {\n        src += \"\\n\telse \";\n      }\n      if (i < maxTextures - 1) {\n        src += `if (vTextureId < ${i}.5)`;\n      }\n      src += \"\\n\t{\";\n      src += `\n\t\tcolor = texture2D(uTexture[${i}], vTextureCoord);`;\n      src += \"\\n\t}\";\n    }\n    fragmentShaderSource = fragmentShaderSource.replace(/%count%/gi, `${maxTextures}`);\n    fragmentShaderSource = fragmentShaderSource.replace(/%forloop%/gi, src);\n    super.create(fragmentShaderSource, vertexShaderSource, uniforms, attribs);\n  }\n  bind(renderPass) {\n    this.uniforms.set(\"uTexture\", renderPass.textureIndex);\n    return super.bind(renderPass);\n  }\n}\n", "export function SetDefaultBlendMode(renderPass, enable, sfactor, dfactor) {\n  const entry = {enable, sfactor, dfactor};\n  renderPass.blendModeStack[0] = entry;\n  renderPass.currentBlendMode = entry;\n  renderPass.defaultBlendMode = entry;\n}\n", "export function SetDefaultFramebuffer(renderPass, framebuffer = null, viewport) {\n  const entry = {framebuffer, viewport};\n  renderPass.framebufferStack[0] = entry;\n  renderPass.currentFramebuffer = entry;\n  renderPass.defaultFramebuffer = entry;\n}\n", "export function SetDefaultShader(renderPass, shader, textureID) {\n  const entry = {shader, textureID};\n  renderPass.shaderStack[0] = entry;\n  renderPass.currentShader = entry;\n  renderPass.defaultShader = entry;\n}\n", "export function SetDefaultVertexBuffer(renderPass, buffer) {\n  renderPass.vertexBufferStack[0] = buffer;\n  renderPass.currentVertexBuffer = buffer;\n  renderPass.defaultVertexBuffer = buffer;\n}\n", "import {Rectangle} from \"../../../geom/rectangle/Rectangle\";\nexport function SetDefaultViewport(renderPass, x = 0, y = 0, width = 0, height = 0) {\n  const entry = new Rectangle(x, y, width, height);\n  renderPass.viewportStack[0] = entry;\n  renderPass.currentViewport = entry;\n  renderPass.defaultViewport = entry;\n}\n", "import {CreateTempTextures} from \"./CreateTempTextures\";\nimport {GetBatchSize} from \"../../../config/batchsize/GetBatchSize\";\nimport {IndexedVertexBuffer} from \"../buffers/IndexedVertexBuffer\";\nimport {Mat4Ortho} from \"../../../math/mat4/Mat4Ortho\";\nimport {Matrix4} from \"../../../math/mat4/Matrix4\";\nimport {MultiTextureQuadShader} from \"../shaders\";\nimport {QuadShader} from \"../shaders/QuadShader\";\nimport {SetDefaultBlendMode} from \"./SetDefaultBlendMode\";\nimport {SetDefaultFramebuffer} from \"./SetDefaultFramebuffer\";\nimport {SetDefaultShader} from \"./SetDefaultShader\";\nimport {SetDefaultVertexBuffer} from \"./SetDefaultVertexBuffer\";\nimport {SetDefaultViewport} from \"./SetDefaultViewport\";\nimport {StaticCamera} from \"../../../camera\";\nexport class RenderPass {\n  constructor(renderer) {\n    this.count = 0;\n    this.prevCount = 0;\n    this.flushTotal = 0;\n    this.maxTextures = 0;\n    this.currentActiveTexture = 0;\n    this.startActiveTexture = 0;\n    this.tempTextures = [];\n    this.textureIndex = [];\n    this.framebufferStack = [];\n    this.currentFramebuffer = null;\n    this.defaultFramebuffer = null;\n    this.vertexBufferStack = [];\n    this.currentVertexBuffer = null;\n    this.defaultVertexBuffer = null;\n    this.shaderStack = [];\n    this.currentShader = null;\n    this.defaultShader = null;\n    this.viewportStack = [];\n    this.currentViewport = null;\n    this.defaultViewport = null;\n    this.blendModeStack = [];\n    this.currentBlendMode = null;\n    this.defaultBlendMode = null;\n    this.renderer = renderer;\n    this.projectionMatrix = new Matrix4();\n    this.reset();\n  }\n  reset() {\n    const gl = this.renderer.gl;\n    const indexLayout = [0, 1, 2, 2, 3, 0];\n    this.quadShader = new QuadShader();\n    this.quadBuffer = new IndexedVertexBuffer({isDynamic: false, indexLayout});\n    this.quadCamera = new StaticCamera();\n    CreateTempTextures(this);\n    SetDefaultFramebuffer(this);\n    SetDefaultBlendMode(this, true, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    SetDefaultVertexBuffer(this, new IndexedVertexBuffer({batchSize: GetBatchSize(), indexLayout}));\n    SetDefaultShader(this, new MultiTextureQuadShader());\n  }\n  resize(width, height) {\n    Mat4Ortho(0, width, height, 0, -1e3, 1e3, this.projectionMatrix);\n    this.quadCamera.reset();\n    SetDefaultViewport(this, 0, 0, width, height);\n  }\n}\n", "export function AddShader(renderPass, shader, textureID) {\n  const stackEntry = {shader, textureID};\n  renderPass.shaderStack.push(stackEntry);\n  return stackEntry;\n}\n", "export function AddVertexBuffer(renderPass, buffer) {\n  renderPass.vertexBufferStack.push(buffer);\n  return buffer;\n}\n", "export function BindShader(renderPass, entry) {\n  if (!entry) {\n    entry = renderPass.currentShader;\n  }\n  const success = entry.shader.bind(renderPass, entry.textureID);\n  if (success) {\n    entry.shader.setAttributes(renderPass);\n  }\n}\n", "import {BindShader} from \"./BindShader\";\nexport function Begin(renderPass, camera2D) {\n  renderPass.current2DCamera = camera2D;\n  renderPass.cameraMatrix = camera2D.matrix;\n  BindShader(renderPass);\n}\n", "import {gl} from \"../GL\";\nexport function BindBlendMode(renderPass, entry) {\n  if (!entry) {\n    entry = renderPass.currentBlendMode;\n  }\n  if (entry.enable) {\n    gl.enable(gl.BLEND);\n    gl.blendFunc(entry.sfactor, entry.dfactor);\n  } else {\n    gl.disable(gl.BLEND);\n  }\n}\n", "import {gl} from \"../GL\";\nexport function BindTexture(texture, index = 0) {\n  const binding = texture.binding;\n  binding.setIndex(index);\n  gl.activeTexture(gl.TEXTURE0 + index);\n  gl.bindTexture(gl.TEXTURE_2D, binding.texture);\n}\n", "import {gl} from \"../GL\";\nexport function BindVertexBuffer(renderPass, buffer) {\n  if (!buffer) {\n    buffer = renderPass.currentVertexBuffer;\n  }\n  const indexBuffer = buffer.indexed ? buffer.indexBuffer : null;\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer.vertexBuffer);\n}\n", "import {BindVertexBuffer} from \"./BindVertexBuffer\";\nexport function PopVertexBuffer(renderPass) {\n  const stack = renderPass.vertexBufferStack;\n  if (stack.length > 1) {\n    stack.pop();\n  }\n  renderPass.currentVertexBuffer = stack[stack.length - 1];\n  BindVertexBuffer(renderPass);\n}\n", "import {AddVertexBuffer} from \"./AddVertexBuffer\";\nimport {BindVertexBuffer} from \"./BindVertexBuffer\";\nexport function SetVertexBuffer(renderPass, buffer) {\n  const entry = AddVertexBuffer(renderPass, buffer);\n  BindVertexBuffer(renderPass, entry);\n  renderPass.currentVertexBuffer = entry;\n}\n", "import {Flush} from \"./Flush\";\nexport function GetVertexBufferEntry(renderPass, addToCount = 0) {\n  const buffer = renderPass.currentVertexBuffer;\n  if (renderPass.count + addToCount >= buffer.batchSize) {\n    Flush(renderPass);\n  }\n  const offset = buffer.indexed ? renderPass.count * buffer.entryElementSize : renderPass.count * buffer.vertexElementSize;\n  renderPass.count += addToCount;\n  return {\n    buffer,\n    F32: buffer.vertexViewF32,\n    U32: buffer.vertexViewU32,\n    offset\n  };\n}\n", "import {BindShader} from \"./BindShader\";\nexport function PopShader(renderPass) {\n  const stack = renderPass.shaderStack;\n  if (stack.length > 1) {\n    stack.pop();\n  }\n  renderPass.currentShader = stack[stack.length - 1];\n  BindShader(renderPass);\n}\n", "import {AddShader} from \"./AddShader\";\nimport {BindShader} from \"./BindShader\";\nexport function SetShader(renderPass, shader, textureID) {\n  const entry = AddShader(renderPass, shader, textureID);\n  BindShader(renderPass, entry);\n  renderPass.currentShader = entry;\n}\n", "import {Flush} from \"./Flush\";\nimport {gl} from \"../GL\";\nexport function SetTexture(renderPass, texture) {\n  const binding = texture.binding;\n  const currentActiveTexture = renderPass.currentActiveTexture;\n  if (binding.indexCounter < renderPass.startActiveTexture) {\n    binding.indexCounter = renderPass.startActiveTexture;\n    if (currentActiveTexture < renderPass.maxTextures) {\n      binding.setIndex(currentActiveTexture);\n      gl.activeTexture(gl.TEXTURE0 + currentActiveTexture);\n      gl.bindTexture(gl.TEXTURE_2D, binding.texture);\n      renderPass.currentActiveTexture++;\n    } else {\n      Flush(renderPass);\n      renderPass.startActiveTexture++;\n      binding.indexCounter = renderPass.startActiveTexture;\n      binding.setIndex(1);\n      gl.activeTexture(gl.TEXTURE1);\n      gl.bindTexture(gl.TEXTURE_2D, binding.texture);\n      renderPass.currentActiveTexture = 2;\n    }\n  }\n  return binding.index;\n}\n", "import {BindBlendMode} from \"./BindBlendMode\";\nimport {BindFramebuffer} from \"./BindFramebuffer\";\nimport {BindVertexBuffer} from \"./BindVertexBuffer\";\nimport {BindViewport} from \"./BindViewport\";\nexport function Start(renderPass) {\n  renderPass.current2DCamera = renderPass.quadCamera;\n  renderPass.cameraMatrix = renderPass.quadCamera.matrix;\n  renderPass.count = 0;\n  renderPass.flushTotal = 0;\n  BindFramebuffer(renderPass, false, renderPass.defaultFramebuffer);\n  BindBlendMode(renderPass, renderPass.defaultBlendMode);\n  BindViewport(renderPass, renderPass.defaultViewport);\n  BindVertexBuffer(renderPass, renderPass.defaultVertexBuffer);\n}\n", "import {gl} from \"../GL\";\nexport function UnbindTexture(renderPass, index = 0) {\n  gl.activeTexture(gl.TEXTURE0 + index);\n  gl.bindTexture(gl.TEXTURE_2D, renderPass.tempTextures[index]);\n  if (index > 0) {\n    renderPass.startActiveTexture++;\n  }\n}\n", "export let instance;\nexport const WebGLRendererInstance = {\n  get: () => {\n    return instance;\n  },\n  set: (renderer) => {\n    instance = renderer;\n  }\n};\n", "import {GetHeight, GetResolution, GetWidth} from \"../../config/size/\";\nimport {End} from \"./renderpass/End\";\nimport {GL} from \"./GL\";\nimport {GetBackgroundColor} from \"../../config/backgroundcolor/GetBackgroundColor\";\nimport {GetRGBArray} from \"./colors/GetRGBArray\";\nimport {GetWebGLContext} from \"../../config/webglcontext/GetWebGLContext\";\nimport {ProcessBindingQueue} from \"./renderpass/ProcessBindingQueue\";\nimport {RenderPass} from \"./renderpass/RenderPass\";\nimport {Start} from \"./renderpass\";\nimport {WebGLRendererInstance} from \"./WebGLRendererInstance\";\nexport class WebGLRenderer {\n  constructor() {\n    this.clearColor = [0, 0, 0, 1];\n    this.clearBeforeRender = true;\n    this.optimizeRedraw = false;\n    this.autoResize = true;\n    this.contextLost = false;\n    this.width = GetWidth();\n    this.height = GetHeight();\n    this.resolution = GetResolution();\n    this.setBackgroundColor(GetBackgroundColor());\n    const canvas = document.createElement(\"canvas\");\n    canvas.addEventListener(\"webglcontextlost\", (event) => this.onContextLost(event), false);\n    canvas.addEventListener(\"webglcontextrestored\", () => this.onContextRestored(), false);\n    this.canvas = canvas;\n    this.initContext();\n    WebGLRendererInstance.set(this);\n    this.renderPass = new RenderPass(this);\n    this.resize(this.width, this.height, this.resolution);\n  }\n  initContext() {\n    const gl = this.canvas.getContext(\"webgl\", GetWebGLContext());\n    GL.set(gl);\n    this.gl = gl;\n    gl.disable(gl.DEPTH_TEST);\n    gl.disable(gl.CULL_FACE);\n  }\n  resize(width, height, resolution = 1) {\n    const calcWidth = width * resolution;\n    const calcHeight = height * resolution;\n    this.width = calcWidth;\n    this.height = calcHeight;\n    this.resolution = resolution;\n    const canvas = this.canvas;\n    canvas.width = calcWidth;\n    canvas.height = calcHeight;\n    if (this.autoResize) {\n      canvas.style.width = width.toString() + \"px\";\n      canvas.style.height = height.toString() + \"px\";\n    }\n    this.renderPass.resize(calcWidth, calcHeight);\n  }\n  onContextLost(event) {\n    event.preventDefault();\n    this.contextLost = true;\n  }\n  onContextRestored() {\n    this.contextLost = false;\n    this.initContext();\n  }\n  setBackgroundColor(color) {\n    GetRGBArray(color, this.clearColor);\n    return this;\n  }\n  reset() {\n  }\n  render(renderData) {\n    if (this.contextLost) {\n      return;\n    }\n    const gl = this.gl;\n    const renderPass = this.renderPass;\n    ProcessBindingQueue();\n    if (this.optimizeRedraw && renderData.numDirtyFrames === 0 && renderData.numDirtyCameras === 0) {\n      return;\n    }\n    if (this.clearBeforeRender) {\n      const cls = this.clearColor;\n      gl.clearColor(cls[0], cls[1], cls[2], cls[3]);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    const worlds = renderData.worldData;\n    Start(renderPass);\n    for (let i = 0; i < worlds.length; i++) {\n      const {world} = worlds[i];\n      world.renderGL(renderPass);\n      world.postRenderGL(renderPass);\n    }\n    End(renderPass);\n  }\n  destroy() {\n    WebGLRendererInstance.set(void 0);\n  }\n}\n", "import {SetRenderer} from \"../renderer/SetRenderer\";\nimport {WebGLRenderer} from \"../../renderer/webgl1/WebGLRenderer\";\nexport function WebGL() {\n  return () => {\n    SetRenderer(WebGLRenderer);\n  };\n}\n", "import {GetElement} from \"./GetElement\";\nexport function AddToDOM(element, parent) {\n  const target = GetElement(parent);\n  target.appendChild(element);\n  return element;\n}\n", "export function DOMContentLoaded(callback) {\n  const readyState = document.readyState;\n  if (readyState === \"complete\" || readyState === \"interactive\") {\n    callback();\n    return;\n  }\n  const check = () => {\n    document.removeEventListener(\"deviceready\", check, true);\n    document.removeEventListener(\"DOMContentLoaded\", check, true);\n    window.removeEventListener(\"load\", check, true);\n    callback();\n  };\n  if (!document.body) {\n    window.setTimeout(check, 20);\n  } else if (window.hasOwnProperty(\"cordova\")) {\n    document.addEventListener(\"deviceready\", check, true);\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", check, true);\n    window.addEventListener(\"load\", check, true);\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function ParseXML(data) {\n  let xml;\n  try {\n    const parser = new DOMParser();\n    xml = parser.parseFromString(data, \"text/xml\");\n    if (!xml || !xml.documentElement || xml.getElementsByTagName(\"parsererror\").length) {\n      return null;\n    } else {\n      return xml;\n    }\n  } catch (error) {\n    return null;\n  }\n}\n", "import {AddChild} from \"./AddChild\";\nimport {AddChildAt} from \"./AddChildAt\";\nimport {AddChildren} from \"./AddChildren\";\nimport {AddChildrenAt} from \"./AddChildrenAt\";\nimport {AddPosition} from \"./AddPosition\";\nimport {AddRotation} from \"./AddRotation\";\nimport {AddScale} from \"./AddScale\";\nimport {AddSkew} from \"./AddSkew\";\nimport {BringChildToTop} from \"./BringChildToTop\";\nimport {ConsoleTreeChildren} from \"./ConsoleTreeChildren\";\nimport {CountMatchingChildren} from \"./CountMatchingChildren\";\nimport {DepthFirstSearch} from \"./DepthFirstSearch\";\nimport {DepthFirstSearchRecursive} from \"./DepthFirstSearchRecursive\";\nimport {DepthFirstSearchRecursiveNested} from \"./DepthFirstSearchRecursiveNested\";\nimport {DestroyChildren} from \"./DestroyChildren\";\nimport {FindChildByName} from \"./FindChildByName\";\nimport {FindChildrenByName} from \"./FindChildrenByName\";\nimport {GetAllChildren} from \"./GetAllChildren\";\nimport {GetChildAt} from \"./GetChildAt\";\nimport {GetChildIndex} from \"./GetChildIndex\";\nimport {GetChildren} from \"./GetChildren\";\nimport {GetClosestChild} from \"./GetClosestChild\";\nimport {GetFirstChild} from \"./GetFirstChild\";\nimport {GetFurthestChild} from \"./GetFurthestChild\";\nimport {GetLastChild} from \"./GetLastChild\";\nimport {GetParents} from \"./GetParents\";\nimport {GetRandomChild} from \"./GetRandomChild\";\nimport {MoveChildDown} from \"./MoveChildDown\";\nimport {MoveChildTo} from \"./MoveChildTo\";\nimport {MoveChildUp} from \"./MoveChildUp\";\nimport {Overlap} from \"./Overlap\";\nimport {RemoveChild} from \"./RemoveChild\";\nimport {RemoveChildAt} from \"./RemoveChildAt\";\nimport {RemoveChildren} from \"./RemoveChildren\";\nimport {RemoveChildrenAt} from \"./RemoveChildrenAt\";\nimport {RemoveChildrenBetween} from \"./RemoveChildrenBetween\";\nimport {ReparentChildren} from \"./ReparentChildren\";\nimport {RotateChildrenLeft} from \"./RotateChildrenLeft\";\nimport {RotateChildrenRight} from \"./RotateChildrenRight\";\nimport {SendChildToBack} from \"./SendChildToBack\";\nimport {SetBounds} from \"./SetBounds\";\nimport {SetChildrenValue} from \"./SetChildrenValue\";\nimport {SetName} from \"./SetName\";\nimport {SetOrigin} from \"./SetOrigin\";\nimport {SetParent} from \"./SetParent\";\nimport {SetPosition} from \"./SetPosition\";\nimport {SetRotation} from \"./SetRotation\";\nimport {SetScale} from \"./SetScale\";\nimport {SetSize} from \"./SetSize\";\nimport {SetSkew} from \"./SetSkew\";\nimport {SetType} from \"./SetType\";\nimport {SetValue} from \"./SetValue\";\nimport {SetVisible} from \"./SetVisible\";\nimport {SetWorld} from \"./SetWorld\";\nimport {ShuffleChildren} from \"./ShuffleChildren\";\nimport {SwapChildren} from \"./SwapChildren\";\nexport {\n  AddChild,\n  AddChildAt,\n  AddChildren,\n  AddChildrenAt,\n  AddPosition,\n  AddRotation,\n  AddScale,\n  AddSkew,\n  BringChildToTop,\n  ConsoleTreeChildren,\n  CountMatchingChildren,\n  DepthFirstSearch,\n  DepthFirstSearchRecursive,\n  DepthFirstSearchRecursiveNested,\n  DestroyChildren,\n  FindChildByName,\n  FindChildrenByName,\n  GetAllChildren,\n  GetChildAt,\n  GetChildIndex,\n  GetChildren,\n  GetClosestChild,\n  GetFirstChild,\n  GetFurthestChild,\n  GetLastChild,\n  GetParents,\n  GetRandomChild,\n  MoveChildDown,\n  MoveChildTo,\n  MoveChildUp,\n  Overlap,\n  RemoveChild,\n  RemoveChildAt,\n  RemoveChildren,\n  RemoveChildrenAt,\n  RemoveChildrenBetween,\n  ReparentChildren,\n  RotateChildrenLeft,\n  RotateChildrenRight,\n  SendChildToBack,\n  SetBounds,\n  SetChildrenValue,\n  SetName,\n  SetOrigin,\n  SetParent,\n  SetPosition,\n  SetRotation,\n  SetScale,\n  SetSize,\n  SetSkew,\n  SetType,\n  SetValue,\n  SetVisible,\n  SetWorld,\n  ShuffleChildren,\n  SwapChildren\n};\n", "export function DepthFirstSearch(parent) {\n  const stack = [parent];\n  const output = [];\n  while (stack.length > 0) {\n    const node = stack.shift();\n    output.push(node);\n    const numChildren = node.numChildren;\n    if (numChildren > 0) {\n      for (let i = numChildren - 1; i >= 0; i--) {\n        stack.unshift(node.children[i]);\n      }\n    }\n  }\n  output.shift();\n  return output;\n}\n", "export function GetChildIndex(parent, child) {\n  return parent.children.indexOf(child);\n}\n", "export function RemoveChildAt(parent, index) {\n  const children = parent.children;\n  let child;\n  if (index >= 0 && index < children.length) {\n    const removed = children.splice(index, 1);\n    if (removed[0]) {\n      child = removed[0];\n      child.parent = null;\n    }\n  }\n  return child;\n}\n", "import {GetChildIndex} from \"./GetChildIndex\";\nimport {RemoveChildAt} from \"./RemoveChildAt\";\nexport function RemoveChild(parent, child) {\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex > -1) {\n    RemoveChildAt(parent, currentIndex);\n  }\n  return child;\n}\n", "export const AddedToWorldEvent = \"addedtoworld\";\n", "export const DestroyEvent = \"destroy\";\n", "export const PostUpdateEvent = \"postupdate\";\n", "export const RemovedFromWorldEvent = \"removedfromworld\";\n", "export const UpdateEvent = \"update\";\n", "export function Emit(emitter, event, ...args) {\n  if (emitter.events.size === 0 || !emitter.events.has(event)) {\n    return false;\n  }\n  const listeners = emitter.events.get(event);\n  for (const ee of listeners) {\n    ee.callback.apply(ee.context, args);\n    if (ee.once) {\n      listeners.delete(ee);\n    }\n  }\n  if (listeners.size === 0) {\n    emitter.events.delete(event);\n  }\n  return true;\n}\n", "import {AddedToWorldEvent, RemovedFromWorldEvent} from \"../gameobjects/events\";\nimport {Emit} from \"../events/Emit\";\nexport function SetWorld(world, ...children) {\n  children.forEach((child) => {\n    if (child.world) {\n      Emit(child.world, RemovedFromWorldEvent, child, child.world);\n      Emit(child, RemovedFromWorldEvent, child, child.world);\n    }\n    child.world = world;\n    Emit(world, AddedToWorldEvent, child, world);\n    Emit(child, AddedToWorldEvent, child, world);\n  });\n  return children;\n}\n", "import {DepthFirstSearch} from \"./DepthFirstSearch\";\nimport {RemoveChild} from \"./RemoveChild\";\nimport {SetWorld} from \"./SetWorld\";\nexport function SetParent(parent, ...children) {\n  children.forEach((child) => {\n    if (child.parent) {\n      RemoveChild(child.parent, child);\n    }\n    child.parent = parent;\n  });\n  const parentWorld = parent.world;\n  if (parentWorld) {\n    SetWorld(parentWorld, ...DepthFirstSearch(parent));\n  }\n  return children;\n}\n", "import {SetParent} from \"./SetParent\";\nexport function AddChild(parent, child) {\n  parent.children.push(child);\n  SetParent(parent, child);\n  child.transform.updateWorld();\n  return child;\n}\n", "import {SetParent} from \"./SetParent\";\nexport function AddChildAt(parent, index, child) {\n  const children = parent.children;\n  if (index >= 0 && index <= children.length) {\n    SetParent(parent, child);\n    children.splice(index, 0, child);\n    child.transform.updateWorld();\n  }\n  return child;\n}\n", "import {AddChild} from \"./AddChild\";\nexport function AddChildren(parent, ...children) {\n  children.forEach((child) => {\n    AddChild(parent, child);\n  });\n  return children;\n}\n", "import {SetParent} from \"./SetParent\";\nexport function AddChildrenAt(parent, index, ...children) {\n  const parentChildren = parent.children;\n  if (index >= 0 && index <= parentChildren.length) {\n    children.reverse().forEach((child) => {\n      children.splice(index, 0, child);\n      SetParent(parent, child);\n      child.transform.updateWorld();\n    });\n  }\n  return children;\n}\n", "export function AddPosition(x, y, ...children) {\n  children.forEach((child) => {\n    child.x += x;\n    child.y += y;\n  });\n  return children;\n}\n", "export function AddRotation(rotation, ...children) {\n  children.forEach((child) => {\n    child.rotation += rotation;\n  });\n  return children;\n}\n", "export function AddScale(scaleX, scaleY, ...children) {\n  children.forEach((child) => {\n    child.scaleX += scaleX;\n    child.scaleY += scaleY;\n  });\n  return children;\n}\n", "export function AddSkew(skewX, skewY, ...children) {\n  children.forEach((child) => {\n    child.skewX += skewX;\n    child.skewY += skewY;\n  });\n  return children;\n}\n", "export const DIRTY_CONST = {\n  CLEAR: 0,\n  TRANSFORM: 1,\n  UPDATE: 2,\n  CHILD_CACHE: 4,\n  POST_RENDER: 8,\n  COLORS: 16,\n  BOUNDS: 32,\n  TEXTURE: 64,\n  FRAME: 128,\n  ALPHA: 256,\n  CHILD: 512,\n  DEFAULT: 1 + 2 + 16 + 32,\n  USER1: 536870912,\n  USER2: 1073741824,\n  USER3: 2147483648,\n  USER4: 4294967296\n};\n", "import {DIRTY_CONST} from \"../gameobjects/DIRTY_CONST\";\nimport {GetChildIndex} from \"./GetChildIndex\";\nexport function BringChildToTop(parent, child) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex !== -1 && currentIndex < parentChildren.length) {\n    parentChildren.splice(currentIndex, 1);\n    parentChildren.push(child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n", "export function DepthFirstSearchRecursiveNested(parent, output = []) {\n  for (let i = 0; i < parent.numChildren; i++) {\n    const node = parent.children[i];\n    const children = [];\n    output.push({node, children});\n    if (node.numChildren > 0) {\n      DepthFirstSearchRecursiveNested(node, children);\n    }\n  }\n  return output;\n}\n", "import {DepthFirstSearchRecursiveNested} from \"./DepthFirstSearchRecursiveNested\";\nfunction GetInfo(entry) {\n  const legend = entry.numChildren > 0 ? \"Parent\" : \"Child\";\n  return `${legend} [ type=${entry.type}, name=${entry.name} ]`;\n}\nfunction LogChildren(entry) {\n  console.group(GetInfo(entry.node));\n  entry.children.forEach((child) => {\n    if (child.children.length > 0) {\n      LogChildren(child);\n    } else {\n      console.log(GetInfo(child.node));\n    }\n  });\n  console.groupEnd();\n}\nexport function ConsoleTreeChildren(parent) {\n  const entries = DepthFirstSearchRecursiveNested(parent);\n  if (parent.world === parent) {\n    console.group(\"World\");\n  } else {\n    console.group(GetInfo(parent));\n  }\n  entries.forEach((entry) => {\n    if (entry.children.length) {\n      LogChildren(entry);\n    } else {\n      console.log(GetInfo(entry.node));\n    }\n  });\n  console.groupEnd();\n}\n", "export function CountMatchingChildren(parent, property, value) {\n  const children = parent.children;\n  let total = 0;\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      total++;\n    }\n  });\n  return total;\n}\n", "export function DepthFirstSearchRecursive(parent, output = []) {\n  for (let i = 0; i < parent.numChildren; i++) {\n    const child = parent.children[i];\n    output.push(child);\n    if (child.numChildren > 0) {\n      DepthFirstSearchRecursive(child, output);\n    }\n  }\n  return output;\n}\n", "export function RemoveChildrenBetween(parent, beginIndex = 0, endIndex) {\n  const children = parent.children;\n  if (endIndex === void 0) {\n    endIndex = children.length;\n  }\n  const range = endIndex - beginIndex;\n  if (range > 0 && range <= endIndex) {\n    const removed = children.splice(beginIndex, range);\n    removed.forEach((child) => {\n      child.parent = null;\n    });\n    return removed;\n  } else {\n    return [];\n  }\n}\n", "import {RemoveChildrenBetween} from \"./RemoveChildrenBetween\";\nexport function DestroyChildren(parent, beginIndex = 0, endIndex) {\n  const removed = RemoveChildrenBetween(parent, beginIndex, endIndex);\n  removed.forEach((child) => {\n    child.destroy();\n  });\n}\n", "import {DepthFirstSearch} from \"./DepthFirstSearch\";\nexport function FindChildByName(parent, searchString) {\n  const children = DepthFirstSearch(parent);\n  const regex = RegExp(searchString);\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (regex.test(child.name)) {\n      return child;\n    }\n  }\n}\n", "import {DepthFirstSearch} from \"./DepthFirstSearch\";\nexport function FindChildrenByName(parent, searchString) {\n  const children = DepthFirstSearch(parent);\n  const regex = RegExp(searchString);\n  const results = [];\n  children.forEach((child) => {\n    if (regex.test(child.name)) {\n      results.push(child);\n    }\n  });\n  return results;\n}\n", "import {DepthFirstSearch} from \"./DepthFirstSearch\";\nexport function GetAllChildren(parent, property, value) {\n  const children = DepthFirstSearch(parent);\n  if (!property) {\n    return children;\n  }\n  const results = [];\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      results.push(child);\n    }\n  });\n  return results;\n}\n", "export function GetChildAt(parent, index) {\n  const children = parent.children;\n  if (index < 0 || index > children.length) {\n    throw new Error(`Index out of bounds: ${index}`);\n  }\n  return children[index];\n}\n", "export function GetChildren(parent, property, value) {\n  const children = parent.children;\n  if (!property) {\n    return [...children];\n  }\n  const results = [];\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      results.push(child);\n    }\n  });\n  return results;\n}\n", "import {GetVec2Distance} from \"../math/vec2/GetVec2Distance\";\nexport function GetClosestChild(parent, point) {\n  const children = parent.children;\n  let closest = null;\n  let distance = 0;\n  children.forEach((child) => {\n    const childDistance = GetVec2Distance(point, child.transform.position);\n    if (!closest || childDistance < distance) {\n      closest = child;\n      distance = childDistance;\n    }\n  });\n  return closest;\n}\n", "export function GetFirstChild(parent, property, value) {\n  const children = parent.children;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      return child;\n    }\n  }\n}\n", "import {GetVec2Distance} from \"../math/vec2/GetVec2Distance\";\nexport function GetFurthestChild(parent, point) {\n  const children = parent.children;\n  let furthest = null;\n  let distance = 0;\n  children.forEach((child) => {\n    const childDistance = GetVec2Distance(point, child.transform.position);\n    if (!furthest || childDistance > distance) {\n      furthest = child;\n      distance = childDistance;\n    }\n  });\n  return furthest;\n}\n", "export function GetLastChild(parent, property, value) {\n  const children = parent.children;\n  for (let i = children.length - 1; i >= 0; i--) {\n    const child = children[i];\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      return child;\n    }\n  }\n}\n", "export function GetParents(child) {\n  const parents = [];\n  while (child.parent) {\n    parents.push(child.parent);\n    child = child.parent;\n  }\n  return parents;\n}\n", "export function GetRandomChild(parent, startIndex = 0, length) {\n  const children = parent.children;\n  if (!length) {\n    length = children.length;\n  }\n  const randomIndex = startIndex + Math.floor(Math.random() * length);\n  return children[randomIndex];\n}\n", "import {DIRTY_CONST} from \"../gameobjects/DIRTY_CONST\";\nimport {GetChildIndex} from \"./GetChildIndex\";\nexport function MoveChildDown(parent, child) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex > 0) {\n    const child2 = parentChildren[currentIndex - 1];\n    const index2 = parentChildren.indexOf(child2);\n    parentChildren[currentIndex] = child2;\n    parentChildren[index2] = child;\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n    child2.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n", "import {DIRTY_CONST} from \"../gameobjects/DIRTY_CONST\";\nimport {GetChildIndex} from \"./GetChildIndex\";\nexport function MoveChildTo(parent, child, index) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex === -1 || index < 0 || index >= parentChildren.length) {\n    throw new Error(\"Index out of bounds\");\n  }\n  if (currentIndex !== index) {\n    parentChildren.splice(currentIndex, 1);\n    parentChildren.splice(index, 0, child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n", "import {DIRTY_CONST} from \"../gameobjects/DIRTY_CONST\";\nimport {GetChildIndex} from \"./GetChildIndex\";\nexport function MoveChildUp(parent, child) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex !== -1 && currentIndex > 0) {\n    const child2 = parentChildren[currentIndex + 1];\n    const index2 = parentChildren.indexOf(child2);\n    parentChildren[currentIndex] = child2;\n    parentChildren[index2] = child;\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n    child2.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n", "export function RectangleToRectangle(rectA, rectB) {\n  if (rectA.width <= 0 || rectA.height <= 0 || rectB.width <= 0 || rectB.height <= 0) {\n    return false;\n  }\n  return !(rectA.right < rectB.x || rectA.bottom < rectB.y || rectA.x > rectB.right || rectA.y > rectB.bottom);\n}\n", "import {RectangleToRectangle} from \"../geom/intersects/RectangleToRectangle\";\nexport function Overlap(source, ...targets) {\n  const sourceBounds = source.bounds.get();\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i];\n    const targetBounds = target.bounds.get();\n    if (RectangleToRectangle(sourceBounds, targetBounds)) {\n      return true;\n    }\n  }\n  return false;\n}\n", "import {RemoveChild} from \"./RemoveChild\";\nexport function RemoveChildren(parent, ...children) {\n  children.forEach((child) => {\n    RemoveChild(parent, child);\n  });\n  return children;\n}\n", "import {RemoveChildAt} from \"./RemoveChildAt\";\nexport function RemoveChildrenAt(parent, ...index) {\n  const removed = [];\n  index.sort((a, b) => a - b);\n  index.reverse().forEach((i) => {\n    const child = RemoveChildAt(parent, i);\n    if (child) {\n      removed.push(child);\n    }\n  });\n  return removed;\n}\n", "import {RemoveChildrenBetween} from \"./RemoveChildrenBetween\";\nimport {SetParent} from \"./SetParent\";\nexport function ReparentChildren(parent, newParent, beginIndex = 0, endIndex) {\n  const moved = RemoveChildrenBetween(parent, beginIndex, endIndex);\n  SetParent(newParent, ...moved);\n  moved.forEach((child) => {\n    child.transform.updateWorld();\n  });\n  return moved;\n}\n", "import {DIRTY_CONST} from \"../gameobjects/DIRTY_CONST\";\nexport function RotateChildrenLeft(parent, total = 1) {\n  const parentChildren = parent.children;\n  let child = null;\n  for (let i = 0; i < total; i++) {\n    child = parentChildren.shift();\n    parentChildren.push(child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n", "import {DIRTY_CONST} from \"../gameobjects/DIRTY_CONST\";\nexport function RotateChildrenRight(parent, total = 1) {\n  const parentChildren = parent.children;\n  let child = null;\n  for (let i = 0; i < total; i++) {\n    child = parentChildren.pop();\n    parentChildren.unshift(child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n", "import {DIRTY_CONST} from \"../gameobjects/DIRTY_CONST\";\nimport {GetChildIndex} from \"./GetChildIndex\";\nexport function SendChildToBack(parent, child) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex !== -1 && currentIndex > 0) {\n    parentChildren.splice(currentIndex, 1);\n    parentChildren.unshift(child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n", "export function SetBounds(x, y, width, height, ...children) {\n  children.forEach((child) => {\n    child.bounds.set(x, y, width, height);\n  });\n  return children;\n}\n", "import {DepthFirstSearch} from \"./DepthFirstSearch\";\nexport function SetChildrenValue(parent, property, value) {\n  const children = DepthFirstSearch(parent);\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor) {\n      descriptor.set(value);\n    }\n  });\n  return children;\n}\n", "export function SetName(name, ...children) {\n  children.forEach((child) => {\n    child.name = name;\n  });\n  return children;\n}\n", "export function SetOrigin(originX, originY, ...children) {\n  children.forEach((child) => {\n    child.setOrigin(originX, originY);\n  });\n  return children;\n}\n", "export function SetPosition(x, y, ...children) {\n  children.forEach((child) => {\n    child.setPosition(x, y);\n  });\n  return children;\n}\n", "export function SetRotation(rotation, ...children) {\n  children.forEach((child) => {\n    child.rotation = rotation;\n  });\n  return children;\n}\n", "export function SetScale(scaleX, scaleY, ...children) {\n  children.forEach((child) => {\n    child.setScale(scaleX, scaleY);\n  });\n  return children;\n}\n", "export function SetSize(width, height, ...children) {\n  children.forEach((child) => {\n    child.setSize(width, height);\n  });\n  return children;\n}\n", "export function SetSkew(skewX, skewY, ...children) {\n  children.forEach((child) => {\n    child.setSkew(skewX, skewY);\n  });\n  return children;\n}\n", "export function SetType(type, ...children) {\n  children.forEach((child) => {\n    child.type = type;\n  });\n  return children;\n}\n", "export function SetValue(property, value, ...children) {\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor) {\n      descriptor.set(value);\n    }\n  });\n  return children;\n}\n", "export function SetVisible(visible, ...children) {\n  children.forEach((child) => {\n    child.visible = visible;\n  });\n  return children;\n}\n", "import {DIRTY_CONST} from \"../gameobjects/DIRTY_CONST\";\nexport function ShuffleChildren(parent) {\n  const children = parent.children;\n  for (let i = children.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = children[i];\n    children[i] = children[j];\n    children[j] = temp;\n    temp.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return children;\n}\n", "import {GetChildIndex} from \"./GetChildIndex\";\nexport function SwapChildren(child1, child2) {\n  if (child1.parent === child2.parent) {\n    const children = child1.parent.children;\n    const index1 = GetChildIndex(child1.parent, child1);\n    const index2 = GetChildIndex(child2.parent, child2);\n    if (index1 !== index2) {\n      children[index1] = child2;\n      children[index2] = child1;\n    }\n  }\n}\n", "export class EventEmitter {\n  constructor() {\n    this.events = new Map();\n  }\n}\n", "export class EventInstance {\n  constructor(callback, context, once = false) {\n    this.callback = callback;\n    this.context = context;\n    this.once = once;\n  }\n}\n", "import {EventInstance} from \"./EventInstance\";\nexport function Off(emitter, event, callback, context, once) {\n  const events = emitter.events;\n  const listeners = events.get(event);\n  if (!callback) {\n    events.delete(event);\n  } else if (callback instanceof EventInstance) {\n    listeners.delete(callback);\n  } else {\n    const hasContext = !context;\n    const hasOnce = once !== void 0;\n    for (const listener of listeners) {\n      if (listener.callback === callback && (hasContext && listener.context === context) && (hasOnce && listener.once === once)) {\n        listeners.delete(listener);\n      }\n    }\n  }\n  if (listeners.size === 0) {\n    events.delete(event);\n  }\n  return emitter;\n}\n", "import {EventInstance} from \"./EventInstance\";\nexport function On(emitter, event, callback, context = emitter, once = false) {\n  if (typeof callback !== \"function\") {\n    throw new TypeError(\"Listener not a function\");\n  }\n  const listener = new EventInstance(callback, context, once);\n  const listeners = emitter.events.get(event);\n  if (!listeners) {\n    emitter.events.set(event, new Set([listener]));\n  } else {\n    listeners.add(listener);\n  }\n  return listener;\n}\n", "import {On} from \"./On\";\nexport function Once(emitter, event, callback, context = emitter) {\n  return On(emitter, event, callback, context, true);\n}\n", "import * as Components from \"./components/\";\nimport {AnimatedSprite} from \"./animatedsprite/AnimatedSprite\";\nimport {Container} from \"./container/Container\";\nimport {EffectLayer} from \"./effectlayer/EffectLayer\";\nimport {GameObject} from \"./GameObject\";\nimport {Layer} from \"./layer/Layer\";\nimport {RenderLayer} from \"./renderlayer/RenderLayer\";\nimport {Sprite} from \"./sprite/Sprite\";\nimport {SpriteBatch} from \"./spritebatch/SpriteBatch\";\nimport {Text} from \"./text/Text\";\nexport {\n  AnimatedSprite,\n  Components,\n  Container,\n  EffectLayer,\n  Layer,\n  RenderLayer,\n  GameObject,\n  Sprite,\n  SpriteBatch,\n  Text\n};\n", "import * as Bounds from \"./bounds\";\nimport * as Input from \"./input\";\nimport * as Transform from \"./transform\";\nimport {Vertex} from \"./Vertex\";\nexport {\n  Bounds,\n  Input,\n  Transform,\n  Vertex\n};\n", "import {BoundsComponent} from \"./BoundsComponent\";\nexport {\n  BoundsComponent\n};\n", "export function GetVertices(transform) {\n  const {a, b, c, d, tx, ty} = transform.world;\n  const {x, y, right, bottom} = transform.extent;\n  const x0 = x * a + y * c + tx;\n  const y0 = x * b + y * d + ty;\n  const x1 = x * a + bottom * c + tx;\n  const y1 = x * b + bottom * d + ty;\n  const x2 = right * a + bottom * c + tx;\n  const y2 = right * b + bottom * d + ty;\n  const x3 = right * a + y * c + tx;\n  const y3 = right * b + y * d + ty;\n  return {x0, y0, x1, y1, x2, y2, x3, y3};\n}\n", "import {DIRTY_CONST} from \"../../DIRTY_CONST\";\nimport {GetVertices} from \"../transform/GetVertices\";\nimport {Rectangle} from \"../../../geom/rectangle/Rectangle\";\nexport class BoundsComponent {\n  constructor(entity) {\n    this.fixed = false;\n    this.includeChildren = true;\n    this.visibleOnly = true;\n    this.entity = entity;\n    this.area = new Rectangle();\n  }\n  set(x, y, width, height) {\n    this.area.set(x, y, width, height);\n  }\n  get() {\n    if (this.entity.isDirty(DIRTY_CONST.BOUNDS) && !this.fixed) {\n      this.update();\n    }\n    return this.area;\n  }\n  updateLocal() {\n    const {x0, y0, x1, y1, x2, y2, x3, y3} = GetVertices(this.entity.transform);\n    const x = Math.min(x0, x1, x2, x3);\n    const y = Math.min(y0, y1, y2, y3);\n    const right = Math.max(x0, x1, x2, x3);\n    const bottom = Math.max(y0, y1, y2, y3);\n    return this.area.set(x, y, right - x, bottom - y);\n  }\n  update() {\n    const bounds = this.updateLocal();\n    this.entity.clearDirty(DIRTY_CONST.BOUNDS);\n    if (!this.includeChildren || !this.entity.numChildren) {\n      return bounds;\n    }\n    const visibleOnly = this.visibleOnly;\n    const children = this.entity.children;\n    let x = bounds.x;\n    let y = bounds.y;\n    let right = bounds.right;\n    let bottom = bounds.bottom;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (!child || visibleOnly && !child.visible) {\n        continue;\n      }\n      const childBounds = child.bounds.get();\n      if (childBounds.x < x) {\n        x = childBounds.x;\n      }\n      if (childBounds.y < y) {\n        y = childBounds.y;\n      }\n      if (childBounds.right > right) {\n        right = childBounds.right;\n      }\n      if (childBounds.bottom > bottom) {\n        bottom = childBounds.bottom;\n      }\n    }\n    return bounds.set(x, y, right - x, bottom - y);\n  }\n  destroy() {\n    this.entity = null;\n    this.area = null;\n  }\n}\n", "import {InputComponent} from \"./InputComponent\";\nexport {\n  InputComponent\n};\n", "export class InputComponent {\n  constructor(entity) {\n    this.enabled = false;\n    this.enabledChildren = true;\n    this.entity = entity;\n  }\n  destroy() {\n    this.entity = null;\n    this.hitArea = null;\n  }\n}\n", "import {GetVertices} from \"./GetVertices\";\nimport {TransformComponent} from \"./TransformComponent\";\nimport {UpdateLocalTransform} from \"./UpdateLocalTransform\";\nimport {UpdateWorldTransform} from \"./UpdateWorldTransform\";\nexport {\n  GetVertices,\n  TransformComponent,\n  UpdateLocalTransform,\n  UpdateWorldTransform\n};\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetDefaultOriginX() {\n  return ConfigStore.get(CONFIG_DEFAULTS.DEFAULT_ORIGIN).x;\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetDefaultOriginY() {\n  return ConfigStore.get(CONFIG_DEFAULTS.DEFAULT_ORIGIN).y;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CeilRectangle(rect) {\n  rect.x = Math.ceil(rect.x);\n  rect.y = Math.ceil(rect.y);\n  rect.width = Math.ceil(rect.width);\n  rect.height = Math.ceil(rect.height);\n  return rect;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CeilRectanglePosition(rect) {\n  rect.x = Math.ceil(rect.x);\n  rect.y = Math.ceil(rect.y);\n  return rect;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CenterRectangleOn(rect, x, y) {\n  rect.x = x - rect.width / 2;\n  rect.y = y - rect.height / 2;\n  return rect;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Rectangle} from \"./Rectangle\";\nexport function CloneRectangle(source) {\n  return new Rectangle(source.x, source.y, source.width, source.height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CopyRectangleFrom(source, dest) {\n  return dest.set(source.x, source.y, source.width, source.height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function DecomposeRectangle(rect, out = []) {\n  out.push(new Vec2(rect.x, rect.y), new Vec2(rect.right, rect.y), new Vec2(rect.right, rect.bottom), new Vec2(rect.x, rect.bottom));\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetRectangleAspectRatio(rect) {\n  return rect.height === 0 ? NaN : rect.width / rect.height;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetRectangleCenterX(rect) {\n  return rect.x + rect.width / 2;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetRectangleCenterY(rect) {\n  return rect.y + rect.height / 2;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetRectangleAspectRatio} from \"./GetRectangleAspectRatio\";\nimport {GetRectangleCenterX} from \"./GetRectangleCenterX\";\nimport {GetRectangleCenterY} from \"./GetRectangleCenterY\";\nexport function FitRectangleInside(target, source) {\n  const ratio = GetRectangleAspectRatio(target);\n  let width = source.width;\n  let height = source.height;\n  if (ratio < GetRectangleAspectRatio(source)) {\n    width = source.height * ratio;\n  } else {\n    height = source.width / ratio;\n  }\n  return target.set(GetRectangleCenterX(source) - target.width / 2, GetRectangleCenterY(source) - target.height / 2, width, height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetRectangleAspectRatio} from \"./GetRectangleAspectRatio\";\nimport {GetRectangleCenterX} from \"./GetRectangleCenterX\";\nimport {GetRectangleCenterY} from \"./GetRectangleCenterY\";\nexport function FitRectangleOutside(target, source) {\n  const ratio = GetRectangleAspectRatio(target);\n  let width = source.width;\n  let height = source.height;\n  if (ratio > GetRectangleAspectRatio(source)) {\n    width = source.height * ratio;\n  } else {\n    height = source.width / ratio;\n  }\n  return target.set(GetRectangleCenterX(source) - target.width / 2, GetRectangleCenterY(source) - target.height / 2, width, height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function FitRectangleToPoint(target, x, y) {\n  const minX = Math.min(target.x, x);\n  const maxX = Math.max(target.right, x);\n  const minY = Math.min(target.y, y);\n  const maxY = Math.max(target.bottom, y);\n  return target.set(minX, minY, maxX - minX, maxY - minY);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function FitRectangleToPoints(target, points) {\n  let minX = target.x;\n  let maxX = target.right;\n  let minY = target.y;\n  let maxY = target.bottom;\n  for (let i = 0; i < points.length; i++) {\n    minX = Math.min(minX, points[i].x);\n    maxX = Math.max(maxX, points[i].x);\n    minY = Math.min(minY, points[i].y);\n    maxY = Math.max(maxY, points[i].y);\n  }\n  return target.set(minX, minY, maxX - minX, maxY - minY);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function FloorRectangle(rect) {\n  rect.x = Math.floor(rect.x);\n  rect.y = Math.floor(rect.y);\n  rect.width = Math.floor(rect.width);\n  rect.height = Math.floor(rect.height);\n  return rect;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function FloorRectanglePosition(rect) {\n  rect.x = Math.floor(rect.x);\n  rect.y = Math.floor(rect.y);\n  return rect;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetRectangleArea(rect) {\n  return rect.width * rect.height;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetRectangleCenterX} from \"./GetRectangleCenterX\";\nimport {GetRectangleCenterY} from \"./GetRectangleCenterY\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetRectangleCenter(rect, out = new Vec2()) {\n  return out.set(GetRectangleCenterX(rect), GetRectangleCenterY(rect));\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport class Line {\n  constructor(x1 = 0, y1 = 0, x2 = 0, y2 = 0) {\n    this.set(x1, y1, x2, y2);\n  }\n  set(x1 = 0, y1 = 0, x2 = 0, y2 = 0) {\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n    return this;\n  }\n  get left() {\n    return Math.min(this.x1, this.x2);\n  }\n  set left(value) {\n    if (this.x1 <= this.x2) {\n      this.x1 = value;\n    } else {\n      this.x2 = value;\n    }\n  }\n  get right() {\n    return Math.max(this.x1, this.x2);\n  }\n  set right(value) {\n    if (this.x1 > this.x2) {\n      this.x1 = value;\n    } else {\n      this.x2 = value;\n    }\n  }\n  get top() {\n    return Math.min(this.y1, this.y2);\n  }\n  set top(value) {\n    if (this.y1 <= this.y2) {\n      this.y1 = value;\n    } else {\n      this.y2 = value;\n    }\n  }\n  get bottom() {\n    return Math.max(this.y1, this.y2);\n  }\n  set bottom(value) {\n    if (this.y1 > this.y2) {\n      this.y1 = value;\n    } else {\n      this.y2 = value;\n    }\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Rectangle} from \"./Rectangle\";\nimport {RectangleToRectangle} from \"../intersects/RectangleToRectangle\";\nexport function GetRectangleIntersection(rectA, rectB, out = new Rectangle()) {\n  if (RectangleToRectangle(rectA, rectB)) {\n    out.set(Math.max(rectA.x, rectB.x), Math.max(rectA.y, rectB.y), Math.min(rectA.right, rectB.right) - out.x, Math.min(rectA.bottom, rectB.bottom) - out.y);\n  } else {\n    out.set();\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetRectanglePerimeter(rect) {\n  return 2 * (rect.width + rect.height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetRectanglePerimeter} from \"./GetRectanglePerimeter\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetRectangleMarchingAnts(rect, step, quantity, out = []) {\n  if (!step && !quantity) {\n    return out;\n  }\n  if (!step) {\n    step = GetRectanglePerimeter(rect) / quantity;\n  } else {\n    quantity = Math.round(GetRectanglePerimeter(rect) / step);\n  }\n  let x = rect.x;\n  let y = rect.y;\n  let face = 0;\n  for (let i = 0; i < quantity; i++) {\n    out.push(new Vec2(x, y));\n    switch (face) {\n      case 0:\n        x += step;\n        if (x >= rect.right) {\n          face = 1;\n          y += x - rect.right;\n          x = rect.right;\n        }\n        break;\n      case 1:\n        y += step;\n        if (y >= rect.bottom) {\n          face = 2;\n          x -= y - rect.bottom;\n          y = rect.bottom;\n        }\n        break;\n      case 2:\n        x -= step;\n        if (x <= rect.x) {\n          face = 3;\n          y -= rect.x - x;\n          x = rect.x;\n        }\n        break;\n      case 3:\n        y -= step;\n        if (y <= rect.y) {\n          face = 0;\n          y = rect.y;\n        }\n        break;\n    }\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetRectangleOverlap(rectA, rectB) {\n  return rectA.x < rectB.right && rectA.right > rectB.x && rectA.y < rectB.bottom && rectA.bottom > rectB.y;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {DegToRad} from \"../../math/DegToRad\";\nimport {GetRectangleCenterX} from \"./GetRectangleCenterX\";\nimport {GetRectangleCenterY} from \"./GetRectangleCenterY\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetRectanglePerimeterPoint(rectangle, angle, out = new Vec2()) {\n  angle = DegToRad(angle);\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  let dx = c > 0 ? rectangle.width / 2 : rectangle.width / -2;\n  let dy = s > 0 ? rectangle.height / 2 : rectangle.height / -2;\n  if (Math.abs(dx * s) < Math.abs(dy * c)) {\n    dy = dx * s / c;\n  } else {\n    dx = dy * c / s;\n  }\n  return out.set(dx + GetRectangleCenterX(rectangle), dy + GetRectangleCenterY(rectangle));\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetRectanglePerimeter} from \"./GetRectanglePerimeter\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetRectanglePoint(rectangle, position, out = new Vec2()) {\n  if (position <= 0 || position >= 1) {\n    return out.set(rectangle.x, rectangle.y);\n  }\n  let p = GetRectanglePerimeter(rectangle) * position;\n  if (position > 0.5) {\n    p -= rectangle.width + rectangle.height;\n    if (p <= rectangle.width) {\n      return out.set(rectangle.right - p, rectangle.bottom);\n    } else {\n      return out.set(rectangle.x, rectangle.bottom - (p - rectangle.width));\n    }\n  } else if (p <= rectangle.width) {\n    return out.set(rectangle.x + p, rectangle.y);\n  } else {\n    return out.set(rectangle.right, rectangle.y + (p - rectangle.width));\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetRectanglePerimeter} from \"./GetRectanglePerimeter\";\nimport {GetRectanglePoint} from \"./GetRectanglePoint\";\nexport function GetRectanglePoints(rectangle, step, quantity = 0, out = []) {\n  if (!quantity) {\n    quantity = GetRectanglePerimeter(rectangle) / step;\n  }\n  for (let i = 0; i < quantity; i++) {\n    out.push(GetRectanglePoint(rectangle, i / quantity));\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetRectangleRandomPoint(rect, out = new Vec2()) {\n  return out.set(rect.x + Math.random() * rect.width, rect.y + Math.random() * rect.height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function RectangleContainsRectangle(rectA, rectB) {\n  if (rectB.width * rectB.height > rectA.width * rectA.height) {\n    return false;\n  }\n  return rectB.x > rectA.x && rectB.x < rectA.right && (rectB.right > rectA.x && rectB.right < rectA.right) && (rectB.y > rectA.y && rectB.y < rectA.bottom) && (rectB.bottom > rectA.y && rectB.bottom < rectA.bottom);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Between} from \"../../math/Between\";\nimport {RectangleContainsRectangle} from \"./RectangleContainsRectangle\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetRectangleRandomPointOutside(outer, inner, out = new Vec2()) {\n  if (RectangleContainsRectangle(outer, inner)) {\n    switch (Between(0, 3)) {\n      case 0:\n        out.x = outer.x + Math.random() * (inner.right - outer.x);\n        out.y = outer.y + Math.random() * (inner.y - outer.y);\n        break;\n      case 1:\n        out.x = inner.x + Math.random() * (outer.right - inner.x);\n        out.y = inner.bottom + Math.random() * (outer.bottom - inner.bottom);\n        break;\n      case 2:\n        out.x = outer.x + Math.random() * (inner.x - outer.x);\n        out.y = inner.y + Math.random() * (outer.bottom - inner.y);\n        break;\n      case 3:\n        out.x = inner.right + Math.random() * (outer.right - inner.right);\n        out.y = outer.y + Math.random() * (inner.bottom - outer.y);\n        break;\n    }\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetRectangleSize(rect, out = new Vec2()) {\n  return out.set(rect.width, rect.height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Rectangle} from \"./Rectangle\";\nexport function GetRectangleUnion(rectA, rectB, out = new Rectangle()) {\n  const x = Math.min(rectA.x, rectB.x);\n  const y = Math.min(rectA.y, rectB.y);\n  const w = Math.max(rectA.right, rectB.right) - x;\n  const h = Math.max(rectA.bottom, rectB.bottom) - y;\n  return out.set(x, y, w, h);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CenterRectangleOn} from \"./CenterRectangleOn\";\nimport {GetRectangleCenterX} from \"./GetRectangleCenterX\";\nimport {GetRectangleCenterY} from \"./GetRectangleCenterY\";\nexport function InflateRectangle(rect, x, y) {\n  const cx = GetRectangleCenterX(rect);\n  const cy = GetRectangleCenterY(rect);\n  rect.width = rect.width + x * 2;\n  rect.height = rect.height + y * 2;\n  return CenterRectangleOn(rect, cx, cy);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function MergeRectangle(target, source) {\n  const minX = Math.min(target.x, source.x);\n  const maxX = Math.max(target.right, source.right);\n  const minY = Math.min(target.y, source.y);\n  const maxY = Math.max(target.bottom, source.bottom);\n  return target.set(minX, minY, maxX - minX, maxY - minY);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {RectangleContains} from \"./RectangleContains\";\nexport function RectangleContainsPoint(rect, point) {\n  return RectangleContains(rect, point.x, point.y);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function RectangleEquals(rect, toCompare) {\n  return rect.x === toCompare.x && rect.y === toCompare.y && rect.width === toCompare.width && rect.height === toCompare.height;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {MATH_CONST} from \"../../math/const\";\nimport {Rectangle} from \"./Rectangle\";\nexport function RectangleFromPoints(points, out = new Rectangle()) {\n  if (points.length === 0) {\n    return out;\n  }\n  let minX = Number.MAX_VALUE;\n  let minY = Number.MAX_VALUE;\n  let maxX = MATH_CONST.MIN_SAFE_INTEGER;\n  let maxY = MATH_CONST.MIN_SAFE_INTEGER;\n  for (let i = 0; i < points.length; i++) {\n    const px = points[i].x;\n    const py = points[i].y;\n    minX = Math.min(minX, px);\n    minY = Math.min(minY, py);\n    maxX = Math.max(maxX, px);\n    maxY = Math.max(maxY, py);\n  }\n  return out.set(minX, minY, maxX - minX, maxY - minY);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function RectangleSizeEquals(rect, toCompare) {\n  return rect.width === toCompare.width && rect.height === toCompare.height;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function ScaleRectangle(rect, x, y = x) {\n  rect.width *= x;\n  rect.height *= y;\n  return rect;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function TranslateRectangle(rect, x, y) {\n  rect.x += x;\n  rect.y += y;\n  return rect;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function TranslateRectanglePoint(rect, point) {\n  rect.x += point.x;\n  rect.y += point.y;\n  return rect;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CeilRectangle} from \"./CeilRectangle\";\nimport {CeilRectanglePosition} from \"./CeilRectanglePosition\";\nimport {CenterRectangleOn} from \"./CenterRectangleOn\";\nimport {CloneRectangle} from \"./CloneRectangle\";\nimport {CopyRectangleFrom} from \"./CopyRectangleFrom\";\nimport {DecomposeRectangle} from \"./DecomposeRectangle\";\nimport {FitRectangleInside} from \"./FitRectangleInside\";\nimport {FitRectangleOutside} from \"./FitRectangleOutside\";\nimport {FitRectangleToPoint} from \"./FitRectangleToPoint\";\nimport {FitRectangleToPoints} from \"./FitRectangleToPoints\";\nimport {FloorRectangle} from \"./FloorRectangle\";\nimport {FloorRectanglePosition} from \"./FloorRectanglePosition\";\nimport {GetRectangleArea} from \"./GetRectangleArea\";\nimport {GetRectangleAspectRatio} from \"./GetRectangleAspectRatio\";\nimport {GetRectangleCenter} from \"./GetRectangleCenter\";\nimport {GetRectangleCenterX} from \"./GetRectangleCenterX\";\nimport {GetRectangleCenterY} from \"./GetRectangleCenterY\";\nimport {GetRectangleEdges} from \"./GetRectangleEdges\";\nimport {GetRectangleIntersection} from \"./GetRectangleIntersection\";\nimport {GetRectangleMarchingAnts} from \"./GetRectangleMarchingAnts\";\nimport {GetRectangleOverlap} from \"./GetRectangleOverlap\";\nimport {GetRectanglePerimeter} from \"./GetRectanglePerimeter\";\nimport {GetRectanglePerimeterPoint} from \"./GetRectanglePerimeterPoint\";\nimport {GetRectanglePoint} from \"./GetRectanglePoint\";\nimport {GetRectanglePoints} from \"./GetRectanglePoints\";\nimport {GetRectangleRandomPoint} from \"./GetRectangleRandomPoint\";\nimport {GetRectangleRandomPointOutside} from \"./GetRectangleRandomPointOutside\";\nimport {GetRectangleSize} from \"./GetRectangleSize\";\nimport {GetRectangleUnion} from \"./GetRectangleUnion\";\nimport {InflateRectangle} from \"./InflateRectangle\";\nimport {MergeRectangle} from \"./MergeRectangle\";\nimport {Rectangle} from \"./Rectangle\";\nimport {RectangleContains} from \"./RectangleContains\";\nimport {RectangleContainsPoint} from \"./RectangleContainsPoint\";\nimport {RectangleContainsRectangle} from \"./RectangleContainsRectangle\";\nimport {RectangleEquals} from \"./RectangleEquals\";\nimport {RectangleFromPoints} from \"./RectangleFromPoints\";\nimport {RectangleSizeEquals} from \"./RectangleSizeEquals\";\nimport {ScaleRectangle} from \"./ScaleRectangle\";\nimport {TranslateRectangle} from \"./TranslateRectangle\";\nimport {TranslateRectanglePoint} from \"./TranslateRectanglePoint\";\nexport {\n  CeilRectangle,\n  CeilRectanglePosition,\n  CenterRectangleOn,\n  CloneRectangle,\n  CopyRectangleFrom,\n  DecomposeRectangle,\n  FitRectangleInside,\n  FitRectangleOutside,\n  FitRectangleToPoint,\n  FitRectangleToPoints,\n  FloorRectangle,\n  FloorRectanglePosition,\n  GetRectangleArea,\n  GetRectangleAspectRatio,\n  GetRectangleCenter,\n  GetRectangleCenterX,\n  GetRectangleCenterY,\n  GetRectangleEdges,\n  GetRectangleIntersection,\n  GetRectangleMarchingAnts,\n  GetRectangleOverlap,\n  GetRectanglePerimeter,\n  GetRectanglePerimeterPoint,\n  GetRectanglePoint,\n  GetRectanglePoints,\n  GetRectangleRandomPoint,\n  GetRectangleRandomPointOutside,\n  GetRectangleSize,\n  GetRectangleUnion,\n  InflateRectangle,\n  MergeRectangle,\n  Rectangle,\n  RectangleContains,\n  RectangleContainsPoint,\n  RectangleContainsRectangle,\n  RectangleEquals,\n  RectangleFromPoints,\n  RectangleSizeEquals,\n  ScaleRectangle,\n  TranslateRectangle,\n  TranslateRectanglePoint\n};\n", "export function UpdateLocalTransform(transform) {\n  const local = transform.local;\n  const x = transform.position.x;\n  const y = transform.position.y;\n  const rotation = transform.rotation;\n  const scaleX = transform.scale.x;\n  const scaleY = transform.scale.y;\n  const skewX = transform.skew.x;\n  const skewY = transform.skew.y;\n  local.set(Math.cos(rotation + skewY) * scaleX, Math.sin(rotation + skewY) * scaleX, -Math.sin(rotation - skewX) * scaleY, Math.cos(rotation - skewX) * scaleY, x, y);\n}\n", "import {Mat2dCopyFrom} from \"../../../math/mat2d/Mat2dCopyFrom\";\nexport function UpdateWorldTransform(gameObject) {\n  const parent = gameObject.parent;\n  const transform = gameObject.transform;\n  const lt = transform.local;\n  const wt = transform.world;\n  if (!parent) {\n    Mat2dCopyFrom(lt, wt);\n  } else if (transform.passthru) {\n    Mat2dCopyFrom(parent.transform.world, wt);\n  } else {\n    const {a, b, c, d, tx, ty} = lt;\n    const {a: pa, b: pb, c: pc, d: pd, tx: ptx, ty: pty} = parent.transform.world;\n    wt.set(a * pa + b * pc, a * pb + b * pd, c * pa + d * pc, c * pb + d * pd, tx * pa + ty * pc + ptx, tx * pb + ty * pd + pty);\n  }\n}\n", "import {GetDefaultOriginX, GetDefaultOriginY} from \"../../../config/defaultorigin/\";\nimport {Vec2, Vec2Callback} from \"../../../math/vec2\";\nimport {DIRTY_CONST} from \"../../DIRTY_CONST\";\nimport {Matrix2D} from \"../../../math/mat2d/Matrix2D\";\nimport {Rectangle} from \"../../../geom/rectangle\";\nimport {UpdateLocalTransform} from \"./UpdateLocalTransform\";\nimport {UpdateWorldTransform} from \"./UpdateWorldTransform\";\nexport class TransformComponent {\n  constructor(entity, x = 0, y = 0) {\n    this.passthru = false;\n    this._rotation = 0;\n    this.entity = entity;\n    this.local = new Matrix2D();\n    this.world = new Matrix2D();\n    const update = () => this.update();\n    const updateExtent = () => this.updateExtent();\n    this.position = new Vec2Callback(update, x, y);\n    this.scale = new Vec2Callback(update, 1, 1);\n    this.skew = new Vec2Callback(update);\n    this.origin = new Vec2Callback(updateExtent, GetDefaultOriginX(), GetDefaultOriginY());\n    this.extent = new Rectangle();\n  }\n  update() {\n    this.updateLocal();\n    this.updateWorld();\n  }\n  updateLocal() {\n    this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n    UpdateLocalTransform(this);\n  }\n  updateWorld() {\n    const entity = this.entity;\n    entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n    UpdateWorldTransform(entity);\n    if (entity.numChildren) {\n      this.updateChildren();\n    }\n  }\n  updateChildren() {\n    const children = this.entity.children;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      child.transform.updateWorld();\n    }\n  }\n  globalToLocal(x, y, out = new Vec2()) {\n    const {a, b, c, d, tx, ty} = this.world;\n    const id = 1 / (a * d + c * -b);\n    out.x = d * id * x + -c * id * y + (ty * c - tx * d) * id;\n    out.y = a * id * y + -b * id * x + (-ty * a + tx * b) * id;\n    return out;\n  }\n  localToGlobal(x, y, out = new Vec2()) {\n    const {a, b, c, d, tx, ty} = this.world;\n    out.x = a * x + c * y + tx;\n    out.y = b * x + d * y + ty;\n    return out;\n  }\n  setExtent(x, y, width, height) {\n    this.extent.set(x, y, width, height);\n    this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n  }\n  updateExtent(width, height) {\n    const extent = this.extent;\n    const entity = this.entity;\n    if (width !== void 0) {\n      extent.width = width;\n    }\n    if (height !== void 0) {\n      extent.height = height;\n    }\n    extent.x = -this.origin.x * extent.width;\n    extent.y = -this.origin.y * extent.height;\n    entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n  }\n  set rotation(value) {\n    if (value !== this._rotation) {\n      this._rotation = value;\n      this.update();\n    }\n  }\n  get rotation() {\n    return this._rotation;\n  }\n  destroy() {\n    this.position.destroy();\n    this.scale.destroy();\n    this.skew.destroy();\n    this.origin.destroy();\n    this.entity = null;\n    this.local = null;\n    this.world = null;\n    this.position = null;\n    this.scale = null;\n    this.skew = null;\n    this.origin = null;\n    this.extent = null;\n  }\n}\n", "export function PackColor(rgb, alpha) {\n  const ua = (alpha * 255 | 0) & 255;\n  return (ua << 24 | rgb) >>> 0;\n}\n", "import {PackColor} from \"../../renderer/webgl1/colors/PackColor\";\nexport class Vertex {\n  constructor(x = 0, y = 0, z = 0) {\n    this.x = 0;\n    this.y = 0;\n    this.z = 0;\n    this.u = 0;\n    this.v = 0;\n    this.texture = 0;\n    this.tint = 16777215;\n    this.alpha = 1;\n    this.color = 4294967295;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n  setPosition(x, y, z = 0) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  }\n  setUV(u, v) {\n    this.u = u;\n    this.v = v;\n    return this;\n  }\n  setColor(color, alpha = 1) {\n    this.tint = color;\n    this.alpha = alpha;\n    this.packColor();\n    return this;\n  }\n  setAlpha(value) {\n    this.alpha = value;\n    return this;\n  }\n  setTint(value) {\n    this.tint = value;\n    return this;\n  }\n  packColor() {\n    this.color = PackColor(this.tint, this.alpha);\n  }\n}\n", "import {GetVertexBufferEntry} from \"../renderpass/GetVertexBufferEntry\";\nimport {SetTexture} from \"../renderpass/SetTexture\";\nexport function BatchTexturedQuad(sprite, renderPass) {\n  const {F32, U32, offset} = GetVertexBufferEntry(renderPass, 1);\n  const textureIndex = SetTexture(renderPass, sprite.texture);\n  let vertOffset = offset;\n  sprite.vertices.forEach((vertex) => {\n    F32[vertOffset + 0] = vertex.x;\n    F32[vertOffset + 1] = vertex.y;\n    F32[vertOffset + 2] = vertex.u;\n    F32[vertOffset + 3] = vertex.v;\n    F32[vertOffset + 4] = textureIndex;\n    U32[vertOffset + 5] = vertex.color;\n    vertOffset += 6;\n  });\n}\n", "import {BoundsComponent} from \"./components/bounds/BoundsComponent\";\nimport {DIRTY_CONST} from \"./DIRTY_CONST\";\nimport {DestroyChildren} from \"../display/DestroyChildren\";\nimport {DestroyEvent} from \"./events/DestroyEvent\";\nimport {Emit} from \"../events\";\nimport {GameInstance} from \"../GameInstance\";\nimport {InputComponent} from \"./components/input/InputComponent\";\nimport {ReparentChildren} from \"../display/ReparentChildren\";\nimport {TransformComponent} from \"./components/transform/TransformComponent\";\nexport class GameObject {\n  constructor(x = 0, y = 0) {\n    this.type = \"GameObject\";\n    this.name = \"\";\n    this.willUpdate = true;\n    this.willUpdateChildren = true;\n    this.willRender = true;\n    this.willRenderChildren = true;\n    this.willCacheChildren = false;\n    this.dirty = 0;\n    this.dirtyFrame = 0;\n    this.visible = true;\n    this.children = [];\n    this.events = new Map();\n    this.transform = new TransformComponent(this, x, y);\n    this.bounds = new BoundsComponent(this);\n    this.input = new InputComponent(this);\n    this.dirty = DIRTY_CONST.DEFAULT;\n    this.transform.update();\n  }\n  isRenderable() {\n    return this.visible && this.willRender;\n  }\n  isDirty(flag) {\n    return (this.dirty & flag) !== 0;\n  }\n  clearDirty(flag) {\n    if (this.isDirty(flag)) {\n      this.dirty ^= flag;\n    }\n    return this;\n  }\n  setDirty(flag, flag2) {\n    if (!this.isDirty(flag)) {\n      this.dirty ^= flag;\n      this.dirtyFrame = GameInstance.getFrame();\n    }\n    if (!this.isDirty(flag2)) {\n      this.dirty ^= flag2;\n    }\n    return this;\n  }\n  update(delta, time) {\n    if (this.willUpdateChildren) {\n      const children = this.children;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child && child.willUpdate) {\n          child.update(delta, time);\n        }\n      }\n    }\n    this.postUpdate(delta, time);\n  }\n  postUpdate(delta, time) {\n  }\n  renderGL(renderPass) {\n  }\n  renderCanvas(renderer) {\n  }\n  postRenderGL(renderPass) {\n  }\n  postRenderCanvas(renderer) {\n  }\n  get numChildren() {\n    return this.children.length;\n  }\n  destroy(reparentChildren) {\n    if (reparentChildren) {\n      ReparentChildren(this, reparentChildren);\n    } else {\n      DestroyChildren(this);\n    }\n    Emit(this, DestroyEvent, this);\n    this.transform.destroy();\n    this.bounds.destroy();\n    this.input.destroy();\n    this.events.clear();\n    this.world = null;\n    this.parent = null;\n    this.children = null;\n  }\n}\n", "import {DIRTY_CONST} from \"../DIRTY_CONST\";\nimport {GameObject} from \"../GameObject\";\nexport class Container extends GameObject {\n  constructor(x = 0, y = 0) {\n    super(x, y);\n    this._alpha = 1;\n    this.type = \"Container\";\n  }\n  setSize(width, height = width) {\n    this.transform.updateExtent(width, height);\n    return this;\n  }\n  setPosition(x, y) {\n    this.transform.position.set(x, y);\n    return this;\n  }\n  setOrigin(x, y = x) {\n    this.transform.origin.set(x, y);\n    return this;\n  }\n  setSkew(x, y = x) {\n    this.transform.skew.set(x, y);\n    return this;\n  }\n  setScale(x, y = x) {\n    this.transform.scale.set(x, y);\n    return this;\n  }\n  setRotation(value) {\n    this.transform.rotation = value;\n    return this;\n  }\n  set width(value) {\n    this.transform.updateExtent(value);\n  }\n  get width() {\n    return this.transform.extent.width;\n  }\n  set height(value) {\n    this.transform.updateExtent(void 0, value);\n  }\n  get height() {\n    return this.transform.extent.height;\n  }\n  set x(value) {\n    this.transform.position.x = value;\n  }\n  get x() {\n    return this.transform.position.x;\n  }\n  set y(value) {\n    this.transform.position.y = value;\n  }\n  get y() {\n    return this.transform.position.y;\n  }\n  set originX(value) {\n    this.transform.origin.x = value;\n  }\n  get originX() {\n    return this.transform.origin.x;\n  }\n  set originY(value) {\n    this.transform.origin.y = value;\n  }\n  get originY() {\n    return this.transform.origin.y;\n  }\n  set skewX(value) {\n    this.transform.skew.x = value;\n  }\n  get skewX() {\n    return this.transform.skew.x;\n  }\n  set skewY(value) {\n    this.transform.skew.y = value;\n  }\n  get skewY() {\n    return this.transform.skew.y;\n  }\n  set scaleX(value) {\n    this.transform.scale.x = value;\n  }\n  get scaleX() {\n    return this.transform.scale.x;\n  }\n  set scaleY(value) {\n    this.transform.scale.y = value;\n  }\n  get scaleY() {\n    return this.transform.scale.y;\n  }\n  set rotation(value) {\n    this.transform.rotation = value;\n  }\n  get rotation() {\n    return this.transform.rotation;\n  }\n  get alpha() {\n    return this._alpha;\n  }\n  set alpha(value) {\n    if (value !== this._alpha) {\n      this._alpha = value;\n      this.setDirty(DIRTY_CONST.TRANSFORM);\n    }\n  }\n}\n", "export function DrawTexturedQuad(sprite, renderer) {\n  const frame = sprite.frame;\n  if (!frame) {\n    return;\n  }\n  const ctx = renderer.ctx;\n  const transform = sprite.transform;\n  const {a, b, c, d, tx, ty} = transform.world;\n  const {x, y} = transform.extent;\n  ctx.save();\n  ctx.setTransform(a, b, c, d, tx, ty);\n  ctx.globalAlpha = sprite.alpha;\n  ctx.drawImage(frame.texture.image, frame.x, frame.y, frame.width, frame.height, x, y, frame.width, frame.height);\n  ctx.restore();\n}\n", "export function PackColors(sprite) {\n  sprite.vertices.forEach((vertex) => {\n    vertex.packColor();\n  });\n  return sprite;\n}\n", "export function SetFrame(texture, key, ...children) {\n  const frame = texture.getFrame(key);\n  const {u0, u1, v0, v1, pivot} = frame;\n  children.forEach((child) => {\n    if (!child || frame === child.frame) {\n      return;\n    }\n    child.frame = frame;\n    if (pivot) {\n      child.setOrigin(pivot.x, pivot.y);\n    }\n    child.frame.setExtent(child);\n    child.hasTexture = true;\n    const vertices = child.vertices;\n    vertices[0].setUV(u0, v0);\n    vertices[1].setUV(u0, v1);\n    vertices[2].setUV(u1, v1);\n    vertices[3].setUV(u1, v0);\n  });\n  return children;\n}\n", "let instance;\nexport const TextureManagerInstance = {\n  get: () => {\n    return instance;\n  },\n  set: (manager) => {\n    instance = manager;\n  }\n};\n", "import {SetFrame} from \"./SetFrame\";\nimport {Texture} from \"../../textures/Texture\";\nimport {TextureManagerInstance} from \"../../textures/TextureManagerInstance\";\nexport function SetTexture(key, frame, ...children) {\n  if (!key) {\n    children.forEach((child) => {\n      child.texture = null;\n      child.frame = null;\n      child.hasTexture = false;\n    });\n  } else {\n    let texture;\n    if (key instanceof Texture) {\n      texture = key;\n    } else {\n      texture = TextureManagerInstance.get().get(key);\n    }\n    if (!texture) {\n      console.warn(`Invalid Texture key: ${key}`);\n    } else {\n      children.forEach((child) => {\n        child.texture = texture;\n      });\n      SetFrame(texture, frame, ...children);\n    }\n  }\n  return children;\n}\n", "import {GetVertices} from \"../components/transform/GetVertices\";\nexport function UpdateVertices(sprite) {\n  const vertices = sprite.vertices;\n  const {x0, y0, x1, y1, x2, y2, x3, y3} = GetVertices(sprite.transform);\n  vertices[0].setPosition(x0, y0);\n  vertices[1].setPosition(x1, y1);\n  vertices[2].setPosition(x2, y2);\n  vertices[3].setPosition(x3, y3);\n  return sprite;\n}\n", "import {BatchTexturedQuad} from \"../../renderer/webgl1/draw/BatchTexturedQuad\";\nimport {Container} from \"../container/Container\";\nimport {DIRTY_CONST} from \"../DIRTY_CONST\";\nimport {DrawTexturedQuad} from \"../../renderer/canvas/draw/DrawTexturedQuad\";\nimport {PackColors} from \"../../renderer/webgl1/colors/PackColors\";\nimport {SetFrame} from \"./SetFrame\";\nimport {SetTexture} from \"./SetTexture\";\nimport {UpdateVertices} from \"./UpdateVertices\";\nimport {Vertex} from \"../components/Vertex\";\nexport class Sprite extends Container {\n  constructor(x, y, texture, frame) {\n    super(x, y);\n    this.hasTexture = false;\n    this._tint = 16777215;\n    this.type = \"Sprite\";\n    this.vertices = [new Vertex(), new Vertex(), new Vertex(), new Vertex()];\n    this.setTexture(texture, frame);\n  }\n  setTexture(key, frame) {\n    SetTexture(key, frame, this);\n    return this;\n  }\n  setFrame(key) {\n    SetFrame(this.texture, key, this);\n    return this;\n  }\n  isRenderable() {\n    return this.visible && this.willRender && this.hasTexture && this.alpha > 0;\n  }\n  preRender() {\n    if (this.isDirty(DIRTY_CONST.COLORS)) {\n      PackColors(this);\n      this.clearDirty(DIRTY_CONST.COLORS);\n    }\n    if (this.isDirty(DIRTY_CONST.TRANSFORM)) {\n      UpdateVertices(this);\n      this.clearDirty(DIRTY_CONST.TRANSFORM);\n    }\n  }\n  renderGL(renderPass) {\n    this.preRender();\n    BatchTexturedQuad(this, renderPass);\n  }\n  renderCanvas(renderer) {\n    this.preRender();\n    DrawTexturedQuad(this, renderer);\n  }\n  get alpha() {\n    return this._alpha;\n  }\n  set alpha(value) {\n    if (value !== this._alpha) {\n      this._alpha = value;\n      this.vertices.forEach((vertex) => {\n        vertex.setAlpha(value);\n      });\n      this.setDirty(DIRTY_CONST.COLORS);\n    }\n  }\n  get tint() {\n    return this._tint;\n  }\n  set tint(value) {\n    if (value !== this._tint) {\n      this._tint = value;\n      this.vertices.forEach((vertex) => {\n        vertex.setTint(value);\n      });\n      this.setDirty(DIRTY_CONST.COLORS);\n    }\n  }\n  destroy(reparentChildren) {\n    super.destroy(reparentChildren);\n    this.texture = null;\n    this.frame = null;\n    this.hasTexture = false;\n    this.vertices = [];\n  }\n}\n", "import {Sprite} from \"../sprite/Sprite\";\nexport class AnimatedSprite extends Sprite {\n  constructor(x, y, texture, frame) {\n    super(x, y, texture, frame);\n    this.type = \"AnimatedSprite\";\n    this.anims = new Map();\n    this.animData = {\n      currentAnim: \"\",\n      currentFrames: [],\n      frameIndex: 0,\n      animSpeed: 0,\n      nextFrameTime: 0,\n      repeatCount: 0,\n      isPlaying: false,\n      yoyo: false,\n      pendingStart: false,\n      playingForward: true,\n      delay: 0,\n      repeatDelay: 0,\n      onStart: null,\n      onRepeat: null,\n      onComplete: null\n    };\n  }\n  stop() {\n    const data = this.animData;\n    data.isPlaying = false;\n    data.currentAnim = \"\";\n    if (data.onComplete) {\n      data.onComplete(this, data.currentAnim);\n    }\n  }\n  nextFrame() {\n    const data = this.animData;\n    data.frameIndex++;\n    if (data.frameIndex === data.currentFrames.length) {\n      if (data.yoyo) {\n        data.frameIndex--;\n        data.playingForward = false;\n      } else if (data.repeatCount === -1 || data.repeatCount > 0) {\n        data.frameIndex = 0;\n        if (data.repeatCount !== -1) {\n          data.repeatCount--;\n        }\n        if (data.onRepeat) {\n          data.onRepeat(this, data.currentAnim);\n        }\n        data.nextFrameTime += data.repeatDelay;\n      } else {\n        data.frameIndex--;\n        return this.stop();\n      }\n    }\n    this.setFrame(data.currentFrames[data.frameIndex]);\n    data.nextFrameTime += data.animSpeed;\n  }\n  prevFrame() {\n    const data = this.animData;\n    data.frameIndex--;\n    if (data.frameIndex === -1) {\n      if (data.repeatCount === -1 || data.repeatCount > 0) {\n        data.frameIndex = 0;\n        data.playingForward = true;\n        if (data.repeatCount !== -1) {\n          data.repeatCount--;\n        }\n        if (data.onRepeat) {\n          data.onRepeat(this, data.currentAnim);\n        }\n        data.nextFrameTime += data.repeatDelay;\n      } else {\n        data.frameIndex = 0;\n        return this.stop();\n      }\n    }\n    this.setFrame(data.currentFrames[data.frameIndex]);\n    data.nextFrameTime += data.animSpeed;\n  }\n  update(delta, now) {\n    super.update(delta, now);\n    const data = this.animData;\n    if (!data.isPlaying) {\n      return;\n    }\n    data.nextFrameTime -= delta * 1e3;\n    data.nextFrameTime = Math.max(data.nextFrameTime, 0);\n    if (data.nextFrameTime === 0) {\n      if (data.pendingStart) {\n        if (data.onStart) {\n          data.onStart(this, data.currentAnim);\n        }\n        data.pendingStart = false;\n        data.nextFrameTime = data.animSpeed;\n      } else if (data.playingForward) {\n        this.nextFrame();\n      } else {\n        this.prevFrame();\n      }\n    }\n  }\n  get isPlaying() {\n    return this.animData.isPlaying;\n  }\n  get isPlayingForward() {\n    return this.animData.isPlaying && this.animData.playingForward;\n  }\n  get currentAnimation() {\n    return this.animData.currentAnim;\n  }\n  destroy(reparentChildren) {\n    super.destroy(reparentChildren);\n    this.anims.clear();\n    this.animData = null;\n  }\n}\n", "import {GetVertexBufferEntry} from \"../renderpass/GetVertexBufferEntry\";\nexport function BatchSingleQuad(renderPass, x, y, width, height, u0, v0, u1, v1, textureIndex = 0, packedColor = 4294967295) {\n  const {F32, U32, offset} = GetVertexBufferEntry(renderPass, 1);\n  F32[offset + 0] = x;\n  F32[offset + 1] = y;\n  F32[offset + 2] = u0;\n  F32[offset + 3] = v1;\n  F32[offset + 4] = textureIndex;\n  U32[offset + 5] = packedColor;\n  F32[offset + 6] = x;\n  F32[offset + 7] = y + height;\n  F32[offset + 8] = u0;\n  F32[offset + 9] = v0;\n  F32[offset + 10] = textureIndex;\n  U32[offset + 11] = packedColor;\n  F32[offset + 12] = x + width;\n  F32[offset + 13] = y + height;\n  F32[offset + 14] = u1;\n  F32[offset + 15] = v0;\n  F32[offset + 16] = textureIndex;\n  U32[offset + 17] = packedColor;\n  F32[offset + 18] = x + width;\n  F32[offset + 19] = y;\n  F32[offset + 20] = u1;\n  F32[offset + 21] = v1;\n  F32[offset + 22] = textureIndex;\n  U32[offset + 23] = packedColor;\n}\n", "import {BindTexture, Flush, PopShader, PopVertexBuffer, SetShader, SetVertexBuffer, UnbindTexture} from \"../renderpass\";\nimport {BatchSingleQuad} from \"./BatchSingleQuad\";\nexport function DrawTexturedQuad(renderPass, texture, shader) {\n  if (!shader) {\n    shader = renderPass.quadShader;\n  }\n  const {u0, v0, u1, v1} = texture.firstFrame;\n  BindTexture(texture, 0);\n  SetVertexBuffer(renderPass, renderPass.quadBuffer);\n  SetShader(renderPass, shader, 0);\n  BatchSingleQuad(renderPass, 0, 0, texture.width, texture.height, u0, v0, u1, v1, 0);\n  Flush(renderPass);\n  PopVertexBuffer(renderPass);\n  PopShader(renderPass);\n  UnbindTexture(renderPass);\n}\n", "import {GameObject} from \"../GameObject\";\nexport class Layer extends GameObject {\n  constructor() {\n    super();\n    this.type = \"Layer\";\n    this.transform.passthru = true;\n    this.willRender = false;\n  }\n}\n", "import {Flush, PopFramebuffer, SetFramebuffer} from \"../../renderer/webgl1/renderpass\";\nimport {GetHeight, GetResolution, GetWidth} from \"../../config/size\";\nimport {CreateFramebuffer} from \"../../renderer/webgl1/fbo/CreateFramebuffer\";\nimport {DIRTY_CONST} from \"../DIRTY_CONST\";\nimport {DrawTexturedQuad} from \"../../renderer/webgl1/draw/DrawTexturedQuad\";\nimport {GLTextureBinding} from \"../../renderer/webgl1/textures/GLTextureBinding\";\nimport {Layer} from \"../layer/Layer\";\nimport {Texture} from \"../../textures/Texture\";\nexport class RenderLayer extends Layer {\n  constructor() {\n    super();\n    this.type = \"RenderLayer\";\n    this.willRender = true;\n    this.willRenderChildren = true;\n    this.willCacheChildren = true;\n    this.setDirty(DIRTY_CONST.CHILD_CACHE);\n    const width = GetWidth();\n    const height = GetHeight();\n    const resolution = GetResolution();\n    const texture = new Texture(null, width * resolution, height * resolution);\n    const binding = new GLTextureBinding(texture);\n    texture.binding = binding;\n    binding.framebuffer = CreateFramebuffer(binding.texture);\n    this.texture = texture;\n    this.framebuffer = binding.framebuffer;\n  }\n  renderGL(renderPass) {\n    if (this.numChildren > 0) {\n      Flush(renderPass);\n      if (!this.willCacheChildren || this.isDirty(DIRTY_CONST.CHILD_CACHE)) {\n        SetFramebuffer(renderPass, this.framebuffer, true);\n        this.clearDirty(DIRTY_CONST.CHILD_CACHE);\n      } else {\n        SetFramebuffer(renderPass, this.framebuffer, false);\n        this.postRenderGL(renderPass);\n      }\n    }\n  }\n  postRenderGL(renderPass) {\n    Flush(renderPass);\n    PopFramebuffer(renderPass);\n    DrawTexturedQuad(renderPass, this.texture);\n    this.clearDirty(DIRTY_CONST.TRANSFORM);\n  }\n}\n", "import {DIRTY_CONST} from \"../DIRTY_CONST\";\nimport {DrawTexturedQuad} from \"../../renderer/webgl1/draw/DrawTexturedQuad\";\nimport {Flush} from \"../../renderer/webgl1/renderpass/Flush\";\nimport {PopFramebuffer} from \"../../renderer/webgl1/renderpass/PopFramebuffer\";\nimport {RenderLayer} from \"../renderlayer/RenderLayer\";\nexport class EffectLayer extends RenderLayer {\n  constructor(...shaders) {\n    super();\n    this.shaders = [];\n    this.type = \"EffectLayer\";\n    if (Array.isArray(shaders)) {\n      this.shaders = shaders;\n    }\n  }\n  postRenderGL(renderPass) {\n    const shaders = this.shaders;\n    const texture = this.texture;\n    Flush(renderPass);\n    PopFramebuffer(renderPass);\n    if (shaders.length === 0) {\n      DrawTexturedQuad(renderPass, texture);\n    } else {\n      let prevTexture = texture;\n      for (let i = 0; i < shaders.length; i++) {\n        const shader = shaders[i];\n        DrawTexturedQuad(renderPass, prevTexture, shader);\n        prevTexture = shader.texture;\n      }\n      DrawTexturedQuad(renderPass, prevTexture);\n    }\n    this.clearDirty(DIRTY_CONST.TRANSFORM);\n  }\n}\n", "export function BatchTexturedQuadBuffer(batch, renderPass) {\n}\n", "export function GetVerticesFromValues(left, right, top, bottom, x, y, rotation = 0, scaleX = 1, scaleY = 1, skewX = 0, skewY = 0) {\n  const a = Math.cos(rotation + skewY) * scaleX;\n  const b = Math.sin(rotation + skewY) * scaleX;\n  const c = -Math.sin(rotation - skewX) * scaleY;\n  const d = Math.cos(rotation - skewX) * scaleY;\n  const x0 = left * a + top * c + x;\n  const y0 = left * b + top * d + y;\n  const x1 = left * a + bottom * c + x;\n  const y1 = left * b + bottom * d + y;\n  const x2 = right * a + bottom * c + x;\n  const y2 = right * b + bottom * d + y;\n  const x3 = right * a + top * c + x;\n  const y3 = right * b + top * d + y;\n  return {x0, y0, x1, y1, x2, y2, x3, y3};\n}\n", "import {BatchTexturedQuadBuffer} from \"../../renderer/webgl1/draw/BatchTexturedQuadBuffer\";\nimport {Clamp} from \"../../math/Clamp\";\nimport {DIRTY_CONST} from \"../DIRTY_CONST\";\nimport {DeleteFramebuffer} from \"../../renderer/webgl1/fbo/DeleteFramebuffer\";\nimport {GetVerticesFromValues} from \"../components/transform/GetVerticesFromValues\";\nimport {Layer} from \"../layer/Layer\";\nimport {PackColor} from \"../../renderer/webgl1/colors/PackColor\";\nimport {Texture} from \"../../textures/Texture\";\nimport {TextureManagerInstance} from \"../../textures/TextureManagerInstance\";\nimport {gl} from \"../../renderer/webgl1/GL\";\nexport class SpriteBatch extends Layer {\n  constructor(maxSize, texture) {\n    super();\n    this.glTextureIndex = 0;\n    this.hasTexture = false;\n    this.type = \"SpriteBatch\";\n    this.willRender = true;\n    this.setTexture(texture);\n    this.setMaxSize(maxSize);\n  }\n  resetBuffers() {\n    let ibo = [];\n    for (let i = 0; i < this.maxSize * 4; i += 4) {\n      ibo.push(i + 0, i + 1, i + 2, i + 2, i + 3, i + 0);\n    }\n    this.data = new ArrayBuffer(this.maxSize * 96);\n    this.index = new Uint16Array(ibo);\n    this.vertexViewF32 = new Float32Array(this.data);\n    this.vertexViewU32 = new Uint32Array(this.data);\n    if (gl) {\n      DeleteFramebuffer(this.vertexBuffer);\n      DeleteFramebuffer(this.indexBuffer);\n      this.vertexBuffer = gl.createBuffer();\n      this.indexBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.data, gl.STATIC_DRAW);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.index, gl.STATIC_DRAW);\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    }\n    ibo = [];\n    this.count = 0;\n  }\n  setMaxSize(value) {\n    this.maxSize = Clamp(value, 0, 65535);\n    this.resetBuffers();\n    return this;\n  }\n  setTexture(key) {\n    let texture;\n    if (key instanceof Texture) {\n      texture = key;\n    } else {\n      texture = TextureManagerInstance.get().get(key);\n    }\n    if (!texture) {\n      console.warn(`Invalid Texture key: ${key}`);\n    } else {\n      this.texture = texture;\n      this.hasTexture = true;\n      this.glTextureIndex = -1;\n    }\n    return this;\n  }\n  isRenderable() {\n    return this.visible && this.willRender && this.hasTexture && this.count > 0;\n  }\n  clear() {\n    this.count = 0;\n    return this;\n  }\n  addToBatch(frame, color, x0, y0, x1, y1, x2, y2, x3, y3) {\n    if (this.count >= this.maxSize) {\n      console.warn(\"SpriteBatch full\");\n      return this;\n    }\n    const {u0, u1, v0, v1} = frame;\n    const F32 = this.vertexViewF32;\n    const U32 = this.vertexViewU32;\n    const offset = this.count * 24;\n    const textureIndex = this.texture.binding ? this.texture.binding.index : 0;\n    F32[offset + 0] = x0;\n    F32[offset + 1] = y0;\n    F32[offset + 2] = u0;\n    F32[offset + 3] = v0;\n    F32[offset + 4] = textureIndex;\n    U32[offset + 5] = color;\n    F32[offset + 6] = x1;\n    F32[offset + 7] = y1;\n    F32[offset + 8] = u0;\n    F32[offset + 9] = v1;\n    F32[offset + 10] = textureIndex;\n    U32[offset + 11] = color;\n    F32[offset + 12] = x2;\n    F32[offset + 13] = y2;\n    F32[offset + 14] = u1;\n    F32[offset + 15] = v1;\n    F32[offset + 16] = textureIndex;\n    U32[offset + 17] = color;\n    F32[offset + 18] = x3;\n    F32[offset + 19] = y3;\n    F32[offset + 20] = u1;\n    F32[offset + 21] = v0;\n    F32[offset + 22] = textureIndex;\n    U32[offset + 23] = color;\n    this.setDirty(DIRTY_CONST.TRANSFORM);\n    this.count++;\n    return this;\n  }\n  add(config) {\n    const {\n      frame = null,\n      x = 0,\n      y = 0,\n      rotation = 0,\n      scaleX = 1,\n      scaleY = 1,\n      skewX = 0,\n      skewY = 0,\n      originX = 0,\n      originY = 0,\n      alpha = 1,\n      tint = 16777215\n    } = config;\n    const textureFrame = this.texture.getFrame(frame);\n    const {left, right, top, bottom} = textureFrame.getExtent(originX, originY);\n    const {x0, y0, x1, y1, x2, y2, x3, y3} = GetVerticesFromValues(left, right, top, bottom, x, y, rotation, scaleX, scaleY, skewX, skewY);\n    const packedColor = PackColor(tint, alpha);\n    return this.addToBatch(textureFrame, packedColor, x0, y0, x1, y1, x2, y2, x3, y3);\n  }\n  addXY(x, y, frame) {\n    const textureFrame = this.texture.getFrame(frame);\n    const {left, right, top, bottom} = textureFrame.getExtent(0, 0);\n    const {x0, y0, x1, y1, x2, y2, x3, y3} = GetVerticesFromValues(left, right, top, bottom, x, y);\n    return this.addToBatch(textureFrame, 4294967295, x0, y0, x1, y1, x2, y2, x3, y3);\n  }\n  updateTextureIndex() {\n    const textureIndex = this.texture.binding.index;\n    if (textureIndex === this.glTextureIndex) {\n      return;\n    }\n    const F32 = this.vertexViewF32;\n    this.glTextureIndex = textureIndex;\n    for (let i = 0; i < this.count; i++) {\n      F32[i * 24 + 4] = textureIndex;\n      F32[i * 24 + 10] = textureIndex;\n      F32[i * 24 + 16] = textureIndex;\n      F32[i * 24 + 22] = textureIndex;\n    }\n  }\n  renderGL(renderPass) {\n    BatchTexturedQuadBuffer(this, renderPass);\n  }\n  destroy() {\n    super.destroy();\n    DeleteFramebuffer(this.vertexBuffer);\n    DeleteFramebuffer(this.indexBuffer);\n    this.data = null;\n    this.vertexViewF32 = null;\n    this.vertexViewU32 = null;\n    this.index = null;\n    this.texture = null;\n    this.hasTexture = false;\n  }\n}\n", "export function CreateCanvas(width, height) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width;\n  canvas.height = height;\n  return canvas.getContext(\"2d\");\n}\n", "import {CreateCanvas} from \"../CreateCanvas\";\nimport {Texture} from \"../Texture\";\nexport function CanvasTexture(width = 32, height = 32) {\n  const ctx = CreateCanvas(width, height);\n  return new Texture(ctx.canvas);\n}\n", "import {CanvasTexture} from \"../../textures/types/CanvasTexture\";\nimport {DIRTY_CONST} from \"../DIRTY_CONST\";\nimport {GameInstance} from \"../../GameInstance\";\nimport {Sprite} from \"../sprite/Sprite\";\nexport class Text extends Sprite {\n  constructor(x, y, text = \"\", font, fillStyle) {\n    super(x, y, CanvasTexture());\n    this.splitRegExp = /(?:\\r\\n|\\r|\\n)/;\n    this.padding = {left: 0, right: 0, top: 0, bottom: 0};\n    this.verticalAlign = \"ascent\";\n    this.lineSpacing = 0;\n    this.font = \"16px monospace\";\n    this.fillStyle = \"#fff\";\n    this.strokeStyle = \"\";\n    this.backgroundStyle = \"\";\n    this.cornerRadius = 0;\n    this.textAlign = \"left\";\n    this.textBaseline = \"alphabetic\";\n    this.lineWidth = 0;\n    this.lineDash = [];\n    this.antialias = false;\n    this.type = \"Text\";\n    const game = GameInstance.get();\n    this.resolution = game.renderer.resolution;\n    this.canvas = this.texture.image;\n    this.context = this.canvas.getContext(\"2d\");\n    if (font) {\n      this.font = font;\n    }\n    if (fillStyle) {\n      this.fillStyle = fillStyle;\n    }\n    this.setText(text);\n  }\n  syncContext(canvas, ctx) {\n    if (this.preRenderCallback) {\n      this.preRenderCallback(canvas, ctx);\n    }\n    ctx.font = this.font;\n    ctx.textBaseline = this.textBaseline;\n    ctx.textAlign = this.textAlign;\n    ctx.fillStyle = this.fillStyle;\n    ctx.strokeStyle = this.strokeStyle;\n    ctx.lineWidth = this.lineWidth;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.setLineDash(this.lineDash);\n    ctx.imageSmoothingEnabled = this.antialias;\n  }\n  updateText() {\n    const canvas = this.canvas;\n    const ctx = this.context;\n    const resolution = this.resolution;\n    const lines = this._text.split(this.splitRegExp);\n    const padding = this.padding;\n    const fillStyle = this.fillStyle;\n    const strokeStyle = this.strokeStyle;\n    const strokeWidth = this.lineWidth;\n    const lineSpacing = this.lineSpacing;\n    const strokeWidthHalf = strokeWidth > 0 ? strokeWidth / 2 : 0;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.syncContext(canvas, ctx);\n    ctx.textAlign = \"start\";\n    let maxWidth = 0;\n    let maxHeight = 0;\n    let y = 0;\n    const lineMetrics = [];\n    const vAlignAscent = this.verticalAlign === \"ascent\";\n    const metrics = ctx.measureText(\"|M\\xC9q\");\n    const averageLineHeight = Math.ceil(Math.abs(metrics.actualBoundingBoxAscent) + Math.abs(metrics.actualBoundingBoxDescent)) + strokeWidth;\n    for (let i = 0; i < lines.length; i++) {\n      const metrics2 = ctx.measureText(lines[i]);\n      const left = metrics2.actualBoundingBoxLeft;\n      const right = metrics2.actualBoundingBoxRight;\n      let ascent = metrics2.actualBoundingBoxAscent;\n      let descent = metrics2.actualBoundingBoxDescent;\n      if (!ascent && !descent || lines[i] === \"\") {\n        ascent = averageLineHeight;\n        descent = 0;\n      }\n      const lineWidth = Math.ceil(Math.abs(left) + Math.abs(right)) + strokeWidth;\n      const lineHeight = Math.ceil(Math.abs(ascent) + Math.abs(descent)) + strokeWidth;\n      if (vAlignAscent) {\n        y += ascent + strokeWidthHalf;\n        if (i > 0) {\n          y += lineSpacing + strokeWidthHalf;\n        }\n        maxHeight = y + descent + strokeWidthHalf;\n      } else {\n        y = maxHeight + (lineHeight - descent - strokeWidthHalf);\n        maxHeight += lineHeight;\n        if (i < lines.length - 1) {\n          maxHeight += lineSpacing;\n        }\n      }\n      maxWidth = Math.max(maxWidth, lineWidth);\n      lineMetrics.push({lineWidth, lineHeight, ascent, descent, left, right, y});\n    }\n    maxWidth += padding.left + padding.right;\n    maxHeight += padding.top + padding.bottom;\n    const displayWidth = this.fixedWidth ? this.fixedWidth : maxWidth;\n    const displayHeight = this.fixedHeight ? this.fixedHeight : maxHeight;\n    const canvasWidth = Math.ceil(displayWidth * resolution);\n    const canvasHeight = Math.ceil(displayHeight * resolution);\n    if (canvas.width !== canvasWidth || canvas.height !== canvasHeight) {\n      canvas.width = canvasWidth;\n      canvas.height = canvasHeight;\n      this.texture.setSize(displayWidth, displayHeight);\n      this.setSize(displayWidth, displayHeight);\n    }\n    ctx.save();\n    ctx.scale(resolution, resolution);\n    this.syncContext(canvas, ctx);\n    const backgroundStyle = this.backgroundStyle;\n    if (backgroundStyle) {\n      ctx.save();\n      ctx.fillStyle = backgroundStyle;\n      ctx.strokeStyle = backgroundStyle;\n      const cornerRadius = this.cornerRadius;\n      const halfRadius = cornerRadius > 0 ? cornerRadius / 2 : 0;\n      if (cornerRadius) {\n        ctx.lineWidth = cornerRadius;\n        ctx.strokeRect(halfRadius, halfRadius, displayWidth - cornerRadius, displayHeight - cornerRadius);\n      }\n      ctx.fillRect(halfRadius, halfRadius, displayWidth - cornerRadius, displayHeight - cornerRadius);\n      ctx.restore();\n    }\n    const textAlign = this.textAlign;\n    const isCenter = textAlign === \"center\";\n    const isRight = textAlign === \"right\" || textAlign === \"end\";\n    const yOffset = (displayHeight - maxHeight) / 2 + padding.top;\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      const metrics2 = lineMetrics[i];\n      let tx = padding.left + metrics2.left + strokeWidthHalf;\n      const ty = yOffset + metrics2.y;\n      if (isCenter) {\n        tx = displayWidth / 2;\n      } else if (isRight) {\n        tx = displayWidth - strokeWidthHalf;\n      }\n      if (strokeStyle) {\n        ctx.strokeText(line, tx, ty);\n      }\n      if (fillStyle) {\n        ctx.fillText(line, tx, ty);\n      }\n    }\n    ctx.restore();\n    if (this.texture.binding) {\n      this.texture.binding.update();\n    }\n    this.setDirty(DIRTY_CONST.TEXTURE);\n    return this;\n  }\n  get text() {\n    return this._text;\n  }\n  set text(value) {\n    this.setText(value);\n  }\n  setText(value = \"\") {\n    if (Array.isArray(value)) {\n      value = value.join(\"\\n\");\n    }\n    if (value !== this._text) {\n      this._text = value.toString();\n      this.updateText();\n    }\n    return this;\n  }\n  destroy(reparentChildren) {\n    this.texture.destroy();\n    this.fillStyle = null;\n    this.strokeStyle = null;\n    this.backgroundStyle = null;\n    this.canvas = null;\n    this.context = null;\n    super.destroy(reparentChildren);\n  }\n}\n", "import {VertexBuffer} from \"../../renderer/webgl1/buffers\";\nfunction GetVec3(data, index) {\n  const x = data[index * 3 + 0];\n  const y = data[index * 3 + 1];\n  const z = data[index * 3 + 2];\n  return [x, y, z];\n}\nfunction GetVec2(data, index) {\n  const x = data[index * 2 + 0];\n  const y = data[index * 2 + 1];\n  return [x, y];\n}\nfunction CreateNonIndexedVertexBuffer(data) {\n  const {\n    vertices,\n    normals,\n    uvs\n  } = data;\n  const total = vertices.length;\n  const count = total / 3;\n  const batchSize = count / 3;\n  const buffer = new VertexBuffer({batchSize, isDynamic: false, vertexElementSize: 8, elementsPerEntry: 3});\n  const F32 = buffer.vertexViewF32;\n  let offset = 0;\n  let uvIndex = 0;\n  for (let i = 0; i < total; i += 3) {\n    F32[offset++] = vertices[i + 0];\n    F32[offset++] = vertices[i + 1];\n    F32[offset++] = vertices[i + 2];\n    F32[offset++] = normals[i + 0];\n    F32[offset++] = normals[i + 1];\n    F32[offset++] = normals[i + 2];\n    F32[offset++] = uvs[uvIndex + 0];\n    F32[offset++] = uvs[uvIndex + 1];\n    uvIndex += 2;\n  }\n  buffer.count = count;\n  return buffer;\n}\nfunction CreateVertexBuffer(data) {\n  const {\n    vertices,\n    normals,\n    uvs,\n    indices\n  } = data;\n  const buffer = new VertexBuffer({batchSize: indices.length / 3, isDynamic: false, vertexElementSize: 8, elementsPerEntry: 3});\n  const F32 = buffer.vertexViewF32;\n  let offset = 0;\n  for (let i = 0; i < indices.length; i += 3) {\n    const i1 = indices[i + 0];\n    const i2 = indices[i + 1];\n    const i3 = indices[i + 2];\n    const v1 = GetVec3(vertices, i1);\n    const v2 = GetVec3(vertices, i2);\n    const v3 = GetVec3(vertices, i3);\n    const n1 = GetVec3(normals, i1);\n    const n2 = GetVec3(normals, i2);\n    const n3 = GetVec3(normals, i3);\n    const uv1 = GetVec2(uvs, i1);\n    const uv2 = GetVec2(uvs, i2);\n    const uv3 = GetVec2(uvs, i3);\n    F32[offset++] = v1[0];\n    F32[offset++] = v1[1];\n    F32[offset++] = v1[2];\n    F32[offset++] = n1[0];\n    F32[offset++] = n1[1];\n    F32[offset++] = n1[2];\n    F32[offset++] = uv1[0];\n    F32[offset++] = uv1[1];\n    F32[offset++] = v2[0];\n    F32[offset++] = v2[1];\n    F32[offset++] = v2[2];\n    F32[offset++] = n2[0];\n    F32[offset++] = n2[1];\n    F32[offset++] = n2[2];\n    F32[offset++] = uv2[0];\n    F32[offset++] = uv2[1];\n    F32[offset++] = v3[0];\n    F32[offset++] = v3[1];\n    F32[offset++] = v3[2];\n    F32[offset++] = n3[0];\n    F32[offset++] = n3[1];\n    F32[offset++] = n3[2];\n    F32[offset++] = uv3[0];\n    F32[offset++] = uv3[1];\n  }\n  buffer.count = indices.length;\n  return buffer;\n}\nexport function GetBufferFromVertexSet(data) {\n  if (data.indices && data.indices.length > 0) {\n    return CreateVertexBuffer(data);\n  } else {\n    return CreateNonIndexedVertexBuffer(data);\n  }\n}\n", "import {GetBufferFromVertexSet} from \"./GetBufferFromVertexSet\";\nexport class Geometry {\n  constructor(data) {\n    if (data) {\n      if (data.hasOwnProperty(\"vertices\")) {\n        this.buffer = GetBufferFromVertexSet(data);\n      } else {\n        this.buffer = data;\n      }\n    }\n  }\n  destroy() {\n    this.buffer.destroy();\n  }\n}\n", "export class ParseObj {\n  constructor(fileContents, flipUVs = true, defaultModelName = \"untitled\") {\n    this.currentMaterial = \"\";\n    this.currentGroup = \"\";\n    this.smoothingGroup = 0;\n    this.result = {\n      materialLibraries: [],\n      models: []\n    };\n    this.fileContents = fileContents;\n    this.defaultModelName = defaultModelName;\n    this.flipUVs = flipUVs;\n  }\n  parseAsync() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(this.parse());\n      } catch (theError) {\n        reject(theError);\n      }\n    });\n  }\n  parse() {\n    const stripComments = (line) => {\n      const commentIndex = line.indexOf(\"#\");\n      if (commentIndex > -1) {\n        return line.substring(0, commentIndex);\n      }\n      return line;\n    };\n    const lines = this.fileContents.split(\"\\n\");\n    for (const line of lines) {\n      const strippedline = stripComments(line);\n      const lineItems = strippedline.replace(/\\s\\s+/g, \" \").trim().split(\" \");\n      switch (lineItems[0].toLowerCase()) {\n        case \"o\":\n          this.parseObject(lineItems);\n          break;\n        case \"g\":\n          this.parseGroup(lineItems);\n          break;\n        case \"v\":\n          this.parseVertexCoords(lineItems);\n          break;\n        case \"vt\":\n          this.parseTextureCoords(lineItems);\n          break;\n        case \"vn\":\n          this.parseVertexNormal(lineItems);\n          break;\n        case \"s\":\n          this.parseSmoothShadingStatement(lineItems);\n          break;\n        case \"f\":\n          this.parsePolygon(lineItems);\n          break;\n        case \"mtllib\":\n          this.parseMtlLib(lineItems);\n          break;\n        case \"usemtl\":\n          this.parseUseMtl(lineItems);\n          break;\n      }\n    }\n    this.fileContents = \"\";\n    return this.result;\n  }\n  currentModel() {\n    if (this.result.models.length === 0) {\n      this.result.models.push({\n        faces: [],\n        name: this.defaultModelName,\n        textureCoords: [],\n        vertexNormals: [],\n        vertices: []\n      });\n      this.currentGroup = \"\";\n      this.smoothingGroup = 0;\n    }\n    return this.result.models[this.result.models.length - 1];\n  }\n  parseObject(lineItems) {\n    const modelName = lineItems.length >= 2 ? lineItems[1] : this.defaultModelName;\n    this.result.models.push({\n      faces: [],\n      name: modelName,\n      textureCoords: [],\n      vertexNormals: [],\n      vertices: []\n    });\n    this.currentGroup = \"\";\n    this.smoothingGroup = 0;\n  }\n  parseGroup(lineItems) {\n    if (lineItems.length !== 2) {\n      throw \"Group statements must have exactly 1 argument (eg. g group_1)\";\n    }\n    this.currentGroup = lineItems[1];\n  }\n  parseVertexCoords(lineItems) {\n    const len = lineItems.length;\n    const x = len >= 2 ? parseFloat(lineItems[1]) : 0;\n    const y = len >= 3 ? parseFloat(lineItems[2]) : 0;\n    const z = len >= 4 ? parseFloat(lineItems[3]) : 0;\n    this.currentModel().vertices.push({x, y, z});\n  }\n  parseTextureCoords(lineItems) {\n    const len = lineItems.length;\n    let u = len >= 2 ? parseFloat(lineItems[1]) : 0;\n    let v = len >= 3 ? parseFloat(lineItems[2]) : 0;\n    let w = len >= 4 ? parseFloat(lineItems[3]) : 0;\n    if (isNaN(u)) {\n      u = 0;\n    }\n    if (isNaN(v)) {\n      v = 0;\n    }\n    if (isNaN(w)) {\n      w = 0;\n    }\n    if (this.flipUVs) {\n      v = 1 - v;\n    }\n    this.currentModel().textureCoords.push({u, v, w});\n  }\n  parseVertexNormal(lineItems) {\n    const len = lineItems.length;\n    const x = len >= 2 ? parseFloat(lineItems[1]) : 0;\n    const y = len >= 3 ? parseFloat(lineItems[2]) : 0;\n    const z = len >= 4 ? parseFloat(lineItems[3]) : 0;\n    this.currentModel().vertexNormals.push({x, y, z});\n  }\n  parsePolygon(lineItems) {\n    const totalVertices = lineItems.length - 1;\n    if (totalVertices < 3) {\n      throw \"Face < 3 vertices\";\n    }\n    const face = {\n      group: this.currentGroup,\n      material: this.currentMaterial,\n      smoothingGroup: this.smoothingGroup,\n      vertices: []\n    };\n    for (let i = 0; i < totalVertices; i++) {\n      const vertexString = lineItems[i + 1];\n      const vertexValues = vertexString.split(\"/\");\n      const vvLen = vertexValues.length;\n      if (vvLen < 1 || vvLen > 3) {\n        throw \"Too many / values for single vertex\";\n      }\n      let vertexIndex = 0;\n      let textureCoordsIndex = 0;\n      let vertexNormalIndex = 0;\n      vertexIndex = parseInt(vertexValues[0], 10);\n      if (vvLen > 1 && vertexValues[1] !== \"\") {\n        textureCoordsIndex = parseInt(vertexValues[1], 10);\n      }\n      if (vvLen > 2) {\n        vertexNormalIndex = parseInt(vertexValues[2], 10);\n      }\n      if (vertexIndex === 0) {\n        throw \"Faces uses invalid vertex index of 0\";\n      }\n      if (vertexIndex < 0) {\n        vertexIndex = this.currentModel().vertices.length + 1 + vertexIndex;\n      }\n      textureCoordsIndex -= 1;\n      vertexIndex -= 1;\n      vertexNormalIndex -= 1;\n      face.vertices.push({\n        textureCoordsIndex,\n        vertexIndex,\n        vertexNormalIndex\n      });\n    }\n    this.currentModel().faces.push(face);\n  }\n  parseMtlLib(lineItems) {\n    if (lineItems.length >= 2) {\n      this.result.materialLibraries.push(lineItems[1]);\n    }\n  }\n  parseUseMtl(lineItems) {\n    if (lineItems.length >= 2) {\n      this.currentMaterial = lineItems[1];\n    }\n  }\n  parseSmoothShadingStatement(lineItems) {\n    if (lineItems.length !== 2) {\n      throw \"Smoothing group statements must have exactly 1 argument (eg. s <number|off>)\";\n    }\n    const groupNumber = lineItems[1].toLowerCase() === \"off\" ? 0 : parseInt(lineItems[1], 10);\n    this.smoothingGroup = groupNumber;\n  }\n}\n", "import {ParseObj} from \"./ParseObj\";\nimport {VertexBuffer} from \"../../renderer/webgl1/buffers/VertexBuffer\";\nexport function GetBufferFromObj(data, flipUVs = true) {\n  const parser = new ParseObj(data, flipUVs);\n  const result = parser.parse();\n  const output = [];\n  result.models.forEach((model) => {\n    const {\n      faces,\n      textureCoords,\n      vertexNormals,\n      vertices\n    } = model;\n    let totalFaces = 0;\n    for (let i = 0; i < faces.length; i++) {\n      totalFaces += faces[i].vertices.length === 4 ? 6 : 3;\n    }\n    const buffer = new VertexBuffer({batchSize: totalFaces, isDynamic: false, vertexElementSize: 8, elementsPerEntry: 3});\n    const F32 = buffer.vertexViewF32;\n    let offset = 0;\n    for (let i = 0; i < faces.length; i++) {\n      const face = faces[i];\n      const i1 = face.vertices[0];\n      const i2 = face.vertices[1];\n      const i3 = face.vertices[2];\n      const v1 = vertices[i1.vertexIndex];\n      const v2 = vertices[i2.vertexIndex];\n      const v3 = vertices[i3.vertexIndex];\n      const n1 = vertexNormals[i1.vertexNormalIndex];\n      const n2 = vertexNormals[i2.vertexNormalIndex];\n      const n3 = vertexNormals[i3.vertexNormalIndex];\n      const uv1 = textureCoords[i1.textureCoordsIndex];\n      const uv2 = textureCoords[i2.textureCoordsIndex];\n      const uv3 = textureCoords[i3.textureCoordsIndex];\n      F32[offset++] = v1.x;\n      F32[offset++] = v1.y;\n      F32[offset++] = v1.z;\n      F32[offset++] = n1.x;\n      F32[offset++] = n1.y;\n      F32[offset++] = n1.z;\n      F32[offset++] = uv1.u;\n      F32[offset++] = uv1.v;\n      F32[offset++] = v2.x;\n      F32[offset++] = v2.y;\n      F32[offset++] = v2.z;\n      F32[offset++] = n2.x;\n      F32[offset++] = n2.y;\n      F32[offset++] = n2.z;\n      F32[offset++] = uv2.u;\n      F32[offset++] = uv2.v;\n      F32[offset++] = v3.x;\n      F32[offset++] = v3.y;\n      F32[offset++] = v3.z;\n      F32[offset++] = n3.x;\n      F32[offset++] = n3.y;\n      F32[offset++] = n3.z;\n      F32[offset++] = uv3.u;\n      F32[offset++] = uv3.v;\n      buffer.count += 3;\n      if (face.vertices.length === 4) {\n        const i4 = face.vertices[3];\n        const v4 = vertices[i4.vertexIndex];\n        const n4 = vertexNormals[i4.vertexNormalIndex];\n        const uv4 = textureCoords[i4.textureCoordsIndex];\n        F32[offset++] = v1.x;\n        F32[offset++] = v1.y;\n        F32[offset++] = v1.z;\n        F32[offset++] = n1.x;\n        F32[offset++] = n1.y;\n        F32[offset++] = n1.z;\n        F32[offset++] = uv1.u;\n        F32[offset++] = uv1.v;\n        F32[offset++] = v3.x;\n        F32[offset++] = v3.y;\n        F32[offset++] = v3.z;\n        F32[offset++] = n3.x;\n        F32[offset++] = n3.y;\n        F32[offset++] = n3.z;\n        F32[offset++] = uv3.u;\n        F32[offset++] = uv3.v;\n        F32[offset++] = v4.x;\n        F32[offset++] = v4.y;\n        F32[offset++] = v4.z;\n        F32[offset++] = n4.x;\n        F32[offset++] = n4.y;\n        F32[offset++] = n4.z;\n        F32[offset++] = uv4.u;\n        F32[offset++] = uv4.v;\n        buffer.count += 3;\n      }\n    }\n    output.push({name: model.name, buffer});\n  });\n  return output;\n}\n", "import {Clamp} from \"../../math\";\nimport {RGBCallback} from \"../../math/vec3\";\nexport class Material {\n  constructor(config = {}) {\n    this.isDirty = false;\n    const {\n      ambient = [1, 1, 1],\n      diffuse = [1, 1, 1],\n      specular = [1, 1, 1],\n      shine = 0.25\n    } = config;\n    const onChange = () => this.update();\n    this.ambient = new RGBCallback(onChange).fromArray(ambient);\n    this.diffuse = new RGBCallback(onChange).fromArray(diffuse);\n    this.specular = new RGBCallback(onChange).fromArray(specular);\n    this._shine = shine;\n  }\n  get shine() {\n    return this._shine;\n  }\n  set shine(value) {\n    this._shine = Clamp(value, 0, 1);\n    this.isDirty = true;\n  }\n  update() {\n    this.isDirty = true;\n  }\n  setUniforms(shader) {\n    shader.setUniform(\"uMaterialAmbient\", this.ambient.toArray());\n    shader.setUniform(\"uMaterialDiffuse\", this.diffuse.toArray());\n    shader.setUniform(\"uMaterialSpecular\", this.specular.toArray());\n    shader.setUniform(\"uMaterialShine\", this._shine * 256);\n  }\n  destroy() {\n    this.ambient.destroy();\n    this.diffuse.destroy();\n    this.specular.destroy();\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CircleContains(circle, x, y) {\n  if (circle.radius > 0 && x >= circle.left && x <= circle.right && y >= circle.top && y <= circle.bottom) {\n    const dx = (circle.x - x) * (circle.x - x);\n    const dy = (circle.y - y) * (circle.y - y);\n    return dx + dy <= circle.radius * circle.radius;\n  } else {\n    return false;\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CircleContains} from \"./CircleContains\";\nexport class Circle {\n  constructor(x = 0, y = 0, radius = 0) {\n    this.set(x, y, radius);\n  }\n  set(x = 0, y = 0, radius = 0) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    return this;\n  }\n  contains(x, y) {\n    return CircleContains(this, x, y);\n  }\n  get radius() {\n    return this._radius;\n  }\n  set radius(value) {\n    this._radius = value;\n    this._diameter = value * 2;\n  }\n  get diameter() {\n    return this._diameter;\n  }\n  set diameter(value) {\n    this._diameter = value;\n    this._radius = value * 0.5;\n  }\n  get left() {\n    return this.x - this._radius;\n  }\n  set left(value) {\n    this.x = value + this._radius;\n  }\n  get right() {\n    return this.x + this._radius;\n  }\n  set right(value) {\n    this.x = value - this._radius;\n  }\n  get top() {\n    return this.y - this._radius;\n  }\n  set top(value) {\n    this.y = value + this._radius;\n  }\n  get bottom() {\n    return this.y + this._radius;\n  }\n  set bottom(value) {\n    this.y = value - this._radius;\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CircleContains} from \"./CircleContains\";\nexport function CircleContainsPoint(circle, point) {\n  return CircleContains(circle, point.x, point.y);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CircleContains} from \"./CircleContains\";\nexport function CircleContainsRect(circle, rect) {\n  return CircleContains(circle, rect.x, rect.y) && CircleContains(circle, rect.right, rect.y) && CircleContains(circle, rect.x, rect.bottom) && CircleContains(circle, rect.right, rect.bottom);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CircleEquals(circle, toCompare) {\n  return circle.x === toCompare.x && circle.y === toCompare.y && circle.radius === toCompare.radius;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Circle} from \"./Circle\";\nexport function CloneCircle(source) {\n  return new Circle(source.x, source.y, source.radius);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CopyCircleFrom(source, dest) {\n  return dest.set(source.x, source.y, source.radius);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetCircleArea(circle) {\n  return circle.radius > 0 ? Math.PI * circle.radius * circle.radius : 0;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Rectangle} from \"../rectangle/Rectangle\";\nexport function GetCircleBounds(circle, out = new Rectangle()) {\n  return out.set(circle.left, circle.top, circle.diameter, circle.diameter);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetCircleCircumference(circle) {\n  return 2 * (Math.PI * circle.radius);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetCircleCircumferencePoint(circle, angle, out = new Vec2()) {\n  return out.set(circle.x + circle.radius * Math.cos(angle), circle.y + circle.radius * Math.sin(angle));\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {FromPercent} from \"../../math/FromPercent\";\nimport {GetCircleCircumferencePoint} from \"./GetCircleCircumferencePoint\";\nimport {MATH_CONST} from \"../../math/const\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetCirclePoint(circle, position, out = new Vec2()) {\n  const angle = FromPercent(position, 0, MATH_CONST.PI2);\n  return GetCircleCircumferencePoint(circle, angle, out);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {FromPercent} from \"../../math/FromPercent\";\nimport {GetCircleCircumference} from \"./GetCircleCircumference\";\nimport {GetCircleCircumferencePoint} from \"./GetCircleCircumferencePoint\";\nimport {MATH_CONST} from \"../../math/const\";\nexport function GetCirclePoints(circle, step, quantity = 0, out = []) {\n  if (!quantity) {\n    quantity = GetCircleCircumference(circle) / step;\n  }\n  for (let i = 0; i < quantity; i++) {\n    const angle = FromPercent(i / quantity, 0, MATH_CONST.PI2);\n    out.push(GetCircleCircumferencePoint(circle, angle));\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetCircleRandomPoint(circle, out = new Vec2()) {\n  const t = 2 * Math.PI * Math.random();\n  const u = Math.random() + Math.random();\n  const r = u > 1 ? 2 - u : u;\n  const x = r * Math.cos(t);\n  const y = r * Math.sin(t);\n  return out.set(circle.x + x * circle.radius, circle.y + y * circle.radius);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function TranslateCircle(circle, x, y) {\n  circle.x += x;\n  circle.y += y;\n  return circle;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function TranslateCirclePoint(circle, point) {\n  circle.x += point.x;\n  circle.y += point.y;\n  return circle;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Circle} from \"./Circle\";\nimport {CircleContains} from \"./CircleContains\";\nimport {CircleContainsPoint} from \"./CircleContainsPoint\";\nimport {CircleContainsRect} from \"./CircleContainsRect\";\nimport {CircleEquals} from \"./CircleEquals\";\nimport {CloneCircle} from \"./CloneCircle\";\nimport {CopyCircleFrom} from \"./CopyCircleFrom\";\nimport {GetCircleArea} from \"./GetCircleArea\";\nimport {GetCircleBounds} from \"./GetCircleBounds\";\nimport {GetCircleCircumference} from \"./GetCircleCircumference\";\nimport {GetCircleCircumferencePoint} from \"./GetCircleCircumferencePoint\";\nimport {GetCirclePoint} from \"./GetCirclePoint\";\nimport {GetCirclePoints} from \"./GetCirclePoints\";\nimport {GetCircleRandomPoint} from \"./GetCircleRandomPoint\";\nimport {TranslateCircle} from \"./TranslateCircle\";\nimport {TranslateCirclePoint} from \"./TranslateCirclePoint\";\nexport {\n  Circle,\n  CircleContains,\n  CircleContainsPoint,\n  CircleContainsRect,\n  CircleEquals,\n  GetCircleRandomPoint,\n  CloneCircle,\n  CopyCircleFrom,\n  GetCircleArea,\n  GetCircleBounds,\n  GetCircleCircumference,\n  GetCircleCircumferencePoint,\n  GetCirclePoint,\n  GetCirclePoints,\n  TranslateCircle,\n  TranslateCirclePoint\n};\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function EllipseContains(ellipse, x, y) {\n  if (ellipse.width <= 0 || ellipse.height <= 0) {\n    return false;\n  }\n  let normx = (x - ellipse.x) / ellipse.width;\n  let normy = (y - ellipse.y) / ellipse.height;\n  normx *= normx;\n  normy *= normy;\n  return normx + normy < 0.25;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {EllipseContains} from \"./EllipseContains\";\nexport class Ellipse {\n  constructor(x = 0, y = 0, width = 0, height = 0) {\n    this.set(x, y, width, height);\n  }\n  set(x = 0, y = 0, width = 0, height = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    return this;\n  }\n  contains(x, y) {\n    return EllipseContains(this, x, y);\n  }\n  getMinorRadius() {\n    return Math.min(this.width, this.height) / 2;\n  }\n  getMajorRadius() {\n    return Math.max(this.width, this.height) / 2;\n  }\n  get left() {\n    return this.x - this.width / 2;\n  }\n  set left(value) {\n    this.x = value + this.width / 2;\n  }\n  get right() {\n    return this.x + this.width / 2;\n  }\n  set right(value) {\n    this.x = value - this.width / 2;\n  }\n  get top() {\n    return this.y - this.height / 2;\n  }\n  set top(value) {\n    this.y = value + this.height / 2;\n  }\n  get bottom() {\n    return this.y + this.height / 2;\n  }\n  set bottom(value) {\n    this.y = value - this.height / 2;\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Ellipse} from \"./Ellipse\";\nexport function CloneEllipse(source) {\n  return new Ellipse(source.x, source.y, source.width, source.height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CopyEllipseFrom(source, dest) {\n  return dest.set(source.x, source.y, source.width, source.height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {EllipseContains} from \"./EllipseContains\";\nexport function EllipseContainsPoint(ellipse, point) {\n  return EllipseContains(ellipse, point.x, point.y);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {EllipseContains} from \"./EllipseContains\";\nexport function EllipseContainsRect(ellipse, rect) {\n  return EllipseContains(ellipse, rect.x, rect.y) && EllipseContains(ellipse, rect.right, rect.y) && EllipseContains(ellipse, rect.x, rect.bottom) && EllipseContains(ellipse, rect.right, rect.bottom);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function EllipseEquals(ellipse, toCompare) {\n  return ellipse.x === toCompare.x && ellipse.y === toCompare.y && ellipse.width === toCompare.width && ellipse.height === toCompare.height;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetEllipseArea(ellipse) {\n  if (ellipse.width <= 0 || ellipse.height <= 0) {\n    return 0;\n  }\n  return ellipse.getMajorRadius() * ellipse.getMinorRadius() * Math.PI;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Rectangle} from \"../rectangle/Rectangle\";\nexport function GetEllipseBounds(ellipse, out = new Rectangle()) {\n  return out.set(ellipse.left, ellipse.top, ellipse.width, ellipse.height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetEllipseCircumference(ellipse) {\n  const rx = ellipse.width / 2;\n  const ry = ellipse.height / 2;\n  const h = Math.pow(rx - ry, 2) / Math.pow(rx + ry, 2);\n  return Math.PI * (rx + ry) * (1 + 3 * h / (10 + Math.sqrt(4 - 3 * h)));\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetEllipseCircumferencePoint(ellipse, angle, out = new Vec2()) {\n  const halfWidth = ellipse.width / 2;\n  const halfHeight = ellipse.height / 2;\n  return out.set(ellipse.x + halfWidth * Math.cos(angle), ellipse.y + halfHeight * Math.sin(angle));\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {FromPercent} from \"../../math/FromPercent\";\nimport {GetEllipseCircumferencePoint} from \"./GetEllipseCircumferencePoint\";\nimport {MATH_CONST} from \"../../math/const\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetEllipsePoint(ellipse, position, out = new Vec2()) {\n  const angle = FromPercent(position, 0, MATH_CONST.PI2);\n  return GetEllipseCircumferencePoint(ellipse, angle, out);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {FromPercent} from \"../../math/FromPercent\";\nimport {GetEllipseCircumference} from \"./GetEllipseCircumference\";\nimport {GetEllipseCircumferencePoint} from \"./GetEllipseCircumferencePoint\";\nimport {MATH_CONST} from \"../../math/const\";\nexport function GetEllipsePoints(ellipse, step, quantity = 0, out = []) {\n  if (!quantity) {\n    quantity = GetEllipseCircumference(ellipse) / step;\n  }\n  for (let i = 0; i < quantity; i++) {\n    const angle = FromPercent(i / quantity, 0, MATH_CONST.PI2);\n    out.push(GetEllipseCircumferencePoint(ellipse, angle));\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetEllipseRandomPoint(ellipse, out = new Vec2()) {\n  const p = Math.random() * Math.PI * 2;\n  const s = Math.sqrt(Math.random());\n  out.x = ellipse.x + s * Math.cos(p) * ellipse.width / 2;\n  out.y = ellipse.y + s * Math.sin(p) * ellipse.height / 2;\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function TranslateEllipse(ellipse, x, y) {\n  ellipse.x += x;\n  ellipse.y += y;\n  return ellipse;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function TranslateEllipsePoint(ellipse, point) {\n  ellipse.x += point.x;\n  ellipse.y += point.y;\n  return ellipse;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CloneEllipse} from \"./CloneEllipse\";\nimport {CopyEllipseFrom} from \"./CopyEllipseFrom\";\nimport {Ellipse} from \"./Ellipse\";\nimport {EllipseContains} from \"./EllipseContains\";\nimport {EllipseContainsPoint} from \"./EllipseContainsPoint\";\nimport {EllipseContainsRect} from \"./EllipseContainsRect\";\nimport {EllipseEquals} from \"./EllipseEquals\";\nimport {GetEllipseArea} from \"./GetEllipseArea\";\nimport {GetEllipseBounds} from \"./GetEllipseBounds\";\nimport {GetEllipseCircumference} from \"./GetEllipseCircumference\";\nimport {GetEllipseCircumferencePoint} from \"./GetEllipseCircumferencePoint\";\nimport {GetEllipsePoint} from \"./GetEllipsePoint\";\nimport {GetEllipsePoints} from \"./GetEllipsePoints\";\nimport {GetEllipseRandomPoint} from \"./GetEllipseRandomPoint\";\nimport {TranslateEllipse} from \"./TranslateEllipse\";\nimport {TranslateEllipsePoint} from \"./TranslateEllipsePoint\";\nexport {\n  CloneEllipse,\n  CopyEllipseFrom,\n  Ellipse,\n  EllipseContains,\n  EllipseContainsPoint,\n  EllipseContainsRect,\n  EllipseEquals,\n  GetEllipseRandomPoint,\n  GetEllipseArea,\n  GetEllipseBounds,\n  GetEllipseCircumference,\n  GetEllipseCircumferencePoint,\n  GetEllipsePoint,\n  GetEllipsePoints,\n  TranslateEllipse,\n  TranslateEllipsePoint\n};\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetVec2Distance} from \"../../math/vec2/GetVec2Distance\";\nexport function CircleToCircle(circleA, circleB) {\n  return GetVec2Distance(circleA, circleB) <= circleA.radius + circleB.radius;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CircleToRectangle(circle, rect) {\n  const halfWidth = rect.width / 2;\n  const halfHeight = rect.height / 2;\n  const cx = Math.abs(circle.x - rect.x - halfWidth);\n  const cy = Math.abs(circle.y - rect.y - halfHeight);\n  const xDist = halfWidth + circle.radius;\n  const yDist = halfHeight + circle.radius;\n  if (cx > xDist || cy > yDist) {\n    return false;\n  } else if (cx <= halfWidth || cy <= halfHeight) {\n    return true;\n  } else {\n    const xCornerDist = cx - halfWidth;\n    const yCornerDist = cy - halfHeight;\n    const xCornerDistSq = xCornerDist * xCornerDist;\n    const yCornerDistSq = yCornerDist * yCornerDist;\n    const maxCornerDistSq = circle.radius * circle.radius;\n    return xCornerDistSq + yCornerDistSq <= maxCornerDistSq;\n  }\n}\n", "/**\n * @author       Florian Vazelle\n * @author       Geoffrey Glaive\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CircleToCircle} from \"./CircleToCircle\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetCircleToCircle(circleA, circleB, out = []) {\n  if (CircleToCircle(circleA, circleB)) {\n    const x0 = circleA.x;\n    const y0 = circleA.y;\n    const r0 = circleA.radius;\n    const x1 = circleB.x;\n    const y1 = circleB.y;\n    const r1 = circleB.radius;\n    let coefficientA;\n    let coefficientB;\n    let coefficientC;\n    let lambda;\n    let x;\n    if (y0 === y1) {\n      x = (r1 * r1 - r0 * r0 - x1 * x1 + x0 * x0) / (2 * (x0 - x1));\n      coefficientA = 1;\n      coefficientB = -2 * y1;\n      coefficientC = x1 * x1 + x * x - 2 * x1 * x + y1 * y1 - r1 * r1;\n      lambda = coefficientB * coefficientB - 4 * coefficientA * coefficientC;\n      if (lambda === 0) {\n        out.push(new Vec2(x, -coefficientB / (2 * coefficientA)));\n      } else if (lambda > 0) {\n        out.push(new Vec2(x, (-coefficientB + Math.sqrt(lambda)) / (2 * coefficientA)));\n        out.push(new Vec2(x, (-coefficientB - Math.sqrt(lambda)) / (2 * coefficientA)));\n      }\n    } else {\n      const v1 = (x0 - x1) / (y0 - y1);\n      const n = (r1 * r1 - r0 * r0 - x1 * x1 + x0 * x0 - y1 * y1 + y0 * y0) / (2 * (y0 - y1));\n      coefficientA = v1 * v1 + 1;\n      coefficientB = 2 * y0 * v1 - 2 * n * v1 - 2 * x0;\n      coefficientC = x0 * x0 + y0 * y0 + n * n - r0 * r0 - 2 * y0 * n;\n      lambda = coefficientB * coefficientB - 4 * coefficientA * coefficientC;\n      if (lambda === 0) {\n        x = -coefficientB / (2 * coefficientA);\n        out.push(new Vec2(x, n - x * v1));\n      } else if (lambda > 0) {\n        x = (-coefficientB + Math.sqrt(lambda)) / (2 * coefficientA);\n        out.push(new Vec2(x, n - x * v1));\n        x = (-coefficientB - Math.sqrt(lambda)) / (2 * coefficientA);\n        out.push(new Vec2(x, n - x * v1));\n      }\n    }\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CircleContains} from \"../circle/CircleContains\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nconst tmp = new Vec2();\nexport function LineToCircle(line, circle, nearest) {\n  if (!nearest) {\n    nearest = tmp;\n  }\n  const {x1, y1, x2, y2} = line;\n  if (CircleContains(circle, x1, y1)) {\n    nearest.set(x1, y1);\n    return true;\n  }\n  if (CircleContains(circle, x2, y2)) {\n    nearest.set(x2, y2);\n    return true;\n  }\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const lcx = circle.x - x1;\n  const lcy = circle.y - y1;\n  const dLen2 = dx * dx + dy * dy;\n  let px = dx;\n  let py = dy;\n  if (dLen2 > 0) {\n    const dp = (lcx * dx + lcy * dy) / dLen2;\n    px *= dp;\n    py *= dp;\n  }\n  nearest.set(x1 + px, y1 + py);\n  const pLen2 = px * px + py * py;\n  return pLen2 <= dLen2 && px * dx + py * dy >= 0 && CircleContains(circle, nearest.x, nearest.y);\n}\n", "/**\n * @author       Florian Vazelle\n * @author       Geoffrey Glaive\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {LineToCircle} from \"./LineToCircle\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetLineToCircle(line, circle, out = []) {\n  if (LineToCircle(line, circle)) {\n    const {x1, y1, x2, y2} = line;\n    const cr = circle.radius;\n    const lDirX = x2 - x1;\n    const lDirY = y2 - y1;\n    const oDirX = x1 - circle.x;\n    const oDirY = y1 - circle.y;\n    const coefficientA = lDirX * lDirX + lDirY * lDirY;\n    const coefficientB = 2 * (lDirX * oDirX + lDirY * oDirY);\n    const coefficientC = oDirX * oDirX + oDirY * oDirY - cr * cr;\n    const lambda = coefficientB * coefficientB - 4 * coefficientA * coefficientC;\n    let x;\n    let y;\n    if (lambda === 0) {\n      const root = -coefficientB / (2 * coefficientA);\n      x = x1 + root * lDirX;\n      y = y1 + root * lDirY;\n      if (root >= 0 && root <= 1) {\n        out.push(new Vec2(x, y));\n      }\n    } else if (lambda > 0) {\n      const root1 = (-coefficientB - Math.sqrt(lambda)) / (2 * coefficientA);\n      x = x1 + root1 * lDirX;\n      y = y1 + root1 * lDirY;\n      if (root1 >= 0 && root1 <= 1) {\n        out.push(new Vec2(x, y));\n      }\n      const root2 = (-coefficientB + Math.sqrt(lambda)) / (2 * coefficientA);\n      x = x1 + root2 * lDirX;\n      y = y1 + root2 * lDirY;\n      if (root2 >= 0 && root2 <= 1) {\n        out.push(new Vec2(x, y));\n      }\n    }\n  }\n  return out;\n}\n", "/**\n * @author       Florian Vazelle\n * @author       Geoffrey Glaive\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CircleToRectangle} from \"./CircleToRectangle\";\nimport {GetLineToCircle} from \"./GetLineToCircle\";\nimport {GetRectangleEdges} from \"../rectangle/GetRectangleEdges\";\nexport function GetCircleToRectangle(circle, rect, out = []) {\n  if (CircleToRectangle(circle, rect)) {\n    const [line1, line2, line3, line4] = GetRectangleEdges(rect);\n    GetLineToCircle(line1, circle, out);\n    GetLineToCircle(line2, circle, out);\n    GetLineToCircle(line3, circle, out);\n    GetLineToCircle(line4, circle, out);\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function LineToLine(line1, line2, out) {\n  const {x1, y1, x2, y2} = line1;\n  const {x1: x3, y1: y3, x2: x4, y2: y4} = line2;\n  const numA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n  const numB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n  const deNom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n  if (deNom === 0) {\n    return false;\n  }\n  const uA = numA / deNom;\n  const uB = numB / deNom;\n  if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n    if (out) {\n      out.set(x1 + uA * (x2 - x1), y1 + uA * (y2 - y1));\n    }\n    return true;\n  }\n  return false;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function LineToRectangle(line, rect) {\n  const {x1, y1, x2, y2} = line;\n  const {x, y, right, bottom} = rect;\n  let t = 0;\n  if (x1 >= x && x1 <= right && y1 >= y && y1 <= bottom || x2 >= x && x2 <= right && y2 >= y && y2 <= bottom) {\n    return true;\n  }\n  if (x1 < x && x2 >= x) {\n    t = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n    if (t > y && t <= bottom) {\n      return true;\n    }\n  } else if (x1 > right && x2 <= right) {\n    t = y1 + (y2 - y1) * (right - x1) / (x2 - x1);\n    if (t >= y && t <= bottom) {\n      return true;\n    }\n  }\n  if (y1 < y && y2 >= y) {\n    t = x1 + (x2 - x1) * (y - y1) / (y2 - y1);\n    if (t >= x && t <= right) {\n      return true;\n    }\n  } else if (y1 > bottom && y2 <= bottom) {\n    t = x1 + (x2 - x1) * (bottom - y1) / (y2 - y1);\n    if (t >= x && t <= right) {\n      return true;\n    }\n  }\n  return false;\n}\n", "/**\n * @author       Florian Vazelle\n * @author       Geoffrey Glaive\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetRectangleEdges} from \"../rectangle/GetRectangleEdges\";\nimport {LineToLine} from \"./LineToLine\";\nimport {LineToRectangle} from \"./LineToRectangle\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetLineToRectangle(line, rect, out = []) {\n  if (LineToRectangle(line, rect)) {\n    const [lineA, lineB, lineC, lineD] = GetRectangleEdges(rect);\n    const points = [new Vec2(), new Vec2(), new Vec2(), new Vec2()];\n    const results = [\n      LineToLine(lineA, line, points[0]),\n      LineToLine(lineB, line, points[1]),\n      LineToLine(lineC, line, points[2]),\n      LineToLine(lineD, line, points[3])\n    ];\n    for (let i = 0; i < results.length; i++) {\n      if (results[i]) {\n        out.push(points[i]);\n      }\n    }\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Rectangle} from \"../rectangle/Rectangle\";\nimport {RectangleToRectangle} from \"./RectangleToRectangle\";\nexport function GetRectangleIntersection(rectA, rectB, out = new Rectangle()) {\n  if (RectangleToRectangle(rectA, rectB)) {\n    const x = Math.max(rectA.x, rectB.x);\n    const y = Math.max(rectA.y, rectB.y);\n    return out.set(x, y, Math.min(rectA.right, rectB.right) - x, Math.min(rectA.bottom, rectB.bottom) - y);\n  }\n}\n", "/**\n * @author       Florian Vazelle\n * @author       Geoffrey Glaive\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetLineToRectangle} from \"./GetLineToRectangle\";\nimport {GetRectangleEdges} from \"../rectangle/GetRectangleEdges\";\nimport {RectangleToRectangle} from \"./RectangleToRectangle\";\nexport function GetRectangleToRectangle(rectA, rectB, out = []) {\n  if (RectangleToRectangle(rectA, rectB)) {\n    const [lineA, lineB, lineC, lineD] = GetRectangleEdges(rectA);\n    GetLineToRectangle(lineA, rectB, out);\n    GetLineToRectangle(lineB, rectB, out);\n    GetLineToRectangle(lineC, rectB, out);\n    GetLineToRectangle(lineD, rectB, out);\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function TriangleContains(triangle, x, y) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const v0x = x3 - x1;\n  const v0y = y3 - y1;\n  const v1x = x2 - x1;\n  const v1y = y2 - y1;\n  const v2x = x - x1;\n  const v2y = y - y1;\n  const dot00 = v0x * v0x + v0y * v0y;\n  const dot01 = v0x * v1x + v0y * v1y;\n  const dot02 = v0x * v2x + v0y * v2y;\n  const dot11 = v1x * v1x + v1y * v1y;\n  const dot12 = v1x * v2x + v1y * v2y;\n  const b = dot00 * dot11 - dot01 * dot01;\n  const inv = b === 0 ? 0 : 1 / b;\n  const u = (dot11 * dot02 - dot01 * dot12) * inv;\n  const v = (dot00 * dot12 - dot01 * dot02) * inv;\n  return u >= 0 && v >= 0 && u + v < 1;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {TriangleContains} from \"./TriangleContains\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function TriangleContainsPoints(triangle, points, returnFirst = false, out = []) {\n  let skip = false;\n  points.forEach((point) => {\n    if (skip) {\n      return;\n    }\n    const {x, y} = point;\n    if (TriangleContains(triangle, x, y)) {\n      out.push(new Vec2(x, y));\n      if (returnFirst) {\n        skip = true;\n      }\n    }\n  });\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {DecomposeRectangle} from \"../rectangle/DecomposeRectangle\";\nimport {GetRectangleEdges} from \"../rectangle/GetRectangleEdges\";\nimport {GetTriangleEdges} from \"../triangle/GetTriangleEdges\";\nimport {LineToLine} from \"./LineToLine\";\nimport {RectangleContains} from \"../rectangle/RectangleContains\";\nimport {TriangleContainsPoints} from \"../triangle/TriangleContainsPoints\";\nexport function RectangleToTriangle(rect, triangle) {\n  if (triangle.left > rect.right || triangle.right < rect.x || triangle.top > rect.bottom || triangle.bottom < rect.y) {\n    return false;\n  }\n  const [triA, triB, triC] = GetTriangleEdges(triangle);\n  if (RectangleContains(rect, triA.x1, triA.y1) || RectangleContains(rect, triA.x2, triA.y2)) {\n    return true;\n  }\n  if (RectangleContains(rect, triB.x1, triB.y1) || RectangleContains(rect, triB.x2, triB.y2)) {\n    return true;\n  }\n  if (RectangleContains(rect, triC.x1, triC.y1) || RectangleContains(rect, triC.x2, triC.y2)) {\n    return true;\n  }\n  const [rectA, rectB, rectC, rectD] = GetRectangleEdges(rect);\n  if (LineToLine(triA, rectA) || LineToLine(triA, rectB) || LineToLine(triA, rectC) || LineToLine(triA, rectD)) {\n    return true;\n  }\n  if (LineToLine(triB, rectA) || LineToLine(triB, rectB) || LineToLine(triB, rectC) || LineToLine(triB, rectD)) {\n    return true;\n  }\n  if (LineToLine(triC, rectA) || LineToLine(triC, rectB) || LineToLine(triC, rectC) || LineToLine(triC, rectD)) {\n    return true;\n  }\n  const within = TriangleContainsPoints(triangle, DecomposeRectangle(rect), true);\n  return within.length > 0;\n}\n", "/**\n * @author       Florian Vazelle\n * @author       Geoffrey Glaive\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetLineToRectangle} from \"./GetLineToRectangle\";\nimport {GetTriangleEdges} from \"../triangle/GetTriangleEdges\";\nimport {RectangleToTriangle} from \"./RectangleToTriangle\";\nexport function GetRectangleToTriangle(rect, triangle, out = []) {\n  if (RectangleToTriangle(rect, triangle)) {\n    const [lineA, lineB, lineC] = GetTriangleEdges(triangle);\n    GetLineToRectangle(lineA, rect, out);\n    GetLineToRectangle(lineB, rect, out);\n    GetLineToRectangle(lineC, rect, out);\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetTriangleEdges} from \"../triangle/GetTriangleEdges\";\nimport {LineToCircle} from \"./LineToCircle\";\nimport {TriangleContains} from \"../triangle/TriangleContains\";\nexport function TriangleToCircle(triangle, circle) {\n  if (triangle.left > circle.right || triangle.right < circle.left || triangle.top > circle.bottom || triangle.bottom < circle.top) {\n    return false;\n  }\n  if (TriangleContains(triangle, circle.x, circle.y)) {\n    return true;\n  }\n  const [line1, line2, line3] = GetTriangleEdges(triangle);\n  return LineToCircle(line1, circle) || LineToCircle(line2, circle) || LineToCircle(line3, circle);\n}\n", "/**\n * @author       Florian Vazelle\n * @author       Geoffrey Glaive\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetLineToCircle} from \"./GetLineToCircle\";\nimport {GetTriangleEdges} from \"../triangle/GetTriangleEdges\";\nimport {TriangleToCircle} from \"./TriangleToCircle\";\nexport function GetTriangleToCircle(triangle, circle, out = []) {\n  if (TriangleToCircle(triangle, circle)) {\n    const [lineA, lineB, lineC] = GetTriangleEdges(triangle);\n    GetLineToCircle(lineA, circle, out);\n    GetLineToCircle(lineB, circle, out);\n    GetLineToCircle(lineC, circle, out);\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetTriangleEdges} from \"../triangle/GetTriangleEdges\";\nimport {LineToLine} from \"./LineToLine\";\nimport {TriangleContains} from \"../triangle/TriangleContains\";\nexport function TriangleToLine(triangle, line) {\n  const {x1, y1, x2, y2} = line;\n  if (TriangleContains(triangle, x1, y1) || TriangleContains(triangle, x2, y2)) {\n    return true;\n  }\n  const [line1, line2, line3] = GetTriangleEdges(triangle);\n  return LineToLine(line1, line) || LineToLine(line2, line) || LineToLine(line3, line);\n}\n", "/**\n * @author       Florian Vazelle\n * @author       Geoffrey Glaive\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetTriangleEdges} from \"../triangle/GetTriangleEdges\";\nimport {LineToLine} from \"./LineToLine\";\nimport {TriangleToLine} from \"./TriangleToLine\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetTriangleToLine(triangle, line, out = []) {\n  if (TriangleToLine(triangle, line)) {\n    const [lineA, lineB, lineC] = GetTriangleEdges(triangle);\n    const points = [new Vec2(), new Vec2(), new Vec2()];\n    const results = [\n      LineToLine(lineA, line, points[0]),\n      LineToLine(lineB, line, points[1]),\n      LineToLine(lineC, line, points[2])\n    ];\n    for (let i = 0; i < results.length; i++) {\n      if (results[i]) {\n        out.push(points[i]);\n      }\n    }\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function DecomposeTriangle(triangle, out = []) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  out.push(new Vec2(x1, y1), new Vec2(x2, y2), new Vec2(x3, y3));\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {DecomposeTriangle} from \"../triangle/DecomposeTriangle\";\nimport {GetTriangleEdges} from \"../triangle/GetTriangleEdges\";\nimport {LineToLine} from \"./LineToLine\";\nimport {TriangleContainsPoints} from \"../triangle/TriangleContainsPoints\";\nexport function TriangleToTriangle(triangleA, triangleB) {\n  if (triangleA.left > triangleB.right || triangleA.right < triangleB.left || triangleA.top > triangleB.bottom || triangleA.bottom < triangleB.top) {\n    return false;\n  }\n  const [lineAA, lineAB, lineAC] = GetTriangleEdges(triangleA);\n  const [lineBA, lineBB, lineBC] = GetTriangleEdges(triangleB);\n  if (LineToLine(lineAA, lineBA) || LineToLine(lineAA, lineBB) || LineToLine(lineAA, lineBC) || LineToLine(lineAB, lineBA) || LineToLine(lineAB, lineBB) || LineToLine(lineAB, lineBC) || LineToLine(lineAC, lineBA) || LineToLine(lineAC, lineBB) || LineToLine(lineAC, lineBC)) {\n    return true;\n  }\n  const withinA = TriangleContainsPoints(triangleB, DecomposeTriangle(triangleA), true);\n  if (withinA.length > 0) {\n    return true;\n  }\n  const withinB = TriangleContainsPoints(triangleA, DecomposeTriangle(triangleB), true);\n  return withinB.length > 0;\n}\n", "/**\n * @author       Florian Vazelle\n * @author       Geoffrey Glaive\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetTriangleEdges} from \"../triangle/GetTriangleEdges\";\nimport {GetTriangleToLine} from \"./GetTriangleToLine\";\nimport {TriangleToTriangle} from \"./TriangleToTriangle\";\nexport function GetTriangleToTriangle(triangleA, triangleB, out = []) {\n  if (TriangleToTriangle(triangleA, triangleB)) {\n    const [lineA, lineB, lineC] = GetTriangleEdges(triangleB);\n    GetTriangleToLine(triangleA, lineA, out);\n    GetTriangleToLine(triangleA, lineB, out);\n    GetTriangleToLine(triangleA, lineC, out);\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @author       Florian Mertens\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function PointToLine(point, line, lineThickness = 1) {\n  const {x1, y1, x2, y2} = line;\n  const {x: px, y: py} = point;\n  const L2 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n  if (L2 === 0) {\n    return false;\n  }\n  const r = ((px - x1) * (x2 - x1) + (py - y1) * (y2 - y1)) / L2;\n  if (r < 0) {\n    return Math.sqrt((x1 - px) * (x1 - px) + (y1 - py) * (y1 - py)) <= lineThickness;\n  } else if (r >= 0 && r <= 1) {\n    const s = ((y1 - py) * (x2 - x1) - (x1 - px) * (y2 - y1)) / L2;\n    return Math.abs(s) * Math.sqrt(L2) <= lineThickness;\n  } else {\n    return Math.sqrt((x2 - px) * (x2 - px) + (y2 - py) * (y2 - py)) <= lineThickness;\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {PointToLine} from \"./PointToLine\";\nexport function PointToLineSegment(point, line) {\n  if (!PointToLine(point, line)) {\n    return false;\n  }\n  const {x1, y1, x2, y2} = line;\n  const {x, y} = point;\n  const xMin = Math.min(x1, x2);\n  const xMax = Math.max(x1, x2);\n  const yMin = Math.min(y1, y2);\n  const yMax = Math.max(y1, y2);\n  return x >= xMin && x <= xMax && (y >= yMin && y <= yMax);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CircleToCircle} from \"./CircleToCircle\";\nimport {CircleToRectangle} from \"./CircleToRectangle\";\nimport {GetCircleToCircle} from \"./GetCircleToCircle\";\nimport {GetCircleToRectangle} from \"./GetCircleToRectangle\";\nimport {GetLineToCircle} from \"./GetLineToCircle\";\nimport {GetLineToRectangle} from \"./GetLineToRectangle\";\nimport {GetRectangleIntersection} from \"./GetRectangleIntersection\";\nimport {GetRectangleToRectangle} from \"./GetRectangleToRectangle\";\nimport {GetRectangleToTriangle} from \"./GetRectangleToTriangle\";\nimport {GetTriangleToCircle} from \"./GetTriangleToCircle\";\nimport {GetTriangleToLine} from \"./GetTriangleToLine\";\nimport {GetTriangleToTriangle} from \"./GetTriangleToTriangle\";\nimport {LineToCircle} from \"./LineToCircle\";\nimport {LineToLine} from \"./LineToLine\";\nimport {LineToRectangle} from \"./LineToRectangle\";\nimport {PointToLine} from \"./PointToLine\";\nimport {PointToLineSegment} from \"./PointToLineSegment\";\nimport {RectangleToRectangle} from \"./RectangleToRectangle\";\nimport {RectangleToTriangle} from \"./RectangleToTriangle\";\nimport {TriangleToCircle} from \"./TriangleToCircle\";\nimport {TriangleToLine} from \"./TriangleToLine\";\nimport {TriangleToTriangle} from \"./TriangleToTriangle\";\nexport {\n  CircleToCircle,\n  CircleToRectangle,\n  GetCircleToCircle,\n  GetCircleToRectangle,\n  GetLineToCircle,\n  GetLineToRectangle,\n  GetRectangleIntersection,\n  GetRectangleToRectangle,\n  GetRectangleToTriangle,\n  GetTriangleToCircle,\n  GetTriangleToLine,\n  GetTriangleToTriangle,\n  LineToCircle,\n  LineToLine,\n  LineToRectangle,\n  PointToLine,\n  PointToLineSegment,\n  RectangleToRectangle,\n  RectangleToTriangle,\n  TriangleToCircle,\n  TriangleToLine,\n  TriangleToTriangle\n};\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CenterLineOn(line, x, y) {\n  const tx = x - (line.x1 + line.x2) / 2;\n  const ty = y - (line.y1 + line.y2) / 2;\n  line.x1 += tx;\n  line.y1 += ty;\n  line.x2 += tx;\n  line.y2 += ty;\n  return line;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Line} from \"./Line\";\nexport function CloneLine(source) {\n  return new Line(source.x1, source.y1, source.x2, source.y2);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CopyLineFrom(source, dest) {\n  return dest.set(source.x1, source.y1, source.x2, source.y2);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetLineLength(line) {\n  const {x1, y1, x2, y2} = line;\n  return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetLineLength} from \"./GetLineLength\";\nexport function ExtendLine(line, left, right = left) {\n  const length = GetLineLength(line);\n  const slopX = line.x2 - line.x1;\n  const slopY = line.y2 - line.y1;\n  if (left) {\n    line.x1 = line.x1 - slopX / length * left;\n    line.y1 = line.y1 - slopY / length * left;\n  }\n  if (right) {\n    line.x2 = line.x2 + slopX / length * right;\n    line.y2 = line.y2 + slopY / length * right;\n  }\n  return line;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetLineAngle(line) {\n  return Math.atan2(line.y2 - line.y1, line.x2 - line.x1);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetLineBresenhamPoints(line, stepRate = 1, results = []) {\n  let x1 = Math.round(line.x1);\n  let y1 = Math.round(line.y1);\n  const x2 = Math.round(line.x2);\n  const y2 = Math.round(line.y2);\n  const dx = Math.abs(x2 - x1);\n  const dy = Math.abs(y2 - y1);\n  const sx = x1 < x2 ? 1 : -1;\n  const sy = y1 < y2 ? 1 : -1;\n  let err = dx - dy;\n  results.push(new Vec2(x1, y1));\n  let i = 1;\n  while (!(x1 === x2 && y1 === y2)) {\n    const e2 = err << 1;\n    if (e2 > -dy) {\n      err -= dy;\n      x1 += sx;\n    }\n    if (e2 < dx) {\n      err += dx;\n      y1 += sy;\n    }\n    if (i % stepRate === 0) {\n      results.push(new Vec2(x1, y1));\n    }\n    i++;\n  }\n  return results;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetLineHeight(line) {\n  return Math.abs(line.y1 - line.y2);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetLineMidPoint(line, out = new Vec2()) {\n  out.x = (line.x1 + line.x2) / 2;\n  out.y = (line.y1 + line.y2) / 2;\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @author       Florian Mertens\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetLineNearestPoint(line, point, out = new Vec2()) {\n  const {x1, y1, x2, y2} = line;\n  const L2 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n  if (L2 === 0) {\n    return out;\n  }\n  const r = ((point.x - x1) * (x2 - x1) + (point.y - y1) * (y2 - y1)) / L2;\n  out.x = x1 + r * (x2 - x1);\n  out.y = y1 + r * (y2 - y1);\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetLineAngle} from \"./GetLineAngle\";\nimport {MATH_CONST} from \"../../math/const\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetLineNormal(line, out = new Vec2()) {\n  const a = GetLineAngle(line) - MATH_CONST.HALF_PI;\n  out.x = Math.cos(a);\n  out.y = Math.sin(a);\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetLineAngle} from \"./GetLineAngle\";\nimport {MATH_CONST} from \"../../math/const\";\nimport {Wrap} from \"../../math/Wrap\";\nexport function GetLineNormalAngle(line) {\n  const angle = GetLineAngle(line) - MATH_CONST.HALF_PI;\n  return Wrap(angle, -Math.PI, Math.PI);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetLineAngle} from \"./GetLineAngle\";\nimport {MATH_CONST} from \"../../math/const\";\nexport function GetLineNormalX(line) {\n  return Math.cos(GetLineAngle(line) - MATH_CONST.HALF_PI);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetLineAngle} from \"./GetLineAngle\";\nimport {MATH_CONST} from \"../../math/const\";\nexport function GetLineNormalY(line) {\n  return Math.sin(GetLineAngle(line) - MATH_CONST.HALF_PI);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetLinePerpSlope(line) {\n  const {x1, y1, x2, y2} = line;\n  return -((x2 - x1) / (y2 - y1));\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetLinePoint(line, position, out = new Vec2()) {\n  out.x = line.x1 + (line.x2 - line.x1) * position;\n  out.y = line.y1 + (line.y2 - line.y1) * position;\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetLineLength} from \"./GetLineLength\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetLinePoints(line, quantity, stepRate = 0, out = []) {\n  if (!quantity) {\n    quantity = GetLineLength(line) / stepRate;\n  }\n  const {x1, y1, x2, y2} = line;\n  for (let i = 0; i < quantity; i++) {\n    const position = i / quantity;\n    const x = x1 + (x2 - x1) * position;\n    const y = y1 + (y2 - y1) * position;\n    out.push(new Vec2(x, y));\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetLineRandomPoint(line, out = new Vec2()) {\n  const t = Math.random();\n  out.x = line.x1 + t * (line.x2 - line.x1);\n  out.y = line.y1 + t * (line.y2 - line.y1);\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetLineAngle} from \"./GetLineAngle\";\nimport {GetLineNormalAngle} from \"./GetLineNormalAngle\";\nexport function GetLineReflectAngle(lineA, lineB) {\n  return 2 * GetLineNormalAngle(lineB) - Math.PI - GetLineAngle(lineA);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetLineSlope(line) {\n  const {x1, y1, x2, y2} = line;\n  return (y2 - y1) / (x2 - x1);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetLineWidth(line) {\n  return Math.abs(line.x1 - line.x2);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @author       Florian Mertens\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetShortestLineDistance(line, point) {\n  const {x1, y1, x2, y2} = line;\n  const L2 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n  if (L2 === 0) {\n    return 0;\n  }\n  const s = ((y1 - point.y) * (x2 - x1) - (x1 - point.x) * (y2 - y1)) / L2;\n  return Math.abs(s) * Math.sqrt(L2);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function LineEquals(line, toCompare) {\n  return line.x1 === toCompare.x1 && line.y1 === toCompare.y1 && line.x2 === toCompare.x2 && line.y2 === toCompare.y2;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function LineSetToAngle(line, x, y, angle, length) {\n  line.x1 = x;\n  line.y1 = y;\n  line.x2 = x + Math.cos(angle) * length;\n  line.y2 = y + Math.sin(angle) * length;\n  return line;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function RotateLineAround(line, x, y, angle) {\n  const c = Math.cos(angle);\n  const s = Math.sin(angle);\n  let tx = line.x1 - x;\n  let ty = line.y1 - y;\n  line.x1 = tx * c - ty * s + x;\n  line.y1 = tx * s + ty * c + y;\n  tx = line.x2 - x;\n  ty = line.y2 - y;\n  line.x2 = tx * c - ty * s + x;\n  line.y2 = tx * s + ty * c + y;\n  return line;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {RotateLineAround} from \"./RotateLineAround\";\nexport function RotateLine(line, angle) {\n  const x = (line.x1 + line.x2) / 2;\n  const y = (line.y1 + line.y2) / 2;\n  return RotateLineAround(line, x, y, angle);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {RotateLineAround} from \"./RotateLineAround\";\nexport function RotateLineAroundPoint(line, point, angle) {\n  return RotateLineAround(line, point.x, point.y, angle);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function TranslateLine(line, x, y) {\n  line.x1 += x;\n  line.y1 += y;\n  line.x2 += x;\n  line.y2 += y;\n  return line;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {TranslateLine} from \"./TranslateLine\";\nexport function TranslateLinePoint(line, v) {\n  return TranslateLine(line, v.x, v.y);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CenterLineOn} from \"./CenterLineOn\";\nimport {CloneLine} from \"./CloneLine\";\nimport {CopyLineFrom} from \"./CopyLineFrom\";\nimport {ExtendLine} from \"./ExtendLine\";\nimport {GetLineAngle} from \"./GetLineAngle\";\nimport {GetLineBresenhamPoints} from \"./GetLineBresenhamPoints\";\nimport {GetLineHeight} from \"./GetLineHeight\";\nimport {GetLineLength} from \"./GetLineLength\";\nimport {GetLineMidPoint} from \"./GetLineMidPoint\";\nimport {GetLineNearestPoint} from \"./GetLineNearestPoint\";\nimport {GetLineNormal} from \"./GetLineNormal\";\nimport {GetLineNormalAngle} from \"./GetLineNormalAngle\";\nimport {GetLineNormalX} from \"./GetLineNormalX\";\nimport {GetLineNormalY} from \"./GetLineNormalY\";\nimport {GetLinePerpSlope} from \"./GetLinePerpSlope\";\nimport {GetLinePoint} from \"./GetLinePoint\";\nimport {GetLinePoints} from \"./GetLinePoints\";\nimport {GetLineRandomPoint} from \"./GetLineRandomPoint\";\nimport {GetLineReflectAngle} from \"./GetLineReflectAngle\";\nimport {GetLineSlope} from \"./GetLineSlope\";\nimport {GetLineWidth} from \"./GetLineWidth\";\nimport {GetShortestLineDistance} from \"./GetShortestLineDistance\";\nimport {Line} from \"./Line\";\nimport {LineEquals} from \"./LineEquals\";\nimport {LineSetToAngle} from \"./SetLineToAngle\";\nimport {RotateLine} from \"./RotateLine\";\nimport {RotateLineAround} from \"./RotateLineAround\";\nimport {RotateLineAroundPoint} from \"./RotateLineAroundPoint\";\nimport {TranslateLine} from \"./TranslateLine\";\nimport {TranslateLinePoint} from \"./TranslateLinePoint\";\nexport {\n  CenterLineOn,\n  CloneLine,\n  CopyLineFrom,\n  ExtendLine,\n  GetLineAngle,\n  GetLineBresenhamPoints,\n  GetLineHeight,\n  GetLineLength,\n  GetLineMidPoint,\n  GetLineNearestPoint,\n  GetLineNormal,\n  GetLineNormalAngle,\n  GetLineNormalX,\n  GetLineNormalY,\n  GetLinePerpSlope,\n  GetLinePoint,\n  GetLinePoints,\n  GetLineReflectAngle,\n  GetLineSlope,\n  GetLineWidth,\n  GetLineRandomPoint,\n  GetShortestLineDistance,\n  Line,\n  LineEquals,\n  LineSetToAngle,\n  RotateLine,\n  RotateLineAround,\n  RotateLineAroundPoint,\n  TranslateLine,\n  TranslateLinePoint\n};\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {TriangleContains} from \"./TriangleContains\";\nexport class Triangle {\n  constructor(x1 = 0, y1 = 0, x2 = 0, y2 = 0, x3 = 0, y3 = 0) {\n    this.set(x1, y1, x2, y2, x3, y3);\n  }\n  set(x1 = 0, y1 = 0, x2 = 0, y2 = 0, x3 = 0, y3 = 0) {\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n    this.x3 = x3;\n    this.y3 = y3;\n    return this;\n  }\n  contains(x, y) {\n    return TriangleContains(this, x, y);\n  }\n  get left() {\n    return Math.min(this.x1, this.x2, this.x3);\n  }\n  set left(value) {\n    let diff = 0;\n    if (this.x1 <= this.x2 && this.x1 <= this.x3) {\n      diff = this.x1 - value;\n    } else if (this.x2 <= this.x1 && this.x2 <= this.x3) {\n      diff = this.x2 - value;\n    } else {\n      diff = this.x3 - value;\n    }\n    this.x1 -= diff;\n    this.x2 -= diff;\n    this.x3 -= diff;\n  }\n  get right() {\n    return Math.max(this.x1, this.x2, this.x3);\n  }\n  set right(value) {\n    let diff = 0;\n    if (this.x1 >= this.x2 && this.x1 >= this.x3) {\n      diff = this.x1 - value;\n    } else if (this.x2 >= this.x1 && this.x2 >= this.x3) {\n      diff = this.x2 - value;\n    } else {\n      diff = this.x3 - value;\n    }\n    this.x1 -= diff;\n    this.x2 -= diff;\n    this.x3 -= diff;\n  }\n  get top() {\n    return Math.min(this.y1, this.y2, this.y3);\n  }\n  set top(value) {\n    let diff = 0;\n    if (this.y1 <= this.y2 && this.y1 <= this.y3) {\n      diff = this.y1 - value;\n    } else if (this.y2 <= this.y1 && this.y2 <= this.y3) {\n      diff = this.y2 - value;\n    } else {\n      diff = this.y3 - value;\n    }\n    this.y1 -= diff;\n    this.y2 -= diff;\n    this.y3 -= diff;\n  }\n  get bottom() {\n    return Math.max(this.y1, this.y2, this.y3);\n  }\n  set bottom(value) {\n    let diff = 0;\n    if (this.y1 >= this.y2 && this.y1 >= this.y3) {\n      diff = this.y1 - value;\n    } else if (this.y2 >= this.y1 && this.y2 >= this.y3) {\n      diff = this.y2 - value;\n    } else {\n      diff = this.y3 - value;\n    }\n    this.y1 -= diff;\n    this.y2 -= diff;\n    this.y3 -= diff;\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Triangle} from \"./Triangle\";\nexport function BuildEquilateralTriangle(x, y, length) {\n  const height = length * (Math.sqrt(3) / 2);\n  const x1 = x;\n  const y1 = y;\n  const x2 = x + length / 2;\n  const y2 = y + height;\n  const x3 = x - length / 2;\n  const y3 = y + height;\n  return new Triangle(x1, y1, x2, y2, x3, y3);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Triangle} from \"./Triangle\";\nexport function BuildRightTriangle(x, y, width, height = width) {\n  const x1 = x;\n  const y1 = y;\n  const x2 = x;\n  const y2 = y - height;\n  const x3 = x + width;\n  const y3 = y;\n  return new Triangle(x1, y1, x2, y2, x3, y3);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetTriangleCentroid(triangle, out = new Vec2()) {\n  return out.set((triangle.x1 + triangle.x2 + triangle.x3) / 3, (triangle.y1 + triangle.y2 + triangle.y3) / 3);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function TranslateTriangle(triangle, x, y) {\n  triangle.x1 += x;\n  triangle.y1 += y;\n  triangle.x2 += x;\n  triangle.y2 += y;\n  triangle.x3 += x;\n  triangle.y3 += y;\n  return triangle;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetTriangleCentroid} from \"./GetTriangleCentroid\";\nimport {TranslateTriangle} from \"./TranslateTriangle\";\nexport function CenterTriangleOn(triangle, x, y, centerFunc = GetTriangleCentroid) {\n  const center = centerFunc(triangle);\n  const diffX = x - center.x;\n  const diffY = y - center.y;\n  return TranslateTriangle(triangle, diffX, diffY);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Triangle} from \"./Triangle\";\nexport function CloneTriangle(source) {\n  const {x1, y1, x2, y2, x3, y3} = source;\n  return new Triangle(x1, y1, x2, y2, x3, y3);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CopyTriangleFrom(source, dest) {\n  const {x1, y1, x2, y2, x3, y3} = source;\n  return dest.set(x1, y1, x2, y2, x3, y3);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetTriangleArea(triangle) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  return Math.abs(((x3 - x1) * (y2 - y1) - (x2 - x1) * (y3 - y1)) / 2);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nfunction Det(m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10;\n}\nexport function GetTriangleCircumCenter(triangle, out = new Vec2()) {\n  const cx = triangle.x3;\n  const cy = triangle.y3;\n  const ax = triangle.x1 - cx;\n  const ay = triangle.y1 - cy;\n  const bx = triangle.x2 - cx;\n  const by = triangle.y2 - cy;\n  const denom = 2 * Det(ax, ay, bx, by);\n  const numx = Det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  const numy = Det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  return out.set(cx - numx / denom, cy + numy / denom);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Circle} from \"../Circle/Circle\";\nexport function GetTriangleCircumCircle(triangle, out = new Circle()) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const A = x2 - x1;\n  const B = y2 - y1;\n  const C = x3 - x1;\n  const D = y3 - y1;\n  const E = A * (x1 + x2) + B * (y1 + y2);\n  const F = C * (x1 + x3) + D * (y1 + y3);\n  const G = 2 * (A * (y3 - y2) - B * (x3 - x2));\n  if (Math.abs(G) < 1e-6) {\n    const minX = Math.min(x1, x2, x3);\n    const minY = Math.min(y1, y2, y3);\n    const dx = (Math.max(x1, x2, x3) - minX) * 0.5;\n    const dy = (Math.max(y1, y2, y3) - minY) * 0.5;\n    return out.set(minX + dx, minY + dy, Math.sqrt(dx * dx + dy * dy));\n  } else {\n    const cx = (D * E - B * F) / G;\n    const cy = (A * F - C * E) / G;\n    const dx = cx - x1;\n    const dy = cy - y1;\n    return out.set(cx, cy, Math.sqrt(dx * dx + dy * dy));\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nfunction GetLength(x1, y1, x2, y2) {\n  const x = x1 - x2;\n  const y = y1 - y2;\n  return Math.sqrt(x * x + y * y);\n}\nexport function GetTriangleInCenter(triangle, out = new Vec2()) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const d1 = GetLength(x3, y3, x2, y2);\n  const d2 = GetLength(x1, y1, x3, y3);\n  const d3 = GetLength(x2, y2, x1, y1);\n  const p = d1 + d2 + d3;\n  return out.set((x1 * d1 + x2 * d2 + x3 * d3) / p, (y1 * d1 + y2 * d2 + y3 * d3) / p);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetLineLength} from \"../line/GetLineLength\";\nimport {GetTriangleEdges} from \"./GetTriangleEdges\";\nexport function GetTrianglePerimeter(triangle) {\n  const [line1, line2, line3] = GetTriangleEdges(triangle);\n  return GetLineLength(line1) + GetLineLength(line2) + GetLineLength(line3);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetLineLength} from \"../line/GetLineLength\";\nimport {GetTriangleEdges} from \"./GetTriangleEdges\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetTrianglePoint(triangle, position, out = new Vec2()) {\n  const [line1, line2, line3] = GetTriangleEdges(triangle);\n  if (position <= 0 || position >= 1) {\n    return out.set(line1.x1, line1.y1);\n  }\n  const length1 = GetLineLength(line1);\n  const length2 = GetLineLength(line2);\n  const length3 = GetLineLength(line3);\n  const perimeter = length1 + length2 + length3;\n  let p = perimeter * position;\n  let localPosition = 0;\n  if (p < length1) {\n    localPosition = p / length1;\n    const {x1, y1, x2, y2} = line1;\n    return out.set(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n  } else if (p > length1 + length2) {\n    p -= length1 + length2;\n    localPosition = p / length3;\n    const {x1, y1, x2, y2} = line3;\n    return out.set(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n  } else {\n    p -= length1;\n    localPosition = p / length2;\n    const {x1, y1, x2, y2} = line2;\n    return out.set(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetLineLength} from \"../line/GetLineLength\";\nimport {GetTriangleEdges} from \"./GetTriangleEdges\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetTrianglePoints(triangle, quantity, stepRate, out = []) {\n  const [line1, line2, line3] = GetTriangleEdges(triangle);\n  const length1 = GetLineLength(line1);\n  const length2 = GetLineLength(line2);\n  const length3 = GetLineLength(line3);\n  const perimeter = length1 + length2 + length3;\n  if (!quantity) {\n    quantity = perimeter / stepRate;\n  }\n  for (let i = 0; i < quantity; i++) {\n    let p = perimeter * (i / quantity);\n    let localPosition = 0;\n    let point;\n    if (p < length1) {\n      localPosition = p / length1;\n      const {x1, y1, x2, y2} = line1;\n      point = new Vec2(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n    } else if (p > length1 + length2) {\n      p -= length1 + length2;\n      localPosition = p / length3;\n      const {x1, y1, x2, y2} = line3;\n      point = new Vec2(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n    } else {\n      p -= length1;\n      localPosition = p / length2;\n      const {x1, y1, x2, y2} = line2;\n      point = new Vec2(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n    }\n    out.push(point);\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetTriangleRandomPoint(triangle, out = new Vec2()) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const ux = x2 - x1;\n  const uy = y2 - y1;\n  const vx = x3 - x1;\n  const vy = y3 - y1;\n  let r = Math.random();\n  let s = Math.random();\n  if (r + s >= 1) {\n    r = 1 - r;\n    s = 1 - s;\n  }\n  return out.set(x1 + (ux * r + vx * s), y1 + (uy * r + vy * s));\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function RotateTriangleAround(triangle, x, y, angle) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const c = Math.cos(angle);\n  const s = Math.sin(angle);\n  return triangle.set((x1 - x) * c - (y1 - y) * s + x, (x1 - x) * s + (y1 - y) * c + y, (x2 - x) * c - (y2 - y) * s + x, (x2 - x) * s + (y2 - y) * c + y, (x3 - x) * c - (y3 - y) * s + x, (x3 - x) * s + (y3 - y) * c + y);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetTriangleInCenter} from \"./GetTriangleInCenter\";\nimport {RotateTriangleAround} from \"./RotateTriangleAround\";\nexport function RotateTriangle(triangle, angle) {\n  const point = GetTriangleInCenter(triangle);\n  return RotateTriangleAround(triangle, point.x, point.y, angle);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {RotateTriangleAround} from \"./RotateTriangleAround\";\nexport function RotateTriangleAroundPoint(triangle, point, angle) {\n  return RotateTriangleAround(triangle, point.x, point.y, angle);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {TriangleContains} from \"./TriangleContains\";\nexport function TriangleContainsPoint(triangle, point) {\n  return TriangleContains(triangle, point.x, point.y);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function TriangleEquals(src, dest) {\n  return src.x1 === dest.x1 && src.y1 === dest.y1 && src.x2 === dest.x2 && src.y2 === dest.y2 && src.x3 === dest.x3 && src.y3 === dest.y3;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {BuildEquilateralTriangle} from \"./BuildEquilateralTriangle\";\nimport {BuildRightTriangle} from \"./BuildRightTriangle\";\nimport {CenterTriangleOn} from \"./CenterTriangleOn\";\nimport {CloneTriangle} from \"./CloneTriangle\";\nimport {CopyTriangleFrom} from \"./CopyTriangleFrom\";\nimport {DecomposeTriangle} from \"./DecomposeTriangle\";\nimport {GetTriangleArea} from \"./GetTriangleArea\";\nimport {GetTriangleCentroid} from \"./GetTriangleCentroid\";\nimport {GetTriangleCircumCenter} from \"./GetTriangleCircumCenter\";\nimport {GetTriangleCircumCircle} from \"./GetTriangleCircumCircle\";\nimport {GetTriangleEdges} from \"./GetTriangleEdges\";\nimport {GetTriangleInCenter} from \"./GetTriangleInCenter\";\nimport {GetTrianglePerimeter} from \"./GetTrianglePerimeter\";\nimport {GetTrianglePoint} from \"./GetTrianglePoint\";\nimport {GetTrianglePoints} from \"./GetTrianglePoints\";\nimport {GetTriangleRandomPoint} from \"./GetTriangleRandomPoint\";\nimport {RotateTriangle} from \"./RotateTriangle\";\nimport {RotateTriangleAround} from \"./RotateTriangleAround\";\nimport {RotateTriangleAroundPoint} from \"./RotateTriangleAroundPoint\";\nimport {TranslateTriangle} from \"./TranslateTriangle\";\nimport {Triangle} from \"./Triangle\";\nimport {TriangleContains} from \"./TriangleContains\";\nimport {TriangleContainsPoint} from \"./TriangleContainsPoint\";\nimport {TriangleContainsPoints} from \"./TriangleContainsPoints\";\nimport {TriangleEquals} from \"./TriangleEquals\";\nexport {\n  BuildEquilateralTriangle,\n  BuildRightTriangle,\n  CenterTriangleOn,\n  CloneTriangle,\n  CopyTriangleFrom,\n  DecomposeTriangle,\n  GetTriangleArea,\n  GetTriangleCentroid,\n  GetTriangleCircumCenter,\n  GetTriangleCircumCircle,\n  GetTriangleEdges,\n  GetTriangleInCenter,\n  GetTrianglePerimeter,\n  GetTrianglePoint,\n  GetTrianglePoints,\n  GetTriangleRandomPoint,\n  RotateTriangle,\n  RotateTriangleAround,\n  RotateTriangleAroundPoint,\n  TranslateTriangle,\n  Triangle,\n  TriangleContains,\n  TriangleContainsPoint,\n  TriangleContainsPoints,\n  TriangleEquals\n};\n", "import * as Files from \"./files\";\nimport {File} from \"./File\";\nimport {Loader} from \"./Loader\";\nexport {\n  File,\n  Files,\n  Loader\n};\n", "import {AtlasFile} from \"./AtlasFile\";\nimport {BitmapTextFile} from \"./BitmapTextFile\";\nimport {CSVFile} from \"./CSVFile\";\nimport {ImageFile} from \"./ImageFile\";\nimport {JSONFile} from \"./JSONFile\";\nimport {JSONGeometryFile} from \"./JSONGeometryFile\";\nimport {OBJFile} from \"./OBJFile\";\nimport {OBJGeometryFile} from \"./OBJGeometryFile\";\nimport {SpriteSheetFile} from \"./SpriteSheetFile\";\nimport {XMLFile} from \"./XMLFile\";\nexport {\n  AtlasFile,\n  BitmapTextFile,\n  CSVFile,\n  ImageFile,\n  JSONFile,\n  JSONGeometryFile,\n  OBJFile,\n  OBJGeometryFile,\n  SpriteSheetFile,\n  XMLFile\n};\n", "export function AtlasParser(texture, data) {\n  let frames;\n  if (Array.isArray(data.textures)) {\n    frames = data.textures[0].frames;\n  } else if (Array.isArray(data.frames)) {\n    frames = data.frames;\n  } else if (data.hasOwnProperty(\"frames\")) {\n    frames = Object.values(data.frames);\n  } else {\n    console.warn(\"Invalid Texture Atlas JSON\");\n  }\n  if (frames) {\n    let newFrame;\n    for (let i = 0; i < frames.length; i++) {\n      const src = frames[i];\n      newFrame = texture.addFrame(src.filename, src.frame.x, src.frame.y, src.frame.w, src.frame.h);\n      if (src.trimmed) {\n        newFrame.setTrim(src.sourceSize.w, src.sourceSize.h, src.spriteSourceSize.x, src.spriteSourceSize.y, src.spriteSourceSize.w, src.spriteSourceSize.h);\n      } else {\n        newFrame.setSourceSize(src.sourceSize.w, src.sourceSize.h);\n      }\n      if (src.rotated) {\n      }\n      if (src.anchor) {\n        newFrame.setPivot(src.anchor.x, src.anchor.y);\n      }\n    }\n  }\n}\n", "export class File {\n  constructor(key, url, config) {\n    this.responseType = \"text\";\n    this.crossOrigin = void 0;\n    this.skipCache = false;\n    this.hasLoaded = false;\n    this.key = key;\n    this.url = url;\n    this.config = config;\n  }\n}\n", "export function GetURL(key, url, extension, loader) {\n  if (!url) {\n    url = key + extension;\n  }\n  if (/^(?:blob:|data:|http:\\/\\/|https:\\/\\/|\\/\\/)/.exec(url)) {\n    return url;\n  } else if (loader) {\n    return loader.baseURL + loader.path + url;\n  } else {\n    return url;\n  }\n}\n", "export function ImageTagLoader(file) {\n  file.data = new Image();\n  if (file.crossOrigin) {\n    file.data.crossOrigin = file.crossOrigin;\n  }\n  return new Promise((resolve, reject) => {\n    file.data.onload = () => {\n      if (file.data.onload) {\n        file.data.onload = null;\n        file.data.onerror = null;\n        resolve(file);\n      }\n    };\n    file.data.onerror = (event) => {\n      if (file.data.onload) {\n        file.data.onload = null;\n        file.data.onerror = null;\n        file.error = event;\n        reject(file);\n      }\n    };\n    file.data.src = file.url;\n    if (file.data.complete && file.data.width && file.data.height) {\n      file.data.onload = null;\n      file.data.onerror = null;\n      resolve(file);\n    }\n  });\n}\n", "import {File} from \"../File\";\nimport {GetURL} from \"../GetURL\";\nimport {ImageTagLoader} from \"../ImageTagLoader\";\nimport {TextureManagerInstance} from \"../../textures/TextureManagerInstance\";\nexport function ImageFile(key, url, glConfig) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".png\", file.loader);\n    if (file.loader) {\n      file.crossOrigin = file.loader.crossOrigin;\n    }\n    return new Promise((resolve, reject) => {\n      const textureManager = TextureManagerInstance.get();\n      if (textureManager.has(file.key)) {\n        resolve(file);\n      } else {\n        ImageTagLoader(file).then((file2) => {\n          textureManager.add(file2.key, file2.data, glConfig);\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n", "const caches = new Map();\nexport const Cache = {\n  get: (type) => {\n    if (!caches.has(type)) {\n      caches.set(type, new Map());\n    }\n    return caches.get(type);\n  },\n  getEntry: (cache, entry) => {\n    if (caches.has(cache)) {\n      return caches.get(cache).get(entry);\n    }\n  }\n};\n", "export function XHRLoader(file) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", file.url, true);\n  xhr.responseType = file.responseType;\n  return new Promise((resolve, reject) => {\n    xhr.onload = () => {\n      file.data = xhr.responseText;\n      file.hasLoaded = true;\n      resolve(file);\n    };\n    xhr.onerror = () => {\n      file.hasLoaded = true;\n      reject(file);\n    };\n    xhr.send();\n  });\n}\n", "import {Cache} from \"../../cache/Cache\";\nimport {File} from \"../File\";\nimport {GetURL} from \"../GetURL\";\nimport {XHRLoader} from \"../XHRLoader\";\nexport function JSONFile(key, url) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".json\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"JSON\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          file2.data = JSON.parse(file2.data);\n          if (!file2.skipCache) {\n            cache.set(file2.key, file2.data);\n          }\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n", "import {AtlasParser} from \"../../textures/parsers/AtlasParser\";\nimport {File} from \"../File\";\nimport {GetURL} from \"../GetURL\";\nimport {ImageFile} from \"./ImageFile\";\nimport {JSONFile} from \"./JSONFile\";\nimport {TextureManagerInstance} from \"../../textures/TextureManagerInstance\";\nexport function AtlasFile(key, textureURL, atlasURL, glConfig) {\n  const json = JSONFile(key, atlasURL);\n  const image = ImageFile(key, textureURL, glConfig);\n  const file = new File(key, \"\");\n  file.load = () => {\n    json.url = GetURL(json.key, json.url, \".json\", file.loader);\n    image.url = GetURL(image.key, image.url, \".png\", file.loader);\n    return new Promise((resolve, reject) => {\n      json.skipCache = true;\n      json.load().then(() => {\n        image.load().then(() => {\n          AtlasParser(TextureManagerInstance.get().get(key), json.data);\n          resolve(file);\n        }).catch(() => {\n          reject(file);\n        });\n      }).catch(() => {\n        reject(file);\n      });\n    });\n  };\n  return file;\n}\n", "function GetValue(node, attribute) {\n  return parseInt(node.getAttribute(attribute), 10);\n}\nexport function BitmapTextParser(texture, xml, frame) {\n  const xSpacing = 0;\n  const ySpacing = 0;\n  const info = xml.getElementsByTagName(\"info\")[0];\n  const common = xml.getElementsByTagName(\"common\")[0];\n  const data = {\n    font: info.getAttribute(\"face\"),\n    size: GetValue(info, \"size\"),\n    lineHeight: GetValue(common, \"lineHeight\") + ySpacing,\n    chars: {}\n  };\n  const letters = xml.getElementsByTagName(\"char\");\n  for (let i = 0; i < letters.length; i++) {\n    const node = letters[i];\n    const charCode = GetValue(node, \"id\");\n    const x = GetValue(node, \"x\");\n    const y = GetValue(node, \"y\");\n    const width = GetValue(node, \"width\");\n    const height = GetValue(node, \"height\");\n    data.chars[charCode] = {\n      x,\n      y,\n      width,\n      height,\n      xOffset: GetValue(node, \"xoffset\"),\n      yOffset: GetValue(node, \"yoffset\"),\n      xAdvance: GetValue(node, \"xadvance\") + xSpacing,\n      kerning: {}\n    };\n    texture.addFrame(charCode, x, y, width, height);\n  }\n  const kernings = xml.getElementsByTagName(\"kerning\");\n  for (let i = 0; i < kernings.length; i++) {\n    const kern = kernings[i];\n    const first = GetValue(kern, \"first\");\n    const second = GetValue(kern, \"second\");\n    const amount = GetValue(kern, \"amount\");\n    data.chars[second].kerning[first] = amount;\n  }\n  return data;\n}\n", "import {Cache} from \"../../cache/Cache\";\nimport {File} from \"../File\";\nimport {GetURL} from \"../GetURL\";\nimport {ParseXML} from \"../../dom/ParseXML\";\nimport {XHRLoader} from \"../XHRLoader\";\nexport function XMLFile(key, url) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".xml\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"XML\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          const xml = ParseXML(file2.data);\n          if (xml !== null) {\n            file2.data = xml;\n            if (!file2.skipCache) {\n              cache.set(file2.key, xml);\n            }\n            resolve(file2);\n          } else {\n            reject(file2);\n          }\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n", "import {BitmapTextParser} from \"../../textures/parsers/BitmapTextParser\";\nimport {File} from \"../File\";\nimport {GetURL} from \"../GetURL\";\nimport {ImageFile} from \"./ImageFile\";\nimport {TextureManagerInstance} from \"../../textures/TextureManagerInstance\";\nimport {XMLFile} from \"./XMLFile\";\nexport function BitmapTextFile(key, textureURL, fontDataURL, glConfig) {\n  const xml = XMLFile(key, fontDataURL);\n  const image = ImageFile(key, textureURL, glConfig);\n  const file = new File(key, \"\");\n  file.load = () => {\n    xml.url = GetURL(xml.key, xml.url, \".xml\", file.loader);\n    image.url = GetURL(image.key, image.url, \".png\", file.loader);\n    return new Promise((resolve, reject) => {\n      xml.skipCache = true;\n      xml.load().then(() => {\n        image.load().then(() => {\n          const texture = TextureManagerInstance.get().get(key);\n          const fontData = BitmapTextParser(texture, xml.data);\n          texture.data = fontData;\n          resolve(file);\n        }).catch(() => {\n          reject(file);\n        });\n      }).catch(() => {\n        reject(file);\n      });\n    });\n  };\n  return file;\n}\n", "import {Cache} from \"../../cache/Cache\";\nimport {File} from \"../File\";\nimport {GetURL} from \"../GetURL\";\nimport {XHRLoader} from \"../XHRLoader\";\nexport function CSVFile(key, url) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".csv\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"CSV\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          if (!file2.skipCache) {\n            cache.set(file2.key, file2.data);\n          }\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n", "import {Cache} from \"../../cache/Cache\";\nimport {File} from \"../File\";\nimport {Geometry} from \"../../gameobjects3d/geometry/Geometry\";\nimport {GetURL} from \"../GetURL\";\nimport {XHRLoader} from \"../XHRLoader\";\nexport function JSONGeometryFile(key, url, mappingConfig) {\n  const file = new File(key, url);\n  const {\n    vertices = \"verts\",\n    normals = \"normals\",\n    uvs = \"uvs\",\n    numberOfVertices = 0\n  } = mappingConfig;\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".json\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"Geometry\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          const data = JSON.parse(file2.data);\n          const geom = new Geometry({\n            vertices: data[vertices],\n            normals: data[normals],\n            uvs: data[uvs],\n            numberOfVertices\n          });\n          file2.data = geom;\n          if (!file2.skipCache) {\n            cache.set(file2.key, geom);\n          }\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n", "import {Cache} from \"../../cache/Cache\";\nimport {File} from \"../File\";\nimport {GetURL} from \"../GetURL\";\nimport {XHRLoader} from \"../XHRLoader\";\nexport function OBJFile(key, url) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".obj\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"Obj\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          if (!file2.skipCache) {\n            cache.set(file2.key, file2.data);\n          }\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n", "import {Cache} from \"../../cache/Cache\";\nimport {File} from \"../File\";\nimport {Geometry} from \"../../gameobjects3d/geometry/Geometry\";\nimport {GetBufferFromObj} from \"../../gameobjects3d/geometry/GetBufferFromObj\";\nimport {GetURL} from \"../GetURL\";\nimport {XHRLoader} from \"../XHRLoader\";\nexport function OBJGeometryFile(key, url, flipUVs = true) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".obj\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"Geometry\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          const models = GetBufferFromObj(file2.data, flipUVs);\n          file2.data = models;\n          if (!file2.skipCache) {\n            let key2 = file2.key;\n            models.forEach((model, index) => {\n              if (index > 0) {\n                key2 = file2.key + index.toString();\n              }\n              const geom = new Geometry(model.buffer);\n              cache.set(key2, geom);\n            });\n          }\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n", "export function SpriteSheetParser(texture, x, y, width, height, frameConfig) {\n  const {\n    frameWidth = null,\n    endFrame = -1,\n    margin = 0,\n    spacing = 0\n  } = frameConfig;\n  let {\n    frameHeight = null,\n    startFrame = 0\n  } = frameConfig;\n  if (!frameHeight) {\n    frameHeight = frameWidth;\n  }\n  if (frameWidth === null) {\n    throw new Error(\"SpriteSheetParser: Invalid frameWidth\");\n  }\n  const row = Math.floor((width - margin + spacing) / (frameWidth + spacing));\n  const column = Math.floor((height - margin + spacing) / (frameHeight + spacing));\n  let total = row * column;\n  if (total === 0) {\n    console.warn(\"SpriteSheetParser: Frame config will result in zero frames\");\n  }\n  if (startFrame > total || startFrame < -total) {\n    startFrame = 0;\n  }\n  if (startFrame < 0) {\n    startFrame = total + startFrame;\n  }\n  if (endFrame !== -1) {\n    total = startFrame + (endFrame + 1);\n  }\n  let fx = margin;\n  let fy = margin;\n  let ax = 0;\n  let ay = 0;\n  for (let i = 0; i < total; i++) {\n    ax = 0;\n    ay = 0;\n    const w = fx + frameWidth;\n    const h = fy + frameHeight;\n    if (w > width) {\n      ax = w - width;\n    }\n    if (h > height) {\n      ay = h - height;\n    }\n    texture.addFrame(i, x + fx, y + fy, frameWidth - ax, frameHeight - ay);\n    fx += frameWidth + spacing;\n    if (fx + frameWidth > width) {\n      fx = margin;\n      fy += frameHeight + spacing;\n    }\n  }\n}\n", "import {File} from \"../File\";\nimport {GetURL} from \"../GetURL\";\nimport {ImageTagLoader} from \"../ImageTagLoader\";\nimport {SpriteSheetParser} from \"../../textures/parsers/SpriteSheetParser\";\nimport {TextureManagerInstance} from \"../../textures/TextureManagerInstance\";\nexport function SpriteSheetFile(key, url, frameConfig, glConfig) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".png\", file.loader);\n    if (file.loader) {\n      file.crossOrigin = file.loader.crossOrigin;\n    }\n    return new Promise((resolve, reject) => {\n      const textureManager = TextureManagerInstance.get();\n      if (textureManager.has(file.key)) {\n        resolve(file);\n      } else {\n        ImageTagLoader(file).then((file2) => {\n          const texture = textureManager.add(file2.key, file2.data, glConfig);\n          if (texture) {\n            SpriteSheetParser(texture, 0, 0, texture.width, texture.height, frameConfig);\n            resolve(file2);\n          } else {\n            reject(file2);\n          }\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n", "import {Emit, EventEmitter} from \"../events\";\nexport class Loader extends EventEmitter {\n  constructor() {\n    super();\n    this.baseURL = \"\";\n    this.path = \"\";\n    this.crossOrigin = \"anonymous\";\n    this.maxParallelDownloads = -1;\n    this.isLoading = false;\n    this.reset();\n  }\n  reset() {\n    this.isLoading = false;\n    this.queue = new Set();\n    this.inflight = new Set();\n    this.completed = new Set();\n    this.progress = 0;\n  }\n  add(...file) {\n    file.forEach((entity) => {\n      entity.loader = this;\n      this.queue.add(entity);\n    });\n    return this;\n  }\n  start() {\n    if (this.isLoading) {\n      return null;\n    }\n    return new Promise((resolve, reject) => {\n      this.completed.clear();\n      this.progress = 0;\n      if (this.queue.size > 0) {\n        this.isLoading = true;\n        this.onComplete = resolve;\n        this.onError = reject;\n        Emit(this, \"start\");\n        this.nextFile();\n      } else {\n        this.progress = 1;\n        Emit(this, \"complete\");\n        resolve(this);\n      }\n    });\n  }\n  nextFile() {\n    let limit = this.queue.size;\n    if (this.maxParallelDownloads !== -1) {\n      limit = Math.min(limit, this.maxParallelDownloads) - this.inflight.size;\n    }\n    if (limit) {\n      const iterator = this.queue.values();\n      while (limit > 0) {\n        const file = iterator.next().value;\n        this.inflight.add(file);\n        this.queue.delete(file);\n        file.load().then((file2) => this.fileComplete(file2)).catch((file2) => this.fileError(file2));\n        limit--;\n      }\n    } else if (this.inflight.size === 0) {\n      this.stop();\n    }\n  }\n  stop() {\n    if (!this.isLoading) {\n      return;\n    }\n    this.isLoading = false;\n    Emit(this, \"complete\", this.completed);\n    this.onComplete();\n    this.completed.clear();\n  }\n  updateProgress(file) {\n    this.inflight.delete(file);\n    this.completed.add(file);\n    const totalCompleted = this.completed.size;\n    const totalQueued = this.queue.size + this.inflight.size;\n    if (totalCompleted > 0) {\n      this.progress = totalCompleted / (totalCompleted + totalQueued);\n    }\n    Emit(this, \"progress\", this.progress, totalCompleted, totalQueued);\n    this.nextFile();\n  }\n  fileComplete(file) {\n    Emit(this, \"filecomplete\", file);\n    this.updateProgress(file);\n  }\n  fileError(file) {\n    Emit(this, \"fileerror\", file);\n    this.updateProgress(file);\n  }\n  totalFilesToLoad() {\n    return this.queue.size + this.inflight.size;\n  }\n  setBaseURL(url = \"\") {\n    if (url !== \"\" && url.substr(-1) !== \"/\") {\n      url = url.concat(\"/\");\n    }\n    this.baseURL = url;\n    return this;\n  }\n  setPath(path = \"\") {\n    if (path !== \"\" && path.substr(-1) !== \"/\") {\n      path = path.concat(\"/\");\n    }\n    this.path = path;\n    return this;\n  }\n  setCORS(crossOrigin) {\n    this.crossOrigin = crossOrigin;\n    return this;\n  }\n  setMaxParallelDownloads(max) {\n    this.maxParallelDownloads = max;\n    return this;\n  }\n}\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const BlackPlastic = new Material({\n  ambient: [0, 0, 0],\n  diffuse: [0.01, 0.01, 0.01],\n  specular: [0.5, 0.5, 0.5],\n  shine: 0.25\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const BlackRubber = new Material({\n  ambient: [0.02, 0.02, 0.02],\n  diffuse: [0.01, 0.01, 0.01],\n  specular: [0.4, 0.4, 0.4],\n  shine: 0.078125\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const Brass = new Material({\n  ambient: [0.329412, 0.223529, 0.027451],\n  diffuse: [0.780392, 0.568627, 0.113725],\n  specular: [0.992157, 0.941176, 0.807843],\n  shine: 0.21794872\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const Bronze = new Material({\n  ambient: [0.2125, 0.1275, 0.054],\n  diffuse: [0.714, 0.4284, 0.18144],\n  specular: [0.393548, 0.271906, 0.166721],\n  shine: 0.2\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const Chrome = new Material({\n  ambient: [0.25, 0.25, 0.25],\n  diffuse: [0.4, 0.4, 0.4],\n  specular: [0.774597, 0.774597, 0.774597],\n  shine: 0.6\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const Copper = new Material({\n  ambient: [0.19125, 0.0735, 0.0225],\n  diffuse: [0.7038, 0.27048, 0.0828],\n  specular: [0.256777, 0.137622, 0.086014],\n  shine: 0.1\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const CyanPlastic = new Material({\n  ambient: [0, 0.1, 0.06],\n  diffuse: [0, 0.50980392, 0.50980392],\n  specular: [0.50196078, 0.50196078, 0.50196078],\n  shine: 0.25\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const CyanRubber = new Material({\n  ambient: [0, 0.05, 0.05],\n  diffuse: [0.4, 0.5, 0.5],\n  specular: [0.04, 0.7, 0.7],\n  shine: 0.078125\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const Emerald = new Material({\n  ambient: [0.0215, 0.1745, 0.0215],\n  diffuse: [0.07568, 0.61424, 0.07568],\n  specular: [0.633, 0.727811, 0.633],\n  shine: 0.6\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const Gold = new Material({\n  ambient: [0.24725, 0.1995, 0.0745],\n  diffuse: [0.75164, 0.60648, 0.22648],\n  specular: [0.628281, 0.555802, 0.366065],\n  shine: 0.4\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const GreenPlastic = new Material({\n  ambient: [0, 0, 0],\n  diffuse: [0.1, 0.35, 0.1],\n  specular: [0.45, 0.55, 0.45],\n  shine: 0.25\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const GreenRubber = new Material({\n  ambient: [0, 0.05, 0],\n  diffuse: [0.4, 0.5, 0.4],\n  specular: [0.04, 0.7, 0.04],\n  shine: 0.078125\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const Jade = new Material({\n  ambient: [0.135, 0.2225, 0.1575],\n  diffuse: [0.54, 0.89, 0.63],\n  specular: [0.316228, 0.316228, 0.316228],\n  shine: 0.1\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const Obsidian = new Material({\n  ambient: [0.05375, 0.05, 0.06625],\n  diffuse: [0.18275, 0.17, 0.22525],\n  specular: [0.332741, 0.328634, 0.346435],\n  shine: 0.3\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const Pearl = new Material({\n  ambient: [0.25, 0.20725, 0.20725],\n  diffuse: [1, 0.829, 0.829],\n  specular: [0.296648, 0.296648, 0.296648],\n  shine: 0.088\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const RedPlastic = new Material({\n  ambient: [0, 0, 0],\n  diffuse: [0.5, 0, 0],\n  specular: [0.7, 0.6, 0.6],\n  shine: 0.25\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const RedRubber = new Material({\n  ambient: [0.05, 0, 0],\n  diffuse: [0.5, 0.4, 0.4],\n  specular: [0.7, 0.04, 0.04],\n  shine: 0.078125\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const Ruby = new Material({\n  ambient: [0.1745, 0.01175, 0.01175],\n  diffuse: [0.61424, 0.04136, 0.04136],\n  specular: [0.727811, 0.626959, 0.626959],\n  shine: 0.6\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const Silver = new Material({\n  ambient: [0.19225, 0.19225, 0.19225],\n  diffuse: [0.50754, 0.50754, 0.50754],\n  specular: [0.508273, 0.508273, 0.508273],\n  shine: 0.4\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const Turquoise = new Material({\n  ambient: [0.1, 0.18725, 0.1745],\n  diffuse: [0.396, 0.74151, 0.69102],\n  specular: [0.297254, 0.30829, 0.306678],\n  shine: 0.1\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const WhitePlastic = new Material({\n  ambient: [0, 0, 0],\n  diffuse: [0.55, 0.55, 0.55],\n  specular: [0.7, 0.7, 0.7],\n  shine: 0.25\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const WhiteRubber = new Material({\n  ambient: [0.05, 0.05, 0.05],\n  diffuse: [0.5, 0.5, 0.5],\n  specular: [0.7, 0.7, 0.7],\n  shine: 0.078125\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const YellowPlastic = new Material({\n  ambient: [0, 0, 0],\n  diffuse: [0.5, 0.5, 0],\n  specular: [0.6, 0.6, 0.5],\n  shine: 0.25\n});\n", "import {Material} from \"../gameobjects3d/material/Material\";\nexport const YellowRubber = new Material({\n  ambient: [0.05, 0.05, 0],\n  diffuse: [0.5, 0.5, 0.4],\n  specular: [0.7, 0.7, 0.04],\n  shine: 0.078125\n});\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport const Arne16 = [\n  \"#000\",\n  \"#9D9D9D\",\n  \"#FFF\",\n  \"#BE2633\",\n  \"#E06F8B\",\n  \"#493C2B\",\n  \"#A46422\",\n  \"#EB8931\",\n  \"#F7E26B\",\n  \"#2F484E\",\n  \"#44891A\",\n  \"#A3CE27\",\n  \"#1B2632\",\n  \"#005784\",\n  \"#31A2F2\",\n  \"#B2DCEF\"\n];\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport const C64 = [\n  \"#000\",\n  \"#fff\",\n  \"#8b4131\",\n  \"#7bbdc5\",\n  \"#8b41ac\",\n  \"#6aac41\",\n  \"#3931a4\",\n  \"#d5de73\",\n  \"#945a20\",\n  \"#5a4100\",\n  \"#bd736a\",\n  \"#525252\",\n  \"#838383\",\n  \"#acee8b\",\n  \"#7b73de\",\n  \"#acacac\"\n];\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport const CGA = [\n  \"#000\",\n  \"#2234d1\",\n  \"#0c7e45\",\n  \"#44aacc\",\n  \"#8a3622\",\n  \"#5c2e78\",\n  \"#aa5c3d\",\n  \"#b5b5b5\",\n  \"#5e606e\",\n  \"#4c81fb\",\n  \"#6cd947\",\n  \"#7be2f9\",\n  \"#eb8a60\",\n  \"#e23d69\",\n  \"#ffd93f\",\n  \"#fff\"\n];\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport const JMP = [\n  \"#000\",\n  \"#191028\",\n  \"#46af45\",\n  \"#a1d685\",\n  \"#453e78\",\n  \"#7664fe\",\n  \"#833129\",\n  \"#9ec2e8\",\n  \"#dc534b\",\n  \"#e18d79\",\n  \"#d6b97b\",\n  \"#e9d8a1\",\n  \"#216c4b\",\n  \"#d365c8\",\n  \"#afaab9\",\n  \"#f5f4eb\"\n];\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport const MSX = [\n  \"#000\",\n  \"#191028\",\n  \"#46af45\",\n  \"#a1d685\",\n  \"#453e78\",\n  \"#7664fe\",\n  \"#833129\",\n  \"#9ec2e8\",\n  \"#dc534b\",\n  \"#e18d79\",\n  \"#d6b97b\",\n  \"#e9d8a1\",\n  \"#216c4b\",\n  \"#d365c8\",\n  \"#afaab9\",\n  \"#fff\"\n];\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport const PICO8 = [\n  \"#000\",\n  \"#1D2B53\",\n  \"#7E2553\",\n  \"#008751\",\n  \"#AB5236\",\n  \"#5F574F\",\n  \"#C2C3C7\",\n  \"#FFF1E8\",\n  \"#FF004D\",\n  \"#FFA300\",\n  \"#FFEC27\",\n  \"#00E436\",\n  \"#29ADFF\",\n  \"#83769C\",\n  \"#FF77A8\",\n  \"#FFCCAA\"\n];\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Arne16} from \"./Arne16\";\nimport {C64} from \"./C64\";\nimport {CGA} from \"./CGA\";\nimport {JMP} from \"./JMP\";\nimport {MSX} from \"./MSX\";\nimport {PICO8} from \"./PICO8\";\nexport {\n  Arne16,\n  C64,\n  CGA,\n  JMP,\n  MSX,\n  PICO8\n};\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Arne16} from \"../palettes/Arne16\";\nimport {CreateCanvas} from \"../CreateCanvas\";\nimport {Texture} from \"../Texture\";\nexport function PixelTexture(config) {\n  const {\n    data = [],\n    palette = Arne16,\n    pixelWidth = 1,\n    pixelHeight = pixelWidth,\n    preRender = null,\n    postRender = null\n  } = config;\n  let {\n    canvas = null,\n    resizeCanvas = true,\n    clearCanvas = true\n  } = config;\n  const width = Math.floor(Math.abs(data[0].length * pixelWidth));\n  const height = Math.floor(Math.abs(data.length * pixelHeight));\n  if (!canvas) {\n    canvas = CreateCanvas(width, height).canvas;\n    resizeCanvas = false;\n    clearCanvas = false;\n  }\n  if (resizeCanvas) {\n    canvas.width = width;\n    canvas.height = height;\n  }\n  const ctx = canvas.getContext(\"2d\");\n  if (clearCanvas) {\n    ctx.clearRect(0, 0, width, height);\n  }\n  if (preRender) {\n    preRender(canvas, ctx);\n  }\n  for (let y = 0; y < data.length; y++) {\n    const row = data[y];\n    for (let x = 0; x < row.length; x++) {\n      const d = row[x];\n      if (d !== \".\" && d !== \" \") {\n        ctx.fillStyle = palette[parseInt(\"0x\" + d.toUpperCase())];\n        ctx.fillRect(x * pixelWidth, y * pixelHeight, pixelWidth, pixelHeight);\n      }\n    }\n  }\n  if (postRender) {\n    postRender(canvas, ctx);\n  }\n  return new Texture(canvas);\n}\n", "import {CreateCanvas} from \"./CreateCanvas\";\nimport {Texture} from \"./Texture\";\nimport {TextureManagerInstance} from \"./TextureManagerInstance\";\nexport class TextureManager {\n  constructor() {\n    this.textures = new Map();\n    this.createDefaultTextures();\n    TextureManagerInstance.set(this);\n  }\n  createDefaultTextures() {\n    this.add(\"__BLANK\", new Texture(CreateCanvas(32, 32).canvas));\n    const missing = CreateCanvas(32, 32);\n    missing.strokeStyle = \"#0f0\";\n    missing.moveTo(0, 0);\n    missing.lineTo(32, 32);\n    missing.stroke();\n    missing.strokeRect(0.5, 0.5, 31, 31);\n    this.add(\"__MISSING\", new Texture(missing.canvas));\n    const white = CreateCanvas(32, 32);\n    white.fillStyle = \"#fff\";\n    white.fillRect(0, 0, 32, 32);\n    this.add(\"__WHITE\", new Texture(white.canvas));\n  }\n  get(key) {\n    const textures = this.textures;\n    if (textures.has(key)) {\n      return textures.get(key);\n    } else {\n      return textures.get(\"__MISSING\");\n    }\n  }\n  has(key) {\n    return this.textures.has(key);\n  }\n  add(key, source, glConfig) {\n    let texture;\n    const textures = this.textures;\n    if (!textures.has(key)) {\n      if (source instanceof Texture) {\n        texture = source;\n      } else {\n        texture = new Texture(source, 0, 0, glConfig);\n      }\n      texture.key = key;\n      textures.set(key, texture);\n    }\n    return texture;\n  }\n}\n", "import * as Events from \"./events\";\nimport {BaseWorld} from \"./BaseWorld\";\nimport {BuildRenderList} from \"./BuildRenderList\";\nimport {CalculateTotalRenderable} from \"./CalculateTotalRenderable\";\nimport {CreateWorldRenderData} from \"./CreateWorldRenderData\";\nimport {HasDirtyChildren} from \"./HasDirtyChildren\";\nimport {MergeRenderData} from \"./MergeRenderData\";\nimport {ResetWorldRenderData} from \"./ResetWorldRenderData\";\nimport {StaticWorld} from \"./StaticWorld\";\nimport {UpdateCachedLayers} from \"./UpdateCachedLayers\";\nimport {World} from \"./World\";\nimport {WorldDepthFirstSearch} from \"./WorldDepthFirstSearch\";\nexport {\n  BaseWorld,\n  BuildRenderList,\n  CalculateTotalRenderable,\n  CreateWorldRenderData,\n  Events,\n  HasDirtyChildren,\n  MergeRenderData,\n  ResetWorldRenderData,\n  StaticWorld,\n  UpdateCachedLayers,\n  World,\n  WorldDepthFirstSearch\n};\n", "import {WorldRenderEvent} from \"./WorldRenderEvent\";\nimport {WorldShutdownEvent} from \"./WorldShutdownEvent\";\nexport {\n  WorldRenderEvent,\n  WorldShutdownEvent\n};\n", "export const WorldRenderEvent = \"worldrender\";\n", "export const WorldShutdownEvent = \"worldshutdown\";\n", "export function CalculateTotalRenderable(entry, renderData) {\n  renderData.numRendered++;\n  renderData.numRenderable++;\n  if (entry.node.dirtyFrame >= renderData.gameFrame) {\n    renderData.dirtyFrame++;\n  }\n  entry.children.forEach((child) => {\n    if (child.children.length > 0) {\n      CalculateTotalRenderable(child, renderData);\n    }\n  });\n}\n", "import {DIRTY_CONST} from \"../gameobjects/DIRTY_CONST\";\nexport function HasDirtyChildren(parent) {\n  if (parent.node.isDirty(DIRTY_CONST.CHILD_CACHE)) {\n    return true;\n  }\n  const stack = [parent];\n  while (stack.length > 0) {\n    const entry = stack.pop();\n    if (entry.node.isDirty(DIRTY_CONST.TRANSFORM)) {\n      return true;\n    }\n    const numChildren = entry.children.length;\n    if (numChildren > 0) {\n      for (let i = 0; i < numChildren; i++) {\n        stack.push(entry.children[i]);\n      }\n    }\n  }\n  stack.length = 0;\n  return false;\n}\n", "import {DIRTY_CONST} from \"../gameobjects/DIRTY_CONST\";\nimport {HasDirtyChildren} from \"./HasDirtyChildren\";\nexport function UpdateCachedLayers(cachedLayers, dirtyCamera) {\n  cachedLayers.forEach((layer) => {\n    if (dirtyCamera || HasDirtyChildren(layer)) {\n      layer.node.setDirty(DIRTY_CONST.CHILD_CACHE);\n    } else {\n      layer.children.length = 0;\n    }\n  });\n}\n", "export function WorldDepthFirstSearch(cachedLayers, parent, output = []) {\n  for (let i = 0; i < parent.numChildren; i++) {\n    const node = parent.children[i];\n    if (node.isRenderable()) {\n      const children = [];\n      const entry = {node, children};\n      output.push(entry);\n      if (node.willRenderChildren && node.numChildren > 0) {\n        if (node.willCacheChildren) {\n          cachedLayers.push(entry);\n        }\n        WorldDepthFirstSearch(cachedLayers, node, children);\n      }\n    }\n  }\n  return output;\n}\n", "import {CalculateTotalRenderable} from \"./CalculateTotalRenderable\";\nimport {UpdateCachedLayers} from \"./UpdateCachedLayers\";\nimport {WorldDepthFirstSearch} from \"./WorldDepthFirstSearch\";\nexport function BuildRenderList(world) {\n  const cachedLayers = [];\n  const stack = [];\n  const entries = WorldDepthFirstSearch(cachedLayers, world, stack);\n  const renderData = world.renderData;\n  if (cachedLayers.length > 0) {\n    UpdateCachedLayers(cachedLayers, world.camera.dirtyRender);\n  }\n  entries.forEach((entry) => {\n    if (entry.children.length > 0) {\n      CalculateTotalRenderable(entry, renderData);\n    } else {\n      renderData.numRendered++;\n      renderData.numRenderable++;\n      if (entry.node.dirtyFrame >= renderData.gameFrame) {\n        renderData.dirtyFrame++;\n      }\n    }\n  });\n  world.renderList = entries;\n  if (world.forceRefresh) {\n    renderData.dirtyFrame++;\n    world.forceRefresh = false;\n  }\n}\n", "export function MergeRenderData(sceneRenderData, worldRenderData) {\n  sceneRenderData.numDirtyFrames += worldRenderData.dirtyFrame;\n  sceneRenderData.numTotalFrames += worldRenderData.numRendered;\n  if (worldRenderData.camera.dirtyRender) {\n    sceneRenderData.numDirtyCameras++;\n  }\n  sceneRenderData.worldData.push(worldRenderData);\n}\n", "export function ResetWorldRenderData(renderData, gameFrame) {\n  renderData.gameFrame = gameFrame;\n  renderData.dirtyFrame = 0;\n  renderData.numRendered = 0;\n  renderData.numRenderable = 0;\n}\n", "import * as GameObjectEvents from \"../gameobjects/events\";\nimport * as WorldEvents from \"./events\";\nimport {Begin, Flush} from \"../renderer/webgl1/renderpass\";\nimport {Emit, Off, On, Once} from \"../events\";\nimport {BuildRenderList} from \"./BuildRenderList\";\nimport {GameObject} from \"../gameobjects\";\nimport {Mat2dEquals} from \"../math/mat2d/Mat2dEquals\";\nimport {MergeRenderData} from \"./MergeRenderData\";\nimport {RemoveChildren} from \"../display\";\nimport {ResetWorldRenderData} from \"./ResetWorldRenderData\";\nexport class BaseWorld extends GameObject {\n  constructor(scene) {\n    super();\n    this.forceRefresh = false;\n    this.is3D = false;\n    this.type = \"BaseWorld\";\n    this.scene = scene;\n    this.world = this;\n    this.events = new Map();\n    this.renderList = [];\n    this._updateListener = On(scene, \"update\", (delta, time) => this.update(delta, time));\n    this._renderListener = On(scene, \"render\", (renderData) => this.render(renderData));\n    this._shutdownListener = On(scene, \"shutdown\", () => this.shutdown());\n    Once(scene, \"destroy\", () => this.destroy());\n  }\n  update(delta, time) {\n    if (!this.willUpdate) {\n      return;\n    }\n    Emit(this, GameObjectEvents.UpdateEvent, delta, time, this);\n    super.update(delta, time);\n  }\n  postUpdate(delta, time) {\n    Emit(this, GameObjectEvents.PostUpdateEvent, delta, time, this);\n  }\n  render(sceneRenderData) {\n    const renderData = this.renderData;\n    ResetWorldRenderData(renderData, sceneRenderData.gameFrame);\n    if (!this.willRender || !this.visible) {\n      return;\n    }\n    BuildRenderList(this);\n    Emit(this, WorldEvents.WorldRenderEvent, renderData, this);\n    MergeRenderData(sceneRenderData, renderData);\n    this.camera.dirtyRender = false;\n  }\n  renderGL(renderPass) {\n    const currentCamera = renderPass.current2DCamera;\n    const camera = this.camera;\n    if (!currentCamera || !Mat2dEquals(camera.worldTransform, currentCamera.worldTransform)) {\n      Flush(renderPass);\n    }\n    Begin(renderPass, camera);\n    this.renderList.forEach((entry) => {\n      if (entry.children.length > 0) {\n        this.renderNode(entry, renderPass);\n      } else {\n        entry.node.renderGL(renderPass);\n      }\n    });\n  }\n  renderNode(entry, renderPass) {\n    entry.node.renderGL(renderPass);\n    entry.children.forEach((child) => {\n      if (child.children.length > 0) {\n        this.renderNode(child, renderPass);\n      } else {\n        child.node.renderGL(renderPass);\n      }\n    });\n    entry.node.postRenderGL(renderPass);\n  }\n  postRenderGL(renderPass) {\n  }\n  shutdown() {\n    const scene = this.scene;\n    Off(scene, \"update\", this._updateListener);\n    Off(scene, \"render\", this._renderListener);\n    Off(scene, \"shutdown\", this._shutdownListener);\n    RemoveChildren(this);\n    Emit(this, WorldEvents.WorldShutdownEvent, this);\n    ResetWorldRenderData(this.renderData, 0);\n    if (this.camera) {\n      this.camera.reset();\n    }\n  }\n  destroy(reparentChildren) {\n    super.destroy(reparentChildren);\n    Emit(this, GameObjectEvents.DestroyEvent, this);\n    ResetWorldRenderData(this.renderData, 0);\n    if (this.camera) {\n      this.camera.destroy();\n    }\n    this.events.clear();\n    this.camera = null;\n    this.renderData = null;\n    this.events = null;\n  }\n}\n", "export function CreateWorldRenderData(world, camera) {\n  return {\n    world,\n    camera,\n    gameFrame: 0,\n    dirtyFrame: 0,\n    numRendered: 0,\n    numRenderable: 0\n  };\n}\n", "import {BaseWorld} from \"./BaseWorld\";\nimport {CreateWorldRenderData} from \"./CreateWorldRenderData\";\nimport {StaticCamera} from \"../camera/StaticCamera\";\nexport class StaticWorld extends BaseWorld {\n  constructor(scene) {\n    super(scene);\n    this.type = \"StaticWorld\";\n    this.camera = new StaticCamera();\n    this.renderData = CreateWorldRenderData(this, this.camera);\n  }\n}\n", "import {BaseWorld} from \"./BaseWorld\";\nimport {Camera} from \"../camera/Camera\";\nimport {CreateWorldRenderData} from \"./CreateWorldRenderData\";\nexport class World extends BaseWorld {\n  constructor(scene) {\n    super(scene);\n    this.enableCameraCull = true;\n    this.type = \"World\";\n    this.camera = new Camera();\n    this.renderData = CreateWorldRenderData(this, this.camera);\n  }\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetBanner() {\n  const {title, version, url, color, background} = ConfigStore.get(CONFIG_DEFAULTS.BANNER);\n  if (title !== \"\") {\n    const str = version !== \"\" ? title + \" \" + version : title;\n    console.log(`%c${str}%c ${url}`, `padding: 4px 16px; color: ${color}; background: ${background}`, \"\");\n  }\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetParent() {\n  return ConfigStore.get(CONFIG_DEFAULTS.PARENT);\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetRenderer() {\n  return ConfigStore.get(CONFIG_DEFAULTS.RENDERER);\n}\n", "export function CreateSceneRenderData() {\n  return {\n    gameFrame: 0,\n    numTotalFrames: 0,\n    numDirtyFrames: 0,\n    numDirtyCameras: 0,\n    worldData: []\n  };\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetScenes() {\n  return ConfigStore.get(CONFIG_DEFAULTS.SCENES);\n}\n", "export function ResetSceneRenderData(renderData, gameFrame = 0) {\n  renderData.gameFrame = gameFrame;\n  renderData.numTotalFrames = 0;\n  renderData.numDirtyFrames = 0;\n  renderData.numDirtyCameras = 0;\n  renderData.worldData.length = 0;\n}\n", "let instance;\nexport const SceneManagerInstance = {\n  get: () => {\n    return instance;\n  },\n  set: (manager) => {\n    instance = manager;\n  }\n};\n", "import {Emit, Once} from \"../events\";\nimport {CreateSceneRenderData} from \"./CreateSceneRenderData\";\nimport {GameInstance} from \"../GameInstance\";\nimport {GetScenes} from \"../config/scenes\";\nimport {ResetSceneRenderData} from \"./ResetSceneRenderData\";\nimport {SceneManagerInstance} from \"./SceneManagerInstance\";\nexport class SceneManager {\n  constructor() {\n    this.scenes = new Map();\n    this.sceneIndex = 0;\n    this.flush = false;\n    this.renderResult = CreateSceneRenderData();\n    this.game = GameInstance.get();\n    SceneManagerInstance.set(this);\n    Once(this.game, \"boot\", () => this.boot());\n  }\n  boot() {\n    GetScenes().forEach((scene) => new scene());\n  }\n  update(delta, time) {\n    for (const scene of this.scenes.values()) {\n      Emit(scene, \"update\", delta, time);\n    }\n  }\n  render(gameFrame) {\n    const results = this.renderResult;\n    ResetSceneRenderData(results, gameFrame);\n    for (const scene of this.scenes.values()) {\n      Emit(scene, \"render\", results);\n    }\n    if (this.flush) {\n      results.numDirtyFrames++;\n      this.flush = false;\n    }\n    return results;\n  }\n}\n", "import {SetBackgroundColor} from \"./backgroundcolor/SetBackgroundColor\";\nimport {SetBanner} from \"./banner/SetBanner\";\nimport {SetBatchSize} from \"./batchsize/SetBatchSize\";\nimport {SetDefaultOrigin} from \"./defaultorigin/SetDefaultOrigin\";\nimport {SetMaxTextures} from \"./maxtextures/SetMaxTextures\";\nimport {SetSize} from \"./size/SetSize\";\nexport function SetConfigDefaults() {\n  SetBackgroundColor(0);\n  SetBatchSize(4096);\n  SetBanner(\"Phaser\", \"4.0.0\", \"https://phaser4.io\");\n  SetMaxTextures(0);\n  SetDefaultOrigin(0.5, 0.5);\n  SetSize(800, 600, 1);\n}\n", "import {AddToDOM, DOMContentLoaded} from \"./dom\";\nimport {Emit, EventEmitter} from \"./events\";\nimport {GameInstance} from \"./GameInstance\";\nimport {GetBanner} from \"./config/banner\";\nimport {GetParent} from \"./config/parent\";\nimport {GetRenderer} from \"./config/renderer\";\nimport {SceneManager} from \"./scenes/SceneManager\";\nimport {SetConfigDefaults} from \"./config/SetConfigDefaults\";\nimport {TextureManager} from \"./textures/TextureManager\";\nexport class Game extends EventEmitter {\n  constructor(...settings) {\n    super();\n    this.VERSION = \"4.0.0-beta1\";\n    this.isBooted = false;\n    this.isPaused = false;\n    this.willUpdate = true;\n    this.willRender = true;\n    this.lastTick = 0;\n    this.elapsed = 0;\n    this.frame = 0;\n    GameInstance.set(this);\n    SetConfigDefaults();\n    DOMContentLoaded(() => this.boot(settings));\n  }\n  boot(settings) {\n    settings.forEach((setting) => setting());\n    const renderer = GetRenderer();\n    this.renderer = new renderer();\n    this.textureManager = new TextureManager();\n    this.sceneManager = new SceneManager();\n    const parent = GetParent();\n    if (parent) {\n      AddToDOM(this.renderer.canvas, parent);\n    }\n    this.isBooted = true;\n    GetBanner();\n    Emit(this, \"boot\");\n    this.lastTick = performance.now();\n    this.step(this.lastTick);\n  }\n  pause() {\n    this.isPaused = true;\n  }\n  resume() {\n    this.isPaused = false;\n    this.lastTick = performance.now();\n  }\n  step(time) {\n    const delta = time - this.lastTick;\n    this.lastTick = time;\n    this.elapsed += delta;\n    if (!this.isPaused) {\n      if (this.willUpdate) {\n        this.sceneManager.update(delta, time);\n        Emit(this, \"update\", delta, time);\n      }\n      if (this.willRender) {\n        this.renderer.render(this.sceneManager.render(this.frame));\n      }\n    }\n    this.frame++;\n    GameInstance.setFrame(this.frame);\n    GameInstance.setElapsed(this.elapsed);\n    requestAnimationFrame((now) => this.step(now));\n  }\n  destroy() {\n  }\n}\n", "export function GetConfigValue(config, property, defaultValue) {\n  if (Object.prototype.hasOwnProperty.call(config, property)) {\n    return config[property];\n  } else {\n    return defaultValue;\n  }\n}\n", "import {GetConfigValue} from \"./GetConfigValue\";\nimport {SceneManagerInstance} from \"./SceneManagerInstance\";\nexport function Install(scene, config = {}) {\n  const sceneManager = SceneManagerInstance.get();\n  const size = sceneManager.scenes.size;\n  const sceneIndex = sceneManager.sceneIndex;\n  const firstScene = size === 0;\n  if (typeof config === \"string\") {\n    scene.key = config;\n  } else if (config || !config && firstScene) {\n    scene.key = GetConfigValue(config, \"key\", \"scene\" + sceneIndex.toString());\n  }\n  if (sceneManager.scenes.has(scene.key)) {\n    console.warn(\"Scene key already in use: \" + scene.key);\n  } else {\n    sceneManager.scenes.set(scene.key, scene);\n    sceneManager.flush = true;\n    sceneManager.sceneIndex++;\n  }\n}\n", "import {GameInstance} from \"../GameInstance\";\nimport {Install} from \"./Install\";\nexport class Scene {\n  constructor(config) {\n    this.game = GameInstance.get();\n    this.events = new Map();\n    Install(this, config);\n  }\n}\n", "export class TweenProperty {\n  constructor(name, end) {\n    this.name = name;\n    if (typeof end === \"string\") {\n      this.modifier = end.substr(0, 1);\n      this.end = parseFloat(end.substring(1));\n    } else {\n      this.end = end;\n    }\n  }\n  getEnd(start) {\n    const modifier = this.modifier;\n    const end = this.end;\n    if (modifier === \"+\") {\n      return start + end;\n    } else if (modifier === \"-\") {\n      return start - end;\n    } else {\n      return end;\n    }\n  }\n  to(target) {\n    const current = target[this.name];\n    const end = this.getEnd(current);\n    this.start = current;\n    this.end = end;\n  }\n  from(target) {\n    const current = target[this.name];\n    const end = this.getEnd(current);\n    this.start = end;\n    this.end = current;\n    target[this.name] = end;\n  }\n  update(target, v) {\n    target[this.name] = this.start + (this.end - this.start) * v;\n  }\n}\n", "import {Off, On} from \"../../../events\";\nimport {GameInstance} from \"../../../GameInstance\";\nimport {Linear} from \"../../../math/easing/Linear\";\nimport {TweenProperty} from \"../TweenProperty\";\nimport {UpdateEvent} from \"../../../gameobjects/events\";\nexport class NanoTween {\n  constructor(target, emitter, autoStart = true) {\n    this.state = {running: false, repeat: false, hold: false, delay: false, yoyo: false, yoyoing: false, autoStart: true, reversed: false};\n    this.init = {duration: 0, repeat: 0, repeatDelay: 0, hold: 0, delay: 0};\n    this.counters = {repeat: 0, delay: 0, progress: 0, elapsed: 0};\n    this.ease = Linear;\n    this.properties = [];\n    if (!emitter) {\n      emitter = GameInstance.get();\n    }\n    this.target = target;\n    this.state.autoStart = autoStart;\n    this.emitter = emitter;\n  }\n  to(duration, properties = null) {\n    return this.add(duration, properties, false);\n  }\n  from(duration, properties = null) {\n    return this.add(duration, properties, true);\n  }\n  add(duration, props, reversed) {\n    const state = this.state;\n    const init = this.init;\n    if (state.running) {\n      return this;\n    }\n    const properties = this.properties;\n    for (const [name, value] of Object.entries(props)) {\n      properties.push(new TweenProperty(name, value));\n    }\n    init.duration = duration;\n    state.reversed = reversed;\n    if (state.autoStart) {\n      this.start();\n    }\n    return this;\n  }\n  start() {\n    const state = this.state;\n    if (state.running) {\n      return this;\n    }\n    const target = this.target;\n    const properties = this.properties;\n    properties.forEach((property) => {\n      if (state.reversed) {\n        property.from(target);\n      } else {\n        property.to(target);\n      }\n    });\n    state.running = true;\n    this.listener = On(this.emitter, UpdateEvent, (delta) => this.update(delta));\n    return this;\n  }\n  restart() {\n    const state = this.state;\n    const init = this.init;\n    const counters = this.counters;\n    if (!state) {\n      throw \"Cannot restart destroyed tween\";\n    }\n    counters.delay = init.delay;\n    counters.elapsed = 0;\n    counters.progress = 0;\n    counters.repeat = init.repeat;\n    state.yoyoing = false;\n    state.running = true;\n    return this;\n  }\n  update(delta) {\n    const state = this.state;\n    const init = this.init;\n    const counters = this.counters;\n    if (!state.running) {\n      return false;\n    }\n    if (counters.delay > 0) {\n      counters.delay -= delta;\n      if (counters.delay <= 0) {\n        counters.elapsed = Math.abs(counters.delay) - delta;\n        counters.delay = 0;\n      } else {\n        return false;\n      }\n    }\n    counters.elapsed += delta;\n    const progress = Math.min(counters.elapsed / init.duration, 1);\n    counters.progress = progress;\n    const v = state.yoyoing ? this.ease(1 - progress) : this.ease(progress);\n    const target = this.target;\n    const properties = this.properties;\n    properties.forEach((property) => {\n      property.update(target, v);\n    });\n    if (progress < 1) {\n      return false;\n    }\n    const diff = counters.elapsed - init.duration;\n    if (state.yoyo && !state.yoyoing) {\n      counters.elapsed = diff;\n      counters.delay = init.hold - diff;\n      state.yoyoing = true;\n      return false;\n    }\n    if (counters.repeat > 0) {\n      counters.repeat--;\n      counters.elapsed = diff;\n      counters.delay = init.repeatDelay - diff;\n      state.yoyoing = false;\n      return false;\n    }\n    this.destroy();\n    return true;\n  }\n  delay(duration) {\n    const delay = duration;\n    this.init.delay = delay;\n    this.counters.delay = delay;\n    return this;\n  }\n  hold(duration) {\n    this.init.hold = duration;\n    return this;\n  }\n  yoyo(value = true) {\n    this.state.yoyo = value;\n    return this;\n  }\n  repeat(repeatCount = 1, delay = 0) {\n    const init = this.init;\n    this.state.repeat = repeatCount > 0;\n    this.counters.repeat = repeatCount;\n    init.repeat = repeatCount;\n    init.repeatDelay = delay;\n    return this;\n  }\n  easing(f) {\n    this.ease = f;\n    return this;\n  }\n  destroy() {\n    Off(this.emitter, UpdateEvent, this.listener);\n    this.properties.length = 0;\n    this.target = null;\n    this.ease = null;\n    this.emitter = null;\n    this.state = null;\n    this.init = null;\n    this.counters = null;\n  }\n}\n", "import {NanoTween} from \"./NanoTween\";\nexport function AddTween(target, emitter = null, autoStart = true) {\n  return new NanoTween(target, emitter, autoStart);\n}\n", "import * as Phaser from '@phaserjs/phaser';\n\nimport { BackgroundColor, Parent, Scenes, WebGL } from '@phaserjs/phaser/config';\n\n// import { AddChildren } from '@phaserjs/phaser/display/';\nimport { AddTween } from '@phaserjs/phaser/motion/tween/nano/AddTween';\n\n// import * as Easing from '@phaserjs/phaser/math/easing';\n\n\n// import { Game } from '@phaserjs/phaser/Game';\n// import { ImageFile } from '@phaserjs/phaser/loader/files/ImageFile';\n// import { Loader } from '@phaserjs/phaser/loader/Loader';\n// import { Scene } from '@phaserjs/phaser/scenes/Scene';\n// import { Sprite } from '@phaserjs/phaser/gameobjects/';\n// import { StaticWorld } from '@phaserjs/phaser/world/StaticWorld';\n\nclass Demo extends Phaser.Scene\n{\n    constructor ()\n    {\n        super();\n\n        console.log('index-bundle');\n\n        const world = new Phaser.World.StaticWorld(this);\n\n        const loader = new Phaser.Loader.Loader();\n\n        if (window.location.href.includes('192.168.0.100/phaser-genesis/'))\n        {\n            loader.setPath('/phaser4-examples/public/assets/');\n        }\n        else\n        {\n            loader.setPath('/examples/public/assets/');\n        }\n\n        loader.add(Phaser.Loader.Files.ImageFile('logo', 'logo.png'));\n\n        loader.start().then(() => {\n\n            const logo = new Phaser.GameObjects.Sprite(400, 100, 'logo').setRotation(0.3);\n\n            AddTween(logo).to(3000, { y: 400, rotation: 0 }).easing(Phaser.Math.Easing.Bounce.Out);\n\n            Phaser.Display.AddChildren(world, logo);\n\n        });\n    }\n}\n\nnew Phaser.Game(\n    WebGL(),\n    Parent('gameParent'),\n    BackgroundColor(0x2d2d2d),\n    Scenes(Demo)\n);\n"],
  "mappings": "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",
  "names": []
}
