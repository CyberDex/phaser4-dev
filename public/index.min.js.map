{
  "version": 3,
  "sources": ["../node_modules/@phaserjs/phaser/math/easing/back/In.js", "../node_modules/@phaserjs/phaser/math/easing/back/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/back/Out.js", "../node_modules/@phaserjs/phaser/math/easing/bounce/index.js", "../node_modules/@phaserjs/phaser/math/easing/bounce/In.js", "../node_modules/@phaserjs/phaser/math/easing/bounce/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/bounce/Out.js", "../node_modules/@phaserjs/phaser/math/easing/circular/In.js", "../node_modules/@phaserjs/phaser/math/easing/circular/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/circular/Out.js", "../node_modules/@phaserjs/phaser/math/easing/cubic/In.js", "../node_modules/@phaserjs/phaser/math/easing/cubic/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/cubic/Out.js", "../node_modules/@phaserjs/phaser/math/easing/elastic/In.js", "../node_modules/@phaserjs/phaser/math/easing/elastic/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/elastic/Out.js", "../node_modules/@phaserjs/phaser/math/easing/expo/In.js", "../node_modules/@phaserjs/phaser/math/easing/expo/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/expo/Out.js", "../node_modules/@phaserjs/phaser/math/easing/quadratic/In.js", "../node_modules/@phaserjs/phaser/math/easing/quadratic/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/quadratic/Out.js", "../node_modules/@phaserjs/phaser/math/easing/quartic/In.js", "../node_modules/@phaserjs/phaser/math/easing/quartic/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/quartic/Out.js", "../node_modules/@phaserjs/phaser/math/easing/quintic/In.js", "../node_modules/@phaserjs/phaser/math/easing/quintic/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/quintic/Out.js", "../node_modules/@phaserjs/phaser/math/easing/sine/In.js", "../node_modules/@phaserjs/phaser/math/easing/sine/InOut.js", "../node_modules/@phaserjs/phaser/math/easing/sine/Out.js", "../node_modules/@phaserjs/phaser/math/easing/Linear.js", "../node_modules/@phaserjs/phaser/math/easing/Stepped.js", "../node_modules/@phaserjs/phaser/math/easing/GetEase.js", "../node_modules/@phaserjs/phaser/config/const.js", "../node_modules/@phaserjs/phaser/config/ConfigStore.js", "../node_modules/@phaserjs/phaser/config/backgroundcolor/SetBackgroundColor.js", "../node_modules/@phaserjs/phaser/config/backgroundcolor/BackgroundColor.js", "../node_modules/@phaserjs/phaser/config/banner/SetBanner.js", "../node_modules/@phaserjs/phaser/config/batchsize/SetBatchSize.js", "../node_modules/@phaserjs/phaser/config/size/GetHeight.js", "../node_modules/@phaserjs/phaser/config/size/GetResolution.js", "../node_modules/@phaserjs/phaser/config/size/GetWidth.js", "../node_modules/@phaserjs/phaser/config/size/SetSize.js", "../node_modules/@phaserjs/phaser/renderer/BindingQueue.js", "../node_modules/@phaserjs/phaser/config/backgroundcolor/GetBackgroundColor.js", "../node_modules/@phaserjs/phaser/config/renderer/SetRenderer.js", "../node_modules/@phaserjs/phaser/config/defaultorigin/SetDefaultOrigin.js", "../node_modules/@phaserjs/phaser/config/maxtextures/SetMaxTextures.js", "../node_modules/@phaserjs/phaser/dom/GetElement.js", "../node_modules/@phaserjs/phaser/config/parent/SetParent.js", "../node_modules/@phaserjs/phaser/config/parent/Parent.js", "../node_modules/@phaserjs/phaser/config/scenes/SetScenes.js", "../node_modules/@phaserjs/phaser/config/scenes/Scenes.js", "../node_modules/@phaserjs/phaser/geom/rectangle/RectangleContains.js", "../node_modules/@phaserjs/phaser/geom/rectangle/Rectangle.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/AddViewport.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/GL.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/BindViewport.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetViewport.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/BindFramebuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/PopViewport.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/PopFramebuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/AddFramebuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetFramebuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/Draw.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/Flush.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/End.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/colors/GetRGBArray.js", "../node_modules/@phaserjs/phaser/config/webglcontext/GetWebGLContext.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/textures/CreateGLTexture.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/fbo/DeleteFramebuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/textures/DeleteGLTexture.js", "../node_modules/@phaserjs/phaser/math/pow2/IsSizePowerOfTwo.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/textures/SetGLTextureFilterMode.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/textures/UpdateGLTexture.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/textures/GLTextureBinding.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/ProcessBindingQueue.js", "../node_modules/@phaserjs/phaser/config/maxtextures/GetMaxTextures.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/CheckShaderMaxIfStatements.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/CreateTempTextures.js", "../node_modules/@phaserjs/phaser/config/batchsize/GetBatchSize.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/buffers/DeleteGLBuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/buffers/VertexBuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/buffers/IndexedVertexBuffer.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/CheckMatrix.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/MatrixToString.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/ReverseColumns.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/ReverseRows.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/TransposeMatrix.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/RotateMatrix.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/Rotate180.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/RotateLeft.js", "../node_modules/@phaserjs/phaser/utils/array/matrix/RotateRight.js", "../node_modules/@phaserjs/phaser/utils/array/NumberArray.js", "../node_modules/@phaserjs/phaser/math/RoundAwayFromZero.js", "../node_modules/@phaserjs/phaser/utils/array/NumberArrayStep.js", "../node_modules/@phaserjs/phaser/utils/base64/ArrayBufferToBase64.js", "../node_modules/@phaserjs/phaser/utils/base64/Base64ToArrayBuffer.js", "../node_modules/@phaserjs/phaser/utils/string/UppercaseFirst.js", "../node_modules/@phaserjs/phaser/utils/NOOP.js", "../node_modules/@phaserjs/phaser/math/mat4/Matrix4.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Ortho.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/CreateAttributes.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/DeleteShaders.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/CreateProgram.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/CreateShader.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/CreateUniformSetter.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/CreateUniforms.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/GL_CONST.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/DefaultQuadAttributes.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/DefaultQuadUniforms.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/fbo/CreateDepthBuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/fbo/CreateFramebuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/glsl/SINGLE_QUAD_FRAG.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/glsl/SINGLE_QUAD_VERT.js", "../node_modules/@phaserjs/phaser/textures/Frame.js", "../node_modules/@phaserjs/phaser/textures/Texture.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/Shader.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/QuadShader.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/glsl/MULTI_QUAD_FRAG.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/MultiTextureQuadShader.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetDefaultBlendMode.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetDefaultFramebuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetDefaultShader.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetDefaultVertexBuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetDefaultViewport.js", "../node_modules/@phaserjs/phaser/GameInstance.js", "../node_modules/@phaserjs/phaser/math/mat4/Mat4Identity.js", "../node_modules/@phaserjs/phaser/math/mat2d/Matrix2D.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2Callback.js", "../node_modules/@phaserjs/phaser/math/angle/AngleBetween.js", "../node_modules/@phaserjs/phaser/math/angle/AngleBetweenY.js", "../node_modules/@phaserjs/phaser/math/const.js", "../node_modules/@phaserjs/phaser/math/angle/CounterClockwise.js", "../node_modules/@phaserjs/phaser/math/angle/NormalizeAngle.js", "../node_modules/@phaserjs/phaser/math/angle/ReverseAngle.js", "../node_modules/@phaserjs/phaser/math/angle/RotateAngleTo.js", "../node_modules/@phaserjs/phaser/math/angle/ShortestAngleBetween.js", "../node_modules/@phaserjs/phaser/math/Wrap.js", "../node_modules/@phaserjs/phaser/math/angle/WrapAngle.js", "../node_modules/@phaserjs/phaser/math/angle/WrapAngleDegrees.js", "../node_modules/@phaserjs/phaser/math/angle/index.js", "../node_modules/@phaserjs/phaser/camera/StaticCamera.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/RenderPass.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/BindShader.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/Begin.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/BindBlendMode.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/BindVertexBuffer.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/GetVertexBufferEntry.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/SetTexture.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/renderpass/Start.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/WebGLRendererInstance.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/WebGLRenderer.js", "../node_modules/@phaserjs/phaser/config/webgl/WebGL.js", "../node_modules/@phaserjs/phaser/display/DepthFirstSearch.js", "../node_modules/@phaserjs/phaser/display/GetChildIndex.js", "../node_modules/@phaserjs/phaser/display/RemoveChildAt.js", "../node_modules/@phaserjs/phaser/display/RemoveChild.js", "../node_modules/@phaserjs/phaser/gameobjects/events/AddedToWorldEvent.js", "../node_modules/@phaserjs/phaser/gameobjects/events/DestroyEvent.js", "../node_modules/@phaserjs/phaser/gameobjects/events/PostUpdateEvent.js", "../node_modules/@phaserjs/phaser/gameobjects/events/RemovedFromWorldEvent.js", "../node_modules/@phaserjs/phaser/gameobjects/events/UpdateEvent.js", "../node_modules/@phaserjs/phaser/events/Emit.js", "../node_modules/@phaserjs/phaser/display/SetWorld.js", "../node_modules/@phaserjs/phaser/display/SetParent.js", "../node_modules/@phaserjs/phaser/display/AddChild.js", "../node_modules/@phaserjs/phaser/display/AddChildren.js", "../node_modules/@phaserjs/phaser/gameobjects/DIRTY_CONST.js", "../node_modules/@phaserjs/phaser/display/RemoveChildrenBetween.js", "../node_modules/@phaserjs/phaser/display/DestroyChildren.js", "../node_modules/@phaserjs/phaser/display/RemoveChildren.js", "../node_modules/@phaserjs/phaser/display/ReparentChildren.js", "../node_modules/@phaserjs/phaser/events/EventEmitter.js", "../node_modules/@phaserjs/phaser/events/EventInstance.js", "../node_modules/@phaserjs/phaser/events/Off.js", "../node_modules/@phaserjs/phaser/events/On.js", "../node_modules/@phaserjs/phaser/events/Once.js", "../node_modules/@phaserjs/phaser/motion/tween/TweenProperty.js", "../node_modules/@phaserjs/phaser/motion/tween/nano/NanoTween.js", "../node_modules/@phaserjs/phaser/motion/tween/nano/AddTween.js", "../node_modules/@phaserjs/phaser/dom/AddToDOM.js", "../node_modules/@phaserjs/phaser/dom/DOMContentLoaded.js", "../node_modules/@phaserjs/phaser/dom/ParseXML.js", "../node_modules/@phaserjs/phaser/config/banner/GetBanner.js", "../node_modules/@phaserjs/phaser/config/parent/GetParent.js", "../node_modules/@phaserjs/phaser/config/renderer/GetRenderer.js", "../node_modules/@phaserjs/phaser/scenes/CreateSceneRenderData.js", "../node_modules/@phaserjs/phaser/config/scenes/GetScenes.js", "../node_modules/@phaserjs/phaser/scenes/ResetSceneRenderData.js", "../node_modules/@phaserjs/phaser/scenes/SceneManagerInstance.js", "../node_modules/@phaserjs/phaser/scenes/SceneManager.js", "../node_modules/@phaserjs/phaser/config/SetConfigDefaults.js", "../node_modules/@phaserjs/phaser/textures/CreateCanvas.js", "../node_modules/@phaserjs/phaser/textures/TextureManagerInstance.js", "../node_modules/@phaserjs/phaser/textures/TextureManager.js", "../node_modules/@phaserjs/phaser/Game.js", "../node_modules/@phaserjs/phaser/loader/File.js", "../node_modules/@phaserjs/phaser/loader/GetURL.js", "../node_modules/@phaserjs/phaser/loader/ImageTagLoader.js", "../node_modules/@phaserjs/phaser/loader/files/ImageFile.js", "../node_modules/@phaserjs/phaser/loader/Loader.js", "../node_modules/@phaserjs/phaser/scenes/GetConfigValue.js", "../node_modules/@phaserjs/phaser/scenes/Install.js", "../node_modules/@phaserjs/phaser/scenes/Scene.js", "../node_modules/@phaserjs/phaser/gameobjects/components/transform/GetVertices.js", "../node_modules/@phaserjs/phaser/gameobjects/components/bounds/BoundsComponent.js", "../node_modules/@phaserjs/phaser/gameobjects/components/input/InputComponent.js", "../node_modules/@phaserjs/phaser/config/defaultorigin/GetDefaultOriginX.js", "../node_modules/@phaserjs/phaser/config/defaultorigin/GetDefaultOriginY.js", "../node_modules/@phaserjs/phaser/math/vec2/Vec2.js", "../node_modules/@phaserjs/phaser/math/Clamp.js", "../node_modules/@phaserjs/phaser/math/fuzzy/FuzzyEqual.js", "../node_modules/@phaserjs/phaser/geom/rectangle/CeilRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/CeilRectanglePosition.js", "../node_modules/@phaserjs/phaser/geom/rectangle/CenterRectangleOn.js", "../node_modules/@phaserjs/phaser/geom/rectangle/CloneRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/CopyRectangleFrom.js", "../node_modules/@phaserjs/phaser/geom/rectangle/DecomposeRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleAspectRatio.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleCenterX.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleCenterY.js", "../node_modules/@phaserjs/phaser/geom/rectangle/FitRectangleInside.js", "../node_modules/@phaserjs/phaser/geom/rectangle/FitRectangleOutside.js", "../node_modules/@phaserjs/phaser/geom/rectangle/FitRectangleToPoint.js", "../node_modules/@phaserjs/phaser/geom/rectangle/FitRectangleToPoints.js", "../node_modules/@phaserjs/phaser/geom/rectangle/FloorRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/FloorRectanglePosition.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleArea.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleCenter.js", "../node_modules/@phaserjs/phaser/geom/line/Line.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleIntersection.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectanglePerimeter.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleMarchingAnts.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleOverlap.js", "../node_modules/@phaserjs/phaser/math/DegToRad.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectanglePerimeterPoint.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectanglePoint.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectanglePoints.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleRandomPoint.js", "../node_modules/@phaserjs/phaser/geom/rectangle/RectangleContainsRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleRandomPointOutside.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleSize.js", "../node_modules/@phaserjs/phaser/geom/rectangle/GetRectangleUnion.js", "../node_modules/@phaserjs/phaser/geom/rectangle/InflateRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/MergeRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/RectangleContainsPoint.js", "../node_modules/@phaserjs/phaser/geom/rectangle/RectangleEquals.js", "../node_modules/@phaserjs/phaser/geom/rectangle/RectangleFromPoints.js", "../node_modules/@phaserjs/phaser/geom/rectangle/RectangleSizeEquals.js", "../node_modules/@phaserjs/phaser/geom/rectangle/ScaleRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/TranslateRectangle.js", "../node_modules/@phaserjs/phaser/geom/rectangle/TranslateRectanglePoint.js", "../node_modules/@phaserjs/phaser/geom/rectangle/index.js", "../node_modules/@phaserjs/phaser/gameobjects/components/transform/UpdateLocalTransform.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dCopyFrom.js", "../node_modules/@phaserjs/phaser/gameobjects/components/transform/UpdateWorldTransform.js", "../node_modules/@phaserjs/phaser/gameobjects/components/transform/TransformComponent.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/colors/PackColor.js", "../node_modules/@phaserjs/phaser/gameobjects/components/Vertex.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/draw/BatchTexturedQuad.js", "../node_modules/@phaserjs/phaser/gameobjects/GameObject.js", "../node_modules/@phaserjs/phaser/gameobjects/container/Container.js", "../node_modules/@phaserjs/phaser/renderer/canvas/draw/DrawTexturedQuad.js", "../node_modules/@phaserjs/phaser/renderer/webgl1/colors/PackColors.js", "../node_modules/@phaserjs/phaser/gameobjects/sprite/SetFrame.js", "../node_modules/@phaserjs/phaser/gameobjects/sprite/SetTexture.js", "../node_modules/@phaserjs/phaser/gameobjects/sprite/UpdateVertices.js", "../node_modules/@phaserjs/phaser/gameobjects/sprite/Sprite.js", "../node_modules/@phaserjs/phaser/world/events/WorldRenderEvent.js", "../node_modules/@phaserjs/phaser/world/events/WorldShutdownEvent.js", "../node_modules/@phaserjs/phaser/world/CalculateTotalRenderable.js", "../node_modules/@phaserjs/phaser/world/HasDirtyChildren.js", "../node_modules/@phaserjs/phaser/world/UpdateCachedLayers.js", "../node_modules/@phaserjs/phaser/world/WorldDepthFirstSearch.js", "../node_modules/@phaserjs/phaser/world/BuildRenderList.js", "../node_modules/@phaserjs/phaser/math/mat2d/Mat2dEquals.js", "../node_modules/@phaserjs/phaser/world/MergeRenderData.js", "../node_modules/@phaserjs/phaser/world/ResetWorldRenderData.js", "../node_modules/@phaserjs/phaser/world/BaseWorld.js", "../node_modules/@phaserjs/phaser/world/CreateWorldRenderData.js", "../node_modules/@phaserjs/phaser/world/StaticWorld.js", "../src/index.ts"],
  "sourcesContent": ["export function In(v, overshoot = 1.70158) {\n  return v * v * ((overshoot + 1) * v - overshoot);\n}\n", "export function InOut(v, overshoot = 1.70158) {\n  const s = overshoot * 1.525;\n  if ((v *= 2) < 1) {\n    return 0.5 * (v * v * ((s + 1) * v - s));\n  } else {\n    return 0.5 * ((v -= 2) * v * ((s + 1) * v + s) + 2);\n  }\n}\n", "export function Out(v, overshoot = 1.70158) {\n  return --v * v * ((overshoot + 1) * v + overshoot) + 1;\n}\n", "import {In} from \"./In\";\nimport {InOut} from \"./InOut\";\nimport {Out} from \"./Out\";\nexport {\n  In,\n  InOut,\n  Out\n};\n", "export function In(v) {\n  v = 1 - v;\n  if (v < 1 / 2.75) {\n    return 1 - 7.5625 * v * v;\n  } else if (v < 2 / 2.75) {\n    return 1 - (7.5625 * (v -= 1.5 / 2.75) * v + 0.75);\n  } else if (v < 2.5 / 2.75) {\n    return 1 - (7.5625 * (v -= 2.25 / 2.75) * v + 0.9375);\n  } else {\n    return 1 - (7.5625 * (v -= 2.625 / 2.75) * v + 0.984375);\n  }\n}\n", "export function InOut(v) {\n  let reverse = false;\n  if (v < 0.5) {\n    v = 1 - v * 2;\n    reverse = true;\n  } else {\n    v = v * 2 - 1;\n  }\n  if (v < 1 / 2.75) {\n    v = 7.5625 * v * v;\n  } else if (v < 2 / 2.75) {\n    v = 7.5625 * (v -= 1.5 / 2.75) * v + 0.75;\n  } else if (v < 2.5 / 2.75) {\n    v = 7.5625 * (v -= 2.25 / 2.75) * v + 0.9375;\n  } else {\n    v = 7.5625 * (v -= 2.625 / 2.75) * v + 0.984375;\n  }\n  if (reverse) {\n    return (1 - v) * 0.5;\n  } else {\n    return v * 0.5 + 0.5;\n  }\n}\n", "export function Out(v) {\n  if (v < 1 / 2.75) {\n    return 7.5625 * v * v;\n  } else if (v < 2 / 2.75) {\n    return 7.5625 * (v -= 1.5 / 2.75) * v + 0.75;\n  } else if (v < 2.5 / 2.75) {\n    return 7.5625 * (v -= 2.25 / 2.75) * v + 0.9375;\n  } else {\n    return 7.5625 * (v -= 2.625 / 2.75) * v + 0.984375;\n  }\n}\n", "export function In(v) {\n  return 1 - Math.sqrt(1 - v * v);\n}\n", "export function InOut(v) {\n  if ((v *= 2) < 1) {\n    return -0.5 * (Math.sqrt(1 - v * v) - 1);\n  } else {\n    return 0.5 * (Math.sqrt(1 - (v -= 2) * v) + 1);\n  }\n}\n", "export function Out(v) {\n  return Math.sqrt(1 - --v * v);\n}\n", "export function In(v) {\n  return v * v * v;\n}\n", "export function InOut(v) {\n  if ((v *= 2) < 1) {\n    return 0.5 * v * v * v;\n  } else {\n    return 0.5 * ((v -= 2) * v * v + 2);\n  }\n}\n", "export function Out(v) {\n  return --v * v * v + 1;\n}\n", "export function In(v, amplitude = 0.1, period = 0.1) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    let s = period / 4;\n    if (amplitude < 1) {\n      amplitude = 1;\n    } else {\n      s = period * Math.asin(1 / amplitude) / (2 * Math.PI);\n    }\n    return -(amplitude * Math.pow(2, 10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period));\n  }\n}\n", "export function InOut(v, amplitude = 0.1, period = 0.1) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    let s = period / 4;\n    if (amplitude < 1) {\n      amplitude = 1;\n    } else {\n      s = period * Math.asin(1 / amplitude) / (2 * Math.PI);\n    }\n    if ((v *= 2) < 1) {\n      return -0.5 * (amplitude * Math.pow(2, 10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period));\n    } else {\n      return amplitude * Math.pow(2, -10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period) * 0.5 + 1;\n    }\n  }\n}\n", "export function Out(v, amplitude = 0.1, period = 0.1) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    let s = period / 4;\n    if (amplitude < 1) {\n      amplitude = 1;\n    } else {\n      s = period * Math.asin(1 / amplitude) / (2 * Math.PI);\n    }\n    return amplitude * Math.pow(2, -10 * v) * Math.sin((v - s) * (2 * Math.PI) / period) + 1;\n  }\n}\n", "export function In(v) {\n  return Math.pow(2, 10 * (v - 1)) - 1e-3;\n}\n", "export function InOut(v) {\n  if (v == 0) {\n    return 0;\n  }\n  if (v == 1) {\n    return 1;\n  }\n  if ((v *= 2) < 1) {\n    return 0.5 * Math.pow(2, 10 * (v - 1));\n  } else {\n    return 0.5 * (2 - Math.pow(2, -10 * (v - 1)));\n  }\n}\n", "export function Out(v) {\n  return 1 - Math.pow(2, -10 * v);\n}\n", "export function In(v) {\n  return v * v;\n}\n", "export function InOut(v) {\n  if ((v *= 2) < 1) {\n    return 0.5 * v * v;\n  } else {\n    return -0.5 * (--v * (v - 2) - 1);\n  }\n}\n", "export function Out(v) {\n  return v * (2 - v);\n}\n", "export function In(v) {\n  return v * v * v * v;\n}\n", "export function InOut(v) {\n  if ((v *= 2) < 1) {\n    return 0.5 * v * v * v * v;\n  } else {\n    return -0.5 * ((v -= 2) * v * v * v - 2);\n  }\n}\n", "export function Out(v) {\n  return -(--v * v * v * v - 1);\n}\n", "export function In(v) {\n  return v * v * v * v * v;\n}\n", "export function InOut(v) {\n  if ((v *= 2) < 1) {\n    return 0.5 * v * v * v * v * v;\n  } else {\n    return 0.5 * ((v -= 2) * v * v * v * v + 2);\n  }\n}\n", "export function Out(v) {\n  return (v = v - 1) * v * v * v * v + 1;\n}\n", "export function In(v) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    return 1 - Math.cos(v * Math.PI / 2);\n  }\n}\n", "export function InOut(v) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    return 0.5 * (1 - Math.cos(Math.PI * v));\n  }\n}\n", "export function Out(v) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    return Math.sin(v * Math.PI / 2);\n  }\n}\n", "export function Linear(v) {\n  return v;\n}\n", "export function Stepped(v, steps = 1) {\n  if (v <= 0) {\n    return 0;\n  } else if (v >= 1) {\n    return 1;\n  } else {\n    return ((steps * v | 0) + 1) * (1 / steps);\n  }\n}\n", "import * as Back from \"./back\";\nimport * as Bounce from \"./bounce\";\nimport * as Circular from \"./circular\";\nimport * as Cubic from \"./cubic\";\nimport * as Elastic from \"./elastic\";\nimport * as Expo from \"./expo\";\nimport * as Quadratic from \"./quadratic\";\nimport * as Quartic from \"./quartic\";\nimport * as Quintic from \"./quintic\";\nimport * as Sine from \"./sine\";\nimport {Linear} from \"./Linear\";\nimport {Stepped} from \"./Stepped\";\nconst EaseMap = new Map([\n  [\"power0\", Linear],\n  [\"power1\", Quadratic.Out],\n  [\"power2\", Cubic.Out],\n  [\"power3\", Quartic.Out],\n  [\"power4\", Quintic.Out],\n  [\"linear\", Linear],\n  [\"quad\", Quadratic.Out],\n  [\"cubic\", Cubic.Out],\n  [\"quart\", Quartic.Out],\n  [\"quint\", Quintic.Out],\n  [\"sine\", Sine.Out],\n  [\"expo\", Expo.Out],\n  [\"circ\", Circular.Out],\n  [\"elastic\", Elastic.Out],\n  [\"back\", Back.Out],\n  [\"bounce\", Bounce.Out],\n  [\"stepped\", Stepped],\n  [\"quad.in\", Quadratic.In],\n  [\"cubic.in\", Cubic.In],\n  [\"quart.in\", Quartic.In],\n  [\"quint.in\", Quintic.In],\n  [\"sine.in\", Sine.In],\n  [\"expo.in\", Expo.In],\n  [\"circ.in\", Circular.In],\n  [\"elastic.in\", Elastic.In],\n  [\"back.in\", Back.In],\n  [\"bounce.in\", Bounce.In],\n  [\"quad.out\", Quadratic.Out],\n  [\"cubic.out\", Cubic.Out],\n  [\"quart.out\", Quartic.Out],\n  [\"quint.out\", Quintic.Out],\n  [\"sine.out\", Sine.Out],\n  [\"expo.out\", Expo.Out],\n  [\"circ.out\", Circular.Out],\n  [\"elastic.out\", Elastic.Out],\n  [\"back.out\", Back.Out],\n  [\"bounce.out\", Bounce.Out],\n  [\"quad.inout\", Quadratic.InOut],\n  [\"cubic.inout\", Cubic.InOut],\n  [\"quart.inout\", Quartic.InOut],\n  [\"quint.inout\", Quintic.InOut],\n  [\"sine.inout\", Sine.InOut],\n  [\"expo.inout\", Expo.InOut],\n  [\"circ.inout\", Circular.InOut],\n  [\"elastic.inout\", Elastic.InOut],\n  [\"back.inout\", Back.InOut],\n  [\"bounce.inout\", Bounce.InOut]\n]);\nexport function GetEase(name) {\n  name = name.toLowerCase();\n  name = name.replace(\"ease\", \"\");\n  if (EaseMap.has(name)) {\n    return EaseMap.get(name);\n  } else {\n    return Linear;\n  }\n}\n", "export const CONFIG_DEFAULTS = {\n  BACKGROUND_COLOR: \"BackgroundColor\",\n  BATCH_SIZE: \"BatchSize\",\n  DEFAULT_ORIGIN: \"DefaultOrigin\",\n  MAX_TEXTURES: \"MaxTextures\",\n  PARENT: \"Parent\",\n  SIZE: \"Size\",\n  SCENES: \"Scenes\",\n  RENDERER: \"Renderer\",\n  AUTO: \"Auto\",\n  WEBGL: \"WebGL\",\n  CANVAS: \"Canvas\",\n  WEBGL_CONTEXT: \"WebGLContext\",\n  CANVAS_CONTEXT: \"CanvasContext\",\n  BANNER: \"Banner\"\n};\n", "export const ConfigStore = new Map();\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function SetBackgroundColor(color) {\n  ConfigStore.set(CONFIG_DEFAULTS.BACKGROUND_COLOR, color);\n}\n", "import {SetBackgroundColor} from \"./SetBackgroundColor\";\nexport function BackgroundColor(color) {\n  return () => {\n    SetBackgroundColor(color);\n  };\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function SetBanner(title = \"\", version = \"\", url = \"\", color = \"#fff\", background = \"linear-gradient(#3e0081 40%, #00bcc3)\") {\n  ConfigStore.set(CONFIG_DEFAULTS.BANNER, {title, version, url, color, background});\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function SetBatchSize(size) {\n  ConfigStore.set(CONFIG_DEFAULTS.BATCH_SIZE, size);\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetHeight() {\n  return ConfigStore.get(CONFIG_DEFAULTS.SIZE).height;\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetResolution() {\n  return ConfigStore.get(CONFIG_DEFAULTS.SIZE).resolution;\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetWidth() {\n  return ConfigStore.get(CONFIG_DEFAULTS.SIZE).width;\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function SetSize(width = 800, height = 600, resolution = 1) {\n  if (resolution === 0) {\n    resolution = window.devicePixelRatio;\n  }\n  ConfigStore.set(CONFIG_DEFAULTS.SIZE, {width, height, resolution});\n}\n", "const queue = [];\nexport const BindingQueue = {\n  add: (texture, glConfig) => {\n    queue.push({texture, glConfig});\n  },\n  get: () => {\n    return queue;\n  },\n  clear: () => {\n    queue.length = 0;\n  }\n};\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetBackgroundColor() {\n  return ConfigStore.get(CONFIG_DEFAULTS.BACKGROUND_COLOR);\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function SetRenderer(renderer) {\n  ConfigStore.set(CONFIG_DEFAULTS.RENDERER, renderer);\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function SetDefaultOrigin(x = 0.5, y = x) {\n  ConfigStore.set(CONFIG_DEFAULTS.DEFAULT_ORIGIN, {x, y});\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function SetMaxTextures(max) {\n  ConfigStore.set(CONFIG_DEFAULTS.MAX_TEXTURES, max);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetElement(target) {\n  let element;\n  if (target) {\n    if (typeof target === \"string\") {\n      element = document.getElementById(target);\n    } else if (typeof target === \"object\" && target.nodeType === 1) {\n      element = target;\n    }\n  }\n  if (!element) {\n    element = document.body;\n  }\n  return element;\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nimport {GetElement} from \"../../dom/GetElement\";\nexport function SetParent(parentElement) {\n  if (parentElement) {\n    ConfigStore.set(CONFIG_DEFAULTS.PARENT, GetElement(parentElement));\n  }\n}\n", "import {SetParent} from \"./SetParent\";\nexport function Parent(parentElement) {\n  return () => {\n    SetParent(parentElement);\n  };\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function SetScenes(scenes) {\n  ConfigStore.set(CONFIG_DEFAULTS.SCENES, [].concat(scenes));\n}\n", "import {SetScenes} from \"./SetScenes\";\nexport function Scenes(scenes) {\n  return () => {\n    SetScenes(scenes);\n  };\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function RectangleContains(rect, x, y) {\n  if (rect.width <= 0 || rect.height <= 0) {\n    return false;\n  }\n  return rect.x <= x && rect.x + rect.width >= x && rect.y <= y && rect.y + rect.height >= y;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {RectangleContains} from \"./RectangleContains\";\nexport class Rectangle {\n  constructor(x = 0, y = 0, width = 0, height = 0) {\n    this.set(x, y, width, height);\n  }\n  set(x = 0, y = 0, width = 0, height = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    return this;\n  }\n  contains(x, y) {\n    return RectangleContains(this, x, y);\n  }\n  set right(value) {\n    if (value <= this.x) {\n      this.width = 0;\n    } else {\n      this.width = value - this.x;\n    }\n  }\n  get right() {\n    return this.x + this.width;\n  }\n  set bottom(value) {\n    if (value <= this.y) {\n      this.height = 0;\n    } else {\n      this.height = value - this.y;\n    }\n  }\n  get bottom() {\n    return this.y + this.height;\n  }\n}\n", "import {Rectangle} from \"../../../geom/rectangle/Rectangle\";\nexport function AddViewport(renderPass, x = 0, y = 0, width = 0, height = 0) {\n  const viewport = new Rectangle(x, y, width, height);\n  renderPass.viewportStack.push(viewport);\n  return viewport;\n}\n", "export let gl;\nexport const GL = {\n  get: () => {\n    return gl;\n  },\n  set: (context) => {\n    gl = context;\n  }\n};\n", "import {gl} from \"../GL\";\nexport function BindViewport(renderPass, viewport) {\n  if (!viewport) {\n    viewport = renderPass.currentViewport;\n    if (!viewport) {\n      return;\n    }\n  }\n  const glv = gl.getParameter(gl.VIEWPORT);\n  if (glv[0] !== viewport.x || glv[1] !== viewport.y || glv[2] !== viewport.width || glv[3] !== viewport.height) {\n    gl.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n  }\n}\n", "import {AddViewport} from \"./AddViewport\";\nimport {BindViewport} from \"./BindViewport\";\nexport function SetViewport(renderPass, x = 0, y = 0, width = 0, height = 0) {\n  const entry = AddViewport(renderPass, x, y, width, height);\n  BindViewport(renderPass, entry);\n  renderPass.currentViewport = entry;\n}\n", "import {SetViewport} from \"./SetViewport\";\nimport {gl} from \"../GL\";\nexport function BindFramebuffer(renderPass, clear = true, entry) {\n  if (!entry) {\n    entry = renderPass.currentFramebuffer;\n  }\n  const {framebuffer, viewport} = entry;\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  if (clear) {\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  }\n  if (viewport) {\n    SetViewport(renderPass, viewport.x, viewport.y, viewport.width, viewport.height);\n  }\n}\n", "import {BindViewport} from \"./BindViewport\";\nexport function PopViewport(renderPass) {\n  const stack = renderPass.viewportStack;\n  if (stack.length > 1) {\n    stack.pop();\n  }\n  renderPass.currentViewport = stack[stack.length - 1];\n  BindViewport(renderPass);\n}\n", "import {BindFramebuffer} from \"./BindFramebuffer\";\nimport {PopViewport} from \"./PopViewport\";\nexport function PopFramebuffer(renderPass) {\n  const stack = renderPass.framebufferStack;\n  if (stack.length > 1) {\n    if (renderPass.currentFramebuffer.viewport) {\n      PopViewport(renderPass);\n    }\n    stack.pop();\n  }\n  renderPass.currentFramebuffer = stack[stack.length - 1];\n  BindFramebuffer(renderPass, false);\n}\n", "export function AddFramebuffer(renderPass, framebuffer, viewport) {\n  const entry = {framebuffer, viewport};\n  renderPass.framebufferStack.push(entry);\n  return entry;\n}\n", "import {AddFramebuffer} from \"./AddFramebuffer\";\nimport {BindFramebuffer} from \"./BindFramebuffer\";\nexport function SetFramebuffer(renderPass, framebuffer, clear = true, viewport) {\n  const entry = AddFramebuffer(renderPass, framebuffer, viewport);\n  BindFramebuffer(renderPass, clear, entry);\n  renderPass.currentFramebuffer = entry;\n}\n", "import {PopFramebuffer} from \"./PopFramebuffer\";\nimport {SetFramebuffer} from \"./SetFramebuffer\";\nimport {gl} from \"../GL\";\nexport function Draw(renderPass) {\n  const count = renderPass.count;\n  if (count === 0) {\n    return;\n  }\n  const currentBuffer = renderPass.currentVertexBuffer;\n  const currentShader = renderPass.currentShader;\n  const renderToFramebuffer = currentShader.shader.renderToFramebuffer;\n  if (renderToFramebuffer) {\n    SetFramebuffer(renderPass, currentShader.shader.framebuffer, true);\n  }\n  if (count === currentBuffer.batchSize) {\n    const type = currentBuffer.isDynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n    gl.bufferData(gl.ARRAY_BUFFER, currentBuffer.data, type);\n  } else {\n    const subsize = currentBuffer.indexed ? count * currentBuffer.entryElementSize : count * currentBuffer.vertexElementSize;\n    const view = currentBuffer.vertexViewF32.subarray(0, subsize);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\n  }\n  if (currentBuffer.indexed) {\n    gl.drawElements(gl.TRIANGLES, count * currentBuffer.entryIndexSize, gl.UNSIGNED_SHORT, 0);\n  } else {\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n  }\n  if (renderToFramebuffer) {\n    PopFramebuffer(renderPass);\n  }\n}\n", "import {Draw} from \"./Draw\";\nexport function Flush(renderPass, forceCount) {\n  if (forceCount) {\n    renderPass.count = forceCount;\n  }\n  const count = renderPass.count;\n  if (count === 0) {\n    return false;\n  }\n  Draw(renderPass);\n  renderPass.prevCount = count;\n  renderPass.count = 0;\n  renderPass.flushTotal++;\n  return true;\n}\n", "import {Flush} from \"./Flush\";\nexport function End(renderPass) {\n  Flush(renderPass);\n}\n", "export function GetRGBArray(color, output = []) {\n  const r = color >> 16 & 255;\n  const g = color >> 8 & 255;\n  const b = color & 255;\n  const a = color > 16777215 ? color >>> 24 : 255;\n  output[0] = r / 255;\n  output[1] = g / 255;\n  output[2] = b / 255;\n  output[3] = a / 255;\n  return output;\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetWebGLContext() {\n  return ConfigStore.get(CONFIG_DEFAULTS.WEBGL_CONTEXT);\n}\n", "import {gl} from \"../GL\";\nexport function CreateGLTexture(binding) {\n  const {parent, flipY, unpackPremultiplyAlpha, minFilter, magFilter, wrapS, wrapT, generateMipmap, isPOT} = binding;\n  const source = parent.image;\n  let width = parent.width;\n  let height = parent.height;\n  const glTexture = gl.createTexture();\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(gl.TEXTURE_2D, glTexture);\n  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n  gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, unpackPremultiplyAlpha);\n  if (source) {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\n    width = source.width;\n    height = source.height;\n  } else {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  }\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n  if (generateMipmap && isPOT) {\n    gl.generateMipmap(gl.TEXTURE_2D);\n  }\n  binding.texture = glTexture;\n  return glTexture;\n}\n", "import {gl} from \"../GL\";\nexport function DeleteFramebuffer(framebuffer) {\n  if (gl && gl.isFramebuffer(framebuffer)) {\n    gl.deleteFramebuffer(framebuffer);\n  }\n}\n", "import {gl} from \"../GL\";\nexport function DeleteGLTexture(texture) {\n  if (gl.isTexture(texture)) {\n    gl.deleteTexture(texture);\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function IsSizePowerOfTwo(width, height) {\n  if (width < 1 || height < 1) {\n    return false;\n  }\n  return (width & width - 1) === 0 && (height & height - 1) === 0;\n}\n", "import {gl} from \"../GL\";\nexport function SetGLTextureFilterMode(texture, linear = true) {\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  const mode = linear ? gl.LINEAR : gl.NEAREST;\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, mode);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mode);\n}\n", "import {gl} from \"../GL\";\nexport function UpdateGLTexture(binding) {\n  const source = binding.parent.image;\n  const width = source.width;\n  const height = source.height;\n  if (width > 0 && height > 0) {\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, binding.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, binding.flipY);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\n  }\n  return binding.texture;\n}\n", "import {CreateGLTexture} from \"./CreateGLTexture\";\nimport {DeleteFramebuffer} from \"../fbo/DeleteFramebuffer\";\nimport {DeleteGLTexture} from \"./DeleteGLTexture\";\nimport {IsSizePowerOfTwo} from \"../../../math/pow2/IsSizePowerOfTwo\";\nimport {SetGLTextureFilterMode} from \"./SetGLTextureFilterMode\";\nimport {UpdateGLTexture} from \"./UpdateGLTexture\";\nimport {gl} from \"../GL\";\nexport class GLTextureBinding {\n  constructor(parent, config = {}) {\n    this.index = 0;\n    this.indexCounter = -1;\n    this.dirtyIndex = true;\n    this.unpackPremultiplyAlpha = true;\n    this.flipY = false;\n    this.isPOT = false;\n    this.generateMipmap = false;\n    this.parent = parent;\n    this.isPOT = IsSizePowerOfTwo(parent.width, parent.height);\n    const {\n      texture = null,\n      framebuffer = null,\n      depthbuffer = null,\n      unpackPremultiplyAlpha = true,\n      minFilter = this.isPOT ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR,\n      magFilter = gl.LINEAR,\n      wrapS = gl.CLAMP_TO_EDGE,\n      wrapT = gl.CLAMP_TO_EDGE,\n      generateMipmap = this.isPOT,\n      flipY = false\n    } = config;\n    this.minFilter = minFilter;\n    this.magFilter = magFilter;\n    this.wrapS = wrapS;\n    this.wrapT = wrapT;\n    this.generateMipmap = generateMipmap;\n    this.flipY = flipY;\n    this.unpackPremultiplyAlpha = unpackPremultiplyAlpha;\n    if (framebuffer) {\n      this.framebuffer = framebuffer;\n    }\n    if (depthbuffer) {\n      this.depthbuffer = depthbuffer;\n    }\n    if (texture) {\n      this.texture = texture;\n    } else {\n      CreateGLTexture(this);\n    }\n  }\n  setFilter(linear) {\n    if (this.texture) {\n      SetGLTextureFilterMode(this.texture, linear);\n    }\n  }\n  create() {\n    const texture = this.texture;\n    if (texture) {\n      DeleteGLTexture(texture);\n    }\n    return CreateGLTexture(this);\n  }\n  update() {\n    const texture = this.texture;\n    if (!texture) {\n      return CreateGLTexture(this);\n    } else {\n      return UpdateGLTexture(this);\n    }\n  }\n  setIndex(index) {\n    this.dirtyIndex = index !== this.index;\n    this.index = index;\n  }\n  destroy() {\n    DeleteGLTexture(this.texture);\n    DeleteFramebuffer(this.framebuffer);\n    this.parent = null;\n    this.texture = null;\n    this.framebuffer = null;\n  }\n}\n", "import {BindingQueue} from \"../../BindingQueue\";\nimport {GLTextureBinding} from \"../textures/GLTextureBinding\";\nexport function ProcessBindingQueue() {\n  const queue = BindingQueue.get();\n  queue.forEach((entry) => {\n    const {texture, glConfig} = entry;\n    if (!texture.binding) {\n      texture.binding = new GLTextureBinding(texture, glConfig);\n    }\n  });\n  BindingQueue.clear();\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetMaxTextures() {\n  return ConfigStore.get(CONFIG_DEFAULTS.MAX_TEXTURES);\n}\n", "import {gl} from \"../GL\";\nconst fragTemplate = [\n  \"precision mediump float;\",\n  \"void main(void){\",\n  \"float test = 0.1;\",\n  \"%forloop%\",\n  \"gl_FragColor = vec4(0.0);\",\n  \"}\"\n].join(\"\\n\");\nfunction GenerateSrc(maxIfs) {\n  let src = \"\";\n  for (let i = 0; i < maxIfs; ++i) {\n    if (i > 0) {\n      src += \"\\nelse \";\n    }\n    if (i < maxIfs - 1) {\n      src += `if(test == ${i}.0){}`;\n    }\n  }\n  return src;\n}\nexport function CheckShaderMaxIfStatements(maxIfs) {\n  const shader = gl.createShader(gl.FRAGMENT_SHADER);\n  while (true) {\n    const fragmentSrc = fragTemplate.replace(/%forloop%/gi, GenerateSrc(maxIfs));\n    gl.shaderSource(shader, fragmentSrc);\n    gl.compileShader(shader);\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      maxIfs = maxIfs / 2 | 0;\n    } else {\n      break;\n    }\n  }\n  return maxIfs;\n}\n", "import {GetMaxTextures, SetMaxTextures} from \"../../../config/maxtextures/\";\nimport {CheckShaderMaxIfStatements} from \"../shaders/CheckShaderMaxIfStatements\";\nimport {gl} from \"../GL\";\nexport function CreateTempTextures(renderPass) {\n  let maxGPUTextures = CheckShaderMaxIfStatements(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\n  const maxConfigTextures = GetMaxTextures();\n  if (maxConfigTextures === 0 || maxConfigTextures > 0 && maxConfigTextures > maxGPUTextures) {\n    SetMaxTextures(maxGPUTextures);\n  } else if (maxConfigTextures > 0 && maxConfigTextures < maxGPUTextures) {\n    maxGPUTextures = Math.max(8, maxConfigTextures);\n  }\n  const tempTextures = renderPass.tempTextures;\n  if (tempTextures.length) {\n    tempTextures.forEach((texture) => {\n      gl.deleteTexture(texture);\n    });\n  }\n  const index = [];\n  for (let texturesIndex = 0; texturesIndex < maxGPUTextures; texturesIndex++) {\n    const tempTexture = gl.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + texturesIndex);\n    gl.bindTexture(gl.TEXTURE_2D, tempTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0, 0, 255, 255]));\n    tempTextures[texturesIndex] = tempTexture;\n    index.push(texturesIndex);\n  }\n  renderPass.maxTextures = maxGPUTextures;\n  renderPass.textureIndex = index;\n  renderPass.currentActiveTexture = 1;\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetBatchSize() {\n  return ConfigStore.get(CONFIG_DEFAULTS.BATCH_SIZE);\n}\n", "import {gl} from \"../GL\";\nexport function DeleteGLBuffer(buffer) {\n  if (gl.isBuffer(buffer)) {\n    gl.deleteBuffer(buffer);\n  }\n}\n", "import {DeleteGLBuffer} from \"./DeleteGLBuffer\";\nimport {gl} from \"../GL\";\nexport class VertexBuffer {\n  constructor(config = {}) {\n    this.indexed = false;\n    this.isDynamic = false;\n    this.count = 0;\n    this.offset = 0;\n    const {\n      batchSize = 1,\n      dataSize = 4,\n      isDynamic = true,\n      elementsPerEntry = 4,\n      vertexElementSize = 6\n    } = config;\n    this.batchSize = batchSize;\n    this.dataSize = dataSize;\n    this.vertexElementSize = vertexElementSize;\n    this.isDynamic = isDynamic;\n    this.elementsPerEntry = elementsPerEntry;\n    this.vertexByteSize = vertexElementSize * dataSize;\n    this.entryByteSize = this.vertexByteSize * elementsPerEntry;\n    this.bufferByteSize = batchSize * this.entryByteSize;\n    this.create();\n  }\n  resize(batchSize) {\n    this.batchSize = batchSize;\n    this.bufferByteSize = batchSize * this.entryByteSize;\n    if (this.vertexBuffer) {\n      DeleteGLBuffer(this.vertexBuffer);\n    }\n    this.create();\n  }\n  create() {\n    const data = new ArrayBuffer(this.bufferByteSize);\n    this.data = data;\n    this.vertexViewF32 = new Float32Array(data);\n    this.vertexViewU32 = new Uint32Array(data);\n    this.vertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n    const type = this.isDynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n    gl.bufferData(gl.ARRAY_BUFFER, data, type);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  }\n  add(count) {\n    this.count += count;\n    this.offset += this.vertexElementSize * count;\n  }\n  reset() {\n    this.count = 0;\n    this.offset = 0;\n  }\n  canContain(count) {\n    return this.count + count <= this.batchSize;\n  }\n  free() {\n    return Math.max(0, 1 - this.count / this.batchSize);\n  }\n  bind() {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n  }\n  destroy() {\n    DeleteGLBuffer(this.vertexBuffer);\n    this.data = null;\n    this.vertexViewF32 = null;\n    this.vertexViewU32 = null;\n    this.vertexBuffer = null;\n  }\n}\n", "import {DeleteGLBuffer} from \"./DeleteGLBuffer\";\nimport {VertexBuffer} from \"./VertexBuffer\";\nimport {gl} from \"../GL\";\nexport class IndexedVertexBuffer extends VertexBuffer {\n  constructor(config = {}) {\n    super(config);\n    const {\n      indexSize = 4,\n      entryIndexSize = 6,\n      indexLayout = null\n    } = config;\n    this.indexed = true;\n    this.indexSize = indexSize;\n    this.entryIndexSize = entryIndexSize;\n    this.entryElementSize = this.vertexElementSize * this.elementsPerEntry;\n    const seededIndexBuffer = [];\n    if (indexLayout) {\n      this.indexLayout = indexLayout;\n      for (let i = 0; i < this.batchSize * indexSize; i += indexSize) {\n        for (let c = 0; c < indexLayout.length; c++) {\n          seededIndexBuffer.push(i + indexLayout[c]);\n        }\n      }\n    }\n    this.create();\n    this.createIndexBuffer(seededIndexBuffer);\n  }\n  createIndexBuffer(seededIndex) {\n    this.index = new Uint16Array(seededIndex);\n    this.indexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.index, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    seededIndex = [];\n  }\n  bind() {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n  }\n  destroy() {\n    super.destroy();\n    DeleteGLBuffer(this.indexBuffer);\n    this.index = null;\n    this.indexLayout = null;\n    this.indexBuffer = null;\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CheckMatrix(matrix) {\n  if (!Array.isArray(matrix) || matrix.length < 2 || !Array.isArray(matrix[0])) {\n    return false;\n  }\n  const size = matrix[0].length;\n  for (let i = 1; i < matrix.length; i++) {\n    if (matrix[i].length !== size) {\n      return false;\n    }\n  }\n  return true;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CheckMatrix} from \"./CheckMatrix\";\nexport function MatrixToString(matrix) {\n  let str = \"\";\n  if (!CheckMatrix(matrix)) {\n    return str;\n  }\n  for (let r = 0; r < matrix.length; r++) {\n    for (let c = 0; c < matrix[r].length; c++) {\n      const cell = matrix[r][c].toString();\n      if (cell !== \"undefined\") {\n        str = str.padEnd(2, cell);\n      } else {\n        str += \"?\";\n      }\n      if (c < matrix[r].length - 1) {\n        str += \" |\";\n      }\n    }\n    if (r < matrix.length - 1) {\n      str += \"\\n\";\n      for (let i = 0; i < matrix[r].length; i++) {\n        str += \"---\";\n        if (i < matrix[r].length - 1) {\n          str += \"+\";\n        }\n      }\n      str += \"\\n\";\n    }\n  }\n  return str;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function ReverseColumns(matrix) {\n  return matrix.reverse();\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function ReverseRows(matrix) {\n  for (let i = 0; i < matrix.length; i++) {\n    matrix[i].reverse();\n  }\n  return matrix;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function TransposeMatrix(matrix) {\n  const sourceRowCount = matrix.length;\n  const sourceColCount = matrix[0].length;\n  const result = new Array(sourceColCount);\n  for (let i = 0; i < sourceColCount; i++) {\n    result[i] = new Array(sourceRowCount);\n    for (let j = sourceRowCount - 1; j > -1; j--) {\n      result[i][j] = matrix[j][i];\n    }\n  }\n  return result;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CheckMatrix} from \"./CheckMatrix\";\nimport {TransposeMatrix} from \"./TransposeMatrix\";\nexport function RotateMatrix(matrix, direction = 90) {\n  if (!CheckMatrix(matrix)) {\n    return matrix;\n  }\n  if (typeof direction !== \"string\") {\n    direction = (direction % 360 + 360) % 360;\n  }\n  if (direction === 90 || direction === -270 || direction === \"rotateLeft\") {\n    matrix = TransposeMatrix(matrix);\n    matrix.reverse();\n  } else if (direction === -90 || direction === 270 || direction === \"rotateRight\") {\n    matrix.reverse();\n    matrix = TransposeMatrix(matrix);\n  } else if (Math.abs(direction) === 180 || direction === \"rotate180\") {\n    for (let i = 0; i < matrix.length; i++) {\n      matrix[i].reverse();\n    }\n    matrix.reverse();\n  }\n  return matrix;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {RotateMatrix} from \"./RotateMatrix\";\nexport function Rotate180(matrix) {\n  return RotateMatrix(matrix, 180);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {RotateMatrix} from \"./RotateMatrix\";\nexport function RotateLeft(matrix) {\n  return RotateMatrix(matrix, 90);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {RotateMatrix} from \"./RotateMatrix\";\nexport function RotateRight(matrix) {\n  return RotateMatrix(matrix, -90);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function NumberArray(start, end, prefix, suffix) {\n  const result = [];\n  for (let i = start; i <= end; i++) {\n    if (prefix || suffix) {\n      let key = prefix ? prefix + i.toString() : i.toString();\n      if (suffix) {\n        key = key.concat(suffix);\n      }\n      result.push(key);\n    } else {\n      result.push(i);\n    }\n  }\n  return result;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function RoundAwayFromZero(value) {\n  return value > 0 ? Math.ceil(value) : Math.floor(value);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {RoundAwayFromZero} from \"../../math/RoundAwayFromZero\";\nexport function NumberArrayStep(start, end, step) {\n  const result = [];\n  const total = Math.max(RoundAwayFromZero((end - start) / (step || 1)), 0);\n  for (let i = 0; i < total; i++) {\n    result.push(start);\n    start += step;\n  }\n  return result;\n}\n", "/**\n * @author       Niklas von Hertzen (https://github.com/niklasvh/base64-arraybuffer)\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nconst chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nexport function ArrayBufferToBase64(arrayBuffer, mediaType) {\n  const bytes = new Uint8Array(arrayBuffer);\n  const len = bytes.length;\n  let base64 = mediaType ? \"data:\" + mediaType + \";base64,\" : \"\";\n  for (let i = 0; i < len; i += 3) {\n    base64 += chars[bytes[i] >> 2];\n    base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n    base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n    base64 += chars[bytes[i + 2] & 63];\n  }\n  if (len % 3 === 2) {\n    base64 = base64.substring(0, base64.length - 1) + \"=\";\n  } else if (len % 3 === 1) {\n    base64 = base64.substring(0, base64.length - 2) + \"==\";\n  }\n  return base64;\n}\n", "/**\n * @author       Niklas von Hertzen (https://github.com/niklasvh/base64-arraybuffer)\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nconst chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst lookup = new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n  lookup[chars.charCodeAt(i)] = i;\n}\nexport function Base64ToArrayBuffer(base64) {\n  base64 = base64.substr(base64.indexOf(\",\") + 1);\n  const len = base64.length;\n  let bufferLength = len * 0.75;\n  let p = 0;\n  let encoded1;\n  let encoded2;\n  let encoded3;\n  let encoded4;\n  if (base64[len - 1] === \"=\") {\n    bufferLength--;\n    if (base64[len - 2] === \"=\") {\n      bufferLength--;\n    }\n  }\n  const arrayBuffer = new ArrayBuffer(bufferLength);\n  const bytes = new Uint8Array(arrayBuffer);\n  for (let i = 0; i < len; i += 4) {\n    encoded1 = lookup[base64.charCodeAt(i)];\n    encoded2 = lookup[base64.charCodeAt(i + 1)];\n    encoded3 = lookup[base64.charCodeAt(i + 2)];\n    encoded4 = lookup[base64.charCodeAt(i + 3)];\n    bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n    bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n    bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n  }\n  return arrayBuffer;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function UppercaseFirst(str) {\n  return str && str[0].toUpperCase() + str.slice(1);\n}\n", "export function NOOP() {\n}\n", "import {NOOP} from \"../../utils\";\nexport class Matrix4 {\n  constructor(src) {\n    const data = new Float32Array(16);\n    this.data = data;\n    this.onChange = NOOP;\n    if (src) {\n      if (Array.isArray(src)) {\n        this.fromArray(src);\n      } else {\n        this.fromArray(src.data);\n      }\n    } else {\n      data[0] = 1;\n      data[5] = 1;\n      data[10] = 1;\n      data[15] = 1;\n    }\n  }\n  set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    const data = this.data;\n    data[0] = m00;\n    data[1] = m01;\n    data[2] = m02;\n    data[3] = m03;\n    data[4] = m10;\n    data[5] = m11;\n    data[6] = m12;\n    data[7] = m13;\n    data[8] = m20;\n    data[9] = m21;\n    data[10] = m22;\n    data[11] = m23;\n    data[12] = m30;\n    data[13] = m31;\n    data[14] = m32;\n    data[15] = m33;\n    this.onChange(this);\n    return this;\n  }\n  toArray(dst = [], index = 0) {\n    const data = this.data;\n    for (let i = 0; i < 16; i++) {\n      dst[index + i] = data[i];\n    }\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    const data = this.data;\n    for (let i = 0; i < 16; i++) {\n      data[i] = src[index + i];\n    }\n    this.onChange(this);\n    return this;\n  }\n  toString() {\n    return \"[ mat4=\" + this.data.join(\", \") + \" ]\";\n  }\n  destroy() {\n    this.onChange = NOOP;\n    this.data = null;\n  }\n}\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4Ortho(left, right, bottom, top, near, far, out = new Matrix4()) {\n  const lr = 1 / (left - right);\n  const bt = 1 / (bottom - top);\n  const nf = 1 / (near - far);\n  return out.set(-2 * lr, 0, 0, 0, 0, -2 * bt, 0, 0, 0, 0, 2 * nf, 0, (left + right) * lr, (top + bottom) * bt, (far + near) * nf, 1);\n}\n", "import {gl} from \"../GL\";\nexport function CreateAttributes(program, config) {\n  const attributes = new Map();\n  const defaultSettings = {\n    size: 1,\n    type: gl.FLOAT,\n    normalized: false,\n    stride: 0,\n    offset: 0\n  };\n  const total = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < total; i++) {\n    const attrib = gl.getActiveAttrib(program, i);\n    if (!attrib) {\n      break;\n    }\n    const name = attrib.name;\n    const index = gl.getAttribLocation(program, name);\n    gl.enableVertexAttribArray(index);\n    const setting = config.hasOwnProperty(name) ? config[name] : {};\n    const {\n      size = defaultSettings.size,\n      type = defaultSettings.type,\n      normalized = defaultSettings.normalized,\n      stride = defaultSettings.stride,\n      offset = defaultSettings.offset\n    } = setting;\n    attributes.set(name, {index, size, type, normalized, stride, offset});\n  }\n  return attributes;\n}\n", "import {gl} from \"../GL\";\nexport function DeleteShaders(...shaders) {\n  shaders.forEach((shader) => {\n    gl.deleteShader(shader);\n  });\n}\n", "import {DeleteShaders} from \"./DeleteShaders\";\nimport {gl} from \"../GL\";\nexport function CreateProgram(...shaders) {\n  const program = gl.createProgram();\n  shaders.forEach((shader) => {\n    gl.attachShader(program, shader);\n  });\n  gl.linkProgram(program);\n  const status = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (!status) {\n    const info = gl.getProgramInfoLog(program);\n    console.error(`Error linking program: ${info}`);\n    gl.deleteProgram(program);\n    DeleteShaders(...shaders);\n    return null;\n  }\n  return program;\n}\n", "import {gl} from \"../GL\";\nexport function CreateShader(source, type) {\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (!status) {\n    const info = gl.getShaderInfoLog(shader);\n    const sourceLines = source.split(\"\\n\").map((line, index) => {\n      return `${index}: ${line}`;\n    });\n    console.error(`Error compiling shader: ${info}`, sourceLines.join(\"\\n\"));\n    gl.deleteShader(shader);\n    return null;\n  }\n  return shader;\n}\n", "import {gl} from \"../GL\";\nexport function CreateUniformSetter(uniform, location, isArray = false) {\n  switch (uniform.type) {\n    case gl.INT:\n    case gl.BOOL: {\n      if (isArray) {\n        return (v) => {\n          gl.uniform1iv(location, v);\n        };\n      } else {\n        return (v) => {\n          gl.uniform1i(location, v);\n        };\n      }\n    }\n    case gl.INT_VEC2:\n    case gl.BOOL_VEC2: {\n      return (v) => {\n        gl.uniform2iv(location, v);\n      };\n    }\n    case gl.INT_VEC3:\n    case gl.BOOL_VEC3: {\n      return (v) => {\n        gl.uniform3iv(location, v);\n      };\n    }\n    case gl.INT_VEC4:\n    case gl.BOOL_VEC4: {\n      return (v) => {\n        gl.uniform4iv(location, v);\n      };\n    }\n    case gl.FLOAT: {\n      if (isArray) {\n        return (v) => {\n          gl.uniform1fv(location, v);\n        };\n      } else {\n        return (v) => {\n          gl.uniform1f(location, v);\n        };\n      }\n    }\n    case gl.FLOAT_VEC2: {\n      return (v) => {\n        gl.uniform2fv(location, v);\n      };\n    }\n    case gl.FLOAT_VEC3: {\n      return (v) => {\n        gl.uniform3fv(location, v);\n      };\n    }\n    case gl.FLOAT_VEC4: {\n      return (v) => {\n        gl.uniform4fv(location, v);\n      };\n    }\n    case gl.FLOAT_MAT2: {\n      return (v) => {\n        gl.uniformMatrix2fv(location, false, v);\n      };\n    }\n    case gl.FLOAT_MAT3: {\n      return (v) => {\n        gl.uniformMatrix3fv(location, false, v);\n      };\n    }\n    case gl.FLOAT_MAT4: {\n      return (v) => {\n        gl.uniformMatrix4fv(location, false, v);\n      };\n    }\n    case gl.SAMPLER_2D:\n    case gl.SAMPLER_CUBE: {\n      if (uniform.size > 1) {\n        return (v) => {\n          gl.uniform1iv(location, v);\n        };\n      } else {\n        return (v) => {\n          gl.uniform1i(location, v);\n        };\n      }\n    }\n  }\n}\n", "import {CreateUniformSetter} from \"./CreateUniformSetter\";\nimport {gl} from \"../GL\";\nexport function CreateUniforms(program) {\n  const uniforms = new Map();\n  const total = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (let i = 0; i < total; i++) {\n    const uniform = gl.getActiveUniform(program, i);\n    let name = uniform.name;\n    if (name.startsWith(\"gl_\") || name.startsWith(\"webgl_\")) {\n      continue;\n    }\n    const location = gl.getUniformLocation(program, uniform.name);\n    if (location) {\n      let isArray = false;\n      if (name.substr(-3) === \"[0]\") {\n        name = name.substr(0, name.length - 3);\n        isArray = uniform.size > 1;\n      }\n      uniforms.set(name, CreateUniformSetter(uniform, location, isArray));\n    }\n  }\n  return uniforms;\n}\n", "const BYTE = 5120;\nconst UNSIGNED_BYTE = 5121;\nconst SHORT = 5122;\nconst UNSIGNED_SHORT = 5123;\nconst INT = 5124;\nconst UNSIGNED_INT = 5125;\nconst FLOAT = 5126;\nconst REPEAT = 10497;\nconst CLAMP_TO_EDGE = 33071;\nconst MIRRORED_REPEAT = 33648;\nconst NEAREST = 9728;\nconst LINEAR = 9729;\nconst NEAREST_MIPMAP_NEAREST = 9984;\nconst LINEAR_MIPMAP_NEAREST = 9985;\nconst NEAREST_MIPMAP_LINEAR = 9986;\nconst LINEAR_MIPMAP_LINEAR = 9987;\nexport {\n  BYTE,\n  UNSIGNED_BYTE,\n  SHORT,\n  UNSIGNED_SHORT,\n  INT,\n  UNSIGNED_INT,\n  FLOAT,\n  REPEAT,\n  CLAMP_TO_EDGE,\n  MIRRORED_REPEAT,\n  NEAREST,\n  LINEAR,\n  NEAREST_MIPMAP_NEAREST,\n  LINEAR_MIPMAP_NEAREST,\n  NEAREST_MIPMAP_LINEAR,\n  LINEAR_MIPMAP_LINEAR\n};\n", "import * as GL_CONST from \"../GL_CONST\";\nexport const DefaultQuadAttributes = {\n  aVertexPosition: {size: 2, type: GL_CONST.FLOAT, normalized: false, offset: 0},\n  aTextureCoord: {size: 2, type: GL_CONST.FLOAT, normalized: false, offset: 8},\n  aTextureId: {size: 1, type: GL_CONST.FLOAT, normalized: false, offset: 16},\n  aTintColor: {size: 4, type: GL_CONST.UNSIGNED_BYTE, normalized: true, offset: 20}\n};\n", "export const DefaultQuadUniforms = {\n  uProjectionMatrix: new Float32Array(),\n  uCameraMatrix: new Float32Array(),\n  uTexture: 0\n};\n", "import {gl} from \"../GL\";\nexport function CreateDepthBuffer(framebuffer, textureWidth, textureHeight) {\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  const depthBuffer = gl.createRenderbuffer();\n  gl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer);\n  gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, textureWidth, textureHeight);\n  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthBuffer);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  return depthBuffer;\n}\n", "import {gl} from \"../GL\";\nexport function CreateFramebuffer(texture, attachment) {\n  if (!attachment) {\n    attachment = gl.COLOR_ATTACHMENT0;\n  }\n  const framebuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture, 0);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  return framebuffer;\n}\n", "export const SINGLE_QUAD_FRAG = `#define SHADER_NAME SINGLE_QUAD_FRAG\n\nprecision highp float;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\n\nuniform sampler2D uTexture;\n\nvoid main (void)\n{\n    vec4 color = texture2D(uTexture, vTextureCoord);\n\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\n}`;\n", "export const SINGLE_QUAD_VERT = `#define SHADER_NAME SINGLE_QUAD_VERT\n\nprecision highp float;\n\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute float aTextureId;\nattribute vec4 aTintColor;\n\nuniform mat4 uProjectionMatrix;\nuniform mat4 uCameraMatrix;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\n\nvoid main (void)\n{\n    vTextureCoord = aTextureCoord;\n    vTextureId = aTextureId;\n    vTintColor = aTintColor;\n\n    gl_Position = uProjectionMatrix * uCameraMatrix * vec4(aVertexPosition, 0.0, 1.0);\n}`;\n", "export class Frame {\n  constructor(texture, key, x, y, width, height) {\n    this.trimmed = false;\n    this.texture = texture;\n    this.key = key;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.sourceSizeWidth = width;\n    this.sourceSizeHeight = height;\n    this.updateUVs();\n  }\n  setPivot(x, y) {\n    this.pivot = {x, y};\n  }\n  setSize(width, height) {\n    this.width = width;\n    this.height = height;\n    this.sourceSizeWidth = width;\n    this.sourceSizeHeight = height;\n    this.updateUVs();\n  }\n  setSourceSize(width, height) {\n    this.sourceSizeWidth = width;\n    this.sourceSizeHeight = height;\n  }\n  setTrim(width, height, x, y, w, h) {\n    this.trimmed = true;\n    this.sourceSizeWidth = width;\n    this.sourceSizeHeight = height;\n    this.spriteSourceSizeX = x;\n    this.spriteSourceSizeY = y;\n    this.spriteSourceSizeWidth = w;\n    this.spriteSourceSizeHeight = h;\n  }\n  getExtent(originX, originY) {\n    const sourceSizeWidth = this.sourceSizeWidth;\n    const sourceSizeHeight = this.sourceSizeHeight;\n    let left;\n    let right;\n    let top;\n    let bottom;\n    if (this.trimmed) {\n      left = this.spriteSourceSizeX - originX * sourceSizeWidth;\n      right = left + this.spriteSourceSizeWidth;\n      top = this.spriteSourceSizeY - originY * sourceSizeHeight;\n      bottom = top + this.spriteSourceSizeHeight;\n    } else {\n      left = -originX * sourceSizeWidth;\n      right = left + sourceSizeWidth;\n      top = -originY * sourceSizeHeight;\n      bottom = top + sourceSizeHeight;\n    }\n    return {left, right, top, bottom};\n  }\n  setExtent(child) {\n    const transform = child.transform;\n    const originX = transform.origin.x;\n    const originY = transform.origin.y;\n    const sourceSizeWidth = this.sourceSizeWidth;\n    const sourceSizeHeight = this.sourceSizeHeight;\n    let x;\n    let y;\n    let width;\n    let height;\n    if (this.trimmed) {\n      x = this.spriteSourceSizeX - originX * sourceSizeWidth;\n      y = this.spriteSourceSizeY - originY * sourceSizeHeight;\n      width = this.spriteSourceSizeWidth;\n      height = this.spriteSourceSizeHeight;\n    } else {\n      x = -originX * sourceSizeWidth;\n      y = -originY * sourceSizeHeight;\n      width = sourceSizeWidth;\n      height = sourceSizeHeight;\n    }\n    transform.setExtent(x, y, width, height);\n  }\n  updateUVs() {\n    const {x, y, width, height} = this;\n    const baseTextureWidth = this.texture.width;\n    const baseTextureHeight = this.texture.height;\n    this.u0 = x / baseTextureWidth;\n    this.v0 = y / baseTextureHeight;\n    this.u1 = (x + width) / baseTextureWidth;\n    this.v1 = (y + height) / baseTextureHeight;\n  }\n}\n", "import {BindingQueue} from \"../renderer/BindingQueue\";\nimport {Frame} from \"./Frame\";\nexport class Texture {\n  constructor(image, width, height, glConfig) {\n    this.key = \"\";\n    if (image) {\n      width = image.width;\n      height = image.height;\n    }\n    this.image = image;\n    this.width = width;\n    this.height = height;\n    this.frames = new Map();\n    this.data = {};\n    this.addFrame(\"__BASE\", 0, 0, width, height);\n    BindingQueue.add(this, glConfig);\n  }\n  addFrame(key, x, y, width, height) {\n    if (this.frames.has(key)) {\n      return null;\n    }\n    const frame = new Frame(this, key, x, y, width, height);\n    this.frames.set(key, frame);\n    if (!this.firstFrame || this.firstFrame.key === \"__BASE\") {\n      this.firstFrame = frame;\n    }\n    return frame;\n  }\n  getFrame(key) {\n    if (!key) {\n      return this.firstFrame;\n    }\n    if (key instanceof Frame) {\n      key = key.key;\n    }\n    let frame = this.frames.get(key);\n    if (!frame) {\n      console.warn(`Frame missing: ${key}`);\n      frame = this.firstFrame;\n    }\n    return frame;\n  }\n  setSize(width, height) {\n    this.width = width;\n    this.height = height;\n    const frame = this.frames.get(\"__BASE\");\n    frame.setSize(width, height);\n  }\n  destroy() {\n    if (this.binding) {\n      this.binding.destroy();\n    }\n    this.frames.clear();\n    this.data = null;\n    this.image = null;\n    this.firstFrame = null;\n  }\n}\n", "import {GetHeight, GetResolution, GetWidth} from \"../../../config/size/\";\nimport {CreateAttributes} from \"./CreateAttributes\";\nimport {CreateDepthBuffer} from \"../fbo/CreateDepthBuffer\";\nimport {CreateFramebuffer} from \"../fbo/CreateFramebuffer\";\nimport {CreateProgram} from \"./CreateProgram\";\nimport {CreateShader} from \"./CreateShader\";\nimport {CreateUniforms} from \"./CreateUniforms\";\nimport {DefaultQuadAttributes} from \"./DefaultQuadAttributes\";\nimport {DefaultQuadUniforms} from \"./DefaultQuadUniforms\";\nimport {DeleteFramebuffer} from \"../fbo/DeleteFramebuffer\";\nimport {DeleteGLTexture} from \"../textures/DeleteGLTexture\";\nimport {DeleteShaders} from \"./DeleteShaders\";\nimport {GLTextureBinding} from \"../textures/GLTextureBinding\";\nimport {SINGLE_QUAD_FRAG} from \"../glsl/SINGLE_QUAD_FRAG\";\nimport {SINGLE_QUAD_VERT} from \"../glsl/SINGLE_QUAD_VERT\";\nimport {Texture} from \"../../../textures/Texture\";\nimport {gl} from \"../GL\";\nexport class Shader {\n  constructor(config) {\n    this.renderToFramebuffer = false;\n    this.renderToDepthbuffer = false;\n    if (config) {\n      this.fromConfig(config);\n    }\n  }\n  fromConfig(config) {\n    const {\n      attributes = DefaultQuadAttributes,\n      fragmentShader = SINGLE_QUAD_FRAG,\n      height = GetHeight(),\n      renderToFramebuffer = false,\n      renderToDepthbuffer = false,\n      resolution = GetResolution(),\n      vertexShader = SINGLE_QUAD_VERT,\n      width = GetWidth(),\n      uniforms = DefaultQuadUniforms\n    } = config;\n    this.create(fragmentShader, vertexShader, uniforms, attributes);\n    if (renderToFramebuffer) {\n      this.renderToFramebuffer = true;\n      const texture = new Texture(null, width * resolution, height * resolution);\n      const binding = new GLTextureBinding(texture);\n      texture.binding = binding;\n      binding.framebuffer = CreateFramebuffer(binding.texture);\n      if (renderToDepthbuffer) {\n        this.renderToDepthbuffer = true;\n        binding.depthbuffer = CreateDepthBuffer(binding.framebuffer, texture.width, texture.height);\n      }\n      this.texture = texture;\n      this.framebuffer = binding.framebuffer;\n    }\n  }\n  create(fragmentShaderSource, vertexShaderSource, uniforms, attribs) {\n    const fragmentShader = CreateShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n    const vertexShader = CreateShader(vertexShaderSource, gl.VERTEX_SHADER);\n    if (!fragmentShader || !vertexShader) {\n      return;\n    }\n    const program = CreateProgram(fragmentShader, vertexShader);\n    if (!program) {\n      return;\n    }\n    const currentProgram = gl.getParameter(gl.CURRENT_PROGRAM);\n    gl.useProgram(program);\n    this.program = program;\n    this.uniformSetters = CreateUniforms(program);\n    this.uniforms = new Map();\n    for (const [key, value] of Object.entries(uniforms)) {\n      this.uniforms.set(key, value);\n    }\n    this.attributes = CreateAttributes(program, attribs);\n    gl.useProgram(currentProgram);\n  }\n  updateUniforms(renderPass) {\n  }\n  bind(renderPass) {\n    this.updateUniforms(renderPass);\n    return this.setUniforms(renderPass);\n  }\n  setUniform(key, value) {\n    const uniforms = this.uniforms;\n    if (uniforms.has(key)) {\n      uniforms.set(key, value);\n      const setter = this.uniformSetters.get(key);\n      setter(value);\n    }\n  }\n  setUniforms(renderPass) {\n    if (!this.program) {\n      return false;\n    }\n    gl.useProgram(this.program);\n    const uniforms = this.uniforms;\n    for (const [name, setter] of this.uniformSetters.entries()) {\n      setter(uniforms.get(name));\n    }\n    return true;\n  }\n  setAttributes(renderPass) {\n    if (this.program) {\n      const stride = renderPass.currentVertexBuffer.vertexByteSize;\n      this.attributes.forEach((attrib) => {\n        gl.vertexAttribPointer(attrib.index, attrib.size, attrib.type, attrib.normalized, stride, attrib.offset);\n      });\n    }\n  }\n  destroy() {\n    DeleteShaders(this.program);\n    DeleteGLTexture(this.texture);\n    DeleteFramebuffer(this.framebuffer);\n    this.uniforms.clear();\n    this.uniformSetters.clear();\n    this.attributes.clear();\n    this.program = null;\n    this.texture = null;\n    this.framebuffer = null;\n  }\n}\n", "import {DefaultQuadAttributes} from \"./DefaultQuadAttributes\";\nimport {Shader} from \"./Shader\";\nexport class QuadShader extends Shader {\n  constructor(config = {}) {\n    const shaderConfig = config;\n    shaderConfig.attributes = !shaderConfig.attributes ? DefaultQuadAttributes : shaderConfig.attributes;\n    super(shaderConfig);\n  }\n  bind(renderPass) {\n    const uniforms = this.uniforms;\n    uniforms.set(\"uProjectionMatrix\", renderPass.projectionMatrix.data);\n    uniforms.set(\"uCameraMatrix\", renderPass.cameraMatrix.data);\n    return super.bind(renderPass);\n  }\n}\n", "export const MULTI_QUAD_FRAG = `#define SHADER_NAME MULTI_QUAD_FRAG\n\nprecision highp float;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\n\nuniform sampler2D uTexture[%count%];\n\nvoid main (void)\n{\n    vec4 color;\n\n    %forloop%\n\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\n}`;\n", "import {GetMaxTextures} from \"../../../config/maxtextures/GetMaxTextures\";\nimport {MULTI_QUAD_FRAG} from \"../glsl/MULTI_QUAD_FRAG\";\nimport {QuadShader} from \"./QuadShader\";\nexport class MultiTextureQuadShader extends QuadShader {\n  constructor(config = {}) {\n    if (!config.fragmentShader) {\n      config.fragmentShader = MULTI_QUAD_FRAG;\n    }\n    super(config);\n  }\n  create(fragmentShaderSource, vertexShaderSource, uniforms, attribs) {\n    const maxTextures = GetMaxTextures();\n    let src = \"\";\n    for (let i = 1; i < maxTextures; i++) {\n      if (i > 1) {\n        src += \"\\n\telse \";\n      }\n      if (i < maxTextures - 1) {\n        src += `if (vTextureId < ${i}.5)`;\n      }\n      src += \"\\n\t{\";\n      src += `\n\t\tcolor = texture2D(uTexture[${i}], vTextureCoord);`;\n      src += \"\\n\t}\";\n    }\n    fragmentShaderSource = fragmentShaderSource.replace(/%count%/gi, `${maxTextures}`);\n    fragmentShaderSource = fragmentShaderSource.replace(/%forloop%/gi, src);\n    super.create(fragmentShaderSource, vertexShaderSource, uniforms, attribs);\n  }\n  bind(renderPass) {\n    this.uniforms.set(\"uTexture\", renderPass.textureIndex);\n    return super.bind(renderPass);\n  }\n}\n", "export function SetDefaultBlendMode(renderPass, enable, sfactor, dfactor) {\n  const entry = {enable, sfactor, dfactor};\n  renderPass.blendModeStack[0] = entry;\n  renderPass.currentBlendMode = entry;\n  renderPass.defaultBlendMode = entry;\n}\n", "export function SetDefaultFramebuffer(renderPass, framebuffer = null, viewport) {\n  const entry = {framebuffer, viewport};\n  renderPass.framebufferStack[0] = entry;\n  renderPass.currentFramebuffer = entry;\n  renderPass.defaultFramebuffer = entry;\n}\n", "export function SetDefaultShader(renderPass, shader, textureID) {\n  const entry = {shader, textureID};\n  renderPass.shaderStack[0] = entry;\n  renderPass.currentShader = entry;\n  renderPass.defaultShader = entry;\n}\n", "export function SetDefaultVertexBuffer(renderPass, buffer) {\n  renderPass.vertexBufferStack[0] = buffer;\n  renderPass.currentVertexBuffer = buffer;\n  renderPass.defaultVertexBuffer = buffer;\n}\n", "import {Rectangle} from \"../../../geom/rectangle/Rectangle\";\nexport function SetDefaultViewport(renderPass, x = 0, y = 0, width = 0, height = 0) {\n  const entry = new Rectangle(x, y, width, height);\n  renderPass.viewportStack[0] = entry;\n  renderPass.currentViewport = entry;\n  renderPass.defaultViewport = entry;\n}\n", "export let instance;\nexport let frame = 0;\nexport let elapsed = 0;\nexport const GameInstance = {\n  get: () => {\n    return instance;\n  },\n  set: (game) => {\n    instance = game;\n  },\n  getFrame: () => {\n    return frame;\n  },\n  setFrame: (current) => {\n    frame = current;\n  },\n  getElapsed: () => {\n    return elapsed;\n  },\n  setElapsed: (current) => {\n    elapsed = current;\n  }\n};\n", "import {Matrix4} from \"./Matrix4\";\nexport function Mat4Identity(matrix = new Matrix4()) {\n  return matrix.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n}\n", "export class Matrix2D {\n  constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    this.set(a, b, c, d, tx, ty);\n  }\n  set(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    this.tx = tx;\n    this.ty = ty;\n    return this;\n  }\n  identity() {\n    return this.set();\n  }\n  toArray() {\n    const {a, b, c, d, tx, ty} = this;\n    return [a, b, c, d, tx, ty];\n  }\n  fromArray(src) {\n    return this.set(src[0], src[1], src[2], src[3], src[4], src[5]);\n  }\n}\n", "import {NOOP} from \"../../utils/NOOP\";\nexport class Vec2Callback {\n  constructor(onChange, x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n    this.onChange = onChange;\n  }\n  destroy() {\n    this.onChange = NOOP;\n  }\n  set(x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n    if (this.onChange) {\n      this.onChange(this);\n    }\n    return this;\n  }\n  get x() {\n    return this._x;\n  }\n  set x(value) {\n    const prev = this._x;\n    this._x = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get y() {\n    return this._y;\n  }\n  set y(value) {\n    const prev = this._y;\n    this._y = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1]);\n  }\n  toString() {\n    const {x, y} = this;\n    return `{ x=${x}, y=${y} }`;\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function AngleBetween(x1, y1, x2, y2) {\n  return Math.atan2(y2 - y1, x2 - x1);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function AngleBetweenY(x1, y1, x2, y2) {\n  return Math.atan2(x2 - x1, y2 - y1);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport const MATH_CONST = {\n  PI2: Math.PI * 2,\n  HALF_PI: Math.PI * 0.5,\n  EPSILON: 1e-6,\n  DEG_TO_RAD: Math.PI / 180,\n  RAD_TO_DEG: 180 / Math.PI,\n  MIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER || -9007199254740991,\n  MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991\n};\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {MATH_CONST as CONST} from \"../const\";\nexport function CounterClockwise(angle) {\n  if (angle > Math.PI) {\n    angle -= CONST.PI2;\n  }\n  return Math.abs(((angle + CONST.HALF_PI) % CONST.PI2 - CONST.PI2) % CONST.PI2);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {MATH_CONST} from \"../const\";\nexport function NormalizeAngle(angle) {\n  angle = angle % MATH_CONST.PI2;\n  if (angle >= 0) {\n    return angle;\n  } else {\n    return angle + MATH_CONST.PI2;\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {NormalizeAngle} from \"./NormalizeAngle\";\nexport function ReverseAngle(angle) {\n  return NormalizeAngle(angle + Math.PI);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {MATH_CONST} from \"../const\";\nexport function RotateAngleTo(currentAngle, targetAngle, lerp = 0.05) {\n  if (currentAngle === targetAngle) {\n    return currentAngle;\n  }\n  if (Math.abs(targetAngle - currentAngle) <= lerp || Math.abs(targetAngle - currentAngle) >= MATH_CONST.PI2 - lerp) {\n    currentAngle = targetAngle;\n  } else {\n    if (Math.abs(targetAngle - currentAngle) > Math.PI) {\n      if (targetAngle < currentAngle) {\n        targetAngle += MATH_CONST.PI2;\n      } else {\n        targetAngle -= MATH_CONST.PI2;\n      }\n    }\n    if (targetAngle > currentAngle) {\n      currentAngle += lerp;\n    } else if (targetAngle < currentAngle) {\n      currentAngle -= lerp;\n    }\n  }\n  return currentAngle;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function ShortestAngleBetween(angle1, angle2) {\n  const difference = angle2 - angle1;\n  if (difference === 0) {\n    return 0;\n  }\n  const times = Math.floor((difference - -180) / 360);\n  return difference - times * 360;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function Wrap(value, min, max) {\n  const range = max - min;\n  return min + ((value - min) % range + range) % range;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Wrap} from \"../Wrap\";\nexport function WrapAngle(angle) {\n  return Wrap(angle, -Math.PI, Math.PI);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Wrap} from \"../Wrap\";\nexport function WrapAngleDegrees(angle) {\n  return Wrap(angle, -180, 180);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {AngleBetween} from \"./AngleBetween\";\nimport {AngleBetweenY} from \"./AngleBetweenY\";\nimport {CounterClockwise} from \"./CounterClockwise\";\nimport {NormalizeAngle} from \"./NormalizeAngle\";\nimport {ReverseAngle} from \"./ReverseAngle\";\nimport {RotateAngleTo} from \"./RotateAngleTo\";\nimport {ShortestAngleBetween} from \"./ShortestAngleBetween\";\nimport {WrapAngle} from \"./WrapAngle\";\nimport {WrapAngleDegrees} from \"./WrapAngleDegrees\";\nexport {\n  AngleBetween,\n  AngleBetweenY,\n  CounterClockwise,\n  NormalizeAngle,\n  ReverseAngle,\n  RotateAngleTo,\n  ShortestAngleBetween,\n  WrapAngle,\n  WrapAngleDegrees\n};\n", "import {GameInstance} from \"../GameInstance\";\nimport {Mat4Identity} from \"../math/mat4\";\nimport {Matrix2D} from \"../math/mat2d/Matrix2D\";\nimport {Rectangle} from \"../geom/rectangle/Rectangle\";\nexport class StaticCamera {\n  constructor() {\n    this.type = \"StaticCamera\";\n    this.dirtyRender = true;\n    const game = GameInstance.get();\n    this.renderer = game.renderer;\n    this.matrix = Mat4Identity();\n    this.bounds = new Rectangle();\n    this.worldTransform = new Matrix2D();\n    this.reset();\n  }\n  reset() {\n    const renderer = this.renderer;\n    if (renderer) {\n      const width = renderer.width;\n      const height = renderer.height;\n      this.width = width;\n      this.height = height;\n    }\n    this.bounds.set(0, 0, this.width, this.height);\n  }\n  destroy() {\n    this.world = null;\n    this.worldTransform = null;\n    this.renderer = null;\n    this.matrix = null;\n    this.bounds = null;\n  }\n}\n", "import {CreateTempTextures} from \"./CreateTempTextures\";\nimport {GetBatchSize} from \"../../../config/batchsize/GetBatchSize\";\nimport {IndexedVertexBuffer} from \"../buffers/IndexedVertexBuffer\";\nimport {Mat4Ortho} from \"../../../math/mat4/Mat4Ortho\";\nimport {Matrix4} from \"../../../math/mat4/Matrix4\";\nimport {MultiTextureQuadShader} from \"../shaders\";\nimport {QuadShader} from \"../shaders/QuadShader\";\nimport {SetDefaultBlendMode} from \"./SetDefaultBlendMode\";\nimport {SetDefaultFramebuffer} from \"./SetDefaultFramebuffer\";\nimport {SetDefaultShader} from \"./SetDefaultShader\";\nimport {SetDefaultVertexBuffer} from \"./SetDefaultVertexBuffer\";\nimport {SetDefaultViewport} from \"./SetDefaultViewport\";\nimport {StaticCamera} from \"../../../camera\";\nexport class RenderPass {\n  constructor(renderer) {\n    this.count = 0;\n    this.prevCount = 0;\n    this.flushTotal = 0;\n    this.maxTextures = 0;\n    this.currentActiveTexture = 0;\n    this.startActiveTexture = 0;\n    this.tempTextures = [];\n    this.textureIndex = [];\n    this.framebufferStack = [];\n    this.currentFramebuffer = null;\n    this.defaultFramebuffer = null;\n    this.vertexBufferStack = [];\n    this.currentVertexBuffer = null;\n    this.defaultVertexBuffer = null;\n    this.shaderStack = [];\n    this.currentShader = null;\n    this.defaultShader = null;\n    this.viewportStack = [];\n    this.currentViewport = null;\n    this.defaultViewport = null;\n    this.blendModeStack = [];\n    this.currentBlendMode = null;\n    this.defaultBlendMode = null;\n    this.renderer = renderer;\n    this.projectionMatrix = new Matrix4();\n    this.reset();\n  }\n  reset() {\n    const gl = this.renderer.gl;\n    const indexLayout = [0, 1, 2, 2, 3, 0];\n    this.quadShader = new QuadShader();\n    this.quadBuffer = new IndexedVertexBuffer({isDynamic: false, indexLayout});\n    this.quadCamera = new StaticCamera();\n    CreateTempTextures(this);\n    SetDefaultFramebuffer(this);\n    SetDefaultBlendMode(this, true, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    SetDefaultVertexBuffer(this, new IndexedVertexBuffer({batchSize: GetBatchSize(), indexLayout}));\n    SetDefaultShader(this, new MultiTextureQuadShader());\n  }\n  resize(width, height) {\n    Mat4Ortho(0, width, height, 0, -1e3, 1e3, this.projectionMatrix);\n    this.quadCamera.reset();\n    SetDefaultViewport(this, 0, 0, width, height);\n  }\n}\n", "export function BindShader(renderPass, entry) {\n  if (!entry) {\n    entry = renderPass.currentShader;\n  }\n  const success = entry.shader.bind(renderPass, entry.textureID);\n  if (success) {\n    entry.shader.setAttributes(renderPass);\n  }\n}\n", "import {BindShader} from \"./BindShader\";\nexport function Begin(renderPass, camera2D) {\n  renderPass.current2DCamera = camera2D;\n  renderPass.cameraMatrix = camera2D.matrix;\n  BindShader(renderPass);\n}\n", "import {gl} from \"../GL\";\nexport function BindBlendMode(renderPass, entry) {\n  if (!entry) {\n    entry = renderPass.currentBlendMode;\n  }\n  if (entry.enable) {\n    gl.enable(gl.BLEND);\n    gl.blendFunc(entry.sfactor, entry.dfactor);\n  } else {\n    gl.disable(gl.BLEND);\n  }\n}\n", "import {gl} from \"../GL\";\nexport function BindVertexBuffer(renderPass, buffer) {\n  if (!buffer) {\n    buffer = renderPass.currentVertexBuffer;\n  }\n  const indexBuffer = buffer.indexed ? buffer.indexBuffer : null;\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer.vertexBuffer);\n}\n", "import {Flush} from \"./Flush\";\nexport function GetVertexBufferEntry(renderPass, addToCount = 0) {\n  const buffer = renderPass.currentVertexBuffer;\n  if (renderPass.count + addToCount >= buffer.batchSize) {\n    Flush(renderPass);\n  }\n  const offset = buffer.indexed ? renderPass.count * buffer.entryElementSize : renderPass.count * buffer.vertexElementSize;\n  renderPass.count += addToCount;\n  return {\n    buffer,\n    F32: buffer.vertexViewF32,\n    U32: buffer.vertexViewU32,\n    offset\n  };\n}\n", "import {Flush} from \"./Flush\";\nimport {gl} from \"../GL\";\nexport function SetTexture(renderPass, texture) {\n  const binding = texture.binding;\n  const currentActiveTexture = renderPass.currentActiveTexture;\n  if (binding.indexCounter < renderPass.startActiveTexture) {\n    binding.indexCounter = renderPass.startActiveTexture;\n    if (currentActiveTexture < renderPass.maxTextures) {\n      binding.setIndex(currentActiveTexture);\n      gl.activeTexture(gl.TEXTURE0 + currentActiveTexture);\n      gl.bindTexture(gl.TEXTURE_2D, binding.texture);\n      renderPass.currentActiveTexture++;\n    } else {\n      Flush(renderPass);\n      renderPass.startActiveTexture++;\n      binding.indexCounter = renderPass.startActiveTexture;\n      binding.setIndex(1);\n      gl.activeTexture(gl.TEXTURE1);\n      gl.bindTexture(gl.TEXTURE_2D, binding.texture);\n      renderPass.currentActiveTexture = 2;\n    }\n  }\n  return binding.index;\n}\n", "import {BindBlendMode} from \"./BindBlendMode\";\nimport {BindFramebuffer} from \"./BindFramebuffer\";\nimport {BindVertexBuffer} from \"./BindVertexBuffer\";\nimport {BindViewport} from \"./BindViewport\";\nexport function Start(renderPass) {\n  renderPass.current2DCamera = renderPass.quadCamera;\n  renderPass.cameraMatrix = renderPass.quadCamera.matrix;\n  renderPass.count = 0;\n  renderPass.flushTotal = 0;\n  BindFramebuffer(renderPass, false, renderPass.defaultFramebuffer);\n  BindBlendMode(renderPass, renderPass.defaultBlendMode);\n  BindViewport(renderPass, renderPass.defaultViewport);\n  BindVertexBuffer(renderPass, renderPass.defaultVertexBuffer);\n}\n", "export let instance;\nexport const WebGLRendererInstance = {\n  get: () => {\n    return instance;\n  },\n  set: (renderer) => {\n    instance = renderer;\n  }\n};\n", "import {GetHeight, GetResolution, GetWidth} from \"../../config/size/\";\nimport {End} from \"./renderpass/End\";\nimport {GL} from \"./GL\";\nimport {GetBackgroundColor} from \"../../config/backgroundcolor/GetBackgroundColor\";\nimport {GetRGBArray} from \"./colors/GetRGBArray\";\nimport {GetWebGLContext} from \"../../config/webglcontext/GetWebGLContext\";\nimport {ProcessBindingQueue} from \"./renderpass/ProcessBindingQueue\";\nimport {RenderPass} from \"./renderpass/RenderPass\";\nimport {Start} from \"./renderpass\";\nimport {WebGLRendererInstance} from \"./WebGLRendererInstance\";\nexport class WebGLRenderer {\n  constructor() {\n    this.clearColor = [0, 0, 0, 1];\n    this.clearBeforeRender = true;\n    this.optimizeRedraw = false;\n    this.autoResize = true;\n    this.contextLost = false;\n    this.width = GetWidth();\n    this.height = GetHeight();\n    this.resolution = GetResolution();\n    this.setBackgroundColor(GetBackgroundColor());\n    const canvas = document.createElement(\"canvas\");\n    canvas.addEventListener(\"webglcontextlost\", (event) => this.onContextLost(event), false);\n    canvas.addEventListener(\"webglcontextrestored\", () => this.onContextRestored(), false);\n    this.canvas = canvas;\n    this.initContext();\n    WebGLRendererInstance.set(this);\n    this.renderPass = new RenderPass(this);\n    this.resize(this.width, this.height, this.resolution);\n  }\n  initContext() {\n    const gl = this.canvas.getContext(\"webgl\", GetWebGLContext());\n    GL.set(gl);\n    this.gl = gl;\n    gl.disable(gl.DEPTH_TEST);\n    gl.disable(gl.CULL_FACE);\n  }\n  resize(width, height, resolution = 1) {\n    const calcWidth = width * resolution;\n    const calcHeight = height * resolution;\n    this.width = calcWidth;\n    this.height = calcHeight;\n    this.resolution = resolution;\n    const canvas = this.canvas;\n    canvas.width = calcWidth;\n    canvas.height = calcHeight;\n    if (this.autoResize) {\n      canvas.style.width = width.toString() + \"px\";\n      canvas.style.height = height.toString() + \"px\";\n    }\n    this.renderPass.resize(calcWidth, calcHeight);\n  }\n  onContextLost(event) {\n    event.preventDefault();\n    this.contextLost = true;\n  }\n  onContextRestored() {\n    this.contextLost = false;\n    this.initContext();\n  }\n  setBackgroundColor(color) {\n    GetRGBArray(color, this.clearColor);\n    return this;\n  }\n  reset() {\n  }\n  render(renderData) {\n    if (this.contextLost) {\n      return;\n    }\n    const gl = this.gl;\n    const renderPass = this.renderPass;\n    ProcessBindingQueue();\n    if (this.optimizeRedraw && renderData.numDirtyFrames === 0 && renderData.numDirtyCameras === 0) {\n      return;\n    }\n    if (this.clearBeforeRender) {\n      const cls = this.clearColor;\n      gl.clearColor(cls[0], cls[1], cls[2], cls[3]);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    const worlds = renderData.worldData;\n    Start(renderPass);\n    for (let i = 0; i < worlds.length; i++) {\n      const {world} = worlds[i];\n      world.renderGL(renderPass);\n      world.postRenderGL(renderPass);\n    }\n    End(renderPass);\n  }\n  destroy() {\n    WebGLRendererInstance.set(void 0);\n  }\n}\n", "import {SetRenderer} from \"../renderer/SetRenderer\";\nimport {WebGLRenderer} from \"../../renderer/webgl1/WebGLRenderer\";\nexport function WebGL() {\n  return () => {\n    SetRenderer(WebGLRenderer);\n  };\n}\n", "export function DepthFirstSearch(parent) {\n  const stack = [parent];\n  const output = [];\n  while (stack.length > 0) {\n    const node = stack.shift();\n    output.push(node);\n    const numChildren = node.numChildren;\n    if (numChildren > 0) {\n      for (let i = numChildren - 1; i >= 0; i--) {\n        stack.unshift(node.children[i]);\n      }\n    }\n  }\n  output.shift();\n  return output;\n}\n", "export function GetChildIndex(parent, child) {\n  return parent.children.indexOf(child);\n}\n", "export function RemoveChildAt(parent, index) {\n  const children = parent.children;\n  let child;\n  if (index >= 0 && index < children.length) {\n    const removed = children.splice(index, 1);\n    if (removed[0]) {\n      child = removed[0];\n      child.parent = null;\n    }\n  }\n  return child;\n}\n", "import {GetChildIndex} from \"./GetChildIndex\";\nimport {RemoveChildAt} from \"./RemoveChildAt\";\nexport function RemoveChild(parent, child) {\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex > -1) {\n    RemoveChildAt(parent, currentIndex);\n  }\n  return child;\n}\n", "export const AddedToWorldEvent = \"addedtoworld\";\n", "export const DestroyEvent = \"destroy\";\n", "export const PostUpdateEvent = \"postupdate\";\n", "export const RemovedFromWorldEvent = \"removedfromworld\";\n", "export const UpdateEvent = \"update\";\n", "export function Emit(emitter, event, ...args) {\n  if (emitter.events.size === 0 || !emitter.events.has(event)) {\n    return false;\n  }\n  const listeners = emitter.events.get(event);\n  for (const ee of listeners) {\n    ee.callback.apply(ee.context, args);\n    if (ee.once) {\n      listeners.delete(ee);\n    }\n  }\n  if (listeners.size === 0) {\n    emitter.events.delete(event);\n  }\n  return true;\n}\n", "import {AddedToWorldEvent, RemovedFromWorldEvent} from \"../gameobjects/events\";\nimport {Emit} from \"../events/Emit\";\nexport function SetWorld(world, ...children) {\n  children.forEach((child) => {\n    if (child.world) {\n      Emit(child.world, RemovedFromWorldEvent, child, child.world);\n      Emit(child, RemovedFromWorldEvent, child, child.world);\n    }\n    child.world = world;\n    Emit(world, AddedToWorldEvent, child, world);\n    Emit(child, AddedToWorldEvent, child, world);\n  });\n  return children;\n}\n", "import {DepthFirstSearch} from \"./DepthFirstSearch\";\nimport {RemoveChild} from \"./RemoveChild\";\nimport {SetWorld} from \"./SetWorld\";\nexport function SetParent(parent, ...children) {\n  children.forEach((child) => {\n    if (child.parent) {\n      RemoveChild(child.parent, child);\n    }\n    child.parent = parent;\n  });\n  const parentWorld = parent.world;\n  if (parentWorld) {\n    SetWorld(parentWorld, ...DepthFirstSearch(parent));\n  }\n  return children;\n}\n", "import {SetParent} from \"./SetParent\";\nexport function AddChild(parent, child) {\n  parent.children.push(child);\n  SetParent(parent, child);\n  child.transform.updateWorld();\n  return child;\n}\n", "import {AddChild} from \"./AddChild\";\nexport function AddChildren(parent, ...children) {\n  children.forEach((child) => {\n    AddChild(parent, child);\n  });\n  return children;\n}\n", "export const DIRTY_CONST = {\n  CLEAR: 0,\n  TRANSFORM: 1,\n  UPDATE: 2,\n  CHILD_CACHE: 4,\n  POST_RENDER: 8,\n  COLORS: 16,\n  BOUNDS: 32,\n  TEXTURE: 64,\n  FRAME: 128,\n  ALPHA: 256,\n  CHILD: 512,\n  DEFAULT: 1 + 2 + 16 + 32,\n  USER1: 536870912,\n  USER2: 1073741824,\n  USER3: 2147483648,\n  USER4: 4294967296\n};\n", "export function RemoveChildrenBetween(parent, beginIndex = 0, endIndex) {\n  const children = parent.children;\n  if (endIndex === void 0) {\n    endIndex = children.length;\n  }\n  const range = endIndex - beginIndex;\n  if (range > 0 && range <= endIndex) {\n    const removed = children.splice(beginIndex, range);\n    removed.forEach((child) => {\n      child.parent = null;\n    });\n    return removed;\n  } else {\n    return [];\n  }\n}\n", "import {RemoveChildrenBetween} from \"./RemoveChildrenBetween\";\nexport function DestroyChildren(parent, beginIndex = 0, endIndex) {\n  const removed = RemoveChildrenBetween(parent, beginIndex, endIndex);\n  removed.forEach((child) => {\n    child.destroy();\n  });\n}\n", "import {RemoveChild} from \"./RemoveChild\";\nexport function RemoveChildren(parent, ...children) {\n  children.forEach((child) => {\n    RemoveChild(parent, child);\n  });\n  return children;\n}\n", "import {RemoveChildrenBetween} from \"./RemoveChildrenBetween\";\nimport {SetParent} from \"./SetParent\";\nexport function ReparentChildren(parent, newParent, beginIndex = 0, endIndex) {\n  const moved = RemoveChildrenBetween(parent, beginIndex, endIndex);\n  SetParent(newParent, ...moved);\n  moved.forEach((child) => {\n    child.transform.updateWorld();\n  });\n  return moved;\n}\n", "export class EventEmitter {\n  constructor() {\n    this.events = new Map();\n  }\n}\n", "export class EventInstance {\n  constructor(callback, context, once = false) {\n    this.callback = callback;\n    this.context = context;\n    this.once = once;\n  }\n}\n", "import {EventInstance} from \"./EventInstance\";\nexport function Off(emitter, event, callback, context, once) {\n  const events = emitter.events;\n  const listeners = events.get(event);\n  if (!callback) {\n    events.delete(event);\n  } else if (callback instanceof EventInstance) {\n    listeners.delete(callback);\n  } else {\n    const hasContext = !context;\n    const hasOnce = once !== void 0;\n    for (const listener of listeners) {\n      if (listener.callback === callback && (hasContext && listener.context === context) && (hasOnce && listener.once === once)) {\n        listeners.delete(listener);\n      }\n    }\n  }\n  if (listeners.size === 0) {\n    events.delete(event);\n  }\n  return emitter;\n}\n", "import {EventInstance} from \"./EventInstance\";\nexport function On(emitter, event, callback, context = emitter, once = false) {\n  if (typeof callback !== \"function\") {\n    throw new TypeError(\"Listener not a function\");\n  }\n  const listener = new EventInstance(callback, context, once);\n  const listeners = emitter.events.get(event);\n  if (!listeners) {\n    emitter.events.set(event, new Set([listener]));\n  } else {\n    listeners.add(listener);\n  }\n  return listener;\n}\n", "import {On} from \"./On\";\nexport function Once(emitter, event, callback, context = emitter) {\n  return On(emitter, event, callback, context, true);\n}\n", "export class TweenProperty {\n  constructor(name, end) {\n    this.name = name;\n    if (typeof end === \"string\") {\n      this.modifier = end.substr(0, 1);\n      this.end = parseFloat(end.substring(1));\n    } else {\n      this.end = end;\n    }\n  }\n  getEnd(start) {\n    const modifier = this.modifier;\n    const end = this.end;\n    if (modifier === \"+\") {\n      return start + end;\n    } else if (modifier === \"-\") {\n      return start - end;\n    } else {\n      return end;\n    }\n  }\n  to(target) {\n    const current = target[this.name];\n    const end = this.getEnd(current);\n    this.start = current;\n    this.end = end;\n  }\n  from(target) {\n    const current = target[this.name];\n    const end = this.getEnd(current);\n    this.start = end;\n    this.end = current;\n    target[this.name] = end;\n  }\n  update(target, v) {\n    target[this.name] = this.start + (this.end - this.start) * v;\n  }\n}\n", "import {Off, On} from \"../../../events\";\nimport {GameInstance} from \"../../../GameInstance\";\nimport {Linear} from \"../../../math/easing/Linear\";\nimport {TweenProperty} from \"../TweenProperty\";\nimport {UpdateEvent} from \"../../../gameobjects/events\";\nexport class NanoTween {\n  constructor(target, emitter, autoStart = true) {\n    this.state = {running: false, repeat: false, hold: false, delay: false, yoyo: false, yoyoing: false, autoStart: true, reversed: false};\n    this.init = {duration: 0, repeat: 0, repeatDelay: 0, hold: 0, delay: 0};\n    this.counters = {repeat: 0, delay: 0, progress: 0, elapsed: 0};\n    this.ease = Linear;\n    this.properties = [];\n    if (!emitter) {\n      emitter = GameInstance.get();\n    }\n    this.target = target;\n    this.state.autoStart = autoStart;\n    this.emitter = emitter;\n  }\n  to(duration, properties = null) {\n    return this.add(duration, properties, false);\n  }\n  from(duration, properties = null) {\n    return this.add(duration, properties, true);\n  }\n  add(duration, props, reversed) {\n    const state = this.state;\n    const init = this.init;\n    if (state.running) {\n      return this;\n    }\n    const properties = this.properties;\n    for (const [name, value] of Object.entries(props)) {\n      properties.push(new TweenProperty(name, value));\n    }\n    init.duration = duration;\n    state.reversed = reversed;\n    if (state.autoStart) {\n      this.start();\n    }\n    return this;\n  }\n  start() {\n    const state = this.state;\n    if (state.running) {\n      return this;\n    }\n    const target = this.target;\n    const properties = this.properties;\n    properties.forEach((property) => {\n      if (state.reversed) {\n        property.from(target);\n      } else {\n        property.to(target);\n      }\n    });\n    state.running = true;\n    this.listener = On(this.emitter, UpdateEvent, (delta) => this.update(delta));\n    return this;\n  }\n  restart() {\n    const state = this.state;\n    const init = this.init;\n    const counters = this.counters;\n    if (!state) {\n      throw \"Cannot restart destroyed tween\";\n    }\n    counters.delay = init.delay;\n    counters.elapsed = 0;\n    counters.progress = 0;\n    counters.repeat = init.repeat;\n    state.yoyoing = false;\n    state.running = true;\n    return this;\n  }\n  update(delta) {\n    const state = this.state;\n    const init = this.init;\n    const counters = this.counters;\n    if (!state.running) {\n      return false;\n    }\n    if (counters.delay > 0) {\n      counters.delay -= delta;\n      if (counters.delay <= 0) {\n        counters.elapsed = Math.abs(counters.delay) - delta;\n        counters.delay = 0;\n      } else {\n        return false;\n      }\n    }\n    counters.elapsed += delta;\n    const progress = Math.min(counters.elapsed / init.duration, 1);\n    counters.progress = progress;\n    const v = state.yoyoing ? this.ease(1 - progress) : this.ease(progress);\n    const target = this.target;\n    const properties = this.properties;\n    properties.forEach((property) => {\n      property.update(target, v);\n    });\n    if (progress < 1) {\n      return false;\n    }\n    const diff = counters.elapsed - init.duration;\n    if (state.yoyo && !state.yoyoing) {\n      counters.elapsed = diff;\n      counters.delay = init.hold - diff;\n      state.yoyoing = true;\n      return false;\n    }\n    if (counters.repeat > 0) {\n      counters.repeat--;\n      counters.elapsed = diff;\n      counters.delay = init.repeatDelay - diff;\n      state.yoyoing = false;\n      return false;\n    }\n    this.destroy();\n    return true;\n  }\n  delay(duration) {\n    const delay = duration;\n    this.init.delay = delay;\n    this.counters.delay = delay;\n    return this;\n  }\n  hold(duration) {\n    this.init.hold = duration;\n    return this;\n  }\n  yoyo(value = true) {\n    this.state.yoyo = value;\n    return this;\n  }\n  repeat(repeatCount = 1, delay = 0) {\n    const init = this.init;\n    this.state.repeat = repeatCount > 0;\n    this.counters.repeat = repeatCount;\n    init.repeat = repeatCount;\n    init.repeatDelay = delay;\n    return this;\n  }\n  easing(f) {\n    this.ease = f;\n    return this;\n  }\n  destroy() {\n    Off(this.emitter, UpdateEvent, this.listener);\n    this.properties.length = 0;\n    this.target = null;\n    this.ease = null;\n    this.emitter = null;\n    this.state = null;\n    this.init = null;\n    this.counters = null;\n  }\n}\n", "import {NanoTween} from \"./NanoTween\";\nexport function AddTween(target, emitter = null, autoStart = true) {\n  return new NanoTween(target, emitter, autoStart);\n}\n", "import {GetElement} from \"./GetElement\";\nexport function AddToDOM(element, parent) {\n  const target = GetElement(parent);\n  target.appendChild(element);\n  return element;\n}\n", "export function DOMContentLoaded(callback) {\n  const readyState = document.readyState;\n  if (readyState === \"complete\" || readyState === \"interactive\") {\n    callback();\n    return;\n  }\n  const check = () => {\n    document.removeEventListener(\"deviceready\", check, true);\n    document.removeEventListener(\"DOMContentLoaded\", check, true);\n    window.removeEventListener(\"load\", check, true);\n    callback();\n  };\n  if (!document.body) {\n    window.setTimeout(check, 20);\n  } else if (window.hasOwnProperty(\"cordova\")) {\n    document.addEventListener(\"deviceready\", check, true);\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", check, true);\n    window.addEventListener(\"load\", check, true);\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function ParseXML(data) {\n  let xml;\n  try {\n    const parser = new DOMParser();\n    xml = parser.parseFromString(data, \"text/xml\");\n    if (!xml || !xml.documentElement || xml.getElementsByTagName(\"parsererror\").length) {\n      return null;\n    } else {\n      return xml;\n    }\n  } catch (error) {\n    return null;\n  }\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetBanner() {\n  const {title, version, url, color, background} = ConfigStore.get(CONFIG_DEFAULTS.BANNER);\n  if (title !== \"\") {\n    const str = version !== \"\" ? title + \" \" + version : title;\n    console.log(`%c${str}%c ${url}`, `padding: 4px 16px; color: ${color}; background: ${background}`, \"\");\n  }\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetParent() {\n  return ConfigStore.get(CONFIG_DEFAULTS.PARENT);\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetRenderer() {\n  return ConfigStore.get(CONFIG_DEFAULTS.RENDERER);\n}\n", "export function CreateSceneRenderData() {\n  return {\n    gameFrame: 0,\n    numTotalFrames: 0,\n    numDirtyFrames: 0,\n    numDirtyCameras: 0,\n    worldData: []\n  };\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetScenes() {\n  return ConfigStore.get(CONFIG_DEFAULTS.SCENES);\n}\n", "export function ResetSceneRenderData(renderData, gameFrame = 0) {\n  renderData.gameFrame = gameFrame;\n  renderData.numTotalFrames = 0;\n  renderData.numDirtyFrames = 0;\n  renderData.numDirtyCameras = 0;\n  renderData.worldData.length = 0;\n}\n", "let instance;\nexport const SceneManagerInstance = {\n  get: () => {\n    return instance;\n  },\n  set: (manager) => {\n    instance = manager;\n  }\n};\n", "import {Emit, Once} from \"../events\";\nimport {CreateSceneRenderData} from \"./CreateSceneRenderData\";\nimport {GameInstance} from \"../GameInstance\";\nimport {GetScenes} from \"../config/scenes\";\nimport {ResetSceneRenderData} from \"./ResetSceneRenderData\";\nimport {SceneManagerInstance} from \"./SceneManagerInstance\";\nexport class SceneManager {\n  constructor() {\n    this.scenes = new Map();\n    this.sceneIndex = 0;\n    this.flush = false;\n    this.renderResult = CreateSceneRenderData();\n    this.game = GameInstance.get();\n    SceneManagerInstance.set(this);\n    Once(this.game, \"boot\", () => this.boot());\n  }\n  boot() {\n    GetScenes().forEach((scene) => new scene());\n  }\n  update(delta, time) {\n    for (const scene of this.scenes.values()) {\n      Emit(scene, \"update\", delta, time);\n    }\n  }\n  render(gameFrame) {\n    const results = this.renderResult;\n    ResetSceneRenderData(results, gameFrame);\n    for (const scene of this.scenes.values()) {\n      Emit(scene, \"render\", results);\n    }\n    if (this.flush) {\n      results.numDirtyFrames++;\n      this.flush = false;\n    }\n    return results;\n  }\n}\n", "import {SetBackgroundColor} from \"./backgroundcolor/SetBackgroundColor\";\nimport {SetBanner} from \"./banner/SetBanner\";\nimport {SetBatchSize} from \"./batchsize/SetBatchSize\";\nimport {SetDefaultOrigin} from \"./defaultorigin/SetDefaultOrigin\";\nimport {SetMaxTextures} from \"./maxtextures/SetMaxTextures\";\nimport {SetSize} from \"./size/SetSize\";\nexport function SetConfigDefaults() {\n  SetBackgroundColor(0);\n  SetBatchSize(4096);\n  SetBanner(\"Phaser\", \"4.0.0\", \"https://phaser4.io\");\n  SetMaxTextures(0);\n  SetDefaultOrigin(0.5, 0.5);\n  SetSize(800, 600, 1);\n}\n", "export function CreateCanvas(width, height) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width;\n  canvas.height = height;\n  return canvas.getContext(\"2d\");\n}\n", "let instance;\nexport const TextureManagerInstance = {\n  get: () => {\n    return instance;\n  },\n  set: (manager) => {\n    instance = manager;\n  }\n};\n", "import {CreateCanvas} from \"./CreateCanvas\";\nimport {Texture} from \"./Texture\";\nimport {TextureManagerInstance} from \"./TextureManagerInstance\";\nexport class TextureManager {\n  constructor() {\n    this.textures = new Map();\n    this.createDefaultTextures();\n    TextureManagerInstance.set(this);\n  }\n  createDefaultTextures() {\n    this.add(\"__BLANK\", new Texture(CreateCanvas(32, 32).canvas));\n    const missing = CreateCanvas(32, 32);\n    missing.strokeStyle = \"#0f0\";\n    missing.moveTo(0, 0);\n    missing.lineTo(32, 32);\n    missing.stroke();\n    missing.strokeRect(0.5, 0.5, 31, 31);\n    this.add(\"__MISSING\", new Texture(missing.canvas));\n    const white = CreateCanvas(32, 32);\n    white.fillStyle = \"#fff\";\n    white.fillRect(0, 0, 32, 32);\n    this.add(\"__WHITE\", new Texture(white.canvas));\n  }\n  get(key) {\n    const textures = this.textures;\n    if (textures.has(key)) {\n      return textures.get(key);\n    } else {\n      return textures.get(\"__MISSING\");\n    }\n  }\n  has(key) {\n    return this.textures.has(key);\n  }\n  add(key, source, glConfig) {\n    let texture;\n    const textures = this.textures;\n    if (!textures.has(key)) {\n      if (source instanceof Texture) {\n        texture = source;\n      } else {\n        texture = new Texture(source, 0, 0, glConfig);\n      }\n      texture.key = key;\n      textures.set(key, texture);\n    }\n    return texture;\n  }\n}\n", "import {AddToDOM, DOMContentLoaded} from \"./dom\";\nimport {Emit, EventEmitter} from \"./events\";\nimport {GameInstance} from \"./GameInstance\";\nimport {GetBanner} from \"./config/banner\";\nimport {GetParent} from \"./config/parent\";\nimport {GetRenderer} from \"./config/renderer\";\nimport {SceneManager} from \"./scenes/SceneManager\";\nimport {SetConfigDefaults} from \"./config/SetConfigDefaults\";\nimport {TextureManager} from \"./textures/TextureManager\";\nexport class Game extends EventEmitter {\n  constructor(...settings) {\n    super();\n    this.VERSION = \"4.0.0-beta1\";\n    this.isBooted = false;\n    this.isPaused = false;\n    this.willUpdate = true;\n    this.willRender = true;\n    this.lastTick = 0;\n    this.elapsed = 0;\n    this.frame = 0;\n    GameInstance.set(this);\n    SetConfigDefaults();\n    DOMContentLoaded(() => this.boot(settings));\n  }\n  boot(settings) {\n    settings.forEach((setting) => setting());\n    const renderer = GetRenderer();\n    this.renderer = new renderer();\n    this.textureManager = new TextureManager();\n    this.sceneManager = new SceneManager();\n    const parent = GetParent();\n    if (parent) {\n      AddToDOM(this.renderer.canvas, parent);\n    }\n    this.isBooted = true;\n    GetBanner();\n    Emit(this, \"boot\");\n    this.lastTick = performance.now();\n    this.step(this.lastTick);\n  }\n  pause() {\n    this.isPaused = true;\n  }\n  resume() {\n    this.isPaused = false;\n    this.lastTick = performance.now();\n  }\n  step(time) {\n    const delta = time - this.lastTick;\n    this.lastTick = time;\n    this.elapsed += delta;\n    if (!this.isPaused) {\n      if (this.willUpdate) {\n        this.sceneManager.update(delta, time);\n        Emit(this, \"update\", delta, time);\n      }\n      if (this.willRender) {\n        this.renderer.render(this.sceneManager.render(this.frame));\n      }\n    }\n    this.frame++;\n    GameInstance.setFrame(this.frame);\n    GameInstance.setElapsed(this.elapsed);\n    requestAnimationFrame((now) => this.step(now));\n  }\n  destroy() {\n  }\n}\n", "export class File {\n  constructor(key, url, config) {\n    this.responseType = \"text\";\n    this.crossOrigin = void 0;\n    this.skipCache = false;\n    this.hasLoaded = false;\n    this.key = key;\n    this.url = url;\n    this.config = config;\n  }\n}\n", "export function GetURL(key, url, extension, loader) {\n  if (!url) {\n    url = key + extension;\n  }\n  if (/^(?:blob:|data:|http:\\/\\/|https:\\/\\/|\\/\\/)/.exec(url)) {\n    return url;\n  } else if (loader) {\n    return loader.baseURL + loader.path + url;\n  } else {\n    return url;\n  }\n}\n", "export function ImageTagLoader(file) {\n  file.data = new Image();\n  if (file.crossOrigin) {\n    file.data.crossOrigin = file.crossOrigin;\n  }\n  return new Promise((resolve, reject) => {\n    file.data.onload = () => {\n      if (file.data.onload) {\n        file.data.onload = null;\n        file.data.onerror = null;\n        resolve(file);\n      }\n    };\n    file.data.onerror = (event) => {\n      if (file.data.onload) {\n        file.data.onload = null;\n        file.data.onerror = null;\n        file.error = event;\n        reject(file);\n      }\n    };\n    file.data.src = file.url;\n    if (file.data.complete && file.data.width && file.data.height) {\n      file.data.onload = null;\n      file.data.onerror = null;\n      resolve(file);\n    }\n  });\n}\n", "import {File} from \"../File\";\nimport {GetURL} from \"../GetURL\";\nimport {ImageTagLoader} from \"../ImageTagLoader\";\nimport {TextureManagerInstance} from \"../../textures/TextureManagerInstance\";\nexport function ImageFile(key, url, glConfig) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".png\", file.loader);\n    if (file.loader) {\n      file.crossOrigin = file.loader.crossOrigin;\n    }\n    return new Promise((resolve, reject) => {\n      const textureManager = TextureManagerInstance.get();\n      if (textureManager.has(file.key)) {\n        resolve(file);\n      } else {\n        ImageTagLoader(file).then((file2) => {\n          textureManager.add(file2.key, file2.data, glConfig);\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n", "import {Emit, EventEmitter} from \"../events\";\nexport class Loader extends EventEmitter {\n  constructor() {\n    super();\n    this.baseURL = \"\";\n    this.path = \"\";\n    this.crossOrigin = \"anonymous\";\n    this.maxParallelDownloads = -1;\n    this.isLoading = false;\n    this.reset();\n  }\n  reset() {\n    this.isLoading = false;\n    this.queue = new Set();\n    this.inflight = new Set();\n    this.completed = new Set();\n    this.progress = 0;\n  }\n  add(...file) {\n    file.forEach((entity) => {\n      entity.loader = this;\n      this.queue.add(entity);\n    });\n    return this;\n  }\n  start() {\n    if (this.isLoading) {\n      return null;\n    }\n    return new Promise((resolve, reject) => {\n      this.completed.clear();\n      this.progress = 0;\n      if (this.queue.size > 0) {\n        this.isLoading = true;\n        this.onComplete = resolve;\n        this.onError = reject;\n        Emit(this, \"start\");\n        this.nextFile();\n      } else {\n        this.progress = 1;\n        Emit(this, \"complete\");\n        resolve(this);\n      }\n    });\n  }\n  nextFile() {\n    let limit = this.queue.size;\n    if (this.maxParallelDownloads !== -1) {\n      limit = Math.min(limit, this.maxParallelDownloads) - this.inflight.size;\n    }\n    if (limit) {\n      const iterator = this.queue.values();\n      while (limit > 0) {\n        const file = iterator.next().value;\n        this.inflight.add(file);\n        this.queue.delete(file);\n        file.load().then((file2) => this.fileComplete(file2)).catch((file2) => this.fileError(file2));\n        limit--;\n      }\n    } else if (this.inflight.size === 0) {\n      this.stop();\n    }\n  }\n  stop() {\n    if (!this.isLoading) {\n      return;\n    }\n    this.isLoading = false;\n    Emit(this, \"complete\", this.completed);\n    this.onComplete();\n    this.completed.clear();\n  }\n  updateProgress(file) {\n    this.inflight.delete(file);\n    this.completed.add(file);\n    const totalCompleted = this.completed.size;\n    const totalQueued = this.queue.size + this.inflight.size;\n    if (totalCompleted > 0) {\n      this.progress = totalCompleted / (totalCompleted + totalQueued);\n    }\n    Emit(this, \"progress\", this.progress, totalCompleted, totalQueued);\n    this.nextFile();\n  }\n  fileComplete(file) {\n    Emit(this, \"filecomplete\", file);\n    this.updateProgress(file);\n  }\n  fileError(file) {\n    Emit(this, \"fileerror\", file);\n    this.updateProgress(file);\n  }\n  totalFilesToLoad() {\n    return this.queue.size + this.inflight.size;\n  }\n  setBaseURL(url = \"\") {\n    if (url !== \"\" && url.substr(-1) !== \"/\") {\n      url = url.concat(\"/\");\n    }\n    this.baseURL = url;\n    return this;\n  }\n  setPath(path = \"\") {\n    if (path !== \"\" && path.substr(-1) !== \"/\") {\n      path = path.concat(\"/\");\n    }\n    this.path = path;\n    return this;\n  }\n  setCORS(crossOrigin) {\n    this.crossOrigin = crossOrigin;\n    return this;\n  }\n  setMaxParallelDownloads(max) {\n    this.maxParallelDownloads = max;\n    return this;\n  }\n}\n", "export function GetConfigValue(config, property, defaultValue) {\n  if (Object.prototype.hasOwnProperty.call(config, property)) {\n    return config[property];\n  } else {\n    return defaultValue;\n  }\n}\n", "import {GetConfigValue} from \"./GetConfigValue\";\nimport {SceneManagerInstance} from \"./SceneManagerInstance\";\nexport function Install(scene, config = {}) {\n  const sceneManager = SceneManagerInstance.get();\n  const size = sceneManager.scenes.size;\n  const sceneIndex = sceneManager.sceneIndex;\n  const firstScene = size === 0;\n  if (typeof config === \"string\") {\n    scene.key = config;\n  } else if (config || !config && firstScene) {\n    scene.key = GetConfigValue(config, \"key\", \"scene\" + sceneIndex.toString());\n  }\n  if (sceneManager.scenes.has(scene.key)) {\n    console.warn(\"Scene key already in use: \" + scene.key);\n  } else {\n    sceneManager.scenes.set(scene.key, scene);\n    sceneManager.flush = true;\n    sceneManager.sceneIndex++;\n  }\n}\n", "import {GameInstance} from \"../GameInstance\";\nimport {Install} from \"./Install\";\nexport class Scene {\n  constructor(config) {\n    this.game = GameInstance.get();\n    this.events = new Map();\n    Install(this, config);\n  }\n}\n", "export function GetVertices(transform) {\n  const {a, b, c, d, tx, ty} = transform.world;\n  const {x, y, right, bottom} = transform.extent;\n  const x0 = x * a + y * c + tx;\n  const y0 = x * b + y * d + ty;\n  const x1 = x * a + bottom * c + tx;\n  const y1 = x * b + bottom * d + ty;\n  const x2 = right * a + bottom * c + tx;\n  const y2 = right * b + bottom * d + ty;\n  const x3 = right * a + y * c + tx;\n  const y3 = right * b + y * d + ty;\n  return {x0, y0, x1, y1, x2, y2, x3, y3};\n}\n", "import {DIRTY_CONST} from \"../../DIRTY_CONST\";\nimport {GetVertices} from \"../transform/GetVertices\";\nimport {Rectangle} from \"../../../geom/rectangle/Rectangle\";\nexport class BoundsComponent {\n  constructor(entity) {\n    this.fixed = false;\n    this.includeChildren = true;\n    this.visibleOnly = true;\n    this.entity = entity;\n    this.area = new Rectangle();\n  }\n  set(x, y, width, height) {\n    this.area.set(x, y, width, height);\n  }\n  get() {\n    if (this.entity.isDirty(DIRTY_CONST.BOUNDS) && !this.fixed) {\n      this.update();\n    }\n    return this.area;\n  }\n  updateLocal() {\n    const {x0, y0, x1, y1, x2, y2, x3, y3} = GetVertices(this.entity.transform);\n    const x = Math.min(x0, x1, x2, x3);\n    const y = Math.min(y0, y1, y2, y3);\n    const right = Math.max(x0, x1, x2, x3);\n    const bottom = Math.max(y0, y1, y2, y3);\n    return this.area.set(x, y, right - x, bottom - y);\n  }\n  update() {\n    const bounds = this.updateLocal();\n    this.entity.clearDirty(DIRTY_CONST.BOUNDS);\n    if (!this.includeChildren || !this.entity.numChildren) {\n      return bounds;\n    }\n    const visibleOnly = this.visibleOnly;\n    const children = this.entity.children;\n    let x = bounds.x;\n    let y = bounds.y;\n    let right = bounds.right;\n    let bottom = bounds.bottom;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (!child || visibleOnly && !child.visible) {\n        continue;\n      }\n      const childBounds = child.bounds.get();\n      if (childBounds.x < x) {\n        x = childBounds.x;\n      }\n      if (childBounds.y < y) {\n        y = childBounds.y;\n      }\n      if (childBounds.right > right) {\n        right = childBounds.right;\n      }\n      if (childBounds.bottom > bottom) {\n        bottom = childBounds.bottom;\n      }\n    }\n    return bounds.set(x, y, right - x, bottom - y);\n  }\n  destroy() {\n    this.entity = null;\n    this.area = null;\n  }\n}\n", "export class InputComponent {\n  constructor(entity) {\n    this.enabled = false;\n    this.enabledChildren = true;\n    this.entity = entity;\n  }\n  destroy() {\n    this.entity = null;\n    this.hitArea = null;\n  }\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetDefaultOriginX() {\n  return ConfigStore.get(CONFIG_DEFAULTS.DEFAULT_ORIGIN).x;\n}\n", "import {CONFIG_DEFAULTS} from \"../const\";\nimport {ConfigStore} from \"../ConfigStore\";\nexport function GetDefaultOriginY() {\n  return ConfigStore.get(CONFIG_DEFAULTS.DEFAULT_ORIGIN).y;\n}\n", "export class Vec2 {\n  constructor(x = 0, y = 0) {\n    this.set(x, y);\n  }\n  set(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1]);\n  }\n  toString() {\n    const {x, y} = this;\n    return `{ x=${x}, y=${y} }`;\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function Clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function FuzzyEqual(a, b, epsilon = 1e-4) {\n  return Math.abs(a - b) < epsilon;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CeilRectangle(rect) {\n  rect.x = Math.ceil(rect.x);\n  rect.y = Math.ceil(rect.y);\n  rect.width = Math.ceil(rect.width);\n  rect.height = Math.ceil(rect.height);\n  return rect;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CeilRectanglePosition(rect) {\n  rect.x = Math.ceil(rect.x);\n  rect.y = Math.ceil(rect.y);\n  return rect;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CenterRectangleOn(rect, x, y) {\n  rect.x = x - rect.width / 2;\n  rect.y = y - rect.height / 2;\n  return rect;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Rectangle} from \"./Rectangle\";\nexport function CloneRectangle(source) {\n  return new Rectangle(source.x, source.y, source.width, source.height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function CopyRectangleFrom(source, dest) {\n  return dest.set(source.x, source.y, source.width, source.height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function DecomposeRectangle(rect, out = []) {\n  out.push(new Vec2(rect.x, rect.y), new Vec2(rect.right, rect.y), new Vec2(rect.right, rect.bottom), new Vec2(rect.x, rect.bottom));\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetRectangleAspectRatio(rect) {\n  return rect.height === 0 ? NaN : rect.width / rect.height;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetRectangleCenterX(rect) {\n  return rect.x + rect.width / 2;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetRectangleCenterY(rect) {\n  return rect.y + rect.height / 2;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetRectangleAspectRatio} from \"./GetRectangleAspectRatio\";\nimport {GetRectangleCenterX} from \"./GetRectangleCenterX\";\nimport {GetRectangleCenterY} from \"./GetRectangleCenterY\";\nexport function FitRectangleInside(target, source) {\n  const ratio = GetRectangleAspectRatio(target);\n  let width = source.width;\n  let height = source.height;\n  if (ratio < GetRectangleAspectRatio(source)) {\n    width = source.height * ratio;\n  } else {\n    height = source.width / ratio;\n  }\n  return target.set(GetRectangleCenterX(source) - target.width / 2, GetRectangleCenterY(source) - target.height / 2, width, height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetRectangleAspectRatio} from \"./GetRectangleAspectRatio\";\nimport {GetRectangleCenterX} from \"./GetRectangleCenterX\";\nimport {GetRectangleCenterY} from \"./GetRectangleCenterY\";\nexport function FitRectangleOutside(target, source) {\n  const ratio = GetRectangleAspectRatio(target);\n  let width = source.width;\n  let height = source.height;\n  if (ratio > GetRectangleAspectRatio(source)) {\n    width = source.height * ratio;\n  } else {\n    height = source.width / ratio;\n  }\n  return target.set(GetRectangleCenterX(source) - target.width / 2, GetRectangleCenterY(source) - target.height / 2, width, height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function FitRectangleToPoint(target, x, y) {\n  const minX = Math.min(target.x, x);\n  const maxX = Math.max(target.right, x);\n  const minY = Math.min(target.y, y);\n  const maxY = Math.max(target.bottom, y);\n  return target.set(minX, minY, maxX - minX, maxY - minY);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function FitRectangleToPoints(target, points) {\n  let minX = target.x;\n  let maxX = target.right;\n  let minY = target.y;\n  let maxY = target.bottom;\n  for (let i = 0; i < points.length; i++) {\n    minX = Math.min(minX, points[i].x);\n    maxX = Math.max(maxX, points[i].x);\n    minY = Math.min(minY, points[i].y);\n    maxY = Math.max(maxY, points[i].y);\n  }\n  return target.set(minX, minY, maxX - minX, maxY - minY);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function FloorRectangle(rect) {\n  rect.x = Math.floor(rect.x);\n  rect.y = Math.floor(rect.y);\n  rect.width = Math.floor(rect.width);\n  rect.height = Math.floor(rect.height);\n  return rect;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function FloorRectanglePosition(rect) {\n  rect.x = Math.floor(rect.x);\n  rect.y = Math.floor(rect.y);\n  return rect;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetRectangleArea(rect) {\n  return rect.width * rect.height;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetRectangleCenterX} from \"./GetRectangleCenterX\";\nimport {GetRectangleCenterY} from \"./GetRectangleCenterY\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetRectangleCenter(rect, out = new Vec2()) {\n  return out.set(GetRectangleCenterX(rect), GetRectangleCenterY(rect));\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport class Line {\n  constructor(x1 = 0, y1 = 0, x2 = 0, y2 = 0) {\n    this.set(x1, y1, x2, y2);\n  }\n  set(x1 = 0, y1 = 0, x2 = 0, y2 = 0) {\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n    return this;\n  }\n  get left() {\n    return Math.min(this.x1, this.x2);\n  }\n  set left(value) {\n    if (this.x1 <= this.x2) {\n      this.x1 = value;\n    } else {\n      this.x2 = value;\n    }\n  }\n  get right() {\n    return Math.max(this.x1, this.x2);\n  }\n  set right(value) {\n    if (this.x1 > this.x2) {\n      this.x1 = value;\n    } else {\n      this.x2 = value;\n    }\n  }\n  get top() {\n    return Math.min(this.y1, this.y2);\n  }\n  set top(value) {\n    if (this.y1 <= this.y2) {\n      this.y1 = value;\n    } else {\n      this.y2 = value;\n    }\n  }\n  get bottom() {\n    return Math.max(this.y1, this.y2);\n  }\n  set bottom(value) {\n    if (this.y1 > this.y2) {\n      this.y1 = value;\n    } else {\n      this.y2 = value;\n    }\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Rectangle} from \"./Rectangle\";\nimport {RectangleToRectangle} from \"../intersects/RectangleToRectangle\";\nexport function GetRectangleIntersection(rectA, rectB, out = new Rectangle()) {\n  if (RectangleToRectangle(rectA, rectB)) {\n    out.set(Math.max(rectA.x, rectB.x), Math.max(rectA.y, rectB.y), Math.min(rectA.right, rectB.right) - out.x, Math.min(rectA.bottom, rectB.bottom) - out.y);\n  } else {\n    out.set();\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetRectanglePerimeter(rect) {\n  return 2 * (rect.width + rect.height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetRectanglePerimeter} from \"./GetRectanglePerimeter\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetRectangleMarchingAnts(rect, step, quantity, out = []) {\n  if (!step && !quantity) {\n    return out;\n  }\n  if (!step) {\n    step = GetRectanglePerimeter(rect) / quantity;\n  } else {\n    quantity = Math.round(GetRectanglePerimeter(rect) / step);\n  }\n  let x = rect.x;\n  let y = rect.y;\n  let face = 0;\n  for (let i = 0; i < quantity; i++) {\n    out.push(new Vec2(x, y));\n    switch (face) {\n      case 0:\n        x += step;\n        if (x >= rect.right) {\n          face = 1;\n          y += x - rect.right;\n          x = rect.right;\n        }\n        break;\n      case 1:\n        y += step;\n        if (y >= rect.bottom) {\n          face = 2;\n          x -= y - rect.bottom;\n          y = rect.bottom;\n        }\n        break;\n      case 2:\n        x -= step;\n        if (x <= rect.x) {\n          face = 3;\n          y -= rect.x - x;\n          x = rect.x;\n        }\n        break;\n      case 3:\n        y -= step;\n        if (y <= rect.y) {\n          face = 0;\n          y = rect.y;\n        }\n        break;\n    }\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function GetRectangleOverlap(rectA, rectB) {\n  return rectA.x < rectB.right && rectA.right > rectB.x && rectA.y < rectB.bottom && rectA.bottom > rectB.y;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {MATH_CONST} from \"./const\";\nexport function DegToRad(degrees) {\n  return degrees * MATH_CONST.DEG_TO_RAD;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {DegToRad} from \"../../math/DegToRad\";\nimport {GetRectangleCenterX} from \"./GetRectangleCenterX\";\nimport {GetRectangleCenterY} from \"./GetRectangleCenterY\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetRectanglePerimeterPoint(rectangle, angle, out = new Vec2()) {\n  angle = DegToRad(angle);\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  let dx = c > 0 ? rectangle.width / 2 : rectangle.width / -2;\n  let dy = s > 0 ? rectangle.height / 2 : rectangle.height / -2;\n  if (Math.abs(dx * s) < Math.abs(dy * c)) {\n    dy = dx * s / c;\n  } else {\n    dx = dy * c / s;\n  }\n  return out.set(dx + GetRectangleCenterX(rectangle), dy + GetRectangleCenterY(rectangle));\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetRectanglePerimeter} from \"./GetRectanglePerimeter\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetRectanglePoint(rectangle, position, out = new Vec2()) {\n  if (position <= 0 || position >= 1) {\n    return out.set(rectangle.x, rectangle.y);\n  }\n  let p = GetRectanglePerimeter(rectangle) * position;\n  if (position > 0.5) {\n    p -= rectangle.width + rectangle.height;\n    if (p <= rectangle.width) {\n      return out.set(rectangle.right - p, rectangle.bottom);\n    } else {\n      return out.set(rectangle.x, rectangle.bottom - (p - rectangle.width));\n    }\n  } else if (p <= rectangle.width) {\n    return out.set(rectangle.x + p, rectangle.y);\n  } else {\n    return out.set(rectangle.right, rectangle.y + (p - rectangle.width));\n  }\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {GetRectanglePerimeter} from \"./GetRectanglePerimeter\";\nimport {GetRectanglePoint} from \"./GetRectanglePoint\";\nexport function GetRectanglePoints(rectangle, step, quantity = 0, out = []) {\n  if (!quantity) {\n    quantity = GetRectanglePerimeter(rectangle) / step;\n  }\n  for (let i = 0; i < quantity; i++) {\n    out.push(GetRectanglePoint(rectangle, i / quantity));\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetRectangleRandomPoint(rect, out = new Vec2()) {\n  return out.set(rect.x + Math.random() * rect.width, rect.y + Math.random() * rect.height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function RectangleContainsRectangle(rectA, rectB) {\n  if (rectB.width * rectB.height > rectA.width * rectA.height) {\n    return false;\n  }\n  return rectB.x > rectA.x && rectB.x < rectA.right && (rectB.right > rectA.x && rectB.right < rectA.right) && (rectB.y > rectA.y && rectB.y < rectA.bottom) && (rectB.bottom > rectA.y && rectB.bottom < rectA.bottom);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Between} from \"../../math/Between\";\nimport {RectangleContainsRectangle} from \"./RectangleContainsRectangle\";\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetRectangleRandomPointOutside(outer, inner, out = new Vec2()) {\n  if (RectangleContainsRectangle(outer, inner)) {\n    switch (Between(0, 3)) {\n      case 0:\n        out.x = outer.x + Math.random() * (inner.right - outer.x);\n        out.y = outer.y + Math.random() * (inner.y - outer.y);\n        break;\n      case 1:\n        out.x = inner.x + Math.random() * (outer.right - inner.x);\n        out.y = inner.bottom + Math.random() * (outer.bottom - inner.bottom);\n        break;\n      case 2:\n        out.x = outer.x + Math.random() * (inner.x - outer.x);\n        out.y = inner.y + Math.random() * (outer.bottom - inner.y);\n        break;\n      case 3:\n        out.x = inner.right + Math.random() * (outer.right - inner.right);\n        out.y = outer.y + Math.random() * (inner.bottom - outer.y);\n        break;\n    }\n  }\n  return out;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Vec2} from \"../../math/vec2/Vec2\";\nexport function GetRectangleSize(rect, out = new Vec2()) {\n  return out.set(rect.width, rect.height);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {Rectangle} from \"./Rectangle\";\nexport function GetRectangleUnion(rectA, rectB, out = new Rectangle()) {\n  const x = Math.min(rectA.x, rectB.x);\n  const y = Math.min(rectA.y, rectB.y);\n  const w = Math.max(rectA.right, rectB.right) - x;\n  const h = Math.max(rectA.bottom, rectB.bottom) - y;\n  return out.set(x, y, w, h);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CenterRectangleOn} from \"./CenterRectangleOn\";\nimport {GetRectangleCenterX} from \"./GetRectangleCenterX\";\nimport {GetRectangleCenterY} from \"./GetRectangleCenterY\";\nexport function InflateRectangle(rect, x, y) {\n  const cx = GetRectangleCenterX(rect);\n  const cy = GetRectangleCenterY(rect);\n  rect.width = rect.width + x * 2;\n  rect.height = rect.height + y * 2;\n  return CenterRectangleOn(rect, cx, cy);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function MergeRectangle(target, source) {\n  const minX = Math.min(target.x, source.x);\n  const maxX = Math.max(target.right, source.right);\n  const minY = Math.min(target.y, source.y);\n  const maxY = Math.max(target.bottom, source.bottom);\n  return target.set(minX, minY, maxX - minX, maxY - minY);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {RectangleContains} from \"./RectangleContains\";\nexport function RectangleContainsPoint(rect, point) {\n  return RectangleContains(rect, point.x, point.y);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function RectangleEquals(rect, toCompare) {\n  return rect.x === toCompare.x && rect.y === toCompare.y && rect.width === toCompare.width && rect.height === toCompare.height;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {MATH_CONST} from \"../../math/const\";\nimport {Rectangle} from \"./Rectangle\";\nexport function RectangleFromPoints(points, out = new Rectangle()) {\n  if (points.length === 0) {\n    return out;\n  }\n  let minX = Number.MAX_VALUE;\n  let minY = Number.MAX_VALUE;\n  let maxX = MATH_CONST.MIN_SAFE_INTEGER;\n  let maxY = MATH_CONST.MIN_SAFE_INTEGER;\n  for (let i = 0; i < points.length; i++) {\n    const px = points[i].x;\n    const py = points[i].y;\n    minX = Math.min(minX, px);\n    minY = Math.min(minY, py);\n    maxX = Math.max(maxX, px);\n    maxY = Math.max(maxY, py);\n  }\n  return out.set(minX, minY, maxX - minX, maxY - minY);\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function RectangleSizeEquals(rect, toCompare) {\n  return rect.width === toCompare.width && rect.height === toCompare.height;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function ScaleRectangle(rect, x, y = x) {\n  rect.width *= x;\n  rect.height *= y;\n  return rect;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function TranslateRectangle(rect, x, y) {\n  rect.x += x;\n  rect.y += y;\n  return rect;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nexport function TranslateRectanglePoint(rect, point) {\n  rect.x += point.x;\n  rect.y += point.y;\n  return rect;\n}\n", "/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport {CeilRectangle} from \"./CeilRectangle\";\nimport {CeilRectanglePosition} from \"./CeilRectanglePosition\";\nimport {CenterRectangleOn} from \"./CenterRectangleOn\";\nimport {CloneRectangle} from \"./CloneRectangle\";\nimport {CopyRectangleFrom} from \"./CopyRectangleFrom\";\nimport {DecomposeRectangle} from \"./DecomposeRectangle\";\nimport {FitRectangleInside} from \"./FitRectangleInside\";\nimport {FitRectangleOutside} from \"./FitRectangleOutside\";\nimport {FitRectangleToPoint} from \"./FitRectangleToPoint\";\nimport {FitRectangleToPoints} from \"./FitRectangleToPoints\";\nimport {FloorRectangle} from \"./FloorRectangle\";\nimport {FloorRectanglePosition} from \"./FloorRectanglePosition\";\nimport {GetRectangleArea} from \"./GetRectangleArea\";\nimport {GetRectangleAspectRatio} from \"./GetRectangleAspectRatio\";\nimport {GetRectangleCenter} from \"./GetRectangleCenter\";\nimport {GetRectangleCenterX} from \"./GetRectangleCenterX\";\nimport {GetRectangleCenterY} from \"./GetRectangleCenterY\";\nimport {GetRectangleEdges} from \"./GetRectangleEdges\";\nimport {GetRectangleIntersection} from \"./GetRectangleIntersection\";\nimport {GetRectangleMarchingAnts} from \"./GetRectangleMarchingAnts\";\nimport {GetRectangleOverlap} from \"./GetRectangleOverlap\";\nimport {GetRectanglePerimeter} from \"./GetRectanglePerimeter\";\nimport {GetRectanglePerimeterPoint} from \"./GetRectanglePerimeterPoint\";\nimport {GetRectanglePoint} from \"./GetRectanglePoint\";\nimport {GetRectanglePoints} from \"./GetRectanglePoints\";\nimport {GetRectangleRandomPoint} from \"./GetRectangleRandomPoint\";\nimport {GetRectangleRandomPointOutside} from \"./GetRectangleRandomPointOutside\";\nimport {GetRectangleSize} from \"./GetRectangleSize\";\nimport {GetRectangleUnion} from \"./GetRectangleUnion\";\nimport {InflateRectangle} from \"./InflateRectangle\";\nimport {MergeRectangle} from \"./MergeRectangle\";\nimport {Rectangle} from \"./Rectangle\";\nimport {RectangleContains} from \"./RectangleContains\";\nimport {RectangleContainsPoint} from \"./RectangleContainsPoint\";\nimport {RectangleContainsRectangle} from \"./RectangleContainsRectangle\";\nimport {RectangleEquals} from \"./RectangleEquals\";\nimport {RectangleFromPoints} from \"./RectangleFromPoints\";\nimport {RectangleSizeEquals} from \"./RectangleSizeEquals\";\nimport {ScaleRectangle} from \"./ScaleRectangle\";\nimport {TranslateRectangle} from \"./TranslateRectangle\";\nimport {TranslateRectanglePoint} from \"./TranslateRectanglePoint\";\nexport {\n  CeilRectangle,\n  CeilRectanglePosition,\n  CenterRectangleOn,\n  CloneRectangle,\n  CopyRectangleFrom,\n  DecomposeRectangle,\n  FitRectangleInside,\n  FitRectangleOutside,\n  FitRectangleToPoint,\n  FitRectangleToPoints,\n  FloorRectangle,\n  FloorRectanglePosition,\n  GetRectangleArea,\n  GetRectangleAspectRatio,\n  GetRectangleCenter,\n  GetRectangleCenterX,\n  GetRectangleCenterY,\n  GetRectangleEdges,\n  GetRectangleIntersection,\n  GetRectangleMarchingAnts,\n  GetRectangleOverlap,\n  GetRectanglePerimeter,\n  GetRectanglePerimeterPoint,\n  GetRectanglePoint,\n  GetRectanglePoints,\n  GetRectangleRandomPoint,\n  GetRectangleRandomPointOutside,\n  GetRectangleSize,\n  GetRectangleUnion,\n  InflateRectangle,\n  MergeRectangle,\n  Rectangle,\n  RectangleContains,\n  RectangleContainsPoint,\n  RectangleContainsRectangle,\n  RectangleEquals,\n  RectangleFromPoints,\n  RectangleSizeEquals,\n  ScaleRectangle,\n  TranslateRectangle,\n  TranslateRectanglePoint\n};\n", "export function UpdateLocalTransform(transform) {\n  const local = transform.local;\n  const x = transform.position.x;\n  const y = transform.position.y;\n  const rotation = transform.rotation;\n  const scaleX = transform.scale.x;\n  const scaleY = transform.scale.y;\n  const skewX = transform.skew.x;\n  const skewY = transform.skew.y;\n  local.set(Math.cos(rotation + skewY) * scaleX, Math.sin(rotation + skewY) * scaleX, -Math.sin(rotation - skewX) * scaleY, Math.cos(rotation - skewX) * scaleY, x, y);\n}\n", "export function Mat2dCopyFrom(src, target) {\n  const {a, b, c, d, tx, ty} = src;\n  return target.set(a, b, c, d, tx, ty);\n}\n", "import {Mat2dCopyFrom} from \"../../../math/mat2d/Mat2dCopyFrom\";\nexport function UpdateWorldTransform(gameObject) {\n  const parent = gameObject.parent;\n  const transform = gameObject.transform;\n  const lt = transform.local;\n  const wt = transform.world;\n  if (!parent) {\n    Mat2dCopyFrom(lt, wt);\n  } else if (transform.passthru) {\n    Mat2dCopyFrom(parent.transform.world, wt);\n  } else {\n    const {a, b, c, d, tx, ty} = lt;\n    const {a: pa, b: pb, c: pc, d: pd, tx: ptx, ty: pty} = parent.transform.world;\n    wt.set(a * pa + b * pc, a * pb + b * pd, c * pa + d * pc, c * pb + d * pd, tx * pa + ty * pc + ptx, tx * pb + ty * pd + pty);\n  }\n}\n", "import {GetDefaultOriginX, GetDefaultOriginY} from \"../../../config/defaultorigin/\";\nimport {Vec2, Vec2Callback} from \"../../../math/vec2\";\nimport {DIRTY_CONST} from \"../../DIRTY_CONST\";\nimport {Matrix2D} from \"../../../math/mat2d/Matrix2D\";\nimport {Rectangle} from \"../../../geom/rectangle\";\nimport {UpdateLocalTransform} from \"./UpdateLocalTransform\";\nimport {UpdateWorldTransform} from \"./UpdateWorldTransform\";\nexport class TransformComponent {\n  constructor(entity, x = 0, y = 0) {\n    this.passthru = false;\n    this._rotation = 0;\n    this.entity = entity;\n    this.local = new Matrix2D();\n    this.world = new Matrix2D();\n    const update = () => this.update();\n    const updateExtent = () => this.updateExtent();\n    this.position = new Vec2Callback(update, x, y);\n    this.scale = new Vec2Callback(update, 1, 1);\n    this.skew = new Vec2Callback(update);\n    this.origin = new Vec2Callback(updateExtent, GetDefaultOriginX(), GetDefaultOriginY());\n    this.extent = new Rectangle();\n  }\n  update() {\n    this.updateLocal();\n    this.updateWorld();\n  }\n  updateLocal() {\n    this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n    UpdateLocalTransform(this);\n  }\n  updateWorld() {\n    const entity = this.entity;\n    entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n    UpdateWorldTransform(entity);\n    if (entity.numChildren) {\n      this.updateChildren();\n    }\n  }\n  updateChildren() {\n    const children = this.entity.children;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      child.transform.updateWorld();\n    }\n  }\n  globalToLocal(x, y, out = new Vec2()) {\n    const {a, b, c, d, tx, ty} = this.world;\n    const id = 1 / (a * d + c * -b);\n    out.x = d * id * x + -c * id * y + (ty * c - tx * d) * id;\n    out.y = a * id * y + -b * id * x + (-ty * a + tx * b) * id;\n    return out;\n  }\n  localToGlobal(x, y, out = new Vec2()) {\n    const {a, b, c, d, tx, ty} = this.world;\n    out.x = a * x + c * y + tx;\n    out.y = b * x + d * y + ty;\n    return out;\n  }\n  setExtent(x, y, width, height) {\n    this.extent.set(x, y, width, height);\n    this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n  }\n  updateExtent(width, height) {\n    const extent = this.extent;\n    const entity = this.entity;\n    if (width !== void 0) {\n      extent.width = width;\n    }\n    if (height !== void 0) {\n      extent.height = height;\n    }\n    extent.x = -this.origin.x * extent.width;\n    extent.y = -this.origin.y * extent.height;\n    entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n  }\n  set rotation(value) {\n    if (value !== this._rotation) {\n      this._rotation = value;\n      this.update();\n    }\n  }\n  get rotation() {\n    return this._rotation;\n  }\n  destroy() {\n    this.position.destroy();\n    this.scale.destroy();\n    this.skew.destroy();\n    this.origin.destroy();\n    this.entity = null;\n    this.local = null;\n    this.world = null;\n    this.position = null;\n    this.scale = null;\n    this.skew = null;\n    this.origin = null;\n    this.extent = null;\n  }\n}\n", "export function PackColor(rgb, alpha) {\n  const ua = (alpha * 255 | 0) & 255;\n  return (ua << 24 | rgb) >>> 0;\n}\n", "import {PackColor} from \"../../renderer/webgl1/colors/PackColor\";\nexport class Vertex {\n  constructor(x = 0, y = 0, z = 0) {\n    this.x = 0;\n    this.y = 0;\n    this.z = 0;\n    this.u = 0;\n    this.v = 0;\n    this.texture = 0;\n    this.tint = 16777215;\n    this.alpha = 1;\n    this.color = 4294967295;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n  setPosition(x, y, z = 0) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  }\n  setUV(u, v) {\n    this.u = u;\n    this.v = v;\n    return this;\n  }\n  setColor(color, alpha = 1) {\n    this.tint = color;\n    this.alpha = alpha;\n    this.packColor();\n    return this;\n  }\n  setAlpha(value) {\n    this.alpha = value;\n    return this;\n  }\n  setTint(value) {\n    this.tint = value;\n    return this;\n  }\n  packColor() {\n    this.color = PackColor(this.tint, this.alpha);\n  }\n}\n", "import {GetVertexBufferEntry} from \"../renderpass/GetVertexBufferEntry\";\nimport {SetTexture} from \"../renderpass/SetTexture\";\nexport function BatchTexturedQuad(sprite, renderPass) {\n  const {F32, U32, offset} = GetVertexBufferEntry(renderPass, 1);\n  const textureIndex = SetTexture(renderPass, sprite.texture);\n  let vertOffset = offset;\n  sprite.vertices.forEach((vertex) => {\n    F32[vertOffset + 0] = vertex.x;\n    F32[vertOffset + 1] = vertex.y;\n    F32[vertOffset + 2] = vertex.u;\n    F32[vertOffset + 3] = vertex.v;\n    F32[vertOffset + 4] = textureIndex;\n    U32[vertOffset + 5] = vertex.color;\n    vertOffset += 6;\n  });\n}\n", "import {BoundsComponent} from \"./components/bounds/BoundsComponent\";\nimport {DIRTY_CONST} from \"./DIRTY_CONST\";\nimport {DestroyChildren} from \"../display/DestroyChildren\";\nimport {DestroyEvent} from \"./events/DestroyEvent\";\nimport {Emit} from \"../events\";\nimport {GameInstance} from \"../GameInstance\";\nimport {InputComponent} from \"./components/input/InputComponent\";\nimport {ReparentChildren} from \"../display/ReparentChildren\";\nimport {TransformComponent} from \"./components/transform/TransformComponent\";\nexport class GameObject {\n  constructor(x = 0, y = 0) {\n    this.type = \"GameObject\";\n    this.name = \"\";\n    this.willUpdate = true;\n    this.willUpdateChildren = true;\n    this.willRender = true;\n    this.willRenderChildren = true;\n    this.willCacheChildren = false;\n    this.dirty = 0;\n    this.dirtyFrame = 0;\n    this.visible = true;\n    this.children = [];\n    this.events = new Map();\n    this.transform = new TransformComponent(this, x, y);\n    this.bounds = new BoundsComponent(this);\n    this.input = new InputComponent(this);\n    this.dirty = DIRTY_CONST.DEFAULT;\n    this.transform.update();\n  }\n  isRenderable() {\n    return this.visible && this.willRender;\n  }\n  isDirty(flag) {\n    return (this.dirty & flag) !== 0;\n  }\n  clearDirty(flag) {\n    if (this.isDirty(flag)) {\n      this.dirty ^= flag;\n    }\n    return this;\n  }\n  setDirty(flag, flag2) {\n    if (!this.isDirty(flag)) {\n      this.dirty ^= flag;\n      this.dirtyFrame = GameInstance.getFrame();\n    }\n    if (!this.isDirty(flag2)) {\n      this.dirty ^= flag2;\n    }\n    return this;\n  }\n  update(delta, time) {\n    if (this.willUpdateChildren) {\n      const children = this.children;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child && child.willUpdate) {\n          child.update(delta, time);\n        }\n      }\n    }\n    this.postUpdate(delta, time);\n  }\n  postUpdate(delta, time) {\n  }\n  renderGL(renderPass) {\n  }\n  renderCanvas(renderer) {\n  }\n  postRenderGL(renderPass) {\n  }\n  postRenderCanvas(renderer) {\n  }\n  get numChildren() {\n    return this.children.length;\n  }\n  destroy(reparentChildren) {\n    if (reparentChildren) {\n      ReparentChildren(this, reparentChildren);\n    } else {\n      DestroyChildren(this);\n    }\n    Emit(this, DestroyEvent, this);\n    this.transform.destroy();\n    this.bounds.destroy();\n    this.input.destroy();\n    this.events.clear();\n    this.world = null;\n    this.parent = null;\n    this.children = null;\n  }\n}\n", "import {DIRTY_CONST} from \"../DIRTY_CONST\";\nimport {GameObject} from \"../GameObject\";\nexport class Container extends GameObject {\n  constructor(x = 0, y = 0) {\n    super(x, y);\n    this._alpha = 1;\n    this.type = \"Container\";\n  }\n  setSize(width, height = width) {\n    this.transform.updateExtent(width, height);\n    return this;\n  }\n  setPosition(x, y) {\n    this.transform.position.set(x, y);\n    return this;\n  }\n  setOrigin(x, y = x) {\n    this.transform.origin.set(x, y);\n    return this;\n  }\n  setSkew(x, y = x) {\n    this.transform.skew.set(x, y);\n    return this;\n  }\n  setScale(x, y = x) {\n    this.transform.scale.set(x, y);\n    return this;\n  }\n  setRotation(value) {\n    this.transform.rotation = value;\n    return this;\n  }\n  set width(value) {\n    this.transform.updateExtent(value);\n  }\n  get width() {\n    return this.transform.extent.width;\n  }\n  set height(value) {\n    this.transform.updateExtent(void 0, value);\n  }\n  get height() {\n    return this.transform.extent.height;\n  }\n  set x(value) {\n    this.transform.position.x = value;\n  }\n  get x() {\n    return this.transform.position.x;\n  }\n  set y(value) {\n    this.transform.position.y = value;\n  }\n  get y() {\n    return this.transform.position.y;\n  }\n  set originX(value) {\n    this.transform.origin.x = value;\n  }\n  get originX() {\n    return this.transform.origin.x;\n  }\n  set originY(value) {\n    this.transform.origin.y = value;\n  }\n  get originY() {\n    return this.transform.origin.y;\n  }\n  set skewX(value) {\n    this.transform.skew.x = value;\n  }\n  get skewX() {\n    return this.transform.skew.x;\n  }\n  set skewY(value) {\n    this.transform.skew.y = value;\n  }\n  get skewY() {\n    return this.transform.skew.y;\n  }\n  set scaleX(value) {\n    this.transform.scale.x = value;\n  }\n  get scaleX() {\n    return this.transform.scale.x;\n  }\n  set scaleY(value) {\n    this.transform.scale.y = value;\n  }\n  get scaleY() {\n    return this.transform.scale.y;\n  }\n  set rotation(value) {\n    this.transform.rotation = value;\n  }\n  get rotation() {\n    return this.transform.rotation;\n  }\n  get alpha() {\n    return this._alpha;\n  }\n  set alpha(value) {\n    if (value !== this._alpha) {\n      this._alpha = value;\n      this.setDirty(DIRTY_CONST.TRANSFORM);\n    }\n  }\n}\n", "export function DrawTexturedQuad(sprite, renderer) {\n  const frame = sprite.frame;\n  if (!frame) {\n    return;\n  }\n  const ctx = renderer.ctx;\n  const transform = sprite.transform;\n  const {a, b, c, d, tx, ty} = transform.world;\n  const {x, y} = transform.extent;\n  ctx.save();\n  ctx.setTransform(a, b, c, d, tx, ty);\n  ctx.globalAlpha = sprite.alpha;\n  ctx.drawImage(frame.texture.image, frame.x, frame.y, frame.width, frame.height, x, y, frame.width, frame.height);\n  ctx.restore();\n}\n", "export function PackColors(sprite) {\n  sprite.vertices.forEach((vertex) => {\n    vertex.packColor();\n  });\n  return sprite;\n}\n", "export function SetFrame(texture, key, ...children) {\n  const frame = texture.getFrame(key);\n  const {u0, u1, v0, v1, pivot} = frame;\n  children.forEach((child) => {\n    if (!child || frame === child.frame) {\n      return;\n    }\n    child.frame = frame;\n    if (pivot) {\n      child.setOrigin(pivot.x, pivot.y);\n    }\n    child.frame.setExtent(child);\n    child.hasTexture = true;\n    const vertices = child.vertices;\n    vertices[0].setUV(u0, v0);\n    vertices[1].setUV(u0, v1);\n    vertices[2].setUV(u1, v1);\n    vertices[3].setUV(u1, v0);\n  });\n  return children;\n}\n", "import {SetFrame} from \"./SetFrame\";\nimport {Texture} from \"../../textures/Texture\";\nimport {TextureManagerInstance} from \"../../textures/TextureManagerInstance\";\nexport function SetTexture(key, frame, ...children) {\n  if (!key) {\n    children.forEach((child) => {\n      child.texture = null;\n      child.frame = null;\n      child.hasTexture = false;\n    });\n  } else {\n    let texture;\n    if (key instanceof Texture) {\n      texture = key;\n    } else {\n      texture = TextureManagerInstance.get().get(key);\n    }\n    if (!texture) {\n      console.warn(`Invalid Texture key: ${key}`);\n    } else {\n      children.forEach((child) => {\n        child.texture = texture;\n      });\n      SetFrame(texture, frame, ...children);\n    }\n  }\n  return children;\n}\n", "import {GetVertices} from \"../components/transform/GetVertices\";\nexport function UpdateVertices(sprite) {\n  const vertices = sprite.vertices;\n  const {x0, y0, x1, y1, x2, y2, x3, y3} = GetVertices(sprite.transform);\n  vertices[0].setPosition(x0, y0);\n  vertices[1].setPosition(x1, y1);\n  vertices[2].setPosition(x2, y2);\n  vertices[3].setPosition(x3, y3);\n  return sprite;\n}\n", "import {BatchTexturedQuad} from \"../../renderer/webgl1/draw/BatchTexturedQuad\";\nimport {Container} from \"../container/Container\";\nimport {DIRTY_CONST} from \"../DIRTY_CONST\";\nimport {DrawTexturedQuad} from \"../../renderer/canvas/draw/DrawTexturedQuad\";\nimport {PackColors} from \"../../renderer/webgl1/colors/PackColors\";\nimport {SetFrame} from \"./SetFrame\";\nimport {SetTexture} from \"./SetTexture\";\nimport {UpdateVertices} from \"./UpdateVertices\";\nimport {Vertex} from \"../components/Vertex\";\nexport class Sprite extends Container {\n  constructor(x, y, texture, frame) {\n    super(x, y);\n    this.hasTexture = false;\n    this._tint = 16777215;\n    this.type = \"Sprite\";\n    this.vertices = [new Vertex(), new Vertex(), new Vertex(), new Vertex()];\n    this.setTexture(texture, frame);\n  }\n  setTexture(key, frame) {\n    SetTexture(key, frame, this);\n    return this;\n  }\n  setFrame(key) {\n    SetFrame(this.texture, key, this);\n    return this;\n  }\n  isRenderable() {\n    return this.visible && this.willRender && this.hasTexture && this.alpha > 0;\n  }\n  preRender() {\n    if (this.isDirty(DIRTY_CONST.COLORS)) {\n      PackColors(this);\n      this.clearDirty(DIRTY_CONST.COLORS);\n    }\n    if (this.isDirty(DIRTY_CONST.TRANSFORM)) {\n      UpdateVertices(this);\n      this.clearDirty(DIRTY_CONST.TRANSFORM);\n    }\n  }\n  renderGL(renderPass) {\n    this.preRender();\n    BatchTexturedQuad(this, renderPass);\n  }\n  renderCanvas(renderer) {\n    this.preRender();\n    DrawTexturedQuad(this, renderer);\n  }\n  get alpha() {\n    return this._alpha;\n  }\n  set alpha(value) {\n    if (value !== this._alpha) {\n      this._alpha = value;\n      this.vertices.forEach((vertex) => {\n        vertex.setAlpha(value);\n      });\n      this.setDirty(DIRTY_CONST.COLORS);\n    }\n  }\n  get tint() {\n    return this._tint;\n  }\n  set tint(value) {\n    if (value !== this._tint) {\n      this._tint = value;\n      this.vertices.forEach((vertex) => {\n        vertex.setTint(value);\n      });\n      this.setDirty(DIRTY_CONST.COLORS);\n    }\n  }\n  destroy(reparentChildren) {\n    super.destroy(reparentChildren);\n    this.texture = null;\n    this.frame = null;\n    this.hasTexture = false;\n    this.vertices = [];\n  }\n}\n", "export const WorldRenderEvent = \"worldrender\";\n", "export const WorldShutdownEvent = \"worldshutdown\";\n", "export function CalculateTotalRenderable(entry, renderData) {\n  renderData.numRendered++;\n  renderData.numRenderable++;\n  if (entry.node.dirtyFrame >= renderData.gameFrame) {\n    renderData.dirtyFrame++;\n  }\n  entry.children.forEach((child) => {\n    if (child.children.length > 0) {\n      CalculateTotalRenderable(child, renderData);\n    }\n  });\n}\n", "import {DIRTY_CONST} from \"../gameobjects/DIRTY_CONST\";\nexport function HasDirtyChildren(parent) {\n  if (parent.node.isDirty(DIRTY_CONST.CHILD_CACHE)) {\n    return true;\n  }\n  const stack = [parent];\n  while (stack.length > 0) {\n    const entry = stack.pop();\n    if (entry.node.isDirty(DIRTY_CONST.TRANSFORM)) {\n      return true;\n    }\n    const numChildren = entry.children.length;\n    if (numChildren > 0) {\n      for (let i = 0; i < numChildren; i++) {\n        stack.push(entry.children[i]);\n      }\n    }\n  }\n  stack.length = 0;\n  return false;\n}\n", "import {DIRTY_CONST} from \"../gameobjects/DIRTY_CONST\";\nimport {HasDirtyChildren} from \"./HasDirtyChildren\";\nexport function UpdateCachedLayers(cachedLayers, dirtyCamera) {\n  cachedLayers.forEach((layer) => {\n    if (dirtyCamera || HasDirtyChildren(layer)) {\n      layer.node.setDirty(DIRTY_CONST.CHILD_CACHE);\n    } else {\n      layer.children.length = 0;\n    }\n  });\n}\n", "export function WorldDepthFirstSearch(cachedLayers, parent, output = []) {\n  for (let i = 0; i < parent.numChildren; i++) {\n    const node = parent.children[i];\n    if (node.isRenderable()) {\n      const children = [];\n      const entry = {node, children};\n      output.push(entry);\n      if (node.willRenderChildren && node.numChildren > 0) {\n        if (node.willCacheChildren) {\n          cachedLayers.push(entry);\n        }\n        WorldDepthFirstSearch(cachedLayers, node, children);\n      }\n    }\n  }\n  return output;\n}\n", "import {CalculateTotalRenderable} from \"./CalculateTotalRenderable\";\nimport {UpdateCachedLayers} from \"./UpdateCachedLayers\";\nimport {WorldDepthFirstSearch} from \"./WorldDepthFirstSearch\";\nexport function BuildRenderList(world) {\n  const cachedLayers = [];\n  const stack = [];\n  const entries = WorldDepthFirstSearch(cachedLayers, world, stack);\n  const renderData = world.renderData;\n  if (cachedLayers.length > 0) {\n    UpdateCachedLayers(cachedLayers, world.camera.dirtyRender);\n  }\n  entries.forEach((entry) => {\n    if (entry.children.length > 0) {\n      CalculateTotalRenderable(entry, renderData);\n    } else {\n      renderData.numRendered++;\n      renderData.numRenderable++;\n      if (entry.node.dirtyFrame >= renderData.gameFrame) {\n        renderData.dirtyFrame++;\n      }\n    }\n  });\n  world.renderList = entries;\n  if (world.forceRefresh) {\n    renderData.dirtyFrame++;\n    world.forceRefresh = false;\n  }\n}\n", "export function Mat2dEquals(a, b) {\n  return a.a === b.a && a.b === b.b && a.c === b.c && a.d === b.d && a.tx === b.tx && a.ty === b.ty;\n}\n", "export function MergeRenderData(sceneRenderData, worldRenderData) {\n  sceneRenderData.numDirtyFrames += worldRenderData.dirtyFrame;\n  sceneRenderData.numTotalFrames += worldRenderData.numRendered;\n  if (worldRenderData.camera.dirtyRender) {\n    sceneRenderData.numDirtyCameras++;\n  }\n  sceneRenderData.worldData.push(worldRenderData);\n}\n", "export function ResetWorldRenderData(renderData, gameFrame) {\n  renderData.gameFrame = gameFrame;\n  renderData.dirtyFrame = 0;\n  renderData.numRendered = 0;\n  renderData.numRenderable = 0;\n}\n", "import * as GameObjectEvents from \"../gameobjects/events\";\nimport * as WorldEvents from \"./events\";\nimport {Begin, Flush} from \"../renderer/webgl1/renderpass\";\nimport {Emit, Off, On, Once} from \"../events\";\nimport {BuildRenderList} from \"./BuildRenderList\";\nimport {GameObject} from \"../gameobjects\";\nimport {Mat2dEquals} from \"../math/mat2d/Mat2dEquals\";\nimport {MergeRenderData} from \"./MergeRenderData\";\nimport {RemoveChildren} from \"../display\";\nimport {ResetWorldRenderData} from \"./ResetWorldRenderData\";\nexport class BaseWorld extends GameObject {\n  constructor(scene) {\n    super();\n    this.forceRefresh = false;\n    this.is3D = false;\n    this.type = \"BaseWorld\";\n    this.scene = scene;\n    this.world = this;\n    this.events = new Map();\n    this.renderList = [];\n    this._updateListener = On(scene, \"update\", (delta, time) => this.update(delta, time));\n    this._renderListener = On(scene, \"render\", (renderData) => this.render(renderData));\n    this._shutdownListener = On(scene, \"shutdown\", () => this.shutdown());\n    Once(scene, \"destroy\", () => this.destroy());\n  }\n  update(delta, time) {\n    if (!this.willUpdate) {\n      return;\n    }\n    Emit(this, GameObjectEvents.UpdateEvent, delta, time, this);\n    super.update(delta, time);\n  }\n  postUpdate(delta, time) {\n    Emit(this, GameObjectEvents.PostUpdateEvent, delta, time, this);\n  }\n  render(sceneRenderData) {\n    const renderData = this.renderData;\n    ResetWorldRenderData(renderData, sceneRenderData.gameFrame);\n    if (!this.willRender || !this.visible) {\n      return;\n    }\n    BuildRenderList(this);\n    Emit(this, WorldEvents.WorldRenderEvent, renderData, this);\n    MergeRenderData(sceneRenderData, renderData);\n    this.camera.dirtyRender = false;\n  }\n  renderGL(renderPass) {\n    const currentCamera = renderPass.current2DCamera;\n    const camera = this.camera;\n    if (!currentCamera || !Mat2dEquals(camera.worldTransform, currentCamera.worldTransform)) {\n      Flush(renderPass);\n    }\n    Begin(renderPass, camera);\n    this.renderList.forEach((entry) => {\n      if (entry.children.length > 0) {\n        this.renderNode(entry, renderPass);\n      } else {\n        entry.node.renderGL(renderPass);\n      }\n    });\n  }\n  renderNode(entry, renderPass) {\n    entry.node.renderGL(renderPass);\n    entry.children.forEach((child) => {\n      if (child.children.length > 0) {\n        this.renderNode(child, renderPass);\n      } else {\n        child.node.renderGL(renderPass);\n      }\n    });\n    entry.node.postRenderGL(renderPass);\n  }\n  postRenderGL(renderPass) {\n  }\n  shutdown() {\n    const scene = this.scene;\n    Off(scene, \"update\", this._updateListener);\n    Off(scene, \"render\", this._renderListener);\n    Off(scene, \"shutdown\", this._shutdownListener);\n    RemoveChildren(this);\n    Emit(this, WorldEvents.WorldShutdownEvent, this);\n    ResetWorldRenderData(this.renderData, 0);\n    if (this.camera) {\n      this.camera.reset();\n    }\n  }\n  destroy(reparentChildren) {\n    super.destroy(reparentChildren);\n    Emit(this, GameObjectEvents.DestroyEvent, this);\n    ResetWorldRenderData(this.renderData, 0);\n    if (this.camera) {\n      this.camera.destroy();\n    }\n    this.events.clear();\n    this.camera = null;\n    this.renderData = null;\n    this.events = null;\n  }\n}\n", "export function CreateWorldRenderData(world, camera) {\n  return {\n    world,\n    camera,\n    gameFrame: 0,\n    dirtyFrame: 0,\n    numRendered: 0,\n    numRenderable: 0\n  };\n}\n", "import {BaseWorld} from \"./BaseWorld\";\nimport {CreateWorldRenderData} from \"./CreateWorldRenderData\";\nimport {StaticCamera} from \"../camera/StaticCamera\";\nexport class StaticWorld extends BaseWorld {\n  constructor(scene) {\n    super(scene);\n    this.type = \"StaticWorld\";\n    this.camera = new StaticCamera();\n    this.renderData = CreateWorldRenderData(this, this.camera);\n  }\n}\n", "import * as Easing from '@phaserjs/phaser/math/easing';\n\nimport { BackgroundColor, Parent, Scenes, WebGL } from '@phaserjs/phaser/config';\n\nimport { AddChildren } from '@phaserjs/phaser/display/';\nimport { AddTween } from '@phaserjs/phaser/motion/tween/nano/AddTween';\nimport { Game } from '@phaserjs/phaser/Game';\nimport { ImageFile } from '@phaserjs/phaser/loader/files/ImageFile';\nimport { Loader } from '@phaserjs/phaser/loader/Loader';\nimport { Scene } from '@phaserjs/phaser/scenes/Scene';\nimport { Sprite } from '@phaserjs/phaser/gameobjects/';\nimport { StaticWorld } from '@phaserjs/phaser/world/StaticWorld';\n\nclass Demo extends Scene\n{\n    constructor ()\n    {\n        super();\n\n        const world = new StaticWorld(this);\n\n        const loader = new Loader();\n\n        if (window.location.href.includes('192.168.0.100/phaser-genesis/'))\n        {\n            loader.setPath('/phaser4-examples/public/assets/');\n        }\n        else\n        {\n            loader.setPath('/examples/public/assets/');\n        }\n\n        loader.add(ImageFile('logo', 'logo.png'));\n\n        loader.start().then(() => {\n\n            const logo = new Sprite(400, 100, 'logo').setRotation(0.3);\n\n            AddTween(logo).to(3000, { y: 400, rotation: 0 }).easing(Easing.Bounce.Out);\n\n            AddChildren(world, logo);\n\n        });\n    }\n}\n\nnew Game(\n    WebGL(),\n    Parent('gameParent'),\n    BackgroundColor(0x2d2d2d),\n    Scenes(Demo)\n);\n"],
  "mappings": "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",
  "names": []
}
