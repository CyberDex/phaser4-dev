{
  "version": 3,
  "sources": ["../../phaser-genesis/dist/Phaser.js", "../src/index.ts"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, {get: all[name], enumerable: true});\n};\n\n// src/camera/index.ts\nvar camera_exports = {};\n__export(camera_exports, {\n  Camera: () => Camera,\n  StaticCamera: () => StaticCamera\n});\n\n// src/GameInstance.ts\nvar instance;\nvar frame = 0;\nvar elapsed = 0;\nvar GameInstance = {\n  get: () => {\n    return instance;\n  },\n  set: (game) => {\n    instance = game;\n  },\n  getFrame: () => {\n    return frame;\n  },\n  setFrame: (current) => {\n    frame = current;\n  },\n  getElapsed: () => {\n    return elapsed;\n  },\n  setElapsed: (current) => {\n    elapsed = current;\n  }\n};\n\n// src/math/mat4/index.ts\nvar mat4_exports = {};\n__export(mat4_exports, {\n  GetMat4Determinant: () => GetMat4Determinant,\n  GetMat4Frobenius: () => GetMat4Frobenius,\n  Mat4Add: () => Mat4Add,\n  Mat4AddTranslationFromFloats: () => Mat4AddTranslationFromFloats,\n  Mat4Adjoint: () => Mat4Adjoint,\n  Mat4Clone: () => Mat4Clone,\n  Mat4CopyFrom: () => Mat4CopyFrom,\n  Mat4CopyPosition: () => Mat4CopyPosition,\n  Mat4Equals: () => Mat4Equals,\n  Mat4FromQuat: () => Mat4FromQuat,\n  Mat4FromRotation: () => Mat4FromRotation,\n  Mat4FromRotationTranslation: () => Mat4FromRotationTranslation,\n  Mat4FromRotationTranslationScale: () => Mat4FromRotationTranslationScale,\n  Mat4FromRotationTranslationScaleOrigin: () => Mat4FromRotationTranslationScaleOrigin,\n  Mat4FromRotationXYTranslation: () => Mat4FromRotationXYTranslation,\n  Mat4FromScaling: () => Mat4FromScaling,\n  Mat4FromTranslation: () => Mat4FromTranslation,\n  Mat4FromXRotation: () => Mat4FromXRotation,\n  Mat4FromYRotation: () => Mat4FromYRotation,\n  Mat4FromZRotation: () => Mat4FromZRotation,\n  Mat4Frustum: () => Mat4Frustum,\n  Mat4GetRotation: () => Mat4GetRotation,\n  Mat4GetScaling: () => Mat4GetScaling,\n  Mat4GetTranslation: () => Mat4GetTranslation,\n  Mat4Identity: () => Mat4Identity,\n  Mat4Invert: () => Mat4Invert,\n  Mat4LookAt: () => Mat4LookAt,\n  Mat4Multiply: () => Mat4Multiply,\n  Mat4MultiplyScalar: () => Mat4MultiplyScalar,\n  Mat4MultiplyScalarAndAdd: () => Mat4MultiplyScalarAndAdd,\n  Mat4Ortho: () => Mat4Ortho,\n  Mat4Perspective: () => Mat4Perspective,\n  Mat4PerspectiveFromFieldOfView: () => Mat4PerspectiveFromFieldOfView,\n  Mat4Rotate: () => Mat4Rotate,\n  Mat4RotateX: () => Mat4RotateX,\n  Mat4RotateY: () => Mat4RotateY,\n  Mat4RotateZ: () => Mat4RotateZ,\n  Mat4Scale: () => Mat4Scale,\n  Mat4SetTranslation: () => Mat4SetTranslation,\n  Mat4SetTranslationFromFloats: () => Mat4SetTranslationFromFloats,\n  Mat4Subtract: () => Mat4Subtract,\n  Mat4TargetTo: () => Mat4TargetTo,\n  Mat4Translate: () => Mat4Translate,\n  Mat4TranslateFromFloats: () => Mat4TranslateFromFloats,\n  Mat4Transpose: () => Mat4Transpose,\n  Mat4Zero: () => Mat4Zero,\n  Matrix4: () => Matrix4\n});\n\n// src/math/mat4/GetMat4Determinant.ts\nfunction GetMat4Determinant(matrix2) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = matrix2.data;\n  const det22x33 = m22 * m33 - m32 * m23;\n  const det21x33 = m21 * m33 - m31 * m23;\n  const det21x32 = m21 * m32 - m31 * m22;\n  const det20x33 = m20 * m33 - m30 * m23;\n  const det20x32 = m20 * m32 - m22 * m30;\n  const det20x31 = m20 * m31 - m30 * m21;\n  const cofact00 = +(m11 * det22x33 - m12 * det21x33 + m13 * det21x32);\n  const cofact01 = -(m10 * det22x33 - m12 * det20x33 + m13 * det20x32);\n  const cofact02 = +(m10 * det21x33 - m11 * det20x33 + m13 * det20x31);\n  const cofact03 = -(m10 * det21x32 - m11 * det20x32 + m12 * det20x31);\n  return m00 * cofact00 + m01 * cofact01 + m02 * cofact02 + m03 * cofact03;\n}\n\n// src/math/mat4/GetMat4Frobenius.ts\nfunction GetMat4Frobenius(matrix2) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = matrix2.data;\n  return Math.hypot(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n}\n\n// src/math/RoundAwayFromZero.ts\nfunction RoundAwayFromZero(value) {\n  return value > 0 ? Math.ceil(value) : Math.floor(value);\n}\n\n// src/utils/base64/Base64ToArrayBuffer.ts\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar lookup = new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n  lookup[chars.charCodeAt(i)] = i;\n}\n\n// src/utils/NOOP.ts\nfunction NOOP() {\n}\n\n// src/math/mat4/Matrix4.ts\nvar Matrix4 = class {\n  constructor(src) {\n    const data = new Float32Array(16);\n    this.data = data;\n    this.onChange = NOOP;\n    if (src) {\n      if (Array.isArray(src)) {\n        this.fromArray(src);\n      } else {\n        this.fromArray(src.data);\n      }\n    } else {\n      data[0] = 1;\n      data[5] = 1;\n      data[10] = 1;\n      data[15] = 1;\n    }\n  }\n  set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    const data = this.data;\n    data[0] = m00;\n    data[1] = m01;\n    data[2] = m02;\n    data[3] = m03;\n    data[4] = m10;\n    data[5] = m11;\n    data[6] = m12;\n    data[7] = m13;\n    data[8] = m20;\n    data[9] = m21;\n    data[10] = m22;\n    data[11] = m23;\n    data[12] = m30;\n    data[13] = m31;\n    data[14] = m32;\n    data[15] = m33;\n    this.onChange(this);\n    return this;\n  }\n  toArray(dst = [], index = 0) {\n    const data = this.data;\n    for (let i = 0; i < 16; i++) {\n      dst[index + i] = data[i];\n    }\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    const data = this.data;\n    for (let i = 0; i < 16; i++) {\n      data[i] = src[index + i];\n    }\n    this.onChange(this);\n    return this;\n  }\n  toString() {\n    return \"[ mat4=\" + this.data.join(\", \") + \" ]\";\n  }\n  destroy() {\n    this.onChange = NOOP;\n    this.data = null;\n  }\n};\n\n// src/math/mat4/Mat4Add.ts\nfunction Mat4Add(a, b, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = a.data;\n  const [b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33] = b.data;\n  return out.set(a00 + b00, a01 + b01, a02 + b02, a03 + b03, a10 + b10, a11 + b11, a12 + b12, a13 + b13, a20 + b20, a21 + b21, a22 + b22, a23 + b23, a30 + b30, a31 + b31, a32 + b32, a33 + b33);\n}\n\n// src/math/mat4/Mat4AddTranslationFromFloats.ts\nfunction Mat4AddTranslationFromFloats(matrix2, x, y, z) {\n  const data = matrix2.data;\n  data[12] += x;\n  data[13] += y;\n  data[14] += z;\n  matrix2.onChange(matrix2);\n  return matrix2;\n}\n\n// src/math/mat4/Mat4Adjoint.ts\nfunction Mat4Adjoint(matrix2, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix2.data;\n  const b00 = a00 * a11 - a01 * a10;\n  const b01 = a00 * a12 - a02 * a10;\n  const b02 = a00 * a13 - a03 * a10;\n  const b03 = a01 * a12 - a02 * a11;\n  const b04 = a01 * a13 - a03 * a11;\n  const b05 = a02 * a13 - a03 * a12;\n  const b06 = a20 * a31 - a21 * a30;\n  const b07 = a20 * a32 - a22 * a30;\n  const b08 = a20 * a33 - a23 * a30;\n  const b09 = a21 * a32 - a22 * a31;\n  const b10 = a21 * a33 - a23 * a31;\n  const b11 = a22 * a33 - a23 * a32;\n  return out.set(a11 * b11 - a12 * b10 + a13 * b09, a02 * b10 - a01 * b11 - a03 * b09, a31 * b05 - a32 * b04 + a33 * b03, a22 * b04 - a21 * b05 - a23 * b03, a12 * b08 - a10 * b11 - a13 * b07, a00 * b11 - a02 * b08 + a03 * b07, a32 * b02 - a30 * b05 - a33 * b01, a20 * b05 - a22 * b02 + a23 * b01, a10 * b10 - a11 * b08 + a13 * b06, a01 * b08 - a00 * b10 - a03 * b06, a30 * b04 - a31 * b02 + a33 * b00, a21 * b02 - a20 * b04 - a23 * b00, a11 * b07 - a10 * b09 - a12 * b06, a00 * b09 - a01 * b07 + a02 * b06, a31 * b01 - a30 * b03 - a32 * b00, a20 * b03 - a21 * b01 + a22 * b00);\n}\n\n// src/math/mat4/Mat4Clone.ts\nfunction Mat4Clone(src) {\n  return new Matrix4(src);\n}\n\n// src/math/mat4/Mat4CopyFrom.ts\nfunction Mat4CopyFrom(src, dest) {\n  return dest.fromArray(src.data);\n}\n\n// src/math/mat4/Mat4CopyPosition.ts\nfunction Mat4CopyPosition(src, dest) {\n  const srcData = src.data;\n  const destData = dest.data;\n  destData[12] = srcData[12];\n  destData[13] = srcData[13];\n  destData[14] = srcData[14];\n  dest.onChange(dest);\n  return dest;\n}\n\n// src/math/mat4/Mat4Equals.ts\nfunction Mat4Equals(a, b) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = a.data;\n  const [b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33] = b.data;\n  return a00 === b00 && a01 === b01 && a02 === b02 && a03 === b03 && a10 === b10 && a11 === b11 && a12 === b12 && a13 === b13 && a20 === b20 && a21 === b21 && a22 === b22 && a23 === b23 && a30 === b30 && a31 === b31 && a32 === b32 && a33 === b33;\n}\n\n// src/math/mat4/Mat4FromQuat.ts\nfunction Mat4FromQuat(q, out = new Matrix4()) {\n  const {x, y, z, w} = q;\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n  const xx = x * x2;\n  const yx = y * x2;\n  const yy = y * y2;\n  const zx = z * x2;\n  const zy = z * y2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n  return out.set(1 - yy - zz, yx + wz, zx - wy, 0, yx - wz, 1 - xx - zz, zy + wx, 0, zx + wy, zy - wx, 1 - xx - yy, 0, 0, 0, 0, 1);\n}\n\n// src/math/mat4/Mat4FromRotation.ts\nfunction Mat4FromRotation(angle, axis, out = new Matrix4()) {\n  let {x, y, z} = axis;\n  let len = Math.hypot(x, y, z);\n  if (len < 1e-5) {\n    return null;\n  }\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const t = 1 - c;\n  return out.set(x * x * t + c, y * x * t + z * s, z * x * t - y * s, 0, x * y * t - z * s, y * y * t + c, z * y * t + x * s, 0, x * z * t + y * s, y * z * t - x * s, z * z * t + c, 0, 0, 0, 0, 1);\n}\n\n// src/math/mat4/Mat4FromRotationTranslation.ts\nfunction Mat4FromRotationTranslation(q, v, out = new Matrix4()) {\n  const {x, y, z, w} = q;\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n  const xx = x * x2;\n  const xy = x * y2;\n  const xz = x * z2;\n  const yy = y * y2;\n  const yz = y * z2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n  const {x: vx, y: vy, z: vz} = v;\n  return out.set(1 - (yy + zz), xy + wz, xz - wy, 0, xy - wz, 1 - (xx + zz), yz + wx, 0, xz + wy, yz - wx, 1 - (xx + yy), 0, vx, vy, vz, 1);\n}\n\n// src/math/mat4/Mat4FromRotationTranslationScale.ts\nfunction Mat4FromRotationTranslationScale(q, v, s, out = new Matrix4()) {\n  const {x, y, z, w} = q;\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n  const xx = x * x2;\n  const xy = x * y2;\n  const xz = x * z2;\n  const yy = y * y2;\n  const yz = y * z2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n  const {x: sx, y: sy, z: sz} = s;\n  const {x: vx, y: vy, z: vz} = v;\n  return out.set((1 - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0, (xy - wz) * sy, (1 - (xx + zz)) * sy, (yz + wx) * sy, 0, (xz + wy) * sz, (yz - wx) * sz, (1 - (xx + yy)) * sz, 0, vx, vy, vz, 1);\n}\n\n// src/math/mat4/Mat4FromRotationTranslationScaleOrigin.ts\nfunction Mat4FromRotationTranslationScaleOrigin(q, v, s, o, out = new Matrix4()) {\n  const {x, y, z, w} = q;\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n  const xx = x * x2;\n  const xy = x * y2;\n  const xz = x * z2;\n  const yy = y * y2;\n  const yz = y * z2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n  const {x: sx, y: sy, z: sz} = s;\n  const {x: ox, y: oy, z: oz} = o;\n  const {x: vx, y: vy, z: vz} = v;\n  const out0 = (1 - (yy + zz)) * sx;\n  const out1 = (xy + wz) * sx;\n  const out2 = (xz - wy) * sx;\n  const out4 = (xy - wz) * sy;\n  const out5 = (1 - (xx + zz)) * sy;\n  const out6 = (yz + wx) * sy;\n  const out8 = (xz + wy) * sz;\n  const out9 = (yz - wx) * sz;\n  const out10 = (1 - (xx + yy)) * sz;\n  return out.set(out0, out1, out2, 0, out4, out5, out6, 0, out8, out9, out10, 0, vx + ox - (out0 * ox + out4 * oy + out8 * oz), vy + oy - (out1 * ox + out5 * oy + out9 * oz), vz + oz - (out2 * ox + out6 * oy + out10 * oz), 1);\n}\n\n// src/math/mat4/Mat4FromRotationXYTranslation.ts\nfunction Mat4FromRotationXYTranslation(rotation, position, translateFirst = true, out = new Matrix4()) {\n  const {x, y, z} = position;\n  const sx = Math.sin(rotation.x);\n  const cx = Math.cos(rotation.x);\n  const sy = Math.sin(rotation.y);\n  const cy = Math.cos(rotation.y);\n  let a30 = x;\n  let a31 = y;\n  let a32 = z;\n  const b21 = -sx;\n  const c01 = 0 - b21 * sy;\n  const c02 = 0 - cx * sy;\n  const c21 = b21 * cy;\n  const c22 = cx * cy;\n  if (!translateFirst) {\n    a30 = cy * x + sy * z;\n    a31 = c01 * x + cx * y + c21 * z;\n    a32 = c02 * x + sx * y + c22 * z;\n  }\n  return out.set(cy, c01, c02, 0, 0, cx, sx, 0, sy, c21, c22, 0, a30, a31, a32, 1);\n}\n\n// src/math/mat4/Mat4FromScaling.ts\nfunction Mat4FromScaling(vec3, out = new Matrix4()) {\n  const {x, y, z} = vec3;\n  return out.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n}\n\n// src/math/mat4/Mat4FromTranslation.ts\nfunction Mat4FromTranslation(vec3, out = new Matrix4()) {\n  const {x, y, z} = vec3;\n  return out.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x, y, z, 1);\n}\n\n// src/math/mat4/Mat4FromXRotation.ts\nfunction Mat4FromXRotation(angle, out = new Matrix4()) {\n  const c = Math.cos(angle);\n  const s = Math.sin(angle);\n  return out.set(1, 0, 0, 0, 0, c, s, 0, 0, -s, c, 0, 0, 0, 0, 1);\n}\n\n// src/math/mat4/Mat4FromYRotation.ts\nfunction Mat4FromYRotation(angle, out = new Matrix4()) {\n  const c = Math.cos(angle);\n  const s = Math.sin(angle);\n  return out.set(c, 0, -s, 0, 0, 1, 0, 0, s, 0, c, 0, 0, 0, 0, 1);\n}\n\n// src/math/mat4/Mat4FromZRotation.ts\nfunction Mat4FromZRotation(angle, out = new Matrix4()) {\n  const c = Math.cos(angle);\n  const s = Math.sin(angle);\n  return out.set(c, s, 0, 0, -s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n}\n\n// src/math/mat4/Mat4Frustum.ts\nfunction Mat4Frustum(left, right, bottom, top, near, far, out = new Matrix4()) {\n  const rl = 1 / (right - left);\n  const tb = 1 / (top - bottom);\n  const nf = 1 / (near - far);\n  return out.set(near * 2 * rl, 0, 0, 0, 0, near * 2 * tb, 0, 0, (right + left) * rl, (top + bottom) * tb, (far + near) * nf, -1, 0, 0, far * near * 2 * nf, 0);\n}\n\n// src/math/vec3/Vec3.ts\nvar Vec3 = class {\n  constructor(x = 0, y = 0, z = 0) {\n    this.set(x, y, z);\n  }\n  set(x = 0, y = 0, z = 0) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y, z} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    dst[index + 2] = z;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1], src[index + 2]);\n  }\n  toString() {\n    const {x, y, z} = this;\n    return `{ x=${x}, y=${y}, z=${z} }`;\n  }\n};\n\n// src/math/mat4/Mat4GetScaling.ts\nfunction Mat4GetScaling(matrix2, out = new Vec3()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22] = matrix2.data;\n  return out.set(Math.hypot(m00, m01, m02), Math.hypot(m10, m11, m12), Math.hypot(m20, m21, m22));\n}\n\n// src/math/quaternion/Quaternion.ts\nvar Quaternion = class {\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChange = NOOP;\n  }\n  set(x = 0, y = 0, z = 0, w = 1) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChange(this);\n    return this;\n  }\n  set x(value) {\n    const prev = this._x;\n    this._x = value;\n    if (value !== prev) {\n      this.onChange(this);\n    }\n  }\n  get x() {\n    return this._x;\n  }\n  set y(value) {\n    const prev = this._y;\n    this._y = value;\n    if (value !== prev) {\n      this.onChange(this);\n    }\n  }\n  get y() {\n    return this._y;\n  }\n  set z(value) {\n    const prev = this._z;\n    this._z = value;\n    if (value !== prev) {\n      this.onChange(this);\n    }\n  }\n  get z() {\n    return this._z;\n  }\n  set w(value) {\n    const prev = this._w;\n    this._w = value;\n    if (value !== prev) {\n      this.onChange(this);\n    }\n  }\n  get w() {\n    return this._w;\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y, z, w} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    dst[index + 2] = z;\n    dst[index + 3] = w;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1], src[index + 2], src[index + 3]);\n  }\n  destroy() {\n    this.onChange = NOOP;\n  }\n  toString() {\n    const {x, y, z, w} = this;\n    return `{ x=${x}, y=${y}, z=${z}, w=${w} }`;\n  }\n};\n\n// src/math/mat4/Mat4GetRotation.ts\nfunction Mat4GetRotation(matrix2, out = new Quaternion()) {\n  const scaling = Mat4GetScaling(matrix2);\n  const is1 = 1 / scaling.x;\n  const is2 = 1 / scaling.y;\n  const is3 = 1 / scaling.z;\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22] = matrix2.data;\n  const sm11 = m00 * is1;\n  const sm12 = m01 * is2;\n  const sm13 = m02 * is3;\n  const sm21 = m10 * is1;\n  const sm22 = m11 * is2;\n  const sm23 = m12 * is3;\n  const sm31 = m20 * is1;\n  const sm32 = m21 * is2;\n  const sm33 = m22 * is3;\n  const trace = sm11 + sm22 + sm33;\n  let S = 0;\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1) * 2;\n    return out.set((sm23 - sm32) / S, (sm31 - sm13) / S, (sm12 - sm21) / S, 0.25 * S);\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1 + sm11 - sm22 - sm33) * 2;\n    return out.set(0.25 * S, (sm12 + sm21) / S, (sm31 + sm13) / S, (sm23 - sm32) / S);\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1 + sm22 - sm11 - sm33) * 2;\n    return out.set((sm12 + sm21) / S, 0.25 * S, (sm23 + sm32) / S, (sm31 - sm13) / S);\n  } else {\n    S = Math.sqrt(1 + sm33 - sm11 - sm22) * 2;\n    return out.set((sm31 + sm13) / S, (sm23 + sm32) / S, 0.25 * S, (sm12 - sm21) / S);\n  }\n}\n\n// src/math/mat4/Mat4GetTranslation.ts\nfunction Mat4GetTranslation(matrix2, out = new Vec3()) {\n  const data = matrix2.data;\n  return out.set(data[12], data[13], data[14]);\n}\n\n// src/math/mat4/Mat4Identity.ts\nfunction Mat4Identity(matrix2 = new Matrix4()) {\n  return matrix2.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n}\n\n// src/math/mat4/Mat4Invert.ts\nfunction Mat4Invert(matrix2, out = new Matrix4()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = matrix2.data;\n  const det22x33 = m22 * m33 - m32 * m23;\n  const det21x33 = m21 * m33 - m31 * m23;\n  const det21x32 = m21 * m32 - m31 * m22;\n  const det20x33 = m20 * m33 - m30 * m23;\n  const det20x32 = m20 * m32 - m22 * m30;\n  const det20x31 = m20 * m31 - m30 * m21;\n  const cofact00 = +(m11 * det22x33 - m12 * det21x33 + m13 * det21x32);\n  const cofact01 = -(m10 * det22x33 - m12 * det20x33 + m13 * det20x32);\n  const cofact02 = +(m10 * det21x33 - m11 * det20x33 + m13 * det20x31);\n  const cofact03 = -(m10 * det21x32 - m11 * det20x32 + m12 * det20x31);\n  const det = m00 * cofact00 + m01 * cofact01 + m02 * cofact02 + m03 * cofact03;\n  if (det === 0) {\n    return out;\n  }\n  const detInv = 1 / det;\n  const det12x33 = m12 * m33 - m32 * m13;\n  const det11x33 = m11 * m33 - m31 * m13;\n  const det11x32 = m11 * m32 - m31 * m12;\n  const det10x33 = m10 * m33 - m30 * m13;\n  const det10x32 = m10 * m32 - m30 * m12;\n  const det10x31 = m10 * m31 - m30 * m11;\n  const det12x23 = m12 * m23 - m22 * m13;\n  const det11x23 = m11 * m23 - m21 * m13;\n  const det11x22 = m11 * m22 - m21 * m12;\n  const det10x23 = m10 * m23 - m20 * m13;\n  const det10x22 = m10 * m22 - m20 * m12;\n  const det10x21 = m10 * m21 - m20 * m11;\n  const cofact10 = -(m01 * det22x33 - m02 * det21x33 + m03 * det21x32);\n  const cofact11 = +(m00 * det22x33 - m02 * det20x33 + m03 * det20x32);\n  const cofact12 = -(m00 * det21x33 - m01 * det20x33 + m03 * det20x31);\n  const cofact13 = +(m00 * det21x32 - m01 * det20x32 + m02 * det20x31);\n  const cofact20 = +(m01 * det12x33 - m02 * det11x33 + m03 * det11x32);\n  const cofact21 = -(m00 * det12x33 - m02 * det10x33 + m03 * det10x32);\n  const cofact22 = +(m00 * det11x33 - m01 * det10x33 + m03 * det10x31);\n  const cofact23 = -(m00 * det11x32 - m01 * det10x32 + m02 * det10x31);\n  const cofact30 = -(m01 * det12x23 - m02 * det11x23 + m03 * det11x22);\n  const cofact31 = +(m00 * det12x23 - m02 * det10x23 + m03 * det10x22);\n  const cofact32 = -(m00 * det11x23 - m01 * det10x23 + m03 * det10x21);\n  const cofact33 = +(m00 * det11x22 - m01 * det10x22 + m02 * det10x21);\n  return out.set(cofact00 * detInv, cofact10 * detInv, cofact20 * detInv, cofact30 * detInv, cofact01 * detInv, cofact11 * detInv, cofact21 * detInv, cofact31 * detInv, cofact02 * detInv, cofact12 * detInv, cofact22 * detInv, cofact32 * detInv, cofact03 * detInv, cofact13 * detInv, cofact23 * detInv, cofact33 * detInv);\n}\n\n// src/math/mat4/Mat4LookAt.ts\nfunction Mat4LookAt(eye, center, up, out = new Matrix4()) {\n  const {x: eyex, y: eyey, z: eyez} = eye;\n  const {x: upx, y: upy, z: upz} = up;\n  const {x: centerx, y: centery, z: centerz} = center;\n  if (Math.abs(eyex - centerx) < 1e-5 && Math.abs(eyey - centery) < 1e-5 && Math.abs(eyez - centerz) < 1e-5) {\n    return Mat4Identity(out);\n  }\n  let z0 = eyex - centerx;\n  let z1 = eyey - centery;\n  let z2 = eyez - centerz;\n  let len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  let x0 = upy * z2 - upz * z1;\n  let x1 = upz * z0 - upx * z2;\n  let x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n  let y0 = z1 * x2 - z2 * x1;\n  let y1 = z2 * x0 - z0 * x2;\n  let y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n  return out.set(x0, y0, z0, 0, x1, y1, z1, 0, x2, y2, z2, 0, -(x0 * eyex + x1 * eyey + x2 * eyez), -(y0 * eyex + y1 * eyey + y2 * eyez), -(z0 * eyex + z1 * eyey + z2 * eyez), 1);\n}\n\n// src/math/mat4/Mat4Multiply.ts\nfunction Mat4Multiply(a, b, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = a.data;\n  const [b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33] = b.data;\n  return out.set(b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30, b01 * a01 + b01 * a11 + b02 * a21 + b03 * a31, b02 * a02 + b01 * a12 + b02 * a22 + b03 * a32, b03 * a03 + b01 * a13 + b02 * a23 + b03 * a33, b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30, b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31, b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32, b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33, b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30, b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31, b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32, b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33, b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30, b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31, b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32, b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33);\n}\n\n// src/math/mat4/Mat4MultiplyScalar.ts\nfunction Mat4MultiplyScalar(matrix2, scalar, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix2.data;\n  return out.set(a00 * scalar, a01 * scalar, a02 * scalar, a03 * scalar, a10 * scalar, a11 * scalar, a12 * scalar, a13 * scalar, a20 * scalar, a21 * scalar, a22 * scalar, a23 * scalar, a30 * scalar, a31 * scalar, a32 * scalar, a33 * scalar);\n}\n\n// src/math/mat4/Mat4MultiplyScalarAndAdd.ts\nfunction Mat4MultiplyScalarAndAdd(a, b, scalar, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = a.data;\n  const [b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33] = b.data;\n  return out.set(a00 + b00 * scalar, a01 + b01 * scalar, a02 + b02 * scalar, a03 + b03 * scalar, a10 + b10 * scalar, a11 + b11 * scalar, a12 + b12 * scalar, a13 + b13 * scalar, a20 + b20 * scalar, a21 + b21 * scalar, a22 + b22 * scalar, a23 + b23 * scalar, a30 + b30 * scalar, a31 + b31 * scalar, a32 + b32 * scalar, a33 + b33 * scalar);\n}\n\n// src/math/mat4/Mat4Ortho.ts\nfunction Mat4Ortho(left, right, bottom, top, near, far, out = new Matrix4()) {\n  const lr = 1 / (left - right);\n  const bt = 1 / (bottom - top);\n  const nf = 1 / (near - far);\n  return out.set(-2 * lr, 0, 0, 0, 0, -2 * bt, 0, 0, 0, 0, 2 * nf, 0, (left + right) * lr, (top + bottom) * bt, (far + near) * nf, 1);\n}\n\n// src/math/mat4/Mat4Perspective.ts\nfunction Mat4Perspective(fovY, aspect, near, far, out = new Matrix4()) {\n  const f = 1 / Math.tan(fovY / 2);\n  let m22 = -1;\n  let m32 = -2 * near;\n  if (far !== null && far !== Infinity) {\n    const nf = 1 / (near - far);\n    m22 = (far + near) * nf;\n    m32 = 2 * far * near * nf;\n  }\n  return out.set(f / aspect, 0, 0, 0, 0, f, 0, 0, 0, 0, m22, -1, 0, 0, m32, 0);\n}\n\n// src/math/mat4/Mat4PerspectiveFromFieldOfView.ts\nfunction Mat4PerspectiveFromFieldOfView(fov, near, far, out = new Matrix4()) {\n  const upTan = Math.tan(fov.upDegrees * Math.PI / 180);\n  const downTan = Math.tan(fov.downDegrees * Math.PI / 180);\n  const leftTan = Math.tan(fov.leftDegrees * Math.PI / 180);\n  const rightTan = Math.tan(fov.rightDegrees * Math.PI / 180);\n  const xScale = 2 / (leftTan + rightTan);\n  const yScale = 2 / (upTan + downTan);\n  return out.set(xScale, 0, 0, 0, 0, yScale, 0, 0, -((leftTan - rightTan) * xScale * 0.5), (upTan - downTan) * yScale * 0.5, far / (near - far), -1, 0, 0, far * near / (near - far), 0);\n}\n\n// src/math/mat4/Mat4Rotate.ts\nfunction Mat4Rotate(matrix2, angle, axis, out = new Matrix4()) {\n  let {x, y, z} = axis;\n  let len = Math.hypot(x, y, z);\n  if (len < 1e-5) {\n    return null;\n  }\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const t = 1 - c;\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix2.data;\n  const b00 = x * x * t + c;\n  const b01 = y * x * t + z * s;\n  const b02 = z * x * t - y * s;\n  const b10 = x * y * t - z * s;\n  const b11 = y * y * t + c;\n  const b12 = z * y * t + x * s;\n  const b20 = x * z * t + y * s;\n  const b21 = y * z * t - x * s;\n  const b22 = z * z * t + c;\n  return out.set(a00 * b00 + a10 * b01 + a20 * b02, a01 * b00 + a11 * b01 + a21 * b02, a02 * b00 + a12 * b01 + a22 * b02, a03 * b00 + a13 * b01 + a23 * b02, a00 * b10 + a10 * b11 + a20 * b12, a01 * b10 + a11 * b11 + a21 * b12, a02 * b10 + a12 * b11 + a22 * b12, a03 * b10 + a13 * b11 + a23 * b12, a00 * b20 + a10 * b21 + a20 * b22, a01 * b20 + a11 * b21 + a21 * b22, a02 * b20 + a12 * b21 + a22 * b22, a03 * b20 + a13 * b21 + a23 * b22, a30, a31, a32, a33);\n}\n\n// src/math/mat4/Mat4RotateX.ts\nfunction Mat4RotateX(matrix2, angle, out = new Matrix4()) {\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix2.data;\n  return out.set(a00, a01, a02, a03, a10 * c + a20 * s, a11 * c + a21 * s, a12 * c + a22 * s, a13 * c + a23 * s, a20 * c - a10 * s, a21 * c - a11 * s, a22 * c - a12 * s, a23 * c - a13 * s, a30, a31, a32, a33);\n}\n\n// src/math/mat4/Mat4RotateY.ts\nfunction Mat4RotateY(matrix2, angle, out = new Matrix4()) {\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix2.data;\n  return out.set(a00 * c - a20 * s, a01 * c - a21 * s, a02 * c - a22 * s, a03 * c - a23 * s, a10, a11, a12, a13, a00 * s + a20 * c, a01 * s + a21 * c, a02 * s + a22 * c, a03 * s + a23 * c, a30, a31, a32, a33);\n}\n\n// src/math/mat4/Mat4RotateZ.ts\nfunction Mat4RotateZ(matrix2, angle, out = new Matrix4()) {\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = matrix2.data;\n  return out.set(a00 * c + a10 * s, a01 * c + a11 * s, a02 * c + a12 * s, a03 * c + a13 * s, a10 * c - a00 * s, a11 * c - a01 * s, a12 * c - a02 * s, a13 * c - a03 * s, a20, a21, a22, a23, a30, a31, a32, a33);\n}\n\n// src/math/mat4/Mat4Scale.ts\nfunction Mat4Scale(matrix2, v, out = new Matrix4()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = matrix2.data;\n  const {x, y, z} = v;\n  return out.set(m00 * x, m01 * x, m02 * x, m03 * x, m10 * y, m11 * y, m12 * y, m13 * y, m20 * z, m21 * z, m22 * z, m23 * z, m30, m31, m32, m33);\n}\n\n// src/math/mat4/Mat4SetTranslation.ts\nfunction Mat4SetTranslation(matrix2, vec3) {\n  const data = matrix2.data;\n  const {x, y, z} = vec3;\n  data[12] = x;\n  data[13] = y;\n  data[14] = z;\n  matrix2.onChange(matrix2);\n  return matrix2;\n}\n\n// src/math/mat4/Mat4SetTranslationFromFloats.ts\nfunction Mat4SetTranslationFromFloats(matrix2, x, y, z) {\n  const data = matrix2.data;\n  data[12] = x;\n  data[13] = y;\n  data[14] = z;\n  matrix2.onChange(matrix2);\n  return matrix2;\n}\n\n// src/math/mat4/Mat4Subtract.ts\nfunction Mat4Subtract(a, b, out = new Matrix4()) {\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = a.data;\n  const [b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33] = b.data;\n  return out.set(a00 - b00, a01 - b01, a02 - b02, a03 - b03, a10 - b10, a11 - b11, a12 - b12, a13 - b13, a20 - b20, a21 - b21, a22 - b22, a23 - b23, a30 - b30, a31 - b31, a32 - b32, a33 - b33);\n}\n\n// src/math/mat4/Mat4TargetTo.ts\nfunction Mat4TargetTo(eye, target, up, out = new Matrix4()) {\n  const {x: eyex, y: eyey, z: eyez} = eye;\n  const {x: upx, y: upy, z: upz} = up;\n  const {x: targetx, y: targety, z: targetz} = target;\n  let z0 = eyex - targetx;\n  let z1 = eyey - targety;\n  let z2 = eyez - targetz;\n  let len = z0 * z0 + z1 * z1 + z2 * z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n  let x0 = upy * z2 - upz * z1;\n  let x1 = upz * z0 - upx * z2;\n  let x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n  return out.set(x0, x1, x2, 0, z1 * x2 - z2 * x1, z2 * x0 - z0 * x2, z0 * x1 - z1 * x0, 0, z0, z1, z2, 0, eyex, eyey, eyez, 1);\n}\n\n// src/math/mat4/Mat4Translate.ts\nfunction Mat4Translate(matrix2, vec3, out = new Matrix4()) {\n  const {x, y, z} = vec3;\n  const data = matrix2.data;\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = data;\n  if (matrix2 === out) {\n    data[12] = a00 * x + a10 * y + a20 * z + a30;\n    data[13] = a01 * x + a11 * y + a21 * z + a31;\n    data[14] = a02 * x + a12 * y + a22 * z + a32;\n    data[15] = a03 * x + a13 * y + a23 * z + a33;\n  } else {\n    out.set(a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a00 * x + a10 * y + a20 * z + a30, a01 * x + a11 * y + a21 * z + a31, a02 * x + a12 * y + a22 * z + a32, a03 * x + a13 * y + a23 * z + a33);\n  }\n  return out;\n}\n\n// src/math/mat4/Mat4TranslateFromFloats.ts\nfunction Mat4TranslateFromFloats(matrix2, x, y, z, out = new Matrix4()) {\n  const data = matrix2.data;\n  const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = data;\n  if (matrix2 === out) {\n    data[12] = a00 * x + a10 * y + a20 * z + a30;\n    data[13] = a01 * x + a11 * y + a21 * z + a31;\n    data[14] = a02 * x + a12 * y + a22 * z + a32;\n    data[15] = a03 * x + a13 * y + a23 * z + a33;\n  } else {\n    out.set(a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a00 * x + a10 * y + a20 * z + a30, a01 * x + a11 * y + a21 * z + a31, a02 * x + a12 * y + a22 * z + a32, a03 * x + a13 * y + a23 * z + a33);\n  }\n  return out;\n}\n\n// src/math/mat4/Mat4Transpose.ts\nfunction Mat4Transpose(matrix2, out = new Matrix4()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = matrix2.data;\n  return out.set(m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33);\n}\n\n// src/math/mat4/Mat4Zero.ts\nfunction Mat4Zero(matrix2) {\n  return matrix2.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n}\n\n// src/math/mat2d/Matrix2D.ts\nvar Matrix2D = class {\n  constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    this.set(a, b, c, d, tx, ty);\n  }\n  set(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    this.tx = tx;\n    this.ty = ty;\n    return this;\n  }\n  identity() {\n    return this.set();\n  }\n  toArray() {\n    const {a, b, c, d, tx, ty} = this;\n    return [a, b, c, d, tx, ty];\n  }\n  fromArray(src) {\n    return this.set(src[0], src[1], src[2], src[3], src[4], src[5]);\n  }\n};\n\n// src/geom/rectangle/RectangleContains.ts\nfunction RectangleContains(rect, x, y) {\n  if (rect.width <= 0 || rect.height <= 0) {\n    return false;\n  }\n  return rect.x <= x && rect.x + rect.width >= x && rect.y <= y && rect.y + rect.height >= y;\n}\n\n// src/geom/rectangle/Rectangle.ts\nvar Rectangle = class {\n  constructor(x = 0, y = 0, width = 0, height = 0) {\n    this.set(x, y, width, height);\n  }\n  set(x = 0, y = 0, width = 0, height = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    return this;\n  }\n  contains(x, y) {\n    return RectangleContains(this, x, y);\n  }\n  set right(value) {\n    if (value <= this.x) {\n      this.width = 0;\n    } else {\n      this.width = value - this.x;\n    }\n  }\n  get right() {\n    return this.x + this.width;\n  }\n  set bottom(value) {\n    if (value <= this.y) {\n      this.height = 0;\n    } else {\n      this.height = value - this.y;\n    }\n  }\n  get bottom() {\n    return this.y + this.height;\n  }\n};\n\n// src/math/vec2/Vec2Callback.ts\nvar Vec2Callback = class {\n  constructor(onChange, x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n    this.onChange = onChange;\n  }\n  destroy() {\n    this.onChange = NOOP;\n  }\n  set(x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n    if (this.onChange) {\n      this.onChange(this);\n    }\n    return this;\n  }\n  get x() {\n    return this._x;\n  }\n  set x(value) {\n    const prev = this._x;\n    this._x = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get y() {\n    return this._y;\n  }\n  set y(value) {\n    const prev = this._y;\n    this._y = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1]);\n  }\n  toString() {\n    const {x, y} = this;\n    return `{ x=${x}, y=${y} }`;\n  }\n};\n\n// src/math/angle/index.ts\nvar angle_exports = {};\n__export(angle_exports, {\n  AngleBetween: () => AngleBetween,\n  AngleBetweenY: () => AngleBetweenY,\n  CounterClockwise: () => CounterClockwise,\n  NormalizeAngle: () => NormalizeAngle,\n  ReverseAngle: () => ReverseAngle,\n  RotateAngleTo: () => RotateAngleTo,\n  ShortestAngleBetween: () => ShortestAngleBetween,\n  WrapAngle: () => WrapAngle,\n  WrapAngleDegrees: () => WrapAngleDegrees\n});\n\n// src/math/angle/AngleBetween.ts\nfunction AngleBetween(x1, y1, x2, y2) {\n  return Math.atan2(y2 - y1, x2 - x1);\n}\n\n// src/math/angle/AngleBetweenY.ts\nfunction AngleBetweenY(x1, y1, x2, y2) {\n  return Math.atan2(x2 - x1, y2 - y1);\n}\n\n// src/math/const.ts\nvar MATH_CONST = {\n  PI2: Math.PI * 2,\n  HALF_PI: Math.PI * 0.5,\n  EPSILON: 1e-6,\n  DEG_TO_RAD: Math.PI / 180,\n  RAD_TO_DEG: 180 / Math.PI,\n  MIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER || -9007199254740991,\n  MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991\n};\n\n// src/math/angle/CounterClockwise.ts\nfunction CounterClockwise(angle) {\n  if (angle > Math.PI) {\n    angle -= MATH_CONST.PI2;\n  }\n  return Math.abs(((angle + MATH_CONST.HALF_PI) % MATH_CONST.PI2 - MATH_CONST.PI2) % MATH_CONST.PI2);\n}\n\n// src/math/angle/NormalizeAngle.ts\nfunction NormalizeAngle(angle) {\n  angle = angle % MATH_CONST.PI2;\n  if (angle >= 0) {\n    return angle;\n  } else {\n    return angle + MATH_CONST.PI2;\n  }\n}\n\n// src/math/angle/ReverseAngle.ts\nfunction ReverseAngle(angle) {\n  return NormalizeAngle(angle + Math.PI);\n}\n\n// src/math/angle/RotateAngleTo.ts\nfunction RotateAngleTo(currentAngle, targetAngle, lerp = 0.05) {\n  if (currentAngle === targetAngle) {\n    return currentAngle;\n  }\n  if (Math.abs(targetAngle - currentAngle) <= lerp || Math.abs(targetAngle - currentAngle) >= MATH_CONST.PI2 - lerp) {\n    currentAngle = targetAngle;\n  } else {\n    if (Math.abs(targetAngle - currentAngle) > Math.PI) {\n      if (targetAngle < currentAngle) {\n        targetAngle += MATH_CONST.PI2;\n      } else {\n        targetAngle -= MATH_CONST.PI2;\n      }\n    }\n    if (targetAngle > currentAngle) {\n      currentAngle += lerp;\n    } else if (targetAngle < currentAngle) {\n      currentAngle -= lerp;\n    }\n  }\n  return currentAngle;\n}\n\n// src/math/angle/ShortestAngleBetween.ts\nfunction ShortestAngleBetween(angle1, angle2) {\n  const difference = angle2 - angle1;\n  if (difference === 0) {\n    return 0;\n  }\n  const times = Math.floor((difference - -180) / 360);\n  return difference - times * 360;\n}\n\n// src/math/Wrap.ts\nfunction Wrap(value, min, max) {\n  const range = max - min;\n  return min + ((value - min) % range + range) % range;\n}\n\n// src/math/angle/WrapAngle.ts\nfunction WrapAngle(angle) {\n  return Wrap(angle, -Math.PI, Math.PI);\n}\n\n// src/math/angle/WrapAngleDegrees.ts\nfunction WrapAngleDegrees(angle) {\n  return Wrap(angle, -180, 180);\n}\n\n// src/camera/Camera.ts\nvar Camera = class {\n  constructor() {\n    this._rotation = 0;\n    this.type = \"Camera\";\n    this.dirtyRender = true;\n    const game = GameInstance.get();\n    this.renderer = game.renderer;\n    this.matrix = Mat4Identity();\n    this.bounds = new Rectangle();\n    this.worldTransform = new Matrix2D();\n    this.position = new Vec2Callback(() => this.updateTransform(), 0, 0);\n    this.scale = new Vec2Callback(() => this.updateTransform(), 1, 1);\n    this.origin = new Vec2Callback(() => this.updateTransform(), 0.5, 0.5);\n    this.reset();\n  }\n  updateTransform() {\n    const matrix2 = this.matrix.data;\n    const px = this.position.x;\n    const py = this.position.y;\n    const sx = this.scale.x;\n    const sy = this.scale.y;\n    const ox = -px + this.width * this.origin.x;\n    const oy = -py + this.height * this.origin.y;\n    const z = Math.sin(this.rotation);\n    const w = Math.cos(this.rotation);\n    const z2 = z + z;\n    const zz = z * z2;\n    const wz = w * z2;\n    const out0 = (1 - zz) * sx;\n    const out1 = wz * sx;\n    const out4 = -wz * sy;\n    const out5 = (1 - zz) * sy;\n    matrix2[0] = out0;\n    matrix2[1] = out1;\n    matrix2[4] = out4;\n    matrix2[5] = out5;\n    matrix2[12] = px + ox - (out0 * ox + out4 * oy);\n    matrix2[13] = py + oy - (out1 * ox + out5 * oy);\n    this.worldTransform.set(w * sx, z * sx, -z * sy, w * sy, -px, -py);\n    const bw = this.width * (1 / sx);\n    const bh = this.height * (1 / sy);\n    this.bounds.set(ox - bw / 2, oy - bh / 2, bw, bh);\n    this.dirtyRender = true;\n  }\n  reset() {\n    const width = this.renderer.width;\n    const height = this.renderer.height;\n    this.width = width;\n    this.height = height;\n    this.bounds.set(0, 0, width, height);\n  }\n  set rotation(value) {\n    if (value !== this._rotation) {\n      this._rotation = WrapAngle(value);\n      this.updateTransform();\n    }\n  }\n  get rotation() {\n    return this._rotation;\n  }\n  destroy() {\n    this.position.destroy();\n    this.scale.destroy();\n    this.origin.destroy();\n    this.world = null;\n    this.worldTransform = null;\n    this.renderer = null;\n    this.matrix = null;\n    this.bounds = null;\n  }\n};\n\n// src/camera/StaticCamera.ts\nvar StaticCamera = class {\n  constructor() {\n    this.type = \"StaticCamera\";\n    this.dirtyRender = true;\n    const game = GameInstance.get();\n    this.renderer = game.renderer;\n    this.matrix = Mat4Identity();\n    this.bounds = new Rectangle();\n    this.worldTransform = new Matrix2D();\n    this.reset();\n  }\n  reset() {\n    const renderer = this.renderer;\n    if (renderer) {\n      const width = renderer.width;\n      const height = renderer.height;\n      this.width = width;\n      this.height = height;\n    }\n    this.bounds.set(0, 0, this.width, this.height);\n  }\n  destroy() {\n    this.world = null;\n    this.worldTransform = null;\n    this.renderer = null;\n    this.matrix = null;\n    this.bounds = null;\n  }\n};\n\n// src/camera3d/index.ts\nvar camera3d_exports = {};\n__export(camera3d_exports, {\n  Camera3D: () => Camera3D\n});\n\n// src/math/quaternion/index.ts\nvar quaternion_exports = {};\n__export(quaternion_exports, {\n  GetQuatAngle: () => GetQuatAngle,\n  GetQuatAngleTo: () => GetQuatAngleTo,\n  GetQuatAreClose: () => GetQuatAreClose,\n  GetQuatAxisAngle: () => GetQuatAxisAngle,\n  GetQuatLength: () => GetQuatLength,\n  GetQuatLengthSquared: () => GetQuatLengthSquared,\n  QuatAdd: () => QuatAdd,\n  QuatAddScalar: () => QuatAddScalar,\n  QuatClone: () => QuatClone,\n  QuatConjugate: () => QuatConjugate,\n  QuatCopyFrom: () => QuatCopyFrom,\n  QuatDot: () => QuatDot,\n  QuatEquals: () => QuatEquals,\n  QuatFromEulerAngles: () => QuatFromEulerAngles,\n  QuatFromEulerVector: () => QuatFromEulerVector,\n  QuatFromRotationAxis: () => QuatFromRotationAxis,\n  QuatFromRotationMatrix: () => QuatFromRotationMatrix,\n  QuatFuzzyEquals: () => QuatFuzzyEquals,\n  QuatHermite: () => QuatHermite,\n  QuatInvert: () => QuatInvert,\n  QuatMultiply: () => QuatMultiply,\n  QuatMultiplyByFloats: () => QuatMultiplyByFloats,\n  QuatNormalize: () => QuatNormalize,\n  QuatRotateTowards: () => QuatRotateTowards,\n  QuatRotateX: () => QuatRotateX,\n  QuatRotateY: () => QuatRotateY,\n  QuatRotateZ: () => QuatRotateZ,\n  QuatRotationAlphaBetaGamma: () => QuatRotationAlphaBetaGamma,\n  QuatRotationYawPitchRoll: () => QuatRotationYawPitchRoll,\n  QuatScale: () => QuatScale,\n  QuatScaleAndAdd: () => QuatScaleAndAdd,\n  QuatSetAxisAngle: () => QuatSetAxisAngle,\n  QuatSetFromUnitVectors: () => QuatSetFromUnitVectors,\n  QuatSlerp: () => QuatSlerp,\n  QuatSubtract: () => QuatSubtract,\n  QuatSubtractScalar: () => QuatSubtractScalar,\n  QuatToEulerAngles: () => QuatToEulerAngles,\n  QuatZero: () => QuatZero,\n  Quaternion: () => Quaternion\n});\n\n// src/math/quaternion/QuatDot.ts\nfunction QuatDot(a, b) {\n  return a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;\n}\n\n// src/math/quaternion/GetQuatAngle.ts\nfunction GetQuatAngle(a, b) {\n  const dot = QuatDot(a, b);\n  return Math.acos(2 * dot * dot - 1);\n}\n\n// src/math/Clamp.ts\nfunction Clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n\n// src/math/quaternion/GetQuatAngleTo.ts\nfunction GetQuatAngleTo(a, b) {\n  return 2 * Math.acos(Math.abs(Clamp(QuatDot(a, b), -1, 1)));\n}\n\n// src/math/quaternion/GetQuatAreClose.ts\nfunction GetQuatAreClose(a, b) {\n  return QuatDot(a, b) >= 0;\n}\n\n// src/math/quaternion/GetQuatAxisAngle.ts\nfunction GetQuatAxisAngle(a, out = new Quaternion()) {\n  const rad = Math.acos(a.w) * 2;\n  const s = Math.sin(rad / 2);\n  const epsilon = 1e-6;\n  if (s > epsilon) {\n    out.set(a.x / s, a.y / s, a.z / s);\n  } else {\n    out.set(1, 0, 0);\n  }\n  return rad;\n}\n\n// src/math/quaternion/GetQuatLength.ts\nfunction GetQuatLength(a) {\n  const {x, y, z, w} = a;\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n// src/math/quaternion/GetQuatLengthSquared.ts\nfunction GetQuatLengthSquared(a) {\n  const {x, y, z, w} = a;\n  return x * x + y * y + z * z + w * w;\n}\n\n// src/math/quaternion/QuatAdd.ts\nfunction QuatAdd(a, b, out = new Quaternion()) {\n  return out.set(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);\n}\n\n// src/math/quaternion/QuatAddScalar.ts\nfunction QuatAddScalar(a, scalar, out = new Quaternion()) {\n  return out.set(a.x + scalar, a.y + scalar, a.z + scalar, a.w + scalar);\n}\n\n// src/math/quaternion/QuatClone.ts\nfunction QuatClone(source) {\n  const {x, y, z, w} = source;\n  return new Quaternion(x, y, z, w);\n}\n\n// src/math/quaternion/QuatConjugate.ts\nfunction QuatConjugate(a, out = new Quaternion()) {\n  const {x, y, z, w} = a;\n  return out.set(x * -1, y * -1, z * -1, w);\n}\n\n// src/math/quaternion/QuatCopyFrom.ts\nfunction QuatCopyFrom(source, dest) {\n  const {x, y, z, w} = source;\n  return dest.set(x, y, z, w);\n}\n\n// src/math/quaternion/QuatEquals.ts\nfunction QuatEquals(a, b) {\n  return a.x === b.x && a.y === b.y && a.z === b.z && a.w === b.w;\n}\n\n// src/math/quaternion/QuatRotationYawPitchRoll.ts\nfunction QuatRotationYawPitchRoll(yaw, pitch, roll, out = new Quaternion()) {\n  const halfRoll = roll * 0.5;\n  const halfPitch = pitch * 0.5;\n  const halfYaw = yaw * 0.5;\n  const sinRoll = Math.sin(halfRoll);\n  const cosRoll = Math.cos(halfRoll);\n  const sinPitch = Math.sin(halfPitch);\n  const cosPitch = Math.cos(halfPitch);\n  const sinYaw = Math.sin(halfYaw);\n  const cosYaw = Math.cos(halfYaw);\n  return out.set(cosYaw * sinPitch * cosRoll + sinYaw * cosPitch * sinRoll, sinYaw * cosPitch * cosRoll - cosYaw * sinPitch * sinRoll, cosYaw * cosPitch * sinRoll - sinYaw * sinPitch * cosRoll, cosYaw * cosPitch * cosRoll + sinYaw * sinPitch * sinRoll);\n}\n\n// src/math/quaternion/QuatFromEulerAngles.ts\nfunction QuatFromEulerAngles(x, y, z, out = new Quaternion()) {\n  return QuatRotationYawPitchRoll(y, x, z, out);\n}\n\n// src/math/quaternion/QuatFromEulerVector.ts\nfunction QuatFromEulerVector(v, out = new Quaternion()) {\n  return QuatRotationYawPitchRoll(v.y, v.x, v.z, out);\n}\n\n// src/math/vec3/index.ts\nvar vec3_exports = {};\n__export(vec3_exports, {\n  BACKWARD: () => BACKWARD,\n  DOWN: () => DOWN,\n  FORWARD: () => FORWARD,\n  GetVec3Angle: () => GetVec3Angle,\n  GetVec3Distance: () => GetVec3Distance,\n  GetVec3DistanceSquared: () => GetVec3DistanceSquared,\n  GetVec3Length: () => GetVec3Length,\n  GetVec3LengthSquared: () => GetVec3LengthSquared,\n  GetVec3ManhattanDistance: () => GetVec3ManhattanDistance,\n  GetVec3ManhattanLength: () => GetVec3ManhattanLength,\n  LEFT: () => LEFT,\n  RGBCallback: () => RGBCallback,\n  RIGHT: () => RIGHT,\n  UP: () => UP,\n  Vec3: () => Vec3,\n  Vec3Abs: () => Vec3Abs,\n  Vec3Add: () => Vec3Add,\n  Vec3AddScalar: () => Vec3AddScalar,\n  Vec3Backward: () => Vec3Backward,\n  Vec3Bezier: () => Vec3Bezier,\n  Vec3Callback: () => Vec3Callback,\n  Vec3CatmullRom: () => Vec3CatmullRom,\n  Vec3Ceil: () => Vec3Ceil,\n  Vec3Center: () => Vec3Center,\n  Vec3Clamp: () => Vec3Clamp,\n  Vec3ClampLength: () => Vec3ClampLength,\n  Vec3ClampScalar: () => Vec3ClampScalar,\n  Vec3Clone: () => Vec3Clone,\n  Vec3CopyFrom: () => Vec3CopyFrom,\n  Vec3Cross: () => Vec3Cross,\n  Vec3CrossNormalize: () => Vec3CrossNormalize,\n  Vec3Divide: () => Vec3Divide,\n  Vec3DivideScalar: () => Vec3DivideScalar,\n  Vec3Dot: () => Vec3Dot,\n  Vec3Down: () => Vec3Down,\n  Vec3Equals: () => Vec3Equals,\n  Vec3Floor: () => Vec3Floor,\n  Vec3Forward: () => Vec3Forward,\n  Vec3Fract: () => Vec3Fract,\n  Vec3FromCylindricalCoords: () => Vec3FromCylindricalCoords,\n  Vec3FromSphericalCoords: () => Vec3FromSphericalCoords,\n  Vec3FuzzyEquals: () => Vec3FuzzyEquals,\n  Vec3Hermite: () => Vec3Hermite,\n  Vec3Inverse: () => Vec3Inverse,\n  Vec3IsNonUniform: () => Vec3IsNonUniform,\n  Vec3Left: () => Vec3Left,\n  Vec3Lerp: () => Vec3Lerp,\n  Vec3Max: () => Vec3Max,\n  Vec3Min: () => Vec3Min,\n  Vec3Multiply: () => Vec3Multiply,\n  Vec3MultiplyByFloats: () => Vec3MultiplyByFloats,\n  Vec3Negate: () => Vec3Negate,\n  Vec3Normalize: () => Vec3Normalize,\n  Vec3One: () => Vec3One,\n  Vec3Project: () => Vec3Project,\n  Vec3Random: () => Vec3Random,\n  Vec3Reflect: () => Vec3Reflect,\n  Vec3Right: () => Vec3Right,\n  Vec3RotateX: () => Vec3RotateX,\n  Vec3RotateY: () => Vec3RotateY,\n  Vec3RotateZ: () => Vec3RotateZ,\n  Vec3Round: () => Vec3Round,\n  Vec3RoundToZero: () => Vec3RoundToZero,\n  Vec3Scale: () => Vec3Scale,\n  Vec3ScaleAndAdd: () => Vec3ScaleAndAdd,\n  Vec3SetLength: () => Vec3SetLength,\n  Vec3Subtract: () => Vec3Subtract,\n  Vec3SubtractScalar: () => Vec3SubtractScalar,\n  Vec3TransformMat4: () => Vec3TransformMat4,\n  Vec3TransformMat4Zero: () => Vec3TransformMat4Zero,\n  Vec3TransformQuat: () => Vec3TransformQuat,\n  Vec3Unproject: () => Vec3Unproject,\n  Vec3Up: () => Vec3Up,\n  Vec3Zero: () => Vec3Zero,\n  ZERO: () => ZERO\n});\n\n// src/math/vec3/Vec3Backward.ts\nfunction Vec3Backward() {\n  return new Vec3(0, 0, -1);\n}\n\n// src/math/vec3/Vec3Down.ts\nfunction Vec3Down() {\n  return new Vec3(0, -1, 0);\n}\n\n// src/math/vec3/Vec3Forward.ts\nfunction Vec3Forward() {\n  return new Vec3(0, 0, 1);\n}\n\n// src/math/vec3/Vec3Left.ts\nfunction Vec3Left() {\n  return new Vec3(-1, 0, 0);\n}\n\n// src/math/vec3/Vec3Right.ts\nfunction Vec3Right() {\n  return new Vec3(1, 0, 0);\n}\n\n// src/math/vec3/Vec3Up.ts\nfunction Vec3Up() {\n  return new Vec3(0, 1, 0);\n}\n\n// src/math/vec3/Vec3Zero.ts\nfunction Vec3Zero() {\n  return new Vec3(0, 0, 0);\n}\n\n// src/math/vec3/const.ts\nvar UP = Vec3Up();\nvar DOWN = Vec3Down();\nvar LEFT = Vec3Left();\nvar RIGHT = Vec3Right();\nvar FORWARD = Vec3Forward();\nvar BACKWARD = Vec3Backward();\nvar ZERO = Vec3Zero();\n\n// src/math/vec3/Vec3Dot.ts\nfunction Vec3Dot(a, b) {\n  return a.x * b.x + a.y * b.y + a.z * b.z;\n}\n\n// src/math/vec3/GetVec3Angle.ts\nfunction GetVec3Angle(a, b) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = b;\n  const mag1 = Math.sqrt(ax * ax + ay * ay + az * az);\n  const mag2 = Math.sqrt(bx * bx + by * by + bz * bz);\n  const mag = mag1 * mag2;\n  const c = mag && Vec3Dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(c, -1), 1));\n}\n\n// src/math/vec3/GetVec3DistanceSquared.ts\nfunction GetVec3DistanceSquared(a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  const z = a.z - b.z;\n  return x * x + y * y + z * z;\n}\n\n// src/math/vec3/GetVec3Distance.ts\nfunction GetVec3Distance(a, b) {\n  return Math.sqrt(GetVec3DistanceSquared(a, b));\n}\n\n// src/math/vec3/GetVec3Length.ts\nfunction GetVec3Length(a) {\n  const {x, y, z} = a;\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n// src/math/vec3/GetVec3LengthSquared.ts\nfunction GetVec3LengthSquared(a) {\n  const {x, y, z} = a;\n  return x * x + y * y + z * z;\n}\n\n// src/math/vec3/GetVec3ManhattanDistance.ts\nfunction GetVec3ManhattanDistance(a, b) {\n  return Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z);\n}\n\n// src/math/vec3/GetVec3ManhattanLength.ts\nfunction GetVec3ManhattanLength(a) {\n  return Math.abs(a.x) + Math.abs(a.y) + Math.abs(a.z);\n}\n\n// src/math/vec3/Vec3Callback.ts\nvar Vec3Callback = class {\n  constructor(onChange, x = 0, y = 0, z = 0) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this.onChange = onChange;\n  }\n  destroy() {\n    this.onChange = NOOP;\n  }\n  set(x = 0, y = 0, z = 0) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    if (this.onChange) {\n      this.onChange(this);\n    }\n    return this;\n  }\n  get x() {\n    return this._x;\n  }\n  set x(value) {\n    const prev = this._x;\n    this._x = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get y() {\n    return this._y;\n  }\n  set y(value) {\n    const prev = this._y;\n    this._y = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get z() {\n    return this._z;\n  }\n  set z(value) {\n    const prev = this._z;\n    this._z = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y, z} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    dst[index + 2] = z;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1], src[index + 2]);\n  }\n  toString() {\n    const {x, y, z} = this;\n    return `{ x=${x}, y=${y}, z=${z} }`;\n  }\n};\n\n// src/math/vec3/RGBCallback.ts\nvar RGBCallback = class extends Vec3Callback {\n  constructor(onChange, r = 0, g = 0, b = 0) {\n    super(onChange, r, g, b);\n  }\n  set r(value) {\n    this.x = value;\n  }\n  get r() {\n    return this.x;\n  }\n  set g(value) {\n    this.y = value;\n  }\n  get g() {\n    return this.y;\n  }\n  set b(value) {\n    this.z = value;\n  }\n  get b() {\n    return this.z;\n  }\n  toString() {\n    const {x, y, z} = this;\n    return `[ r=${x}, g=${y}, b=${z} ]`;\n  }\n};\n\n// src/math/vec3/Vec3Abs.ts\nfunction Vec3Abs(a, out = new Vec3()) {\n  return out.set(Math.abs(a.x), Math.abs(a.y), Math.abs(a.z));\n}\n\n// src/math/vec3/Vec3Add.ts\nfunction Vec3Add(a, b, out = new Vec3()) {\n  return out.set(a.x + b.x, a.y + b.y, a.z + b.z);\n}\n\n// src/math/vec3/Vec3AddScalar.ts\nfunction Vec3AddScalar(a, scalar, out = new Vec3()) {\n  return out.set(a.x + scalar, a.y + scalar, a.z + scalar);\n}\n\n// src/math/Bezier.ts\nfunction Bezier(a, b, c, d, t) {\n  const inverseFactor = 1 - t;\n  const inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  const factorTimes2 = t * t;\n  const factor1 = inverseFactorTimesTwo * inverseFactor;\n  const factor2 = 3 * t * inverseFactorTimesTwo;\n  const factor3 = 3 * factorTimes2 * inverseFactor;\n  const factor4 = factorTimes2 * t;\n  return a * factor1 + b * factor2 + c * factor3 + d * factor4;\n}\n\n// src/math/vec3/Vec3Bezier.ts\nfunction Vec3Bezier(a, b, c, d, t, out = new Vec3()) {\n  return out.set(Bezier(t, a.x, b.x, c.x, d.x), Bezier(t, a.y, b.y, c.y, d.y), Bezier(t, a.z, b.z, c.z, d.z));\n}\n\n// src/math/CatmullRom.ts\nfunction CatmullRom(t, p0, p1, p2, p3) {\n  const v0 = (p2 - p0) * 0.5;\n  const v1 = (p3 - p1) * 0.5;\n  const t2 = t * t;\n  const t3 = t * t2;\n  return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\n// src/math/vec3/Vec3CatmullRom.ts\nfunction Vec3CatmullRom(p1, p2, p3, p4, t, out = new Vec3()) {\n  return out.set(CatmullRom(t, p1.x, p2.x, p3.x, p4.x), CatmullRom(t, p1.y, p2.y, p3.y, p4.y), CatmullRom(t, p1.z, p2.z, p3.z, p4.z));\n}\n\n// src/math/vec3/Vec3Ceil.ts\nfunction Vec3Ceil(a, out = new Vec3()) {\n  return out.set(Math.ceil(a.x), Math.ceil(a.y), Math.ceil(a.z));\n}\n\n// src/math/vec3/Vec3Scale.ts\nfunction Vec3Scale(a, scalar, out = new Vec3()) {\n  return out.set(a.x * scalar, a.y * scalar, a.z * scalar);\n}\n\n// src/math/vec3/Vec3Center.ts\nfunction Vec3Center(a, b, out = new Vec3()) {\n  Vec3Add(a, b, out);\n  return Vec3Scale(out, 0.5, out);\n}\n\n// src/math/vec3/Vec3Clamp.ts\nfunction Vec3Clamp(a, min, max, out = new Vec3()) {\n  return out.set(Clamp(a.x, min.x, max.x), Clamp(a.y, min.y, max.y), Clamp(a.z, min.z, max.z));\n}\n\n// src/math/vec3/Vec3DivideScalar.ts\nfunction Vec3DivideScalar(a, scalar, out = new Vec3()) {\n  const {x, y, z} = a;\n  return out.set(x / scalar, y / scalar, z / scalar);\n}\n\n// src/math/vec3/Vec3ClampLength.ts\nfunction Vec3ClampLength(a, min, max, out = new Vec3()) {\n  const length = GetVec3Length(a);\n  Vec3DivideScalar(a, length || 1, out);\n  return Vec3Scale(out, Clamp(min, max, length), out);\n}\n\n// src/math/vec3/Vec3ClampScalar.ts\nfunction Vec3ClampScalar(a, min, max, out = new Vec3()) {\n  return out.set(Clamp(a.x, min, max), Clamp(a.y, min, max), Clamp(a.z, min, max));\n}\n\n// src/math/vec3/Vec3Clone.ts\nfunction Vec3Clone(source) {\n  const {x, y, z} = source;\n  return new Vec3(x, y, z);\n}\n\n// src/math/vec3/Vec3CopyFrom.ts\nfunction Vec3CopyFrom(source, dest) {\n  const {x, y, z} = source;\n  return dest.set(x, y, z);\n}\n\n// src/math/vec3/Vec3Cross.ts\nfunction Vec3Cross(a, b, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = b;\n  return out.set(ay * bz - az * by, az * bx - ax * bz, ax * by - ay * bx);\n}\n\n// src/math/vec3/Vec3CrossNormalize.ts\nfunction Vec3CrossNormalize(a, b, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = b;\n  const x = ay * bz - az * by;\n  const y = az * bx - ax * bz;\n  const z = ax * by - ay * bx;\n  let len = x * x + y * y + z * z;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n  return out.set(x * len, y * len, z * len);\n}\n\n// src/math/vec3/Vec3Divide.ts\nfunction Vec3Divide(a, b, out = new Vec3()) {\n  return out.set(a.x / b.x, a.y / b.y, a.z / b.z);\n}\n\n// src/math/vec3/Vec3Equals.ts\nfunction Vec3Equals(a, b) {\n  return a.x === b.x && a.y === b.y && a.z === b.z;\n}\n\n// src/math/vec3/Vec3Floor.ts\nfunction Vec3Floor(a, out = new Vec3()) {\n  return out.set(Math.floor(a.x), Math.floor(a.y), Math.floor(a.z));\n}\n\n// src/math/vec3/Vec3Fract.ts\nfunction Vec3Fract(a, out = new Vec3()) {\n  return out.set(a.x - Math.floor(a.x), a.y - Math.floor(a.y), a.z - Math.floor(a.z));\n}\n\n// src/math/vec3/Vec3FromCylindricalCoords.ts\nfunction Vec3FromCylindricalCoords(radius, theta, y, out = new Vec3()) {\n  return out.set(radius * Math.sin(theta), y, radius * Math.cos(theta));\n}\n\n// src/math/vec3/Vec3FromSphericalCoords.ts\nfunction Vec3FromSphericalCoords(radius, phi, theta, out = new Vec3()) {\n  const sinPhiRadius = Math.sin(phi) * radius;\n  return out.set(sinPhiRadius * Math.sin(theta), Math.cos(phi) * radius, sinPhiRadius * Math.cos(theta));\n}\n\n// src/math/fuzzy/FuzzyEqual.ts\nfunction FuzzyEqual(a, b, epsilon = 1e-4) {\n  return Math.abs(a - b) < epsilon;\n}\n\n// src/math/vec3/Vec3FuzzyEquals.ts\nfunction Vec3FuzzyEquals(a, b, epsilon = 1e-4) {\n  return FuzzyEqual(a.x, b.x, epsilon) && FuzzyEqual(a.y, b.y, epsilon) && FuzzyEqual(a.z, b.z, epsilon);\n}\n\n// src/math/Hermite.ts\nfunction Hermite(a, b, c, d, t) {\n  const squared = t * t;\n  const factor1 = squared * (2 * t - 3) + 1;\n  const factor2 = squared * (t - 2) + t;\n  const factor3 = squared * (t - 1);\n  const factor4 = squared * (3 - 2 * t);\n  return a * factor1 + b * factor2 + c * factor3 + d * factor4;\n}\n\n// src/math/vec3/Vec3Hermite.ts\nfunction Vec3Hermite(a, b, c, d, t, out = new Vec3()) {\n  return out.set(Hermite(t, a.x, b.x, c.x, d.x), Hermite(t, a.y, b.y, c.y, d.y), Hermite(t, a.z, b.z, c.z, d.z));\n}\n\n// src/math/vec3/Vec3Inverse.ts\nfunction Vec3Inverse(a, out = new Vec3()) {\n  return out.set(1 / a.x, 1 / a.y, 1 / a.z);\n}\n\n// src/math/vec3/Vec3IsNonUniform.ts\nfunction Vec3IsNonUniform(a) {\n  const absX = Math.abs(a.x);\n  const absY = Math.abs(a.y);\n  const absZ = Math.abs(a.z);\n  return absX !== absY || absX !== absZ || absY !== absZ;\n}\n\n// src/math/vec3/Vec3Lerp.ts\nfunction Vec3Lerp(a, b, t, out = new Vec3()) {\n  const {x, y, z} = a;\n  return out.set(x + t * (b.x - x), y + t * (b.y - y), z + t * (b.z - z));\n}\n\n// src/math/vec3/Vec3Max.ts\nfunction Vec3Max(a, b, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = b;\n  return out.set(Math.max(ax, bx), Math.max(ay, by), Math.max(az, bz));\n}\n\n// src/math/vec3/Vec3Min.ts\nfunction Vec3Min(a, b, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = b;\n  return out.set(Math.min(ax, bx), Math.min(ay, by), Math.min(az, bz));\n}\n\n// src/math/vec3/Vec3Multiply.ts\nfunction Vec3Multiply(a, b, out = new Vec3()) {\n  return out.set(a.x * b.x, a.y * b.y, a.z * b.z);\n}\n\n// src/math/vec3/Vec3MultiplyByFloats.ts\nfunction Vec3MultiplyByFloats(a, x, y, z, out = new Vec3()) {\n  return out.set(a.x * x, a.y * y, a.z * z);\n}\n\n// src/math/vec3/Vec3Negate.ts\nfunction Vec3Negate(a, out = new Vec3()) {\n  return out.set(-a.x, -a.y, -a.z);\n}\n\n// src/math/vec3/Vec3Normalize.ts\nfunction Vec3Normalize(a, out = new Vec3()) {\n  const {x, y, z} = a;\n  let len = x * x + y * y + z * z;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n  return out.set(x * len, y * len, z * len);\n}\n\n// src/math/vec3/Vec3One.ts\nfunction Vec3One() {\n  return new Vec3(1, 1, 1);\n}\n\n// src/math/vec3/Vec3TransformMat4.ts\nfunction Vec3TransformMat4(a, m, out = new Vec3()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = m.data;\n  const {x, y, z} = a;\n  let w = m03 * x + m13 * y + m23 * z + m33;\n  w = w || 1;\n  return out.set((m00 * x + m10 * y + m20 * z + m30) / w, (m01 * x + m11 * y + m21 * z + m31) / w, (m02 * x + m12 * y + m22 * z + m32) / w);\n}\n\n// src/math/vec3/Vec3Project.ts\nvar tempMatrix1 = new Matrix4();\nvar tempMatrix2 = new Matrix4();\nfunction Vec3Project(v, world, transform, viewport, out = new Vec3()) {\n  const {x, y, width, height} = viewport;\n  tempMatrix1.set(width / 2, 0, 0, 0, 0, -height / 2, 0, 0, 0, 0, 0.5, 0, x + width / 2, height / 2 + y, 0.5, 1);\n  Mat4Multiply(world, transform, tempMatrix2);\n  Mat4Multiply(tempMatrix2, tempMatrix1, tempMatrix2);\n  return Vec3TransformMat4(v, tempMatrix2, out);\n}\n\n// src/math/vec3/Vec3Random.ts\nfunction Vec3Random(a, scale = 1, out = new Vec3()) {\n  const r = Math.random() * 2 * Math.PI;\n  const z = Math.random() * 2 - 1;\n  const zScale = Math.sqrt(1 - z * z) * scale;\n  return out.set(Math.cos(r) * zScale, Math.sin(r) * zScale, z * scale);\n}\n\n// src/math/vec3/Vec3Subtract.ts\nfunction Vec3Subtract(a, b, out = new Vec3()) {\n  return out.set(a.x - b.x, a.y - b.y, a.z - b.z);\n}\n\n// src/math/vec3/Vec3Reflect.ts\nfunction Vec3Reflect(a, normal, out = new Vec3()) {\n  Vec3Scale(normal, 2 * Vec3Dot(a, normal), out);\n  return Vec3Subtract(a, out, out);\n}\n\n// src/math/vec3/Vec3RotateX.ts\nfunction Vec3RotateX(a, origin, angle, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = origin;\n  const px = ax - bx;\n  const py = ay - by;\n  const pz = az - bz;\n  const rx = px;\n  const ry = py * Math.cos(angle) - pz * Math.sin(angle);\n  const rz = py * Math.sin(angle) + pz * Math.cos(angle);\n  return out.set(rx + bx, ry + by, rz + bz);\n}\n\n// src/math/vec3/Vec3RotateY.ts\nfunction Vec3RotateY(a, origin, angle, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = origin;\n  const px = ax - bx;\n  const py = ay - by;\n  const pz = az - bz;\n  const rx = pz * Math.sin(angle) + px * Math.cos(angle);\n  const ry = py;\n  const rz = pz * Math.cos(angle) - px * Math.sin(angle);\n  return out.set(rx + bx, ry + by, rz + bz);\n}\n\n// src/math/vec3/Vec3RotateZ.ts\nfunction Vec3RotateZ(a, origin, angle, out = new Vec3()) {\n  const {x: ax, y: ay, z: az} = a;\n  const {x: bx, y: by, z: bz} = origin;\n  const px = ax - bx;\n  const py = ay - by;\n  const pz = az - bz;\n  const rx = px * Math.cos(angle) - py * Math.sin(angle);\n  const ry = px * Math.sin(angle) + py * Math.cos(angle);\n  const rz = pz;\n  return out.set(rx + bx, ry + by, rz + bz);\n}\n\n// src/math/vec3/Vec3Round.ts\nfunction Vec3Round(a, out = new Vec3()) {\n  return out.set(Math.round(a.x), Math.round(a.y), Math.round(a.z));\n}\n\n// src/math/vec3/Vec3RoundToZero.ts\nfunction Vec3RoundToZero(a, out = new Vec3()) {\n  return out.set(a.x < 0 ? Math.ceil(a.x) : Math.floor(a.x), a.y < 0 ? Math.ceil(a.y) : Math.floor(a.y), a.z < 0 ? Math.ceil(a.z) : Math.floor(a.z));\n}\n\n// src/math/vec3/Vec3ScaleAndAdd.ts\nfunction Vec3ScaleAndAdd(a, b, scalar, out = new Vec3()) {\n  return out.set(a.x + b.x * scalar, a.y + b.y * scalar, a.z + b.z * scalar);\n}\n\n// src/math/vec3/Vec3SetLength.ts\nfunction Vec3SetLength(a, length, out = new Vec3()) {\n  Vec3Normalize(a, out);\n  return Vec3Scale(out, length, out);\n}\n\n// src/math/vec3/Vec3SubtractScalar.ts\nfunction Vec3SubtractScalar(a, scalar, out = new Vec3()) {\n  return out.set(a.x - scalar, a.y - scalar, a.z - scalar);\n}\n\n// src/math/vec3/Vec3TransformMat4Zero.ts\nfunction Vec3TransformMat4Zero(a, m, out = new Vec3()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22] = m.data;\n  const {x, y, z} = a;\n  return out.set(m00 * x + m10 * y + m20 * z, m01 * x + m11 * y + m21 * z, m02 * x + m12 * y + m22 * z);\n}\n\n// src/math/vec3/Vec3TransformQuat.ts\nfunction Vec3TransformQuat(a, q, out = new Vec3()) {\n  const {x: qx, y: qy, z: qz, w: qw} = q;\n  const {x, y, z} = a;\n  let uvx = qy * z - qz * y;\n  let uvy = qz * x - qx * z;\n  let uvz = qx * y - qy * x;\n  let uuvx = qy * uvz - qz * uvy;\n  let uuvy = qz * uvx - qx * uvz;\n  let uuvz = qx * uvy - qy * uvx;\n  const w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2;\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2;\n  return out.set(x + uvx + uuvx, y + uvy + uuvy, z + uvz + uuvz);\n}\n\n// src/math/vec3/Vec3Unproject.ts\nvar matrix = new Matrix4();\nvar screenSource = new Vec3();\nfunction Vec3Unproject(v, viewportWidth, viewportHeight, world, view, projection, out = new Vec3()) {\n  Mat4Multiply(world, view, matrix);\n  Mat4Multiply(matrix, projection, matrix);\n  Mat4Invert(matrix, matrix);\n  const {x, y, z} = v;\n  screenSource.set(x / viewportWidth * 2 - 1, -(y / viewportHeight * 2 - 1), 2 * z - 1);\n  Vec3TransformMat4(screenSource, matrix, out);\n  const data = matrix.data;\n  const num = screenSource.x * data[3] + screenSource.y * data[7] + screenSource.z * data[11] + data[15];\n  return Vec3Scale(out, 1 / num, out);\n}\n\n// src/math/quaternion/QuatFromRotationAxis.ts\nfunction QuatFromRotationAxis(axis, angle, out = new Quaternion()) {\n  const sin = Math.sin(angle / 2);\n  Vec3Normalize(axis, axis);\n  const {x, y, z} = axis;\n  return out.set(x * sin, y * sin, z * sin, Math.cos(angle / 2));\n}\n\n// src/math/quaternion/QuatFromRotationMatrix.ts\nfunction QuatFromRotationMatrix(matrix2, out = new Quaternion()) {\n  const [m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33] = matrix2.data;\n  const trace = m11 + m22 + m33;\n  let s;\n  if (trace > 0) {\n    s = 0.5 / Math.sqrt(trace + 1);\n    return out.set((m32 - m23) * s, (m13 - m31) * s, (m21 - m12) * s, 0.25 / s);\n  } else if (m11 > m22 && m11 > m33) {\n    s = 2 * Math.sqrt(1 + m11 - m22 - m33);\n    return out.set(0.25 * s, (m12 + m21) / s, (m13 + m31) / s, (m32 - m23) / s);\n  } else if (m22 > m33) {\n    s = 2 * Math.sqrt(1 + m22 - m11 - m33);\n    return out.set((m12 + m21) / s, 0.25 * s, (m23 + m32) / s, (m13 - m31) / s);\n  } else {\n    s = 2 * Math.sqrt(1 + m33 - m11 - m22);\n    return out.set((m13 + m31) / s, (m23 + m32) / s, 0.25 * s, (m21 - m12) / s);\n  }\n}\n\n// src/math/quaternion/QuatFuzzyEquals.ts\nfunction QuatFuzzyEquals(a, b, epsilon = 1e-4) {\n  return FuzzyEqual(a.x, b.x, epsilon) && FuzzyEqual(a.y, b.y, epsilon) && FuzzyEqual(a.z, b.z, epsilon) && FuzzyEqual(a.w, b.w, epsilon);\n}\n\n// src/math/quaternion/QuatHermite.ts\nfunction QuatHermite(a, b, c, d, t, out = new Quaternion()) {\n  return out.set(Hermite(t, a.x, b.x, c.x, d.x), Hermite(t, a.y, b.y, c.y, d.y), Hermite(t, a.z, b.z, c.z, d.z), Hermite(t, a.w, b.w, c.w, d.w));\n}\n\n// src/math/quaternion/QuatInvert.ts\nfunction QuatInvert(a, out = new Quaternion()) {\n  const {x, y, z, w} = a;\n  const dot = x * x + y * y + z * z + w * w;\n  const invDot = dot ? 1 / dot : 0;\n  return out.set(-x * invDot, -y * invDot, -z * invDot, w * invDot);\n}\n\n// src/math/quaternion/QuatMultiply.ts\nfunction QuatMultiply(a, b, out = new Quaternion()) {\n  const {x: ax, y: ay, z: az, w: aw} = a;\n  const {x: bx, y: by, z: bz, w: bw} = b;\n  return out.set(ax * bw + aw * bx + ay * bz - az * by, ay * bw + aw * by + az * bx - ax * bz, az * bw + aw * bz + ax * by - ay * bx, aw * bw - ax * bx - ay * by - az * bz);\n}\n\n// src/math/quaternion/QuatMultiplyByFloats.ts\nfunction QuatMultiplyByFloats(a, x, y, z, w, out = new Quaternion()) {\n  return out.set(a.x * x, a.y * y, a.z * z, a.w * w);\n}\n\n// src/math/quaternion/QuatScale.ts\nfunction QuatScale(a, scalar, out = new Quaternion()) {\n  const {x, y, z, w} = a;\n  return out.set(x * scalar, y * scalar, z * scalar, w * scalar);\n}\n\n// src/math/quaternion/QuatNormalize.ts\nfunction QuatNormalize(a, out = new Quaternion()) {\n  const length = GetQuatLength(a);\n  if (length === 0) {\n    return out.set(0, 0, 0, 1);\n  } else {\n    return QuatScale(a, length, out);\n  }\n}\n\n// src/math/quaternion/QuatSlerp.ts\nfunction QuatSlerp(a, b, t, out = new Quaternion()) {\n  if (t === 0) {\n    return QuatCopyFrom(a, out);\n  } else if (t === 1) {\n    return QuatCopyFrom(b, out);\n  }\n  const {x, y, z, w} = a;\n  const {x: bx, y: by, z: bz, w: bw} = b;\n  let cosHalfTheta = w * bw + x * bx + y * by + z * bz;\n  if (cosHalfTheta < 0) {\n    out.set(-bx, -by, -bz, -bw);\n    cosHalfTheta = -cosHalfTheta;\n  } else {\n    QuatCopyFrom(b, out);\n  }\n  if (cosHalfTheta >= 1) {\n    return out.set(x, y, z, w);\n  }\n  const sqrSinHalfTheta = 1 - cosHalfTheta * cosHalfTheta;\n  if (sqrSinHalfTheta <= Number.EPSILON) {\n    const s = 1 - t;\n    out.set(s * x + t * out.x, s * y + t * out.y, s * z + t * out.z, s * w + t * out.w);\n    return QuatNormalize(out, out);\n  }\n  const sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n  const halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n  const ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta;\n  const ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n  return out.set(x * ratioA + out.x * ratioB, y * ratioA + out.y * ratioB, z * ratioA + out.z * ratioB, w * ratioA + out.w * ratioB);\n}\n\n// src/math/quaternion/QuatRotateTowards.ts\nfunction QuatRotateTowards(a, b, step, out = new Quaternion()) {\n  const angle = GetQuatAngle(a, b);\n  if (angle === 0) {\n    return QuatCopyFrom(a, out);\n  }\n  const t = Math.min(1, step / angle);\n  return QuatSlerp(a, b, t, out);\n}\n\n// src/math/quaternion/QuatRotateX.ts\nfunction QuatRotateX(a, angle, out = new Quaternion()) {\n  angle *= 0.5;\n  const {x, y, z, w} = a;\n  const bx = Math.sin(angle);\n  const bw = Math.cos(angle);\n  return out.set(x * bw + w * bx, y * bw + z * bx, z * bw - y * bx, w * bw - x * bx);\n}\n\n// src/math/quaternion/QuatRotateY.ts\nfunction QuatRotateY(a, angle, out = new Quaternion()) {\n  angle *= 0.5;\n  const {x, y, z, w} = a;\n  const by = Math.sin(angle);\n  const bw = Math.cos(angle);\n  return out.set(x * bw - z * by, y * bw + w * by, z * bw + x * by, w * bw - y * by);\n}\n\n// src/math/quaternion/QuatRotateZ.ts\nfunction QuatRotateZ(a, angle, out = new Quaternion()) {\n  angle *= 0.5;\n  const {x, y, z, w} = a;\n  const bz = Math.sin(angle);\n  const bw = Math.cos(angle);\n  return out.set(x * bw + y * bz, y * bw - x * bz, z * bw + w * bz, w * bw - z * bz);\n}\n\n// src/math/quaternion/QuatRotationAlphaBetaGamma.ts\nfunction QuatRotationAlphaBetaGamma(alpha, beta, gamma, out = new Quaternion()) {\n  const halfGammaPlusAlpha = (gamma + alpha) * 0.5;\n  const halfGammaMinusAlpha = (gamma - alpha) * 0.5;\n  const halfBeta = beta * 0.5;\n  return out.set(Math.cos(halfGammaMinusAlpha) * Math.sin(halfBeta), Math.sin(halfGammaMinusAlpha) * Math.sin(halfBeta), Math.sin(halfGammaPlusAlpha) * Math.cos(halfBeta), Math.cos(halfGammaPlusAlpha) * Math.cos(halfBeta));\n}\n\n// src/math/quaternion/QuatScaleAndAdd.ts\nfunction QuatScaleAndAdd(a, b, scalar, out = new Quaternion()) {\n  return out.set(a.x + b.x * scalar, a.y + b.y * scalar, a.z + b.z * scalar, a.w + b.w * scalar);\n}\n\n// src/math/quaternion/QuatSetAxisAngle.ts\nfunction QuatSetAxisAngle(axis, angle, out = new Quaternion()) {\n  const {x, y, z} = axis;\n  angle *= 0.5;\n  const s = Math.sin(angle);\n  return out.set(x * s, y * s, z * s, Math.cos(angle));\n}\n\n// src/math/quaternion/QuatSetFromUnitVectors.ts\nfunction QuatSetFromUnitVectors(a, from, to, out = new Quaternion()) {\n  const {x: fx, y: fy, z: fz} = from;\n  const {x: tx, y: ty, z: tz} = to;\n  const epsilon = 1e-6;\n  let r = Vec3Dot(from, to) + 1;\n  if (r < epsilon) {\n    r = 0;\n    if (Math.abs(fx) > Math.abs(fz)) {\n      return out.set(-fy, fx, 0, r);\n    } else {\n      return out.set(0, -fz, fy, r);\n    }\n  } else {\n    return out.set(fy * tz - fz * ty, fz * tx - fx * tz, fx * ty - fy * tx, r);\n  }\n}\n\n// src/math/quaternion/QuatSubtract.ts\nfunction QuatSubtract(a, b, out = new Quaternion()) {\n  return out.set(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);\n}\n\n// src/math/quaternion/QuatSubtractScalar.ts\nfunction QuatSubtractScalar(a, scalar, out = new Quaternion()) {\n  const {x, y, z, w} = a;\n  return out.set(x - scalar, y - scalar, z - scalar, w - scalar);\n}\n\n// src/math/quaternion/QuatToEulerAngles.ts\nfunction QuatToEulerAngles(q, out = new Vec3()) {\n  const {x, y, z, w} = q;\n  const sqw = w * w;\n  const sqz = z * z;\n  const sqx = x * x;\n  const sqy = y * y;\n  const zAxisY = y * z - x * w;\n  const limit = 0.4999999;\n  if (zAxisY < -limit) {\n    return out.set(Math.PI / 2, 2 * Math.atan2(y, w), 0);\n  } else if (zAxisY > limit) {\n    return out.set(-Math.PI / 2, 2 * Math.atan2(y, w), 0);\n  } else {\n    return out.set(Math.asin(-2 * (z * y - x * w)), Math.atan2(2 * (z * x + y * w), sqz - sqx - sqy + sqw), Math.atan2(2 * (x * y + z * w), -sqz - sqx + sqy + sqw));\n  }\n}\n\n// src/math/quaternion/QuatZero.ts\nfunction QuatZero() {\n  return new Quaternion(0, 0, 0, 0);\n}\n\n// src/math/index.ts\nvar math_exports = {};\n__export(math_exports, {\n  Angle: () => angle_exports,\n  Average: () => Average,\n  Bernstein: () => Bernstein,\n  Between: () => Between,\n  Bezier: () => Bezier,\n  CatmullRom: () => CatmullRom,\n  CeilTo: () => CeilTo,\n  Clamp: () => Clamp,\n  DegToRad: () => DegToRad,\n  Difference: () => Difference,\n  Easing: () => easing_exports,\n  Factorial: () => Factorial,\n  FloatBetween: () => FloatBetween,\n  FloorTo: () => FloorTo,\n  FromPercent: () => FromPercent,\n  Fuzzy: () => fuzzy_exports,\n  GetSpeed: () => GetSpeed,\n  Hermite: () => Hermite,\n  Interpolation: () => interpolation_exports,\n  Linear: () => Linear2,\n  MATH_CONST: () => MATH_CONST,\n  Matrix2D: () => mat2d_exports,\n  Matrix4: () => mat4_exports,\n  MaxAdd: () => MaxAdd,\n  MinSub: () => MinSub,\n  Percent: () => Percent,\n  Pow2: () => pow2_exports,\n  Quaternion: () => quaternion_exports,\n  RadToDeg: () => RadToDeg,\n  RoundAwayFromZero: () => RoundAwayFromZero,\n  RoundTo: () => RoundTo,\n  SinCosTableGenerator: () => SinCosTableGenerator,\n  SmoothStep: () => SmoothStep,\n  SmootherStep: () => SmootherStep,\n  Snap: () => snap_exports,\n  Vec2: () => vec2_exports,\n  Vec3: () => vec3_exports,\n  Vec4: () => vec4_exports,\n  Within: () => Within,\n  Wrap: () => Wrap\n});\n\n// src/math/easing/index.ts\nvar easing_exports = {};\n__export(easing_exports, {\n  Back: () => back_exports,\n  Bounce: () => bounce_exports,\n  Circular: () => circular_exports,\n  Cubic: () => cubic_exports,\n  Elastic: () => elastic_exports,\n  Expo: () => expo_exports,\n  GetEase: () => GetEase_exports,\n  Linear: () => Linear_exports,\n  Quadratic: () => quadratic_exports,\n  Quartic: () => quartic_exports,\n  Quintic: () => quintic_exports,\n  Sine: () => sine_exports,\n  Stepped: () => Stepped_exports\n});\n\n// src/math/easing/back/index.ts\nvar back_exports = {};\n__export(back_exports, {\n  In: () => In,\n  InOut: () => InOut,\n  Out: () => Out\n});\n\n// src/math/easing/back/In.ts\nfunction In(v, overshoot = 1.70158) {\n  return v * v * ((overshoot + 1) * v - overshoot);\n}\n\n// src/math/easing/back/InOut.ts\nfunction InOut(v, overshoot = 1.70158) {\n  const s = overshoot * 1.525;\n  if ((v *= 2) < 1) {\n    return 0.5 * (v * v * ((s + 1) * v - s));\n  } else {\n    return 0.5 * ((v -= 2) * v * ((s + 1) * v + s) + 2);\n  }\n}\n\n// src/math/easing/back/Out.ts\nfunction Out(v, overshoot = 1.70158) {\n  return --v * v * ((overshoot + 1) * v + overshoot) + 1;\n}\n\n// src/math/easing/bounce/index.ts\nvar bounce_exports = {};\n__export(bounce_exports, {\n  In: () => In2,\n  InOut: () => InOut2,\n  Out: () => Out2\n});\n\n// src/math/easing/bounce/In.ts\nfunction In2(v) {\n  v = 1 - v;\n  if (v < 1 / 2.75) {\n    return 1 - 7.5625 * v * v;\n  } else if (v < 2 / 2.75) {\n    return 1 - (7.5625 * (v -= 1.5 / 2.75) * v + 0.75);\n  } else if (v < 2.5 / 2.75) {\n    return 1 - (7.5625 * (v -= 2.25 / 2.75) * v + 0.9375);\n  } else {\n    return 1 - (7.5625 * (v -= 2.625 / 2.75) * v + 0.984375);\n  }\n}\n\n// src/math/easing/bounce/InOut.ts\nfunction InOut2(v) {\n  let reverse = false;\n  if (v < 0.5) {\n    v = 1 - v * 2;\n    reverse = true;\n  } else {\n    v = v * 2 - 1;\n  }\n  if (v < 1 / 2.75) {\n    v = 7.5625 * v * v;\n  } else if (v < 2 / 2.75) {\n    v = 7.5625 * (v -= 1.5 / 2.75) * v + 0.75;\n  } else if (v < 2.5 / 2.75) {\n    v = 7.5625 * (v -= 2.25 / 2.75) * v + 0.9375;\n  } else {\n    v = 7.5625 * (v -= 2.625 / 2.75) * v + 0.984375;\n  }\n  if (reverse) {\n    return (1 - v) * 0.5;\n  } else {\n    return v * 0.5 + 0.5;\n  }\n}\n\n// src/math/easing/bounce/Out.ts\nfunction Out2(v) {\n  if (v < 1 / 2.75) {\n    return 7.5625 * v * v;\n  } else if (v < 2 / 2.75) {\n    return 7.5625 * (v -= 1.5 / 2.75) * v + 0.75;\n  } else if (v < 2.5 / 2.75) {\n    return 7.5625 * (v -= 2.25 / 2.75) * v + 0.9375;\n  } else {\n    return 7.5625 * (v -= 2.625 / 2.75) * v + 0.984375;\n  }\n}\n\n// src/math/easing/circular/index.ts\nvar circular_exports = {};\n__export(circular_exports, {\n  In: () => In3,\n  InOut: () => InOut3,\n  Out: () => Out3\n});\n\n// src/math/easing/circular/In.ts\nfunction In3(v) {\n  return 1 - Math.sqrt(1 - v * v);\n}\n\n// src/math/easing/circular/InOut.ts\nfunction InOut3(v) {\n  if ((v *= 2) < 1) {\n    return -0.5 * (Math.sqrt(1 - v * v) - 1);\n  } else {\n    return 0.5 * (Math.sqrt(1 - (v -= 2) * v) + 1);\n  }\n}\n\n// src/math/easing/circular/Out.ts\nfunction Out3(v) {\n  return Math.sqrt(1 - --v * v);\n}\n\n// src/math/easing/cubic/index.ts\nvar cubic_exports = {};\n__export(cubic_exports, {\n  In: () => In4,\n  InOut: () => InOut4,\n  Out: () => Out4\n});\n\n// src/math/easing/cubic/In.ts\nfunction In4(v) {\n  return v * v * v;\n}\n\n// src/math/easing/cubic/InOut.ts\nfunction InOut4(v) {\n  if ((v *= 2) < 1) {\n    return 0.5 * v * v * v;\n  } else {\n    return 0.5 * ((v -= 2) * v * v + 2);\n  }\n}\n\n// src/math/easing/cubic/Out.ts\nfunction Out4(v) {\n  return --v * v * v + 1;\n}\n\n// src/math/easing/elastic/index.ts\nvar elastic_exports = {};\n__export(elastic_exports, {\n  In: () => In5,\n  InOut: () => InOut5,\n  Out: () => Out5\n});\n\n// src/math/easing/elastic/In.ts\nfunction In5(v, amplitude = 0.1, period = 0.1) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    let s = period / 4;\n    if (amplitude < 1) {\n      amplitude = 1;\n    } else {\n      s = period * Math.asin(1 / amplitude) / (2 * Math.PI);\n    }\n    return -(amplitude * Math.pow(2, 10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period));\n  }\n}\n\n// src/math/easing/elastic/InOut.ts\nfunction InOut5(v, amplitude = 0.1, period = 0.1) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    let s = period / 4;\n    if (amplitude < 1) {\n      amplitude = 1;\n    } else {\n      s = period * Math.asin(1 / amplitude) / (2 * Math.PI);\n    }\n    if ((v *= 2) < 1) {\n      return -0.5 * (amplitude * Math.pow(2, 10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period));\n    } else {\n      return amplitude * Math.pow(2, -10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period) * 0.5 + 1;\n    }\n  }\n}\n\n// src/math/easing/elastic/Out.ts\nfunction Out5(v, amplitude = 0.1, period = 0.1) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    let s = period / 4;\n    if (amplitude < 1) {\n      amplitude = 1;\n    } else {\n      s = period * Math.asin(1 / amplitude) / (2 * Math.PI);\n    }\n    return amplitude * Math.pow(2, -10 * v) * Math.sin((v - s) * (2 * Math.PI) / period) + 1;\n  }\n}\n\n// src/math/easing/expo/index.ts\nvar expo_exports = {};\n__export(expo_exports, {\n  In: () => In6,\n  InOut: () => InOut6,\n  Out: () => Out6\n});\n\n// src/math/easing/expo/In.ts\nfunction In6(v) {\n  return Math.pow(2, 10 * (v - 1)) - 1e-3;\n}\n\n// src/math/easing/expo/InOut.ts\nfunction InOut6(v) {\n  if (v == 0) {\n    return 0;\n  }\n  if (v == 1) {\n    return 1;\n  }\n  if ((v *= 2) < 1) {\n    return 0.5 * Math.pow(2, 10 * (v - 1));\n  } else {\n    return 0.5 * (2 - Math.pow(2, -10 * (v - 1)));\n  }\n}\n\n// src/math/easing/expo/Out.ts\nfunction Out6(v) {\n  return 1 - Math.pow(2, -10 * v);\n}\n\n// src/math/easing/GetEase.ts\nvar GetEase_exports = {};\n__export(GetEase_exports, {\n  GetEase: () => GetEase\n});\n\n// src/math/easing/quadratic/index.ts\nvar quadratic_exports = {};\n__export(quadratic_exports, {\n  In: () => In7,\n  InOut: () => InOut7,\n  Out: () => Out7\n});\n\n// src/math/easing/quadratic/In.ts\nfunction In7(v) {\n  return v * v;\n}\n\n// src/math/easing/quadratic/InOut.ts\nfunction InOut7(v) {\n  if ((v *= 2) < 1) {\n    return 0.5 * v * v;\n  } else {\n    return -0.5 * (--v * (v - 2) - 1);\n  }\n}\n\n// src/math/easing/quadratic/Out.ts\nfunction Out7(v) {\n  return v * (2 - v);\n}\n\n// src/math/easing/quartic/index.ts\nvar quartic_exports = {};\n__export(quartic_exports, {\n  In: () => In8,\n  InOut: () => InOut8,\n  Out: () => Out8\n});\n\n// src/math/easing/quartic/In.ts\nfunction In8(v) {\n  return v * v * v * v;\n}\n\n// src/math/easing/quartic/InOut.ts\nfunction InOut8(v) {\n  if ((v *= 2) < 1) {\n    return 0.5 * v * v * v * v;\n  } else {\n    return -0.5 * ((v -= 2) * v * v * v - 2);\n  }\n}\n\n// src/math/easing/quartic/Out.ts\nfunction Out8(v) {\n  return -(--v * v * v * v - 1);\n}\n\n// src/math/easing/quintic/index.ts\nvar quintic_exports = {};\n__export(quintic_exports, {\n  In: () => In9,\n  InOut: () => InOut9,\n  Out: () => Out9\n});\n\n// src/math/easing/quintic/In.ts\nfunction In9(v) {\n  return v * v * v * v * v;\n}\n\n// src/math/easing/quintic/InOut.ts\nfunction InOut9(v) {\n  if ((v *= 2) < 1) {\n    return 0.5 * v * v * v * v * v;\n  } else {\n    return 0.5 * ((v -= 2) * v * v * v * v + 2);\n  }\n}\n\n// src/math/easing/quintic/Out.ts\nfunction Out9(v) {\n  return (v = v - 1) * v * v * v * v + 1;\n}\n\n// src/math/easing/sine/index.ts\nvar sine_exports = {};\n__export(sine_exports, {\n  In: () => In10,\n  InOut: () => InOut10,\n  Out: () => Out10\n});\n\n// src/math/easing/sine/In.ts\nfunction In10(v) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    return 1 - Math.cos(v * Math.PI / 2);\n  }\n}\n\n// src/math/easing/sine/InOut.ts\nfunction InOut10(v) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    return 0.5 * (1 - Math.cos(Math.PI * v));\n  }\n}\n\n// src/math/easing/sine/Out.ts\nfunction Out10(v) {\n  if (v === 0) {\n    return 0;\n  } else if (v === 1) {\n    return 1;\n  } else {\n    return Math.sin(v * Math.PI / 2);\n  }\n}\n\n// src/math/easing/Linear.ts\nvar Linear_exports = {};\n__export(Linear_exports, {\n  Linear: () => Linear\n});\nfunction Linear(v) {\n  return v;\n}\n\n// src/math/easing/Stepped.ts\nvar Stepped_exports = {};\n__export(Stepped_exports, {\n  Stepped: () => Stepped\n});\nfunction Stepped(v, steps = 1) {\n  if (v <= 0) {\n    return 0;\n  } else if (v >= 1) {\n    return 1;\n  } else {\n    return ((steps * v | 0) + 1) * (1 / steps);\n  }\n}\n\n// src/math/easing/GetEase.ts\nvar EaseMap = new Map([\n  [\"power0\", Linear],\n  [\"power1\", Out7],\n  [\"power2\", Out4],\n  [\"power3\", Out8],\n  [\"power4\", Out9],\n  [\"linear\", Linear],\n  [\"quad\", Out7],\n  [\"cubic\", Out4],\n  [\"quart\", Out8],\n  [\"quint\", Out9],\n  [\"sine\", Out10],\n  [\"expo\", Out6],\n  [\"circ\", Out3],\n  [\"elastic\", Out5],\n  [\"back\", Out],\n  [\"bounce\", Out2],\n  [\"stepped\", Stepped],\n  [\"quad.in\", In7],\n  [\"cubic.in\", In4],\n  [\"quart.in\", In8],\n  [\"quint.in\", In9],\n  [\"sine.in\", In10],\n  [\"expo.in\", In6],\n  [\"circ.in\", In3],\n  [\"elastic.in\", In5],\n  [\"back.in\", In],\n  [\"bounce.in\", In2],\n  [\"quad.out\", Out7],\n  [\"cubic.out\", Out4],\n  [\"quart.out\", Out8],\n  [\"quint.out\", Out9],\n  [\"sine.out\", Out10],\n  [\"expo.out\", Out6],\n  [\"circ.out\", Out3],\n  [\"elastic.out\", Out5],\n  [\"back.out\", Out],\n  [\"bounce.out\", Out2],\n  [\"quad.inout\", InOut7],\n  [\"cubic.inout\", InOut4],\n  [\"quart.inout\", InOut8],\n  [\"quint.inout\", InOut9],\n  [\"sine.inout\", InOut10],\n  [\"expo.inout\", InOut6],\n  [\"circ.inout\", InOut3],\n  [\"elastic.inout\", InOut5],\n  [\"back.inout\", InOut],\n  [\"bounce.inout\", InOut2]\n]);\nfunction GetEase(name) {\n  name = name.toLowerCase();\n  name = name.replace(\"ease\", \"\");\n  if (EaseMap.has(name)) {\n    return EaseMap.get(name);\n  } else {\n    return Linear;\n  }\n}\n\n// src/math/fuzzy/index.ts\nvar fuzzy_exports = {};\n__export(fuzzy_exports, {\n  FuzzyCeil: () => FuzzyCeil,\n  FuzzyEqual: () => FuzzyEqual,\n  FuzzyFloor: () => FuzzyFloor,\n  FuzzyGreaterThan: () => FuzzyGreaterThan,\n  FuzzyLessThan: () => FuzzyLessThan\n});\n\n// src/math/fuzzy/FuzzyCeil.ts\nfunction FuzzyCeil(value, epsilon = 1e-4) {\n  return Math.ceil(value - epsilon);\n}\n\n// src/math/fuzzy/FuzzyFloor.ts\nfunction FuzzyFloor(value, epsilon = 1e-4) {\n  return Math.floor(value + epsilon);\n}\n\n// src/math/fuzzy/FuzzyGreaterThan.ts\nfunction FuzzyGreaterThan(a, b, epsilon = 1e-4) {\n  return a > b - epsilon;\n}\n\n// src/math/fuzzy/FuzzyLessThan.ts\nfunction FuzzyLessThan(a, b, epsilon = 1e-4) {\n  return a < b + epsilon;\n}\n\n// src/math/interpolation/index.ts\nvar interpolation_exports = {};\n__export(interpolation_exports, {\n  BezierInterpolation: () => BezierInterpolation,\n  CatmullRomInterpolation: () => CatmullRomInterpolation,\n  CubicBezierInterpolation: () => CubicBezierInterpolation,\n  LinearInterpolation: () => LinearInterpolation,\n  QuadraticBezierInterpolation: () => QuadraticBezierInterpolation,\n  SmoothStepInterpolation: () => SmoothStepInterpolation,\n  SmootherStepInterpolation: () => SmootherStepInterpolation\n});\n\n// src/math/Factorial.ts\nfunction Factorial(value) {\n  if (value === 0) {\n    return 1;\n  }\n  let res = value;\n  while (--value) {\n    res *= value;\n  }\n  return res;\n}\n\n// src/math/Bernstein.ts\nfunction Bernstein(n, i) {\n  return Factorial(n) / Factorial(i) / Factorial(n - i);\n}\n\n// src/math/interpolation/BezierInterpolation.ts\nfunction BezierInterpolation(v, k) {\n  let b = 0;\n  const n = v.length - 1;\n  for (let i = 0; i <= n; i++) {\n    b += Math.pow(1 - k, n - i) * Math.pow(k, i) * v[i] * Bernstein(n, i);\n  }\n  return b;\n}\n\n// src/math/interpolation/CatmullRomInterpolation.ts\nfunction CatmullRomInterpolation(v, k) {\n  const m = v.length - 1;\n  let f = m * k;\n  let i = Math.floor(f);\n  if (v[0] === v[m]) {\n    if (k < 0) {\n      i = Math.floor(f = m * (1 + k));\n    }\n    return CatmullRom(f - i, v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m]);\n  } else {\n    if (k < 0) {\n      return v[0] - (CatmullRom(-f, v[0], v[0], v[1], v[1]) - v[0]);\n    }\n    if (k > 1) {\n      return v[m] - (CatmullRom(f - m, v[m], v[m], v[m - 1], v[m - 1]) - v[m]);\n    }\n    return CatmullRom(f - i, v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2]);\n  }\n}\n\n// src/math/interpolation/CubicBezierInterpolation.ts\nfunction P0(t, p) {\n  const k = 1 - t;\n  return k * k * k * p;\n}\nfunction P1(t, p) {\n  const k = 1 - t;\n  return 3 * k * k * t * p;\n}\nfunction P2(t, p) {\n  return 3 * (1 - t) * t * t * p;\n}\nfunction P3(t, p) {\n  return t * t * t * p;\n}\nfunction CubicBezierInterpolation(t, p0, p1, p2, p3) {\n  return P0(t, p0) + P1(t, p1) + P2(t, p2) + P3(t, p3);\n}\n\n// src/math/Linear.ts\nfunction Linear2(p0, p1, t) {\n  return (p1 - p0) * t + p0;\n}\n\n// src/math/interpolation/LinearInterpolation.ts\nfunction LinearInterpolation(v, k) {\n  const m = v.length - 1;\n  const f = m * k;\n  const i = Math.floor(f);\n  if (k < 0) {\n    return Linear2(v[0], v[1], f);\n  } else if (k > 1) {\n    return Linear2(v[m], v[m - 1], m - f);\n  } else {\n    return Linear2(v[i], v[i + 1 > m ? m : i + 1], f - i);\n  }\n}\n\n// src/math/interpolation/QuadraticBezierInterpolation.ts\nfunction P02(t, p) {\n  const k = 1 - t;\n  return k * k * p;\n}\nfunction P12(t, p) {\n  return 2 * (1 - t) * t * p;\n}\nfunction P22(t, p) {\n  return t * t * p;\n}\nfunction QuadraticBezierInterpolation(t, p0, p1, p2) {\n  return P02(t, p0) + P12(t, p1) + P22(t, p2);\n}\n\n// src/math/SmoothStep.ts\nfunction SmoothStep(x, min, max) {\n  if (x <= min) {\n    return 0;\n  }\n  if (x >= max) {\n    return 1;\n  }\n  x = (x - min) / (max - min);\n  return x * x * (3 - 2 * x);\n}\n\n// src/math/interpolation/SmoothStepInterpolation.ts\nfunction SmoothStepInterpolation(t, min, max) {\n  return min + (max - min) * SmoothStep(t, 0, 1);\n}\n\n// src/math/SmootherStep.ts\nfunction SmootherStep(x, min, max) {\n  x = Math.max(0, Math.min(1, (x - min) / (max - min)));\n  return x * x * x * (x * (x * 6 - 15) + 10);\n}\n\n// src/math/interpolation/SmootherStepInterpolation.ts\nfunction SmootherStepInterpolation(t, min, max) {\n  return min + (max - min) * SmootherStep(t, 0, 1);\n}\n\n// src/math/mat2d/index.ts\nvar mat2d_exports = {};\n__export(mat2d_exports, {\n  GetMat2dDeterminant: () => GetMat2dDeterminant,\n  GetMat2dFrobenius: () => GetMat2dFrobenius,\n  Mat2dAdd: () => Mat2dAdd,\n  Mat2dAppend: () => Mat2dAppend,\n  Mat2dClone: () => Mat2dClone,\n  Mat2dCopyFrom: () => Mat2dCopyFrom,\n  Mat2dCopyToContext: () => Mat2dCopyToContext,\n  Mat2dEquals: () => Mat2dEquals,\n  Mat2dFromRotation: () => Mat2dFromRotation,\n  Mat2dFromScaling: () => Mat2dFromScaling,\n  Mat2dFromTranslation: () => Mat2dFromTranslation,\n  Mat2dFuzzyEquals: () => Mat2dFuzzyEquals,\n  Mat2dGlobalToLocal: () => Mat2dGlobalToLocal,\n  Mat2dITRS: () => Mat2dITRS,\n  Mat2dITRSS: () => Mat2dITRSS,\n  Mat2dIdentity: () => Mat2dIdentity,\n  Mat2dInvert: () => Mat2dInvert,\n  Mat2dLocalToGlobal: () => Mat2dLocalToGlobal,\n  Mat2dMultiply: () => Mat2dMultiply,\n  Mat2dMultiplyScalar: () => Mat2dMultiplyScalar,\n  Mat2dMultiplyScalarAndAdd: () => Mat2dMultiplyScalarAndAdd,\n  Mat2dRotate: () => Mat2dRotate,\n  Mat2dScale: () => Mat2dScale,\n  Mat2dSetToContext: () => Mat2dSetToContext,\n  Mat2dSkew: () => Mat2dSkew,\n  Mat2dSubtract: () => Mat2dSubtract,\n  Mat2dTranslate: () => Mat2dTranslate,\n  Mat2dZero: () => Mat2dZero,\n  Matrix2D: () => Matrix2D\n});\n\n// src/math/mat2d/GetMat2dDeterminant.ts\nfunction GetMat2dDeterminant(src) {\n  const {a, b, c, d} = src;\n  return a * d - b * c;\n}\n\n// src/math/mat2d/GetMat2dFrobenius.ts\nfunction GetMat2dFrobenius(src) {\n  return Math.hypot(src.a, src.b, src.c, src.d, src.tx, src.ty, 1);\n}\n\n// src/math/mat2d/Mat2dAdd.ts\nfunction Mat2dAdd(a, b, out = new Matrix2D()) {\n  return out.set(a.a + b.a, a.b + b.b, a.c + b.c, a.d + b.d, a.tx + b.tx, a.ty + b.ty);\n}\n\n// src/math/mat2d/Mat2dAppend.ts\nfunction Mat2dAppend(mat1, mat2, out = new Matrix2D()) {\n  const {a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1} = mat1;\n  const {a: a2, b: b2, c: c2, d: d2, tx: tx2, ty: ty2} = mat2;\n  return out.set(a2 * a1 + b2 * c1, a2 * b1 + b2 * d1, c2 * a1 + d2 * c1, c2 * b1 + d2 * d1, tx2 * a1 + ty2 * c1 + tx1, tx2 * b1 + ty2 * d1 + ty1);\n}\n\n// src/math/mat2d/Mat2dClone.ts\nfunction Mat2dClone(src) {\n  return new Matrix2D(src.a, src.b, src.c, src.d, src.tx, src.ty);\n}\n\n// src/math/mat2d/Mat2dCopyFrom.ts\nfunction Mat2dCopyFrom(src, target) {\n  const {a, b, c, d, tx, ty} = src;\n  return target.set(a, b, c, d, tx, ty);\n}\n\n// src/math/mat2d/Mat2dCopyToContext.ts\nfunction Mat2dCopyToContext(src, context) {\n  const {a, b, c, d, tx, ty} = src;\n  context.transform(a, b, c, d, tx, ty);\n  return context;\n}\n\n// src/math/mat2d/Mat2dEquals.ts\nfunction Mat2dEquals(a, b) {\n  return a.a === b.a && a.b === b.b && a.c === b.c && a.d === b.d && a.tx === b.tx && a.ty === b.ty;\n}\n\n// src/math/mat2d/Mat2dRotate.ts\nfunction Mat2dRotate(target, angle, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  return out.set(a * cos + c * sin, b * cos + d * sin, a * -sin + c * cos, b * -sin + d * cos, tx, ty);\n}\n\n// src/math/mat2d/Mat2dFromRotation.ts\nfunction Mat2dFromRotation(angle) {\n  const target = new Matrix2D();\n  return Mat2dRotate(target, angle, target);\n}\n\n// src/math/mat2d/Mat2dScale.ts\nfunction Mat2dScale(target, scaleX, scaleY, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  return out.set(a * scaleX, b * scaleX, c * scaleY, d * scaleY, tx, ty);\n}\n\n// src/math/mat2d/Mat2dFromScaling.ts\nfunction Mat2dFromScaling(scaleX, scaleY = scaleX) {\n  const target = new Matrix2D();\n  return Mat2dScale(target, scaleX, scaleY, target);\n}\n\n// src/math/mat2d/Mat2dTranslate.ts\nfunction Mat2dTranslate(target, x, y, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  out.tx = a * x + c * y + tx;\n  out.ty = b * x + d * y + ty;\n  return out;\n}\n\n// src/math/mat2d/Mat2dFromTranslation.ts\nfunction Mat2dFromTranslation(x, y) {\n  const target = new Matrix2D();\n  return Mat2dTranslate(target, x, y, target);\n}\n\n// src/math/mat2d/Mat2dFuzzyEquals.ts\nfunction Mat2dFuzzyEquals(a, b, epsilon = 1e-6) {\n  const {a: a0, b: b0, c: c0, d: d0, tx: tx0, ty: ty0} = a;\n  const {a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1} = b;\n  return Math.abs(a0 - a1) <= epsilon * Math.max(1, Math.abs(a0), Math.abs(a1)) && Math.abs(b0 - b1) <= epsilon * Math.max(1, Math.abs(b0), Math.abs(b1)) && Math.abs(c0 - c1) <= epsilon * Math.max(1, Math.abs(c0), Math.abs(c1)) && Math.abs(d0 - d1) <= epsilon * Math.max(1, Math.abs(d0), Math.abs(d1)) && Math.abs(tx0 - tx1) <= epsilon * Math.max(1, Math.abs(tx0), Math.abs(tx1)) && Math.abs(ty0 - ty1) <= epsilon * Math.max(1, Math.abs(ty0), Math.abs(ty1));\n}\n\n// src/math/vec2/Vec2.ts\nvar Vec2 = class {\n  constructor(x = 0, y = 0) {\n    this.set(x, y);\n  }\n  set(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1]);\n  }\n  toString() {\n    const {x, y} = this;\n    return `{ x=${x}, y=${y} }`;\n  }\n};\n\n// src/math/mat2d/Mat2dGlobalToLocal.ts\nfunction Mat2dGlobalToLocal(mat, x, y, out = new Vec2()) {\n  const {a, b, c, d, tx, ty} = mat;\n  const id = 1 / (a * d + c * -b);\n  return out.set(d * id * x + -c * id * y + (ty * c - tx * d) * id, a * id * y + -b * id * x + (-ty * a + tx * b) * id);\n}\n\n// src/math/mat2d/Mat2dITRS.ts\nfunction Mat2dITRS(target, x, y, angle, scaleX, scaleY) {\n  if (angle === 0) {\n    return target.set(1, 0, 0, 1, x, y);\n  } else {\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n    return target.set(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n  }\n}\n\n// src/math/mat2d/Mat2dITRSS.ts\nfunction Mat2dITRSS(target, x, y, angle = 0, scaleX = 1, scaleY = 1, skewX = 0, skewY = 0) {\n  if (angle === 0) {\n    return target.set(1, 0, 0, 1, x, y);\n  } else {\n    return target.set(Math.cos(angle + skewY) * scaleX, Math.sin(angle + skewY) * scaleX, -Math.sin(angle - skewX) * scaleY, Math.cos(angle - skewX) * scaleY, x, y);\n  }\n}\n\n// src/math/mat2d/Mat2dIdentity.ts\nfunction Mat2dIdentity() {\n  return new Matrix2D();\n}\n\n// src/math/mat2d/Mat2dInvert.ts\nfunction Mat2dInvert(target, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  let determinant = a * d - b * c;\n  if (determinant) {\n    determinant = 1 / determinant;\n    out.set(d * determinant, -b * determinant, -c * determinant, a * determinant, (c * ty - d * tx) * determinant, (b * tx - a * ty) * determinant);\n  }\n  return out;\n}\n\n// src/math/mat2d/Mat2dLocalToGlobal.ts\nfunction Mat2dLocalToGlobal(mat, x, y, out = new Vec2()) {\n  const {a, b, c, d, tx, ty} = mat;\n  return out.set(a * x + c * y + tx, b * x + d * y + ty);\n}\n\n// src/math/mat2d/Mat2dMultiply.ts\nfunction Mat2dMultiply(target, src, out = new Matrix2D()) {\n  const {a: a0, b: b0, c: c0, d: d0, tx: tx0, ty: ty0} = target;\n  const {a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1} = src;\n  return out.set(a0 * a1 + c0 * b1, b0 * a1 + d0 * b1, a0 * c1 + c0 * d1, b0 * c1 + d0 * d1, a0 * tx1 + c0 * ty1 + tx0, b0 * tx1 + d0 * ty1 + ty0);\n}\n\n// src/math/mat2d/Mat2dMultiplyScalar.ts\nfunction Mat2dMultiplyScalar(target, scalar, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  return out.set(a * scalar, b * scalar, c * scalar, d * scalar, tx * scalar, ty * scalar);\n}\n\n// src/math/mat2d/Mat2dMultiplyScalarAndAdd.ts\nfunction Mat2dMultiplyScalarAndAdd(target, src, scalar, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = src;\n  const {a: ta, b: tb, c: tc, d: td, tx: ttx, ty: tty} = target;\n  return out.set(ta + a * scalar, tb + b * scalar, tc + c * scalar, td + d * scalar, ttx + tx * scalar, tty + ty * scalar);\n}\n\n// src/math/mat2d/Mat2dSetToContext.ts\nfunction Mat2dSetToContext(src, context) {\n  const {a, b, c, d, tx, ty} = src;\n  context.setTransform(a, b, c, d, tx, ty);\n  return context;\n}\n\n// src/math/mat2d/Mat2dSkew.ts\nfunction Mat2dSkew(target, angleX, angleY, out = new Matrix2D()) {\n  const {a, b, c, d, tx, ty} = target;\n  return out.set(a, b + Math.tan(angleX), c + Math.tan(angleY), d, tx, ty);\n}\n\n// src/math/mat2d/Mat2dSubtract.ts\nfunction Mat2dSubtract(a, b, out = new Matrix2D()) {\n  return out.set(a.a - b.a, a.b - b.b, a.c - b.c, a.d - b.d, a.tx - b.tx, a.ty - b.ty);\n}\n\n// src/math/mat2d/Mat2dZero.ts\nfunction Mat2dZero(target) {\n  return target.set(0, 0, 0, 0, 0, 0);\n}\n\n// src/math/pow2/index.ts\nvar pow2_exports = {};\n__export(pow2_exports, {\n  GetPowerOfTwo: () => GetPowerOfTwo,\n  IsSizePowerOfTwo: () => IsSizePowerOfTwo,\n  IsValuePowerOfTwo: () => IsValuePowerOfTwo\n});\n\n// src/math/pow2/GetPowerOfTwo.ts\nfunction GetPowerOfTwo(value) {\n  const index = Math.log(value) / 0.6931471805599453;\n  return 1 << Math.ceil(index);\n}\n\n// src/math/pow2/IsSizePowerOfTwo.ts\nfunction IsSizePowerOfTwo(width, height) {\n  if (width < 1 || height < 1) {\n    return false;\n  }\n  return (width & width - 1) === 0 && (height & height - 1) === 0;\n}\n\n// src/math/pow2/IsValuePowerOfTwo.ts\nfunction IsValuePowerOfTwo(value) {\n  return value > 0 && (value & value - 1) === 0;\n}\n\n// src/math/snap/index.ts\nvar snap_exports = {};\n__export(snap_exports, {\n  SnapCeil: () => SnapCeil,\n  SnapFloor: () => SnapFloor,\n  SnapTo: () => SnapTo\n});\n\n// src/math/snap/SnapCeil.ts\nfunction SnapCeil(value, gap, start = 0, divide = false) {\n  if (gap === 0) {\n    return value;\n  }\n  value -= start;\n  value = gap * Math.ceil(value / gap);\n  return divide ? (start + value) / gap : start + value;\n}\n\n// src/math/snap/SnapFloor.ts\nfunction SnapFloor(value, gap, start = 0, divide = false) {\n  if (gap === 0) {\n    return value;\n  }\n  value -= start;\n  value = gap * Math.floor(value / gap);\n  return divide ? (start + value) / gap : start + value;\n}\n\n// src/math/snap/SnapTo.ts\nfunction SnapTo(value, gap, start = 0, divide = false) {\n  if (gap === 0) {\n    return value;\n  }\n  value -= start;\n  value = gap * Math.round(value / gap);\n  return divide ? (start + value) / gap : start + value;\n}\n\n// src/math/vec2/index.ts\nvar vec2_exports = {};\n__export(vec2_exports, {\n  GetChebyshevDistance: () => GetChebyshevDistance,\n  GetDistanceFromSegment: () => GetDistanceFromSegment,\n  GetVec2Angle: () => GetVec2Angle,\n  GetVec2AngleY: () => GetVec2AngleY,\n  GetVec2Distance: () => GetVec2Distance,\n  GetVec2DistancePower: () => GetVec2DistancePower,\n  GetVec2DistanceSquared: () => GetVec2DistanceSquared,\n  GetVec2Length: () => GetVec2Length,\n  GetVec2LengthSquared: () => GetVec2LengthSquared,\n  GetVec2ManhattanDistance: () => GetVec2ManhattanDistance,\n  GetVec2ManhattanLength: () => GetVec2ManhattanLength,\n  Vec2: () => Vec2,\n  Vec2Abs: () => Vec2Abs,\n  Vec2Add: () => Vec2Add,\n  Vec2AddScalar: () => Vec2AddScalar,\n  Vec2Bezier: () => Vec2Bezier,\n  Vec2Callback: () => Vec2Callback,\n  Vec2CatmullRom: () => Vec2CatmullRom,\n  Vec2Ceil: () => Vec2Ceil,\n  Vec2Center: () => Vec2Center,\n  Vec2Clamp: () => Vec2Clamp,\n  Vec2ClampScalar: () => Vec2ClampScalar,\n  Vec2Clone: () => Vec2Clone,\n  Vec2CopyFrom: () => Vec2CopyFrom,\n  Vec2Cross: () => Vec2Cross,\n  Vec2Divide: () => Vec2Divide,\n  Vec2DivideScalar: () => Vec2DivideScalar,\n  Vec2Dot: () => Vec2Dot,\n  Vec2Equals: () => Vec2Equals,\n  Vec2Floor: () => Vec2Floor,\n  Vec2Fract: () => Vec2Fract,\n  Vec2FromGridIndex: () => Vec2FromGridIndex,\n  Vec2FromTransform: () => Vec2FromTransform,\n  Vec2FuzzyEquals: () => Vec2FuzzyEquals,\n  Vec2Hermite: () => Vec2Hermite,\n  Vec2Inverse: () => Vec2Inverse,\n  Vec2Lerp: () => Vec2Lerp,\n  Vec2Max: () => Vec2Max,\n  Vec2Min: () => Vec2Min,\n  Vec2Multiply: () => Vec2Multiply,\n  Vec2MultiplyByFloats: () => Vec2MultiplyByFloats,\n  Vec2Negate: () => Vec2Negate,\n  Vec2Normalize: () => Vec2Normalize,\n  Vec2One: () => Vec2One,\n  Vec2PerpDot: () => Vec2PerpDot,\n  Vec2Random: () => Vec2Random,\n  Vec2Rotate: () => Vec2Rotate,\n  Vec2Round: () => Vec2Round,\n  Vec2RoundToZero: () => Vec2RoundToZero,\n  Vec2Scale: () => Vec2Scale,\n  Vec2ScaleAndAdd: () => Vec2ScaleAndAdd,\n  Vec2SetLength: () => Vec2SetLength,\n  Vec2Subtract: () => Vec2Subtract,\n  Vec2SubtractScalar: () => Vec2SubtractScalar,\n  Vec2Transform: () => Vec2Transform,\n  Vec2TransformMat2d: () => Vec2TransformMat2d,\n  Vec2TransformMat4: () => Vec2TransformMat4,\n  Vec2Zero: () => Vec2Zero\n});\n\n// src/math/vec2/GetChebyshevDistance.ts\nfunction GetChebyshevDistance(a, b) {\n  return Math.max(Math.abs(a.x - b.x), Math.abs(a.y - b.y));\n}\n\n// src/math/vec2/GetVec2DistanceSquared.ts\nfunction GetVec2DistanceSquared(a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  return x * x + y * y;\n}\n\n// src/math/vec2/GetVec2Distance.ts\nfunction GetVec2Distance(a, b) {\n  return Math.sqrt(GetVec2DistanceSquared(a, b));\n}\n\n// src/math/vec2/Vec2Add.ts\nfunction Vec2Add(a, b, out = new Vec2()) {\n  return out.set(a.x + b.x, a.y + b.y);\n}\n\n// src/math/vec2/Vec2Dot.ts\nfunction Vec2Dot(a, b) {\n  return a.x * b.x + a.y * b.y;\n}\n\n// src/math/vec2/Vec2MultiplyByFloats.ts\nfunction Vec2MultiplyByFloats(a, x, y, out = new Vec2()) {\n  return out.set(a.x * x, a.y * y);\n}\n\n// src/math/vec2/Vec2Subtract.ts\nfunction Vec2Subtract(a, b, out = new Vec2()) {\n  return out.set(a.x - b.x, a.y - b.y);\n}\n\n// src/math/vec2/GetDistanceFromSegment.ts\nfunction GetDistanceFromSegment(p, a, b) {\n  const d = GetVec2DistanceSquared(a, b);\n  if (d === 0) {\n    return GetVec2Distance(p, a);\n  }\n  const v = Vec2Subtract(b, a);\n  Vec2Subtract(p, a, p);\n  const t = Math.max(0, Math.min(1, Vec2Dot(p, v) / 12));\n  const proj = Vec2Add(a, Vec2MultiplyByFloats(v, t, t, v));\n  return GetVec2Distance(p, proj);\n}\n\n// src/math/vec2/GetVec2Angle.ts\nfunction GetVec2Angle(a, b) {\n  return Math.atan2(b.y - a.y, b.x - a.x);\n}\n\n// src/math/vec2/GetVec2AngleY.ts\nfunction GetVec2AngleY(a, b) {\n  return Math.atan2(b.x - a.x, b.y - a.y);\n}\n\n// src/math/vec2/GetVec2DistancePower.ts\nfunction GetVec2DistancePower(a, b, pow = 2) {\n  return Math.sqrt(Math.pow(b.x - a.x, pow) + Math.pow(b.y - a.y, pow));\n}\n\n// src/math/vec2/GetVec2Length.ts\nfunction GetVec2Length(a) {\n  return Math.sqrt(a.x * a.x + a.y * a.y);\n}\n\n// src/math/vec2/GetVec2LengthSquared.ts\nfunction GetVec2LengthSquared(a) {\n  return a.x * a.x + a.y * a.y;\n}\n\n// src/math/vec2/GetVec2ManhattanDistance.ts\nfunction GetVec2ManhattanDistance(a, b) {\n  return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n}\n\n// src/math/vec2/GetVec2ManhattanLength.ts\nfunction GetVec2ManhattanLength(a) {\n  return Math.abs(a.x) + Math.abs(a.y);\n}\n\n// src/math/vec2/Vec2Abs.ts\nfunction Vec2Abs(a, out = new Vec2()) {\n  return out.set(Math.abs(a.x), Math.abs(a.y));\n}\n\n// src/math/vec2/Vec2AddScalar.ts\nfunction Vec2AddScalar(a, scalar, out = new Vec2()) {\n  return out.set(a.x + scalar, a.y + scalar);\n}\n\n// src/math/vec2/Vec2Bezier.ts\nfunction Vec2Bezier(a, b, c, d, t, out = new Vec2()) {\n  return out.set(Bezier(t, a.x, b.x, c.x, d.x), Bezier(t, a.y, b.y, c.y, d.y));\n}\n\n// src/math/vec2/Vec2CatmullRom.ts\nfunction Vec2CatmullRom(p1, p2, p3, p4, t, out = new Vec2()) {\n  return out.set(CatmullRom(t, p1.x, p2.x, p3.x, p4.x), CatmullRom(t, p1.y, p2.y, p3.y, p4.y));\n}\n\n// src/math/vec2/Vec2Ceil.ts\nfunction Vec2Ceil(a, out = new Vec2()) {\n  return out.set(Math.ceil(a.x), Math.ceil(a.y));\n}\n\n// src/math/vec2/Vec2Scale.ts\nfunction Vec2Scale(a, scalar, out = new Vec2()) {\n  return out.set(a.x * scalar, a.y * scalar);\n}\n\n// src/math/vec2/Vec2Center.ts\nfunction Vec2Center(a, b, out = new Vec2()) {\n  Vec2Add(a, b, out);\n  return Vec2Scale(out, 0.5, out);\n}\n\n// src/math/vec2/Vec2Clamp.ts\nfunction Vec2Clamp(a, min, max, out = new Vec2()) {\n  return out.set(Clamp(a.x, min.x, max.x), Clamp(a.y, min.y, max.y));\n}\n\n// src/math/vec2/Vec2ClampScalar.ts\nfunction Vec2ClampScalar(a, min, max, out = new Vec2()) {\n  return out.set(Clamp(a.x, min, max), Clamp(a.y, min, max));\n}\n\n// src/math/vec2/Vec2Clone.ts\nfunction Vec2Clone(source) {\n  return new Vec2(source.x, source.y);\n}\n\n// src/math/vec2/Vec2CopyFrom.ts\nfunction Vec2CopyFrom(source, dest) {\n  return dest.set(source.x, source.y);\n}\n\n// src/math/vec2/Vec2Cross.ts\nfunction Vec2Cross(a, b) {\n  return a.x * b.y - a.y * b.x;\n}\n\n// src/math/vec2/Vec2Divide.ts\nfunction Vec2Divide(a, b, out = new Vec2()) {\n  return out.set(a.x / b.x, a.y / b.y);\n}\n\n// src/math/vec2/Vec2DivideScalar.ts\nfunction Vec2DivideScalar(a, scalar, out = new Vec2()) {\n  return out.set(a.x / scalar, a.y / scalar);\n}\n\n// src/math/vec2/Vec2Equals.ts\nfunction Vec2Equals(a, b) {\n  return a.x === b.x && a.y === b.y;\n}\n\n// src/math/vec2/Vec2Floor.ts\nfunction Vec2Floor(a, out = new Vec2()) {\n  return out.set(Math.floor(a.x), Math.floor(a.y));\n}\n\n// src/math/vec2/Vec2Fract.ts\nfunction Vec2Fract(a, out = new Vec2()) {\n  return out.set(a.x - Math.floor(a.x), a.y - Math.floor(a.y));\n}\n\n// src/math/vec2/Vec2FromGridIndex.ts\nfunction Vec2FromGridIndex(index, width, height, out = new Vec2()) {\n  let x = 0;\n  let y = 0;\n  const total = width * height;\n  if (index > 0 && index <= total) {\n    if (index > width - 1) {\n      y = Math.floor(index / width);\n      x = index - y * width;\n    } else {\n      x = index;\n    }\n    out.set(x, y);\n  }\n  return out;\n}\n\n// src/math/vec2/Vec2FromTransform.ts\nfunction Vec2FromTransform(x, y, positionX, positionY, rotation, scaleX, scaleY, out = new Vec2()) {\n  const sin = Math.sin(rotation);\n  const cos = Math.cos(rotation);\n  const a = cos * scaleX;\n  const b = sin * scaleX;\n  const c = -sin * scaleY;\n  const d = cos * scaleY;\n  const id = 1 / (a * d + c * -b);\n  return out.set(d * id * x + -c * id * y + (positionY * c - positionX * d) * id, a * id * y + -b * id * x + (-positionY * a + positionX * b) * id);\n}\n\n// src/math/vec2/Vec2FuzzyEquals.ts\nfunction Vec2FuzzyEquals(a, b, epsilon = 1e-4) {\n  return FuzzyEqual(a.x, b.x, epsilon) && FuzzyEqual(a.y, b.y, epsilon);\n}\n\n// src/math/vec2/Vec2Hermite.ts\nfunction Vec2Hermite(a, b, c, d, t, out = new Vec2()) {\n  return out.set(Hermite(t, a.x, b.x, c.x, d.x), Hermite(t, a.y, b.y, c.y, d.y));\n}\n\n// src/math/vec2/Vec2Inverse.ts\nfunction Vec2Inverse(a, out = new Vec2()) {\n  return out.set(1 / a.x, 1 / a.y);\n}\n\n// src/math/vec2/Vec2Lerp.ts\nfunction Vec2Lerp(a, b, t, out = new Vec2()) {\n  const x = a.x;\n  const y = a.y;\n  return out.set(x + t * (b.x - x), y + t * (b.y - y));\n}\n\n// src/math/vec2/Vec2Max.ts\nfunction Vec2Max(a, b, out = new Vec2()) {\n  const {x: ax, y: ay} = a;\n  const {x: bx, y: by} = b;\n  return out.set(Math.max(ax, bx), Math.max(ay, by));\n}\n\n// src/math/vec2/Vec2Min.ts\nfunction Vec2Min(a, b, out = new Vec2()) {\n  const {x: ax, y: ay} = a;\n  const {x: bx, y: by} = b;\n  return out.set(Math.min(ax, bx), Math.min(ay, by));\n}\n\n// src/math/vec2/Vec2Multiply.ts\nfunction Vec2Multiply(a, b, out = new Vec2()) {\n  return out.set(a.x * b.x, a.y * b.y);\n}\n\n// src/math/vec2/Vec2Negate.ts\nfunction Vec2Negate(a, out = new Vec2()) {\n  return out.set(-a.x, -a.y);\n}\n\n// src/math/vec2/Vec2Normalize.ts\nfunction Vec2Normalize(a, out = new Vec2()) {\n  return Vec2DivideScalar(a, GetVec2Length(a) || 1, out);\n}\n\n// src/math/vec2/Vec2One.ts\nfunction Vec2One() {\n  return new Vec2(1, 1);\n}\n\n// src/math/vec2/Vec2PerpDot.ts\nfunction Vec2PerpDot(a, b) {\n  return a.x * b.y - a.y * b.x;\n}\n\n// src/math/vec2/Vec2Random.ts\nfunction Vec2Random(a, scale = 1, out = new Vec2()) {\n  const r = Math.random() * 2 * Math.PI;\n  return out.set(Math.cos(r) * scale, Math.sin(r) * scale);\n}\n\n// src/math/vec2/Vec2Rotate.ts\nfunction Vec2Rotate(a, origin, angle, out = new Vec2()) {\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  const x = a.x - origin.x;\n  const y = a.y - origin.y;\n  return out.set(x * c - y * s + origin.x, x * s + y * c + origin.y);\n}\n\n// src/math/vec2/Vec2Round.ts\nfunction Vec2Round(a, out = new Vec2()) {\n  return out.set(Math.round(a.x), Math.round(a.y));\n}\n\n// src/math/vec2/Vec2RoundToZero.ts\nfunction Vec2RoundToZero(a, out = new Vec2()) {\n  return out.set(a.x < 0 ? Math.ceil(a.x) : Math.floor(a.x), a.y < 0 ? Math.ceil(a.y) : Math.floor(a.y));\n}\n\n// src/math/vec2/Vec2ScaleAndAdd.ts\nfunction Vec2ScaleAndAdd(a, b, scalar, out = new Vec2()) {\n  return out.set(a.x + b.x * scalar, a.y + b.y * scalar);\n}\n\n// src/math/vec2/Vec2SetLength.ts\nfunction Vec2SetLength(a, length, out = new Vec2()) {\n  Vec2Normalize(a, out);\n  return Vec2Scale(out, length, out);\n}\n\n// src/math/vec2/Vec2SubtractScalar.ts\nfunction Vec2SubtractScalar(a, scalar, out = new Vec2()) {\n  return out.set(a.x - scalar, a.y - scalar);\n}\n\n// src/math/vec2/Vec2Transform.ts\nfunction Vec2Transform(v, positionX, positionY, rotation, scaleX, scaleY, out = new Vec2()) {\n  return Vec2FromTransform(v.x, v.y, positionX, positionY, rotation, scaleX, scaleY, out);\n}\n\n// src/math/vec2/Vec2TransformMat2d.ts\nfunction Vec2TransformMat2d(v, m, out = new Vec2()) {\n  const {a, b, c, d, tx, ty} = m;\n  return out.set(a * v.x + c * v.y + tx, b * v.x + d * v.y + ty);\n}\n\n// src/math/vec2/Vec2TransformMat4.ts\nfunction Vec2TransformMat4(v, m, out = new Vec2()) {\n  const data = m.data;\n  return out.set(data[0] * v.x + data[4] * v.y + data[12], data[1] * v.x + data[5] * v.y + data[13]);\n}\n\n// src/math/vec2/Vec2Zero.ts\nfunction Vec2Zero() {\n  return new Vec2(0, 0);\n}\n\n// src/math/vec4/index.ts\nvar vec4_exports = {};\n__export(vec4_exports, {\n  GetVec4Distance: () => GetVec4Distance,\n  GetVec4DistanceSquared: () => GetVec4DistanceSquared,\n  GetVec4Length: () => GetVec4Length,\n  GetVec4LengthSquared: () => GetVec4LengthSquared,\n  GetVec4ManhattanDistance: () => GetVec4ManhattanDistance,\n  GetVec4ManhattanLength: () => GetVec4ManhattanLength,\n  RGBACallback: () => RGBACallback,\n  Vec4: () => Vec4,\n  Vec4Abs: () => Vec4Abs,\n  Vec4Add: () => Vec4Add,\n  Vec4AddScalar: () => Vec4AddScalar,\n  Vec4Bezier: () => Vec4Bezier,\n  Vec4Callback: () => Vec4Callback,\n  Vec4CatmullRom: () => Vec4CatmullRom,\n  Vec4Ceil: () => Vec4Ceil,\n  Vec4Center: () => Vec4Center,\n  Vec4Clamp: () => Vec4Clamp,\n  Vec4ClampLength: () => Vec4ClampLength,\n  Vec4ClampScalar: () => Vec4ClampScalar,\n  Vec4Clone: () => Vec4Clone,\n  Vec4CopyFrom: () => Vec4CopyFrom,\n  Vec4Cross: () => Vec4Cross,\n  Vec4Divide: () => Vec4Divide,\n  Vec4DivideScalar: () => Vec4DivideScalar,\n  Vec4Dot: () => Vec4Dot,\n  Vec4Equals: () => Vec4Equals,\n  Vec4Floor: () => Vec4Floor,\n  Vec4Fract: () => Vec4Fract,\n  Vec4FuzzyEquals: () => Vec4FuzzyEquals,\n  Vec4Hermite: () => Vec4Hermite,\n  Vec4Lerp: () => Vec4Lerp,\n  Vec4Max: () => Vec4Max,\n  Vec4Min: () => Vec4Min,\n  Vec4Multiply: () => Vec4Multiply,\n  Vec4MultiplyByFloats: () => Vec4MultiplyByFloats,\n  Vec4Negate: () => Vec4Negate,\n  Vec4Normalize: () => Vec4Normalize,\n  Vec4One: () => Vec4One,\n  Vec4Random: () => Vec4Random,\n  Vec4Round: () => Vec4Round,\n  Vec4RoundToZero: () => Vec4RoundToZero,\n  Vec4Scale: () => Vec4Scale,\n  Vec4ScaleAndAdd: () => Vec4ScaleAndAdd,\n  Vec4SetLength: () => Vec4SetLength,\n  Vec4Subtract: () => Vec4Subtract,\n  Vec4SubtractScalar: () => Vec4SubtractScalar,\n  Vec4TransformMat4: () => Vec4TransformMat4,\n  Vec4Zero: () => Vec4Zero\n});\n\n// src/math/vec4/GetVec4DistanceSquared.ts\nfunction GetVec4DistanceSquared(a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  const z = a.z - b.z;\n  const w = a.w - b.w;\n  return x * x + y * y + z * z + w * w;\n}\n\n// src/math/vec4/GetVec4Distance.ts\nfunction GetVec4Distance(a, b) {\n  return Math.sqrt(GetVec4DistanceSquared(a, b));\n}\n\n// src/math/vec4/GetVec4Length.ts\nfunction GetVec4Length(a) {\n  const {x, y, z, w} = a;\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n// src/math/vec4/GetVec4LengthSquared.ts\nfunction GetVec4LengthSquared(a) {\n  const {x, y, z, w} = a;\n  return x * x + y * y + z * z + w * w;\n}\n\n// src/math/vec4/GetVec4ManhattanDistance.ts\nfunction GetVec4ManhattanDistance(a, b) {\n  return Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z) + Math.abs(a.w - b.w);\n}\n\n// src/math/vec4/GetVec4ManhattanLength.ts\nfunction GetVec4ManhattanLength(a) {\n  const {x, y, z, w} = a;\n  return Math.abs(x) + Math.abs(y) + Math.abs(z) + Math.abs(w);\n}\n\n// src/math/vec4/Vec4Callback.ts\nvar Vec4Callback = class {\n  constructor(onChange, x = 0, y = 0, z = 0, w = 0) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChange = onChange;\n  }\n  destroy() {\n    this.onChange = NOOP;\n  }\n  set(x = 0, y = 0, z = 0, w = 0) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    if (this.onChange) {\n      this.onChange(this);\n    }\n    return this;\n  }\n  get x() {\n    return this._x;\n  }\n  set x(value) {\n    const prev = this._x;\n    this._x = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get y() {\n    return this._y;\n  }\n  set y(value) {\n    const prev = this._y;\n    this._y = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get z() {\n    return this._z;\n  }\n  set z(value) {\n    const prev = this._z;\n    this._z = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  get w() {\n    return this._w;\n  }\n  set w(value) {\n    const prev = this._w;\n    this._w = value;\n    if (prev !== value) {\n      this.onChange(this);\n    }\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y, z, w} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    dst[index + 2] = z;\n    dst[index + 3] = w;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1], src[index + 2], src[index + 3]);\n  }\n  toString() {\n    const {x, y, z, w} = this;\n    return `{ x=${x}, y=${y}, z=${z}, w=${w} }`;\n  }\n};\n\n// src/math/vec4/RGBACallback.ts\nvar RGBACallback = class extends Vec4Callback {\n  constructor(onChange, r = 0, g = 0, b = 0, a = 1) {\n    super(onChange, r, g, b, a);\n  }\n  set r(value) {\n    this.x = value;\n  }\n  get r() {\n    return this.x;\n  }\n  set g(value) {\n    this.y = value;\n  }\n  get g() {\n    return this.y;\n  }\n  set b(value) {\n    this.z = value;\n  }\n  get b() {\n    return this.z;\n  }\n  set a(value) {\n    this.w = value;\n  }\n  get a() {\n    return this.w;\n  }\n  toString() {\n    const {x, y, z, w} = this;\n    return `[ r=${x}, g=${y}, b=${z}, a=${w} ]`;\n  }\n};\n\n// src/math/vec4/Vec4.ts\nvar Vec4 = class {\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    this.set(x, y, z, w);\n  }\n  set(x = 0, y = 0, z = 0, w = 1) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  }\n  toArray(dst = [], index = 0) {\n    const {x, y, z, w} = this;\n    dst[index] = x;\n    dst[index + 1] = y;\n    dst[index + 2] = z;\n    dst[index + 3] = w;\n    return dst;\n  }\n  fromArray(src, index = 0) {\n    return this.set(src[index], src[index + 1], src[index + 2], src[index + 3]);\n  }\n  toString() {\n    const {x, y, z, w} = this;\n    return `{ x=${x}, y=${y}, z=${z}, w=${w} }`;\n  }\n};\n\n// src/math/vec4/Vec4Abs.ts\nfunction Vec4Abs(a, out = new Vec4()) {\n  return out.set(Math.abs(a.x), Math.abs(a.y), Math.abs(a.z), Math.abs(a.w));\n}\n\n// src/math/vec4/Vec4Add.ts\nfunction Vec4Add(a, b, out = new Vec4()) {\n  return out.set(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);\n}\n\n// src/math/vec4/Vec4AddScalar.ts\nfunction Vec4AddScalar(a, scalar, out = new Vec4()) {\n  return out.set(a.x + scalar, a.y + scalar, a.z + scalar, a.w + scalar);\n}\n\n// src/math/vec4/Vec4Bezier.ts\nfunction Vec4Bezier(a, b, c, d, t, out = new Vec4()) {\n  return out.set(Bezier(t, a.x, b.x, c.x, d.x), Bezier(t, a.y, b.y, c.y, d.y), Bezier(t, a.z, b.z, c.z, d.z), Bezier(t, a.w, b.w, c.w, d.w));\n}\n\n// src/math/vec4/Vec4CatmullRom.ts\nfunction Vec4CatmullRom(p1, p2, p3, p4, t, out = new Vec4()) {\n  return out.set(CatmullRom(t, p1.x, p2.x, p3.x, p4.x), CatmullRom(t, p1.y, p2.y, p3.y, p4.y), CatmullRom(t, p1.z, p2.z, p3.z, p4.z), CatmullRom(t, p1.w, p2.w, p3.w, p4.w));\n}\n\n// src/math/vec4/Vec4Ceil.ts\nfunction Vec4Ceil(a, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(Math.ceil(x), Math.ceil(y), Math.ceil(z), Math.ceil(w));\n}\n\n// src/math/vec4/Vec4Scale.ts\nfunction Vec4Scale(a, scalar, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(x * scalar, y * scalar, z * scalar, w * scalar);\n}\n\n// src/math/vec4/Vec4Center.ts\nfunction Vec4Center(a, b, out = new Vec4()) {\n  Vec4Add(a, b, out);\n  return Vec4Scale(out, 0.5, out);\n}\n\n// src/math/vec4/Vec4Clamp.ts\nfunction Vec4Clamp(a, min, max, out = new Vec4()) {\n  return out.set(Clamp(a.x, min.x, max.x), Clamp(a.y, min.y, max.y), Clamp(a.z, min.z, max.z), Clamp(a.w, min.w, max.w));\n}\n\n// src/math/vec4/Vec4DivideScalar.ts\nfunction Vec4DivideScalar(a, scalar, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(x / scalar, y / scalar, z / scalar, w / scalar);\n}\n\n// src/math/vec4/Vec4ClampLength.ts\nfunction Vec4ClampLength(a, min, max, out = new Vec4()) {\n  const length = GetVec4Length(a);\n  Vec4DivideScalar(a, length || 1, out);\n  return Vec4Scale(out, Clamp(min, max, length), out);\n}\n\n// src/math/vec4/Vec4ClampScalar.ts\nfunction Vec4ClampScalar(a, min, max, out = new Vec4()) {\n  return out.set(Clamp(a.x, min, max), Clamp(a.y, min, max), Clamp(a.z, min, max), Clamp(a.w, min, max));\n}\n\n// src/math/vec4/Vec4Clone.ts\nfunction Vec4Clone(source) {\n  const {x, y, z, w} = source;\n  return new Vec4(x, y, z, w);\n}\n\n// src/math/vec4/Vec4CopyFrom.ts\nfunction Vec4CopyFrom(source, dest) {\n  const {x, y, z, w} = source;\n  return dest.set(x, y, z, w);\n}\n\n// src/math/vec4/Vec4Cross.ts\nfunction Vec4Cross(u, v, w, out = new Vec4()) {\n  const {x: ux, y: uy, z: uz, w: uw} = u;\n  const {x: vx, y: vy, z: vz, w: vw} = v;\n  const {x: wx, y: wy, z: wz, w: ww} = w;\n  const A = vx * wy - vy * wx;\n  const B = vx * wz - vz * wx;\n  const C = vx * ww - vw * wx;\n  const D = vy * wz - vz * wy;\n  const E = vy * ww - vw * wy;\n  const F = vz * ww - vw * wz;\n  const G = ux;\n  const H = uy;\n  const I = uz;\n  const J = uw;\n  return out.set(H * F - I * E + J * D, -(G * F) + I * C - J * B, G * E - H * C + J * A, -(G * D) + H * B - I * A);\n}\n\n// src/math/vec4/Vec4Divide.ts\nfunction Vec4Divide(a, b, out = new Vec4()) {\n  return out.set(a.x / b.x, a.y / b.y, a.z / b.z, a.w / b.w);\n}\n\n// src/math/vec4/Vec4Dot.ts\nfunction Vec4Dot(a, b) {\n  return a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;\n}\n\n// src/math/vec4/Vec4Equals.ts\nfunction Vec4Equals(a, b) {\n  return a.x === b.x && a.y === b.y && a.z === b.z && a.w === b.w;\n}\n\n// src/math/vec4/Vec4Floor.ts\nfunction Vec4Floor(a, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(Math.floor(x), Math.floor(y), Math.floor(z), Math.floor(w));\n}\n\n// src/math/vec4/Vec4Fract.ts\nfunction Vec4Fract(a, out = new Vec4()) {\n  return out.set(a.x - Math.floor(a.x), a.y - Math.floor(a.y), a.z - Math.floor(a.z), a.w - Math.floor(a.w));\n}\n\n// src/math/vec4/Vec4FuzzyEquals.ts\nfunction Vec4FuzzyEquals(a, b, epsilon = 1e-4) {\n  return FuzzyEqual(a.x, b.x, epsilon) && FuzzyEqual(a.y, b.y, epsilon) && FuzzyEqual(a.z, b.z, epsilon) && FuzzyEqual(a.w, b.w, epsilon);\n}\n\n// src/math/vec4/Vec4Hermite.ts\nfunction Vec4Hermite(a, b, c, d, t, out = new Vec4()) {\n  return out.set(Hermite(t, a.x, b.x, c.x, d.x), Hermite(t, a.y, b.y, c.y, d.y), Hermite(t, a.z, b.z, c.z, d.z), Hermite(t, a.w, b.w, c.w, d.w));\n}\n\n// src/math/vec4/Vec4Lerp.ts\nfunction Vec4Lerp(a, b, t, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(x + t * (b.x - x), y + t * (b.y - y), z + t * (b.z - z), w + t * (b.w - w));\n}\n\n// src/math/vec4/Vec4Max.ts\nfunction Vec4Max(a, b, out = new Vec4()) {\n  const {x: ax, y: ay, z: az, w: aw} = a;\n  const {x: bx, y: by, z: bz, w: bw} = b;\n  return out.set(Math.max(ax, bx), Math.max(ay, by), Math.max(az, bz), Math.max(aw, bw));\n}\n\n// src/math/vec4/Vec4Min.ts\nfunction Vec4Min(a, b, out = new Vec4()) {\n  const {x: ax, y: ay, z: az, w: aw} = a;\n  const {x: bx, y: by, z: bz, w: bw} = b;\n  return out.set(Math.min(ax, bx), Math.min(ay, by), Math.min(az, bz), Math.min(aw, bw));\n}\n\n// src/math/vec4/Vec4Multiply.ts\nfunction Vec4Multiply(a, b, out = new Vec4()) {\n  return out.set(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);\n}\n\n// src/math/vec4/Vec4MultiplyByFloats.ts\nfunction Vec4MultiplyByFloats(a, x, y, z, w, out = new Vec4()) {\n  return out.set(a.x * x, a.y * y, a.z * z, a.w * w);\n}\n\n// src/math/vec4/Vec4Negate.ts\nfunction Vec4Negate(a, out = new Vec4()) {\n  return out.set(-a.x, -a.y, -a.z, -a.w);\n}\n\n// src/math/vec4/Vec4Normalize.ts\nfunction Vec4Normalize(a, out = new Vec4()) {\n  return Vec4DivideScalar(a, GetVec4Length(a) || 1, out);\n}\n\n// src/math/vec4/Vec4One.ts\nfunction Vec4One() {\n  return new Vec4(1, 1, 1, 1);\n}\n\n// src/math/vec4/Vec4Random.ts\nfunction Vec4Random(a, scale = 1, out = new Vec4()) {\n  let v1;\n  let v2;\n  let v3;\n  let v4;\n  let s1;\n  let s2;\n  do {\n    v1 = Math.random() * 2 - 1;\n    v2 = Math.random() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n  do {\n    v3 = Math.random() * 2 - 1;\n    v4 = Math.random() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n  const d = Math.sqrt((1 - s1) / s2);\n  return out.set(scale * v1, scale * v2, scale * v3 * d, scale * v4 * d);\n}\n\n// src/math/vec4/Vec4Round.ts\nfunction Vec4Round(a, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(Math.round(x), Math.round(y), Math.round(z), Math.round(w));\n}\n\n// src/math/vec4/Vec4RoundToZero.ts\nfunction Vec4RoundToZero(a, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(x < 0 ? Math.ceil(x) : Math.floor(x), y < 0 ? Math.ceil(y) : Math.floor(y), z < 0 ? Math.ceil(z) : Math.floor(z), w < 0 ? Math.ceil(w) : Math.floor(w));\n}\n\n// src/math/vec4/Vec4ScaleAndAdd.ts\nfunction Vec4ScaleAndAdd(a, b, scalar, out = new Vec4()) {\n  return out.set(a.x + b.x * scalar, a.y + b.y * scalar, a.z + b.z * scalar, a.w + b.w * scalar);\n}\n\n// src/math/vec4/Vec4SetLength.ts\nfunction Vec4SetLength(a, length, out = new Vec4()) {\n  Vec4Normalize(a, out);\n  return Vec4Scale(out, length, out);\n}\n\n// src/math/vec4/Vec4Subtract.ts\nfunction Vec4Subtract(a, b, out = new Vec4()) {\n  return out.set(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);\n}\n\n// src/math/vec4/Vec4SubtractScalar.ts\nfunction Vec4SubtractScalar(a, scalar, out = new Vec4()) {\n  const {x, y, z, w} = a;\n  return out.set(x - scalar, y - scalar, z - scalar, w - scalar);\n}\n\n// src/math/vec4/Vec4TransformMat4.ts\nfunction Vec4TransformMat4(a, m, out = new Vec4()) {\n  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = m.data;\n  const {x, y, z, w} = a;\n  return out.set(m00 * x + m10 * y + m20 * z + m30 * w, m01 * x + m11 * y + m21 * z + m31 * w, m02 * x + m12 * y + m22 * z + m32 * w, m03 * x + m13 * y + m23 * z + m33 * w);\n}\n\n// src/math/vec4/Vec4Zero.ts\nfunction Vec4Zero() {\n  return new Vec4(0, 0, 0, 0);\n}\n\n// src/math/Average.ts\nfunction Average(values) {\n  let sum = 0;\n  for (let i = 0; i < values.length; i++) {\n    sum += +values[i];\n  }\n  return sum / values.length;\n}\n\n// src/math/Between.ts\nfunction Between(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n// src/math/CeilTo.ts\nfunction CeilTo(value, place = 0, base = 10) {\n  const p = Math.pow(base, -place);\n  return Math.ceil(value * p) / p;\n}\n\n// src/math/DegToRad.ts\nfunction DegToRad(degrees) {\n  return degrees * MATH_CONST.DEG_TO_RAD;\n}\n\n// src/math/Difference.ts\nfunction Difference(a, b) {\n  return Math.abs(a - b);\n}\n\n// src/math/FloatBetween.ts\nfunction FloatBetween(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\n// src/math/FloorTo.ts\nfunction FloorTo(value, place = 0, base = 10) {\n  const p = Math.pow(base, -place);\n  return Math.floor(value * p) / p;\n}\n\n// src/math/FromPercent.ts\nfunction FromPercent(percent, min, max) {\n  percent = Clamp(percent, 0, 1);\n  return (max - min) * percent;\n}\n\n// src/math/GetSpeed.ts\nfunction GetSpeed(distance, time) {\n  return distance / time / 1e3;\n}\n\n// src/math/MaxAdd.ts\nfunction MaxAdd(value, amount, max) {\n  return Math.min(value + amount, max);\n}\n\n// src/math/MinSub.ts\nfunction MinSub(value, amount, min) {\n  return Math.max(value - amount, min);\n}\n\n// src/math/Percent.ts\nfunction Percent(value, min, max, upperMax) {\n  if (max === void 0) {\n    max = min + 1;\n  }\n  let percentage = (value - min) / (max - min);\n  if (percentage > 1) {\n    if (upperMax !== void 0) {\n      percentage = (upperMax - value) / (upperMax - max);\n      if (percentage < 0) {\n        percentage = 0;\n      }\n    } else {\n      percentage = 1;\n    }\n  } else if (percentage < 0) {\n    percentage = 0;\n  }\n  return percentage;\n}\n\n// src/math/RadToDeg.ts\nfunction RadToDeg(radians) {\n  return radians * MATH_CONST.RAD_TO_DEG;\n}\n\n// src/math/RoundTo.ts\nfunction RoundTo(value, place = 0, base = 10) {\n  const p = Math.pow(base, -place);\n  return Math.round(value * p) / p;\n}\n\n// src/math/SinCosTableGenerator.ts\nfunction SinCosTableGenerator(length, sinAmp = 1, cosAmp = 1, frequency = 1) {\n  frequency *= Math.PI / length;\n  const cos = [];\n  const sin = [];\n  for (let c = 0; c < length; c++) {\n    cosAmp -= sinAmp * frequency;\n    sinAmp += cosAmp * frequency;\n    cos[c] = cosAmp;\n    sin[c] = sinAmp;\n  }\n  return {\n    sin,\n    cos,\n    length\n  };\n}\n\n// src/math/Within.ts\nfunction Within(a, b, tolerance) {\n  return Math.abs(a - b) <= tolerance;\n}\n\n// src/camera3d/Camera3D.ts\nvar Camera3D = class {\n  constructor(x = 0, y = 0, z = 0, fov = 45, near = 0.1, far = 1e3) {\n    this.dirtyRender = true;\n    this.type = \"Camera3D\";\n    const game = GameInstance.get();\n    this.renderer = game.renderer;\n    this.position = new Vec3Callback(() => this.update(), x, y, z);\n    this.direction = new Vec3Callback(() => this.update(), 0, 1, 0);\n    this._lookAtPosition = new Vec3();\n    this._lookAtView = new Matrix4();\n    this._axis = new Quaternion();\n    this.up = Vec3Up();\n    this.left = Vec3Left();\n    this._fov = fov;\n    this._near = near;\n    this._far = far;\n    this.aspectRatio = this.renderer.width / this.renderer.height;\n    this.viewMatrix = new Matrix4();\n    this.projectionMatrix = Mat4Perspective(DegToRad(fov), this.aspectRatio, near, far);\n    this.lookAt(new Vec3());\n  }\n  updateProjectionMatrix() {\n    Mat4Perspective(DegToRad(this._fov), this.aspectRatio, this._near, this._far, this.projectionMatrix);\n    return this;\n  }\n  lookAt(point) {\n    const pos = this.position;\n    const dir = this.direction;\n    const left = this.left;\n    Vec3Subtract(point, pos, dir);\n    Vec3Normalize(dir, dir);\n    Vec3CrossNormalize(UP, dir, left);\n    Vec3CrossNormalize(dir, left, this.up);\n    return this.update();\n  }\n  rotateOnAxis(axisVec, angle) {\n    const dir = this.direction;\n    const left = this.left;\n    const up = this.up;\n    const q = QuatSetAxisAngle(axisVec, angle, this._axis);\n    Vec3TransformQuat(dir, q, dir);\n    Vec3TransformQuat(left, q, left);\n    Vec3TransformQuat(up, q, up);\n    Vec3Normalize(up, up);\n    Vec3Normalize(left, left);\n    Vec3Normalize(dir, dir);\n    return this.update();\n  }\n  yaw(angle) {\n    return this.rotateOnAxis(this.up, angle);\n  }\n  pitch(angle) {\n    return this.rotateOnAxis(this.left, angle);\n  }\n  roll(angle) {\n    return this.rotateOnAxis(this.direction, angle);\n  }\n  forward(s) {\n    const pos = this.position;\n    const {x: px, y: py, z: pz} = pos;\n    const {x: dx, y: dy, z: dz} = this.direction;\n    pos.set(px - s * dx, py - s * dy, pz - s * dz);\n    return this.update();\n  }\n  update() {\n    const lookPosition = this._lookAtPosition;\n    const lookView = this._lookAtView;\n    const pos = this.position;\n    Vec3Add(pos, this.direction, lookPosition);\n    Mat4LookAt(pos, lookPosition, this.up, lookView);\n    Mat4TranslateFromFloats(lookView, -pos.x, -pos.y, -pos.z, this.viewMatrix);\n    return this;\n  }\n  reset() {\n  }\n  destroy() {\n    this.position.destroy();\n    this.direction.destroy();\n    this.up = null;\n    this.left = null;\n    this.viewMatrix = null;\n    this.projectionMatrix = null;\n    this._lookAtPosition = null;\n    this._lookAtView = null;\n    this._axis = null;\n  }\n  get fov() {\n    return this._fov;\n  }\n  set fov(value) {\n    if (value > 0 && value < 180) {\n      this._fov = value;\n      this.updateProjectionMatrix();\n    }\n  }\n  get near() {\n    return this._near;\n  }\n  set near(value) {\n    if (value > 0) {\n      this._near = value;\n      this.updateProjectionMatrix();\n    }\n  }\n  get far() {\n    return this._far;\n  }\n  set far(value) {\n    if (value > 0) {\n      this._far = value;\n      this.updateProjectionMatrix();\n    }\n  }\n};\n\n// src/config/index.ts\nvar config_exports = {};\n__export(config_exports, {\n  BackgroundColor: () => BackgroundColor,\n  Banner: () => Banner,\n  BatchSize: () => BatchSize,\n  Canvas: () => Canvas,\n  CanvasContext: () => CanvasContext,\n  DefaultOrigin: () => DefaultOrigin,\n  MaxTextures: () => MaxTextures,\n  Parent: () => Parent,\n  Scenes: () => Scenes,\n  Size: () => Size,\n  WebGL: () => WebGL,\n  WebGLContext: () => WebGLContext\n});\n\n// src/config/const.ts\nvar CONFIG_DEFAULTS = {\n  BACKGROUND_COLOR: \"BackgroundColor\",\n  BATCH_SIZE: \"BatchSize\",\n  DEFAULT_ORIGIN: \"DefaultOrigin\",\n  MAX_TEXTURES: \"MaxTextures\",\n  PARENT: \"Parent\",\n  SIZE: \"Size\",\n  SCENES: \"Scenes\",\n  RENDERER: \"Renderer\",\n  AUTO: \"Auto\",\n  WEBGL: \"WebGL\",\n  CANVAS: \"Canvas\",\n  WEBGL_CONTEXT: \"WebGLContext\",\n  CANVAS_CONTEXT: \"CanvasContext\",\n  BANNER: \"Banner\"\n};\n\n// src/config/ConfigStore.ts\nvar ConfigStore = new Map();\n\n// src/config/backgroundcolor/SetBackgroundColor.ts\nfunction SetBackgroundColor(color) {\n  ConfigStore.set(CONFIG_DEFAULTS.BACKGROUND_COLOR, color);\n}\n\n// src/config/backgroundcolor/BackgroundColor.ts\nfunction BackgroundColor(color) {\n  return () => {\n    SetBackgroundColor(color);\n  };\n}\n\n// src/config/banner/SetBanner.ts\nfunction SetBanner(title = \"\", version = \"\", url = \"\", color = \"#fff\", background = \"linear-gradient(#3e0081 40%, #00bcc3)\") {\n  ConfigStore.set(CONFIG_DEFAULTS.BANNER, {title, version, url, color, background});\n}\n\n// src/config/banner/Banner.ts\nfunction Banner(title, version, url, color, background) {\n  return () => {\n    SetBanner(title, version, url, color, background);\n  };\n}\n\n// src/config/batchsize/SetBatchSize.ts\nfunction SetBatchSize(size) {\n  ConfigStore.set(CONFIG_DEFAULTS.BATCH_SIZE, size);\n}\n\n// src/config/batchsize/BatchSize.ts\nfunction BatchSize(size) {\n  return () => {\n    SetBatchSize(size);\n  };\n}\n\n// src/config/size/GetHeight.ts\nfunction GetHeight() {\n  return ConfigStore.get(CONFIG_DEFAULTS.SIZE).height;\n}\n\n// src/config/size/GetResolution.ts\nfunction GetResolution() {\n  return ConfigStore.get(CONFIG_DEFAULTS.SIZE).resolution;\n}\n\n// src/config/size/GetWidth.ts\nfunction GetWidth() {\n  return ConfigStore.get(CONFIG_DEFAULTS.SIZE).width;\n}\n\n// src/config/size/SetSize.ts\nfunction SetSize(width = 800, height = 600, resolution = 1) {\n  if (resolution === 0) {\n    resolution = window.devicePixelRatio;\n  }\n  ConfigStore.set(CONFIG_DEFAULTS.SIZE, {width, height, resolution});\n}\n\n// src/config/size/Size.ts\nfunction Size(width = 800, height = 600, resolution = 1) {\n  return () => {\n    SetSize(width, height, resolution);\n  };\n}\n\n// src/renderer/BindingQueue.ts\nvar queue = [];\nvar BindingQueue = {\n  add: (texture, glConfig) => {\n    queue.push({texture, glConfig});\n  },\n  get: () => {\n    return queue;\n  },\n  clear: () => {\n    queue.length = 0;\n  }\n};\n\n// src/config/backgroundcolor/GetBackgroundColor.ts\nfunction GetBackgroundColor() {\n  return ConfigStore.get(CONFIG_DEFAULTS.BACKGROUND_COLOR);\n}\n\n// src/config/canvascontext/GetCanvasContext.ts\nfunction GetCanvasContext() {\n  return ConfigStore.get(CONFIG_DEFAULTS.CANVAS_CONTEXT);\n}\n\n// src/renderer/canvas/CanvasRenderer.ts\nvar CanvasRenderer = class {\n  constructor() {\n    this.clearBeforeRender = true;\n    this.optimizeRedraw = true;\n    this.autoResize = true;\n    this.width = GetWidth();\n    this.height = GetHeight();\n    this.resolution = GetResolution();\n    this.setBackgroundColor(GetBackgroundColor());\n    const canvas = document.createElement(\"canvas\");\n    this.canvas = canvas;\n    this.initContext();\n  }\n  initContext() {\n    const ctx = this.canvas.getContext(\"2d\", GetCanvasContext());\n    this.ctx = ctx;\n    this.resize(this.width, this.height, this.resolution);\n  }\n  resize(width, height, resolution = 1) {\n    this.width = width * resolution;\n    this.height = height * resolution;\n    this.resolution = resolution;\n    const canvas = this.canvas;\n    canvas.width = this.width;\n    canvas.height = this.height;\n    if (this.autoResize) {\n      canvas.style.width = (this.width / resolution).toString() + \"px\";\n      canvas.style.height = (this.height / resolution).toString() + \"px\";\n    }\n  }\n  setBackgroundColor(color) {\n    const r = color >> 16 & 255;\n    const g = color >> 8 & 255;\n    const b = color & 255;\n    const a = color > 16777215 ? color >>> 24 : 255;\n    this.clearColor = `rgba(${r}, ${g}, ${b}, ${a})`;\n    return this;\n  }\n  reset() {\n    const ctx = this.ctx;\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }\n  render(renderData) {\n    BindingQueue.clear();\n    const ctx = this.ctx;\n    if (this.optimizeRedraw && renderData.numDirtyFrames === 0 && renderData.numDirtyCameras === 0) {\n      return;\n    }\n    this.reset();\n    if (this.clearBeforeRender) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      ctx.fillStyle = this.clearColor;\n      ctx.fillRect(0, 0, this.width, this.height);\n    }\n  }\n  destroy() {\n  }\n};\n\n// src/config/renderer/SetRenderer.ts\nfunction SetRenderer(renderer) {\n  ConfigStore.set(CONFIG_DEFAULTS.RENDERER, renderer);\n}\n\n// src/config/canvas/Canvas.ts\nfunction Canvas() {\n  return () => {\n    SetRenderer(CanvasRenderer);\n  };\n}\n\n// src/config/canvascontext/SetCanvasContext.ts\nfunction SetCanvasContext(contextAttributes) {\n  ConfigStore.set(CONFIG_DEFAULTS.CANVAS_CONTEXT, contextAttributes);\n}\n\n// src/config/canvascontext/CanvasContext.ts\nfunction CanvasContext(contextAttributes) {\n  return () => {\n    SetCanvasContext(contextAttributes);\n  };\n}\n\n// src/config/defaultorigin/SetDefaultOrigin.ts\nfunction SetDefaultOrigin(x = 0.5, y = x) {\n  ConfigStore.set(CONFIG_DEFAULTS.DEFAULT_ORIGIN, {x, y});\n}\n\n// src/config/defaultorigin/DefaultOrigin.ts\nfunction DefaultOrigin(x = 0.5, y = x) {\n  return () => {\n    SetDefaultOrigin(x, y);\n  };\n}\n\n// src/config/maxtextures/SetMaxTextures.ts\nfunction SetMaxTextures(max) {\n  ConfigStore.set(CONFIG_DEFAULTS.MAX_TEXTURES, max);\n}\n\n// src/config/maxtextures/MaxTextures.ts\nfunction MaxTextures(max = 0) {\n  return () => {\n    SetMaxTextures(max);\n  };\n}\n\n// src/dom/GetElement.ts\nfunction GetElement(target) {\n  let element;\n  if (target) {\n    if (typeof target === \"string\") {\n      element = document.getElementById(target);\n    } else if (typeof target === \"object\" && target.nodeType === 1) {\n      element = target;\n    }\n  }\n  if (!element) {\n    element = document.body;\n  }\n  return element;\n}\n\n// src/config/parent/SetParent.ts\nfunction SetParent(parentElement) {\n  if (parentElement) {\n    ConfigStore.set(CONFIG_DEFAULTS.PARENT, GetElement(parentElement));\n  }\n}\n\n// src/config/parent/Parent.ts\nfunction Parent(parentElement) {\n  return () => {\n    SetParent(parentElement);\n  };\n}\n\n// src/config/scenes/SetScenes.ts\nfunction SetScenes(scenes) {\n  ConfigStore.set(CONFIG_DEFAULTS.SCENES, [].concat(scenes));\n}\n\n// src/config/scenes/Scenes.ts\nfunction Scenes(scenes) {\n  return () => {\n    SetScenes(scenes);\n  };\n}\n\n// src/renderer/webgl1/renderpass/AddViewport.ts\nfunction AddViewport(renderPass, x = 0, y = 0, width = 0, height = 0) {\n  const viewport = new Rectangle(x, y, width, height);\n  renderPass.viewportStack.push(viewport);\n  return viewport;\n}\n\n// src/renderer/webgl1/GL.ts\nvar gl;\nvar GL = {\n  get: () => {\n    return gl;\n  },\n  set: (context) => {\n    gl = context;\n  }\n};\n\n// src/renderer/webgl1/renderpass/BindViewport.ts\nfunction BindViewport(renderPass, viewport) {\n  if (!viewport) {\n    viewport = renderPass.currentViewport;\n    if (!viewport) {\n      return;\n    }\n  }\n  const glv = gl.getParameter(gl.VIEWPORT);\n  if (glv[0] !== viewport.x || glv[1] !== viewport.y || glv[2] !== viewport.width || glv[3] !== viewport.height) {\n    gl.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n  }\n}\n\n// src/renderer/webgl1/renderpass/SetViewport.ts\nfunction SetViewport(renderPass, x = 0, y = 0, width = 0, height = 0) {\n  const entry = AddViewport(renderPass, x, y, width, height);\n  BindViewport(renderPass, entry);\n  renderPass.currentViewport = entry;\n}\n\n// src/renderer/webgl1/renderpass/BindFramebuffer.ts\nfunction BindFramebuffer(renderPass, clear = true, entry) {\n  if (!entry) {\n    entry = renderPass.currentFramebuffer;\n  }\n  const {framebuffer, viewport} = entry;\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  if (clear) {\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  }\n  if (viewport) {\n    SetViewport(renderPass, viewport.x, viewport.y, viewport.width, viewport.height);\n  }\n}\n\n// src/renderer/webgl1/renderpass/PopViewport.ts\nfunction PopViewport(renderPass) {\n  const stack = renderPass.viewportStack;\n  if (stack.length > 1) {\n    stack.pop();\n  }\n  renderPass.currentViewport = stack[stack.length - 1];\n  BindViewport(renderPass);\n}\n\n// src/renderer/webgl1/renderpass/PopFramebuffer.ts\nfunction PopFramebuffer(renderPass) {\n  const stack = renderPass.framebufferStack;\n  if (stack.length > 1) {\n    if (renderPass.currentFramebuffer.viewport) {\n      PopViewport(renderPass);\n    }\n    stack.pop();\n  }\n  renderPass.currentFramebuffer = stack[stack.length - 1];\n  BindFramebuffer(renderPass, false);\n}\n\n// src/renderer/webgl1/renderpass/AddFramebuffer.ts\nfunction AddFramebuffer(renderPass, framebuffer, viewport) {\n  const entry = {framebuffer, viewport};\n  renderPass.framebufferStack.push(entry);\n  return entry;\n}\n\n// src/renderer/webgl1/renderpass/SetFramebuffer.ts\nfunction SetFramebuffer(renderPass, framebuffer, clear = true, viewport) {\n  const entry = AddFramebuffer(renderPass, framebuffer, viewport);\n  BindFramebuffer(renderPass, clear, entry);\n  renderPass.currentFramebuffer = entry;\n}\n\n// src/renderer/webgl1/renderpass/Draw.ts\nfunction Draw(renderPass) {\n  const count = renderPass.count;\n  if (count === 0) {\n    return;\n  }\n  const currentBuffer = renderPass.currentVertexBuffer;\n  const currentShader = renderPass.currentShader;\n  const renderToFramebuffer = currentShader.shader.renderToFramebuffer;\n  if (renderToFramebuffer) {\n    SetFramebuffer(renderPass, currentShader.shader.framebuffer, true);\n  }\n  if (count === currentBuffer.batchSize) {\n    const type = currentBuffer.isDynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n    gl.bufferData(gl.ARRAY_BUFFER, currentBuffer.data, type);\n  } else {\n    const subsize = currentBuffer.indexed ? count * currentBuffer.entryElementSize : count * currentBuffer.vertexElementSize;\n    const view = currentBuffer.vertexViewF32.subarray(0, subsize);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\n  }\n  if (currentBuffer.indexed) {\n    gl.drawElements(gl.TRIANGLES, count * currentBuffer.entryIndexSize, gl.UNSIGNED_SHORT, 0);\n  } else {\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n  }\n  if (renderToFramebuffer) {\n    PopFramebuffer(renderPass);\n  }\n}\n\n// src/renderer/webgl1/renderpass/Flush.ts\nfunction Flush(renderPass, forceCount) {\n  if (forceCount) {\n    renderPass.count = forceCount;\n  }\n  const count = renderPass.count;\n  if (count === 0) {\n    return false;\n  }\n  Draw(renderPass);\n  renderPass.prevCount = count;\n  renderPass.count = 0;\n  renderPass.flushTotal++;\n  return true;\n}\n\n// src/renderer/webgl1/renderpass/End.ts\nfunction End(renderPass) {\n  Flush(renderPass);\n}\n\n// src/renderer/webgl1/colors/GetRGBArray.ts\nfunction GetRGBArray(color, output = []) {\n  const r = color >> 16 & 255;\n  const g = color >> 8 & 255;\n  const b = color & 255;\n  const a = color > 16777215 ? color >>> 24 : 255;\n  output[0] = r / 255;\n  output[1] = g / 255;\n  output[2] = b / 255;\n  output[3] = a / 255;\n  return output;\n}\n\n// src/config/webglcontext/GetWebGLContext.ts\nfunction GetWebGLContext() {\n  return ConfigStore.get(CONFIG_DEFAULTS.WEBGL_CONTEXT);\n}\n\n// src/renderer/webgl1/textures/CreateGLTexture.ts\nfunction CreateGLTexture(binding) {\n  const {parent, flipY, unpackPremultiplyAlpha, minFilter, magFilter, wrapS, wrapT, generateMipmap, isPOT} = binding;\n  const source = parent.image;\n  let width = parent.width;\n  let height = parent.height;\n  const glTexture = gl.createTexture();\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(gl.TEXTURE_2D, glTexture);\n  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n  gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, unpackPremultiplyAlpha);\n  if (source) {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\n    width = source.width;\n    height = source.height;\n  } else {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  }\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n  if (generateMipmap && isPOT) {\n    gl.generateMipmap(gl.TEXTURE_2D);\n  }\n  binding.texture = glTexture;\n  return glTexture;\n}\n\n// src/renderer/webgl1/fbo/DeleteFramebuffer.ts\nfunction DeleteFramebuffer(framebuffer) {\n  if (gl && gl.isFramebuffer(framebuffer)) {\n    gl.deleteFramebuffer(framebuffer);\n  }\n}\n\n// src/renderer/webgl1/textures/DeleteGLTexture.ts\nfunction DeleteGLTexture(texture) {\n  if (gl.isTexture(texture)) {\n    gl.deleteTexture(texture);\n  }\n}\n\n// src/renderer/webgl1/textures/SetGLTextureFilterMode.ts\nfunction SetGLTextureFilterMode(texture, linear = true) {\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  const mode = linear ? gl.LINEAR : gl.NEAREST;\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, mode);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mode);\n}\n\n// src/renderer/webgl1/textures/UpdateGLTexture.ts\nfunction UpdateGLTexture(binding) {\n  const source = binding.parent.image;\n  const width = source.width;\n  const height = source.height;\n  if (width > 0 && height > 0) {\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, binding.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, binding.flipY);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\n  }\n  return binding.texture;\n}\n\n// src/renderer/webgl1/textures/GLTextureBinding.ts\nvar GLTextureBinding = class {\n  constructor(parent, config = {}) {\n    this.index = 0;\n    this.indexCounter = -1;\n    this.dirtyIndex = true;\n    this.unpackPremultiplyAlpha = true;\n    this.flipY = false;\n    this.isPOT = false;\n    this.generateMipmap = false;\n    this.parent = parent;\n    this.isPOT = IsSizePowerOfTwo(parent.width, parent.height);\n    const {\n      texture = null,\n      framebuffer = null,\n      depthbuffer = null,\n      unpackPremultiplyAlpha = true,\n      minFilter = this.isPOT ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR,\n      magFilter = gl.LINEAR,\n      wrapS = gl.CLAMP_TO_EDGE,\n      wrapT = gl.CLAMP_TO_EDGE,\n      generateMipmap = this.isPOT,\n      flipY = false\n    } = config;\n    this.minFilter = minFilter;\n    this.magFilter = magFilter;\n    this.wrapS = wrapS;\n    this.wrapT = wrapT;\n    this.generateMipmap = generateMipmap;\n    this.flipY = flipY;\n    this.unpackPremultiplyAlpha = unpackPremultiplyAlpha;\n    if (framebuffer) {\n      this.framebuffer = framebuffer;\n    }\n    if (depthbuffer) {\n      this.depthbuffer = depthbuffer;\n    }\n    if (texture) {\n      this.texture = texture;\n    } else {\n      CreateGLTexture(this);\n    }\n  }\n  setFilter(linear) {\n    if (this.texture) {\n      SetGLTextureFilterMode(this.texture, linear);\n    }\n  }\n  create() {\n    const texture = this.texture;\n    if (texture) {\n      DeleteGLTexture(texture);\n    }\n    return CreateGLTexture(this);\n  }\n  update() {\n    const texture = this.texture;\n    if (!texture) {\n      return CreateGLTexture(this);\n    } else {\n      return UpdateGLTexture(this);\n    }\n  }\n  setIndex(index) {\n    this.dirtyIndex = index !== this.index;\n    this.index = index;\n  }\n  destroy() {\n    DeleteGLTexture(this.texture);\n    DeleteFramebuffer(this.framebuffer);\n    this.parent = null;\n    this.texture = null;\n    this.framebuffer = null;\n  }\n};\n\n// src/renderer/webgl1/renderpass/ProcessBindingQueue.ts\nfunction ProcessBindingQueue() {\n  const queue2 = BindingQueue.get();\n  queue2.forEach((entry) => {\n    const {texture, glConfig} = entry;\n    if (!texture.binding) {\n      texture.binding = new GLTextureBinding(texture, glConfig);\n    }\n  });\n  BindingQueue.clear();\n}\n\n// src/config/maxtextures/GetMaxTextures.ts\nfunction GetMaxTextures() {\n  return ConfigStore.get(CONFIG_DEFAULTS.MAX_TEXTURES);\n}\n\n// src/renderer/webgl1/shaders/CheckShaderMaxIfStatements.ts\nvar fragTemplate = [\n  \"precision mediump float;\",\n  \"void main(void){\",\n  \"float test = 0.1;\",\n  \"%forloop%\",\n  \"gl_FragColor = vec4(0.0);\",\n  \"}\"\n].join(\"\\n\");\nfunction GenerateSrc(maxIfs) {\n  let src = \"\";\n  for (let i = 0; i < maxIfs; ++i) {\n    if (i > 0) {\n      src += \"\\nelse \";\n    }\n    if (i < maxIfs - 1) {\n      src += `if(test == ${i}.0){}`;\n    }\n  }\n  return src;\n}\nfunction CheckShaderMaxIfStatements(maxIfs) {\n  const shader = gl.createShader(gl.FRAGMENT_SHADER);\n  while (true) {\n    const fragmentSrc = fragTemplate.replace(/%forloop%/gi, GenerateSrc(maxIfs));\n    gl.shaderSource(shader, fragmentSrc);\n    gl.compileShader(shader);\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      maxIfs = maxIfs / 2 | 0;\n    } else {\n      break;\n    }\n  }\n  return maxIfs;\n}\n\n// src/renderer/webgl1/renderpass/CreateTempTextures.ts\nfunction CreateTempTextures(renderPass) {\n  let maxGPUTextures = CheckShaderMaxIfStatements(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\n  const maxConfigTextures = GetMaxTextures();\n  if (maxConfigTextures === 0 || maxConfigTextures > 0 && maxConfigTextures > maxGPUTextures) {\n    SetMaxTextures(maxGPUTextures);\n  } else if (maxConfigTextures > 0 && maxConfigTextures < maxGPUTextures) {\n    maxGPUTextures = Math.max(8, maxConfigTextures);\n  }\n  const tempTextures = renderPass.tempTextures;\n  if (tempTextures.length) {\n    tempTextures.forEach((texture) => {\n      gl.deleteTexture(texture);\n    });\n  }\n  const index = [];\n  for (let texturesIndex = 0; texturesIndex < maxGPUTextures; texturesIndex++) {\n    const tempTexture = gl.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + texturesIndex);\n    gl.bindTexture(gl.TEXTURE_2D, tempTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0, 0, 255, 255]));\n    tempTextures[texturesIndex] = tempTexture;\n    index.push(texturesIndex);\n  }\n  renderPass.maxTextures = maxGPUTextures;\n  renderPass.textureIndex = index;\n  renderPass.currentActiveTexture = 1;\n}\n\n// src/config/batchsize/GetBatchSize.ts\nfunction GetBatchSize() {\n  return ConfigStore.get(CONFIG_DEFAULTS.BATCH_SIZE);\n}\n\n// src/renderer/webgl1/buffers/DeleteGLBuffer.ts\nfunction DeleteGLBuffer(buffer) {\n  if (gl.isBuffer(buffer)) {\n    gl.deleteBuffer(buffer);\n  }\n}\n\n// src/renderer/webgl1/buffers/VertexBuffer.ts\nvar VertexBuffer = class {\n  constructor(config = {}) {\n    this.indexed = false;\n    this.isDynamic = false;\n    this.count = 0;\n    this.offset = 0;\n    const {\n      batchSize = 1,\n      dataSize = 4,\n      isDynamic = true,\n      elementsPerEntry = 4,\n      vertexElementSize = 6\n    } = config;\n    this.batchSize = batchSize;\n    this.dataSize = dataSize;\n    this.vertexElementSize = vertexElementSize;\n    this.isDynamic = isDynamic;\n    this.elementsPerEntry = elementsPerEntry;\n    this.vertexByteSize = vertexElementSize * dataSize;\n    this.entryByteSize = this.vertexByteSize * elementsPerEntry;\n    this.bufferByteSize = batchSize * this.entryByteSize;\n    this.create();\n  }\n  resize(batchSize) {\n    this.batchSize = batchSize;\n    this.bufferByteSize = batchSize * this.entryByteSize;\n    if (this.vertexBuffer) {\n      DeleteGLBuffer(this.vertexBuffer);\n    }\n    this.create();\n  }\n  create() {\n    const data = new ArrayBuffer(this.bufferByteSize);\n    this.data = data;\n    this.vertexViewF32 = new Float32Array(data);\n    this.vertexViewU32 = new Uint32Array(data);\n    this.vertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n    const type = this.isDynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n    gl.bufferData(gl.ARRAY_BUFFER, data, type);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  }\n  add(count) {\n    this.count += count;\n    this.offset += this.vertexElementSize * count;\n  }\n  reset() {\n    this.count = 0;\n    this.offset = 0;\n  }\n  canContain(count) {\n    return this.count + count <= this.batchSize;\n  }\n  free() {\n    return Math.max(0, 1 - this.count / this.batchSize);\n  }\n  bind() {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n  }\n  destroy() {\n    DeleteGLBuffer(this.vertexBuffer);\n    this.data = null;\n    this.vertexViewF32 = null;\n    this.vertexViewU32 = null;\n    this.vertexBuffer = null;\n  }\n};\n\n// src/renderer/webgl1/buffers/IndexedVertexBuffer.ts\nvar IndexedVertexBuffer = class extends VertexBuffer {\n  constructor(config = {}) {\n    super(config);\n    const {\n      indexSize = 4,\n      entryIndexSize = 6,\n      indexLayout = null\n    } = config;\n    this.indexed = true;\n    this.indexSize = indexSize;\n    this.entryIndexSize = entryIndexSize;\n    this.entryElementSize = this.vertexElementSize * this.elementsPerEntry;\n    const seededIndexBuffer = [];\n    if (indexLayout) {\n      this.indexLayout = indexLayout;\n      for (let i = 0; i < this.batchSize * indexSize; i += indexSize) {\n        for (let c = 0; c < indexLayout.length; c++) {\n          seededIndexBuffer.push(i + indexLayout[c]);\n        }\n      }\n    }\n    this.create();\n    this.createIndexBuffer(seededIndexBuffer);\n  }\n  createIndexBuffer(seededIndex) {\n    this.index = new Uint16Array(seededIndex);\n    this.indexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.index, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    seededIndex = [];\n  }\n  bind() {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n  }\n  destroy() {\n    super.destroy();\n    DeleteGLBuffer(this.indexBuffer);\n    this.index = null;\n    this.indexLayout = null;\n    this.indexBuffer = null;\n  }\n};\n\n// src/renderer/webgl1/shaders/CreateAttributes.ts\nfunction CreateAttributes(program, config) {\n  const attributes = new Map();\n  const defaultSettings = {\n    size: 1,\n    type: gl.FLOAT,\n    normalized: false,\n    stride: 0,\n    offset: 0\n  };\n  const total = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < total; i++) {\n    const attrib = gl.getActiveAttrib(program, i);\n    if (!attrib) {\n      break;\n    }\n    const name = attrib.name;\n    const index = gl.getAttribLocation(program, name);\n    gl.enableVertexAttribArray(index);\n    const setting = config.hasOwnProperty(name) ? config[name] : {};\n    const {\n      size = defaultSettings.size,\n      type = defaultSettings.type,\n      normalized = defaultSettings.normalized,\n      stride = defaultSettings.stride,\n      offset = defaultSettings.offset\n    } = setting;\n    attributes.set(name, {index, size, type, normalized, stride, offset});\n  }\n  return attributes;\n}\n\n// src/renderer/webgl1/shaders/DeleteShaders.ts\nfunction DeleteShaders(...shaders) {\n  shaders.forEach((shader) => {\n    gl.deleteShader(shader);\n  });\n}\n\n// src/renderer/webgl1/shaders/CreateProgram.ts\nfunction CreateProgram(...shaders) {\n  const program = gl.createProgram();\n  shaders.forEach((shader) => {\n    gl.attachShader(program, shader);\n  });\n  gl.linkProgram(program);\n  const status = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (!status) {\n    const info = gl.getProgramInfoLog(program);\n    console.error(`Error linking program: ${info}`);\n    gl.deleteProgram(program);\n    DeleteShaders(...shaders);\n    return null;\n  }\n  return program;\n}\n\n// src/renderer/webgl1/shaders/CreateShader.ts\nfunction CreateShader(source, type) {\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (!status) {\n    const info = gl.getShaderInfoLog(shader);\n    const sourceLines = source.split(\"\\n\").map((line, index) => {\n      return `${index}: ${line}`;\n    });\n    console.error(`Error compiling shader: ${info}`, sourceLines.join(\"\\n\"));\n    gl.deleteShader(shader);\n    return null;\n  }\n  return shader;\n}\n\n// src/renderer/webgl1/shaders/CreateUniformSetter.ts\nfunction CreateUniformSetter(uniform, location, isArray = false) {\n  switch (uniform.type) {\n    case gl.INT:\n    case gl.BOOL: {\n      if (isArray) {\n        return (v) => {\n          gl.uniform1iv(location, v);\n        };\n      } else {\n        return (v) => {\n          gl.uniform1i(location, v);\n        };\n      }\n    }\n    case gl.INT_VEC2:\n    case gl.BOOL_VEC2: {\n      return (v) => {\n        gl.uniform2iv(location, v);\n      };\n    }\n    case gl.INT_VEC3:\n    case gl.BOOL_VEC3: {\n      return (v) => {\n        gl.uniform3iv(location, v);\n      };\n    }\n    case gl.INT_VEC4:\n    case gl.BOOL_VEC4: {\n      return (v) => {\n        gl.uniform4iv(location, v);\n      };\n    }\n    case gl.FLOAT: {\n      if (isArray) {\n        return (v) => {\n          gl.uniform1fv(location, v);\n        };\n      } else {\n        return (v) => {\n          gl.uniform1f(location, v);\n        };\n      }\n    }\n    case gl.FLOAT_VEC2: {\n      return (v) => {\n        gl.uniform2fv(location, v);\n      };\n    }\n    case gl.FLOAT_VEC3: {\n      return (v) => {\n        gl.uniform3fv(location, v);\n      };\n    }\n    case gl.FLOAT_VEC4: {\n      return (v) => {\n        gl.uniform4fv(location, v);\n      };\n    }\n    case gl.FLOAT_MAT2: {\n      return (v) => {\n        gl.uniformMatrix2fv(location, false, v);\n      };\n    }\n    case gl.FLOAT_MAT3: {\n      return (v) => {\n        gl.uniformMatrix3fv(location, false, v);\n      };\n    }\n    case gl.FLOAT_MAT4: {\n      return (v) => {\n        gl.uniformMatrix4fv(location, false, v);\n      };\n    }\n    case gl.SAMPLER_2D:\n    case gl.SAMPLER_CUBE: {\n      if (uniform.size > 1) {\n        return (v) => {\n          gl.uniform1iv(location, v);\n        };\n      } else {\n        return (v) => {\n          gl.uniform1i(location, v);\n        };\n      }\n    }\n  }\n}\n\n// src/renderer/webgl1/shaders/CreateUniforms.ts\nfunction CreateUniforms(program) {\n  const uniforms = new Map();\n  const total = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (let i = 0; i < total; i++) {\n    const uniform = gl.getActiveUniform(program, i);\n    let name = uniform.name;\n    if (name.startsWith(\"gl_\") || name.startsWith(\"webgl_\")) {\n      continue;\n    }\n    const location = gl.getUniformLocation(program, uniform.name);\n    if (location) {\n      let isArray = false;\n      if (name.substr(-3) === \"[0]\") {\n        name = name.substr(0, name.length - 3);\n        isArray = uniform.size > 1;\n      }\n      uniforms.set(name, CreateUniformSetter(uniform, location, isArray));\n    }\n  }\n  return uniforms;\n}\n\n// src/renderer/webgl1/GL_CONST.ts\nvar UNSIGNED_BYTE = 5121;\nvar FLOAT = 5126;\n\n// src/renderer/webgl1/shaders/DefaultQuadAttributes.ts\nvar DefaultQuadAttributes = {\n  aVertexPosition: {size: 2, type: FLOAT, normalized: false, offset: 0},\n  aTextureCoord: {size: 2, type: FLOAT, normalized: false, offset: 8},\n  aTextureId: {size: 1, type: FLOAT, normalized: false, offset: 16},\n  aTintColor: {size: 4, type: UNSIGNED_BYTE, normalized: true, offset: 20}\n};\n\n// src/renderer/webgl1/shaders/DefaultQuadUniforms.ts\nvar DefaultQuadUniforms = {\n  uProjectionMatrix: new Float32Array(),\n  uCameraMatrix: new Float32Array(),\n  uTexture: 0\n};\n\n// src/renderer/webgl1/fbo/CreateDepthBuffer.ts\nfunction CreateDepthBuffer(framebuffer, textureWidth, textureHeight) {\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  const depthBuffer = gl.createRenderbuffer();\n  gl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer);\n  gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, textureWidth, textureHeight);\n  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthBuffer);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  return depthBuffer;\n}\n\n// src/renderer/webgl1/fbo/CreateFramebuffer.ts\nfunction CreateFramebuffer(texture, attachment) {\n  if (!attachment) {\n    attachment = gl.COLOR_ATTACHMENT0;\n  }\n  const framebuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture, 0);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  return framebuffer;\n}\n\n// src/renderer/webgl1/glsl/SINGLE_QUAD_FRAG.ts\nvar SINGLE_QUAD_FRAG = `#define SHADER_NAME SINGLE_QUAD_FRAG\n\nprecision highp float;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\n\nuniform sampler2D uTexture;\n\nvoid main (void)\n{\n    vec4 color = texture2D(uTexture, vTextureCoord);\n\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\n}`;\n\n// src/renderer/webgl1/glsl/SINGLE_QUAD_VERT.ts\nvar SINGLE_QUAD_VERT = `#define SHADER_NAME SINGLE_QUAD_VERT\n\nprecision highp float;\n\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute float aTextureId;\nattribute vec4 aTintColor;\n\nuniform mat4 uProjectionMatrix;\nuniform mat4 uCameraMatrix;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\n\nvoid main (void)\n{\n    vTextureCoord = aTextureCoord;\n    vTextureId = aTextureId;\n    vTintColor = aTintColor;\n\n    gl_Position = uProjectionMatrix * uCameraMatrix * vec4(aVertexPosition, 0.0, 1.0);\n}`;\n\n// src/textures/Frame.ts\nvar Frame = class {\n  constructor(texture, key, x, y, width, height) {\n    this.trimmed = false;\n    this.texture = texture;\n    this.key = key;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.sourceSizeWidth = width;\n    this.sourceSizeHeight = height;\n    this.updateUVs();\n  }\n  setPivot(x, y) {\n    this.pivot = {x, y};\n  }\n  setSize(width, height) {\n    this.width = width;\n    this.height = height;\n    this.sourceSizeWidth = width;\n    this.sourceSizeHeight = height;\n    this.updateUVs();\n  }\n  setSourceSize(width, height) {\n    this.sourceSizeWidth = width;\n    this.sourceSizeHeight = height;\n  }\n  setTrim(width, height, x, y, w, h) {\n    this.trimmed = true;\n    this.sourceSizeWidth = width;\n    this.sourceSizeHeight = height;\n    this.spriteSourceSizeX = x;\n    this.spriteSourceSizeY = y;\n    this.spriteSourceSizeWidth = w;\n    this.spriteSourceSizeHeight = h;\n  }\n  getExtent(originX, originY) {\n    const sourceSizeWidth = this.sourceSizeWidth;\n    const sourceSizeHeight = this.sourceSizeHeight;\n    let left;\n    let right;\n    let top;\n    let bottom;\n    if (this.trimmed) {\n      left = this.spriteSourceSizeX - originX * sourceSizeWidth;\n      right = left + this.spriteSourceSizeWidth;\n      top = this.spriteSourceSizeY - originY * sourceSizeHeight;\n      bottom = top + this.spriteSourceSizeHeight;\n    } else {\n      left = -originX * sourceSizeWidth;\n      right = left + sourceSizeWidth;\n      top = -originY * sourceSizeHeight;\n      bottom = top + sourceSizeHeight;\n    }\n    return {left, right, top, bottom};\n  }\n  setExtent(child) {\n    const transform = child.transform;\n    const originX = transform.origin.x;\n    const originY = transform.origin.y;\n    const sourceSizeWidth = this.sourceSizeWidth;\n    const sourceSizeHeight = this.sourceSizeHeight;\n    let x;\n    let y;\n    let width;\n    let height;\n    if (this.trimmed) {\n      x = this.spriteSourceSizeX - originX * sourceSizeWidth;\n      y = this.spriteSourceSizeY - originY * sourceSizeHeight;\n      width = this.spriteSourceSizeWidth;\n      height = this.spriteSourceSizeHeight;\n    } else {\n      x = -originX * sourceSizeWidth;\n      y = -originY * sourceSizeHeight;\n      width = sourceSizeWidth;\n      height = sourceSizeHeight;\n    }\n    transform.setExtent(x, y, width, height);\n  }\n  updateUVs() {\n    const {x, y, width, height} = this;\n    const baseTextureWidth = this.texture.width;\n    const baseTextureHeight = this.texture.height;\n    this.u0 = x / baseTextureWidth;\n    this.v0 = y / baseTextureHeight;\n    this.u1 = (x + width) / baseTextureWidth;\n    this.v1 = (y + height) / baseTextureHeight;\n  }\n};\n\n// src/textures/Texture.ts\nvar Texture = class {\n  constructor(image, width, height, glConfig) {\n    this.key = \"\";\n    if (image) {\n      width = image.width;\n      height = image.height;\n    }\n    this.image = image;\n    this.width = width;\n    this.height = height;\n    this.frames = new Map();\n    this.data = {};\n    this.addFrame(\"__BASE\", 0, 0, width, height);\n    BindingQueue.add(this, glConfig);\n  }\n  addFrame(key, x, y, width, height) {\n    if (this.frames.has(key)) {\n      return null;\n    }\n    const frame2 = new Frame(this, key, x, y, width, height);\n    this.frames.set(key, frame2);\n    if (!this.firstFrame || this.firstFrame.key === \"__BASE\") {\n      this.firstFrame = frame2;\n    }\n    return frame2;\n  }\n  getFrame(key) {\n    if (!key) {\n      return this.firstFrame;\n    }\n    if (key instanceof Frame) {\n      key = key.key;\n    }\n    let frame2 = this.frames.get(key);\n    if (!frame2) {\n      console.warn(`Frame missing: ${key}`);\n      frame2 = this.firstFrame;\n    }\n    return frame2;\n  }\n  setSize(width, height) {\n    this.width = width;\n    this.height = height;\n    const frame2 = this.frames.get(\"__BASE\");\n    frame2.setSize(width, height);\n  }\n  destroy() {\n    if (this.binding) {\n      this.binding.destroy();\n    }\n    this.frames.clear();\n    this.data = null;\n    this.image = null;\n    this.firstFrame = null;\n  }\n};\n\n// src/renderer/webgl1/shaders/Shader.ts\nvar Shader = class {\n  constructor(config) {\n    this.renderToFramebuffer = false;\n    this.renderToDepthbuffer = false;\n    if (config) {\n      this.fromConfig(config);\n    }\n  }\n  fromConfig(config) {\n    const {\n      attributes = DefaultQuadAttributes,\n      fragmentShader = SINGLE_QUAD_FRAG,\n      height = GetHeight(),\n      renderToFramebuffer = false,\n      renderToDepthbuffer = false,\n      resolution = GetResolution(),\n      vertexShader = SINGLE_QUAD_VERT,\n      width = GetWidth(),\n      uniforms = DefaultQuadUniforms\n    } = config;\n    this.create(fragmentShader, vertexShader, uniforms, attributes);\n    if (renderToFramebuffer) {\n      this.renderToFramebuffer = true;\n      const texture = new Texture(null, width * resolution, height * resolution);\n      const binding = new GLTextureBinding(texture);\n      texture.binding = binding;\n      binding.framebuffer = CreateFramebuffer(binding.texture);\n      if (renderToDepthbuffer) {\n        this.renderToDepthbuffer = true;\n        binding.depthbuffer = CreateDepthBuffer(binding.framebuffer, texture.width, texture.height);\n      }\n      this.texture = texture;\n      this.framebuffer = binding.framebuffer;\n    }\n  }\n  create(fragmentShaderSource, vertexShaderSource, uniforms, attribs) {\n    const fragmentShader = CreateShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n    const vertexShader = CreateShader(vertexShaderSource, gl.VERTEX_SHADER);\n    if (!fragmentShader || !vertexShader) {\n      return;\n    }\n    const program = CreateProgram(fragmentShader, vertexShader);\n    if (!program) {\n      return;\n    }\n    const currentProgram = gl.getParameter(gl.CURRENT_PROGRAM);\n    gl.useProgram(program);\n    this.program = program;\n    this.uniformSetters = CreateUniforms(program);\n    this.uniforms = new Map();\n    for (const [key, value] of Object.entries(uniforms)) {\n      this.uniforms.set(key, value);\n    }\n    this.attributes = CreateAttributes(program, attribs);\n    gl.useProgram(currentProgram);\n  }\n  updateUniforms(renderPass) {\n  }\n  bind(renderPass) {\n    this.updateUniforms(renderPass);\n    return this.setUniforms(renderPass);\n  }\n  setUniform(key, value) {\n    const uniforms = this.uniforms;\n    if (uniforms.has(key)) {\n      uniforms.set(key, value);\n      const setter = this.uniformSetters.get(key);\n      setter(value);\n    }\n  }\n  setUniforms(renderPass) {\n    if (!this.program) {\n      return false;\n    }\n    gl.useProgram(this.program);\n    const uniforms = this.uniforms;\n    for (const [name, setter] of this.uniformSetters.entries()) {\n      setter(uniforms.get(name));\n    }\n    return true;\n  }\n  setAttributes(renderPass) {\n    if (this.program) {\n      const stride = renderPass.currentVertexBuffer.vertexByteSize;\n      this.attributes.forEach((attrib) => {\n        gl.vertexAttribPointer(attrib.index, attrib.size, attrib.type, attrib.normalized, stride, attrib.offset);\n      });\n    }\n  }\n  destroy() {\n    DeleteShaders(this.program);\n    DeleteGLTexture(this.texture);\n    DeleteFramebuffer(this.framebuffer);\n    this.uniforms.clear();\n    this.uniformSetters.clear();\n    this.attributes.clear();\n    this.program = null;\n    this.texture = null;\n    this.framebuffer = null;\n  }\n};\n\n// src/renderer/webgl1/shaders/QuadShader.ts\nvar QuadShader = class extends Shader {\n  constructor(config = {}) {\n    const shaderConfig = config;\n    shaderConfig.attributes = !shaderConfig.attributes ? DefaultQuadAttributes : shaderConfig.attributes;\n    super(shaderConfig);\n  }\n  bind(renderPass) {\n    const uniforms = this.uniforms;\n    uniforms.set(\"uProjectionMatrix\", renderPass.projectionMatrix.data);\n    uniforms.set(\"uCameraMatrix\", renderPass.cameraMatrix.data);\n    return super.bind(renderPass);\n  }\n};\n\n// src/renderer/webgl1/glsl/MULTI_QUAD_FRAG.ts\nvar MULTI_QUAD_FRAG = `#define SHADER_NAME MULTI_QUAD_FRAG\n\nprecision highp float;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\n\nuniform sampler2D uTexture[%count%];\n\nvoid main (void)\n{\n    vec4 color;\n\n    %forloop%\n\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\n}`;\n\n// src/renderer/webgl1/shaders/MultiTextureQuadShader.ts\nvar MultiTextureQuadShader = class extends QuadShader {\n  constructor(config = {}) {\n    if (!config.fragmentShader) {\n      config.fragmentShader = MULTI_QUAD_FRAG;\n    }\n    super(config);\n  }\n  create(fragmentShaderSource, vertexShaderSource, uniforms, attribs) {\n    const maxTextures = GetMaxTextures();\n    let src = \"\";\n    for (let i = 1; i < maxTextures; i++) {\n      if (i > 1) {\n        src += \"\\n\telse \";\n      }\n      if (i < maxTextures - 1) {\n        src += `if (vTextureId < ${i}.5)`;\n      }\n      src += \"\\n\t{\";\n      src += `\n\t\tcolor = texture2D(uTexture[${i}], vTextureCoord);`;\n      src += \"\\n\t}\";\n    }\n    fragmentShaderSource = fragmentShaderSource.replace(/%count%/gi, `${maxTextures}`);\n    fragmentShaderSource = fragmentShaderSource.replace(/%forloop%/gi, src);\n    super.create(fragmentShaderSource, vertexShaderSource, uniforms, attribs);\n  }\n  bind(renderPass) {\n    this.uniforms.set(\"uTexture\", renderPass.textureIndex);\n    return super.bind(renderPass);\n  }\n};\n\n// src/renderer/webgl1/renderpass/SetDefaultBlendMode.ts\nfunction SetDefaultBlendMode(renderPass, enable, sfactor, dfactor) {\n  const entry = {enable, sfactor, dfactor};\n  renderPass.blendModeStack[0] = entry;\n  renderPass.currentBlendMode = entry;\n  renderPass.defaultBlendMode = entry;\n}\n\n// src/renderer/webgl1/renderpass/SetDefaultFramebuffer.ts\nfunction SetDefaultFramebuffer(renderPass, framebuffer = null, viewport) {\n  const entry = {framebuffer, viewport};\n  renderPass.framebufferStack[0] = entry;\n  renderPass.currentFramebuffer = entry;\n  renderPass.defaultFramebuffer = entry;\n}\n\n// src/renderer/webgl1/renderpass/SetDefaultShader.ts\nfunction SetDefaultShader(renderPass, shader, textureID) {\n  const entry = {shader, textureID};\n  renderPass.shaderStack[0] = entry;\n  renderPass.currentShader = entry;\n  renderPass.defaultShader = entry;\n}\n\n// src/renderer/webgl1/renderpass/SetDefaultVertexBuffer.ts\nfunction SetDefaultVertexBuffer(renderPass, buffer) {\n  renderPass.vertexBufferStack[0] = buffer;\n  renderPass.currentVertexBuffer = buffer;\n  renderPass.defaultVertexBuffer = buffer;\n}\n\n// src/renderer/webgl1/renderpass/SetDefaultViewport.ts\nfunction SetDefaultViewport(renderPass, x = 0, y = 0, width = 0, height = 0) {\n  const entry = new Rectangle(x, y, width, height);\n  renderPass.viewportStack[0] = entry;\n  renderPass.currentViewport = entry;\n  renderPass.defaultViewport = entry;\n}\n\n// src/renderer/webgl1/renderpass/RenderPass.ts\nvar RenderPass = class {\n  constructor(renderer) {\n    this.count = 0;\n    this.prevCount = 0;\n    this.flushTotal = 0;\n    this.maxTextures = 0;\n    this.currentActiveTexture = 0;\n    this.startActiveTexture = 0;\n    this.tempTextures = [];\n    this.textureIndex = [];\n    this.framebufferStack = [];\n    this.currentFramebuffer = null;\n    this.defaultFramebuffer = null;\n    this.vertexBufferStack = [];\n    this.currentVertexBuffer = null;\n    this.defaultVertexBuffer = null;\n    this.shaderStack = [];\n    this.currentShader = null;\n    this.defaultShader = null;\n    this.viewportStack = [];\n    this.currentViewport = null;\n    this.defaultViewport = null;\n    this.blendModeStack = [];\n    this.currentBlendMode = null;\n    this.defaultBlendMode = null;\n    this.renderer = renderer;\n    this.projectionMatrix = new Matrix4();\n    this.reset();\n  }\n  reset() {\n    const gl2 = this.renderer.gl;\n    const indexLayout = [0, 1, 2, 2, 3, 0];\n    this.quadShader = new QuadShader();\n    this.quadBuffer = new IndexedVertexBuffer({isDynamic: false, indexLayout});\n    this.quadCamera = new StaticCamera();\n    CreateTempTextures(this);\n    SetDefaultFramebuffer(this);\n    SetDefaultBlendMode(this, true, gl2.ONE, gl2.ONE_MINUS_SRC_ALPHA);\n    SetDefaultVertexBuffer(this, new IndexedVertexBuffer({batchSize: GetBatchSize(), indexLayout}));\n    SetDefaultShader(this, new MultiTextureQuadShader());\n  }\n  resize(width, height) {\n    Mat4Ortho(0, width, height, 0, -1e3, 1e3, this.projectionMatrix);\n    this.quadCamera.reset();\n    SetDefaultViewport(this, 0, 0, width, height);\n  }\n};\n\n// src/renderer/webgl1/renderpass/AddShader.ts\nfunction AddShader(renderPass, shader, textureID) {\n  const stackEntry = {shader, textureID};\n  renderPass.shaderStack.push(stackEntry);\n  return stackEntry;\n}\n\n// src/renderer/webgl1/renderpass/AddVertexBuffer.ts\nfunction AddVertexBuffer(renderPass, buffer) {\n  renderPass.vertexBufferStack.push(buffer);\n  return buffer;\n}\n\n// src/renderer/webgl1/renderpass/BindShader.ts\nfunction BindShader(renderPass, entry) {\n  if (!entry) {\n    entry = renderPass.currentShader;\n  }\n  const success = entry.shader.bind(renderPass, entry.textureID);\n  if (success) {\n    entry.shader.setAttributes(renderPass);\n  }\n}\n\n// src/renderer/webgl1/renderpass/Begin.ts\nfunction Begin(renderPass, camera2D) {\n  renderPass.current2DCamera = camera2D;\n  renderPass.cameraMatrix = camera2D.matrix;\n  BindShader(renderPass);\n}\n\n// src/renderer/webgl1/renderpass/BindBlendMode.ts\nfunction BindBlendMode(renderPass, entry) {\n  if (!entry) {\n    entry = renderPass.currentBlendMode;\n  }\n  if (entry.enable) {\n    gl.enable(gl.BLEND);\n    gl.blendFunc(entry.sfactor, entry.dfactor);\n  } else {\n    gl.disable(gl.BLEND);\n  }\n}\n\n// src/renderer/webgl1/renderpass/BindTexture.ts\nfunction BindTexture(texture, index = 0) {\n  const binding = texture.binding;\n  binding.setIndex(index);\n  gl.activeTexture(gl.TEXTURE0 + index);\n  gl.bindTexture(gl.TEXTURE_2D, binding.texture);\n}\n\n// src/renderer/webgl1/renderpass/BindVertexBuffer.ts\nfunction BindVertexBuffer(renderPass, buffer) {\n  if (!buffer) {\n    buffer = renderPass.currentVertexBuffer;\n  }\n  const indexBuffer = buffer.indexed ? buffer.indexBuffer : null;\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer.vertexBuffer);\n}\n\n// src/renderer/webgl1/renderpass/PopVertexBuffer.ts\nfunction PopVertexBuffer(renderPass) {\n  const stack = renderPass.vertexBufferStack;\n  if (stack.length > 1) {\n    stack.pop();\n  }\n  renderPass.currentVertexBuffer = stack[stack.length - 1];\n  BindVertexBuffer(renderPass);\n}\n\n// src/renderer/webgl1/renderpass/SetVertexBuffer.ts\nfunction SetVertexBuffer(renderPass, buffer) {\n  const entry = AddVertexBuffer(renderPass, buffer);\n  BindVertexBuffer(renderPass, entry);\n  renderPass.currentVertexBuffer = entry;\n}\n\n// src/renderer/webgl1/renderpass/FlushBuffer.ts\nfunction FlushBuffer(renderPass, buffer) {\n  SetVertexBuffer(renderPass, buffer);\n  renderPass.currentShader.shader.setAttributes(renderPass);\n  const result = Flush(renderPass, buffer.count);\n  PopVertexBuffer(renderPass);\n  return result;\n}\n\n// src/renderer/webgl1/renderpass/GetVertexBufferEntry.ts\nfunction GetVertexBufferEntry(renderPass, addToCount = 0) {\n  const buffer = renderPass.currentVertexBuffer;\n  if (renderPass.count + addToCount >= buffer.batchSize) {\n    Flush(renderPass);\n  }\n  const offset = buffer.indexed ? renderPass.count * buffer.entryElementSize : renderPass.count * buffer.vertexElementSize;\n  renderPass.count += addToCount;\n  return {\n    buffer,\n    F32: buffer.vertexViewF32,\n    U32: buffer.vertexViewU32,\n    offset\n  };\n}\n\n// src/renderer/webgl1/renderpass/PopShader.ts\nfunction PopShader(renderPass) {\n  const stack = renderPass.shaderStack;\n  if (stack.length > 1) {\n    stack.pop();\n  }\n  renderPass.currentShader = stack[stack.length - 1];\n  BindShader(renderPass);\n}\n\n// src/renderer/webgl1/renderpass/SetShader.ts\nfunction SetShader(renderPass, shader, textureID) {\n  const entry = AddShader(renderPass, shader, textureID);\n  BindShader(renderPass, entry);\n  renderPass.currentShader = entry;\n}\n\n// src/renderer/webgl1/renderpass/SetTexture.ts\nfunction SetTexture(renderPass, texture) {\n  const binding = texture.binding;\n  const currentActiveTexture = renderPass.currentActiveTexture;\n  if (binding.indexCounter < renderPass.startActiveTexture) {\n    binding.indexCounter = renderPass.startActiveTexture;\n    if (currentActiveTexture < renderPass.maxTextures) {\n      binding.setIndex(currentActiveTexture);\n      gl.activeTexture(gl.TEXTURE0 + currentActiveTexture);\n      gl.bindTexture(gl.TEXTURE_2D, binding.texture);\n      renderPass.currentActiveTexture++;\n    } else {\n      Flush(renderPass);\n      renderPass.startActiveTexture++;\n      binding.indexCounter = renderPass.startActiveTexture;\n      binding.setIndex(1);\n      gl.activeTexture(gl.TEXTURE1);\n      gl.bindTexture(gl.TEXTURE_2D, binding.texture);\n      renderPass.currentActiveTexture = 2;\n    }\n  }\n  return binding.index;\n}\n\n// src/renderer/webgl1/renderpass/Start.ts\nfunction Start(renderPass) {\n  renderPass.current2DCamera = renderPass.quadCamera;\n  renderPass.cameraMatrix = renderPass.quadCamera.matrix;\n  renderPass.count = 0;\n  renderPass.flushTotal = 0;\n  BindFramebuffer(renderPass, false, renderPass.defaultFramebuffer);\n  BindBlendMode(renderPass, renderPass.defaultBlendMode);\n  BindViewport(renderPass, renderPass.defaultViewport);\n  BindVertexBuffer(renderPass, renderPass.defaultVertexBuffer);\n}\n\n// src/renderer/webgl1/renderpass/UnbindTexture.ts\nfunction UnbindTexture(renderPass, index = 0) {\n  gl.activeTexture(gl.TEXTURE0 + index);\n  gl.bindTexture(gl.TEXTURE_2D, renderPass.tempTextures[index]);\n  if (index > 0) {\n    renderPass.startActiveTexture++;\n  }\n}\n\n// src/renderer/webgl1/WebGLRendererInstance.ts\nvar instance2;\nvar WebGLRendererInstance = {\n  get: () => {\n    return instance2;\n  },\n  set: (renderer) => {\n    instance2 = renderer;\n  }\n};\n\n// src/renderer/webgl1/WebGLRenderer.ts\nvar WebGLRenderer = class {\n  constructor() {\n    this.clearColor = [0, 0, 0, 1];\n    this.clearBeforeRender = true;\n    this.optimizeRedraw = false;\n    this.autoResize = true;\n    this.contextLost = false;\n    this.width = GetWidth();\n    this.height = GetHeight();\n    this.resolution = GetResolution();\n    this.setBackgroundColor(GetBackgroundColor());\n    const canvas = document.createElement(\"canvas\");\n    canvas.addEventListener(\"webglcontextlost\", (event) => this.onContextLost(event), false);\n    canvas.addEventListener(\"webglcontextrestored\", () => this.onContextRestored(), false);\n    this.canvas = canvas;\n    this.initContext();\n    WebGLRendererInstance.set(this);\n    this.renderPass = new RenderPass(this);\n    this.resize(this.width, this.height, this.resolution);\n  }\n  initContext() {\n    const gl2 = this.canvas.getContext(\"webgl\", GetWebGLContext());\n    GL.set(gl2);\n    this.gl = gl2;\n    gl2.disable(gl2.DEPTH_TEST);\n    gl2.disable(gl2.CULL_FACE);\n  }\n  resize(width, height, resolution = 1) {\n    const calcWidth = width * resolution;\n    const calcHeight = height * resolution;\n    this.width = calcWidth;\n    this.height = calcHeight;\n    this.resolution = resolution;\n    const canvas = this.canvas;\n    canvas.width = calcWidth;\n    canvas.height = calcHeight;\n    if (this.autoResize) {\n      canvas.style.width = width.toString() + \"px\";\n      canvas.style.height = height.toString() + \"px\";\n    }\n    this.renderPass.resize(calcWidth, calcHeight);\n  }\n  onContextLost(event) {\n    event.preventDefault();\n    this.contextLost = true;\n  }\n  onContextRestored() {\n    this.contextLost = false;\n    this.initContext();\n  }\n  setBackgroundColor(color) {\n    GetRGBArray(color, this.clearColor);\n    return this;\n  }\n  reset() {\n  }\n  render(renderData) {\n    if (this.contextLost) {\n      return;\n    }\n    const gl2 = this.gl;\n    const renderPass = this.renderPass;\n    ProcessBindingQueue();\n    if (this.optimizeRedraw && renderData.numDirtyFrames === 0 && renderData.numDirtyCameras === 0) {\n      return;\n    }\n    if (this.clearBeforeRender) {\n      const cls = this.clearColor;\n      gl2.clearColor(cls[0], cls[1], cls[2], cls[3]);\n      gl2.clear(gl2.COLOR_BUFFER_BIT);\n    }\n    const worlds = renderData.worldData;\n    Start(renderPass);\n    for (let i = 0; i < worlds.length; i++) {\n      const {world} = worlds[i];\n      world.renderGL(renderPass);\n      world.postRenderGL(renderPass);\n    }\n    End(renderPass);\n  }\n  destroy() {\n    WebGLRendererInstance.set(void 0);\n  }\n};\n\n// src/config/webgl/WebGL.ts\nfunction WebGL() {\n  return () => {\n    SetRenderer(WebGLRenderer);\n  };\n}\n\n// src/config/webglcontext/SetWebGLContext.ts\nfunction SetWebGLContext(contextAttributes) {\n  ConfigStore.set(CONFIG_DEFAULTS.WEBGL_CONTEXT, contextAttributes);\n}\n\n// src/config/webglcontext/WebGLContext.ts\nfunction WebGLContext(contextAttributes) {\n  return () => {\n    SetWebGLContext(contextAttributes);\n  };\n}\n\n// src/dom/index.ts\nvar dom_exports = {};\n__export(dom_exports, {\n  AddToDOM: () => AddToDOM,\n  DOMContentLoaded: () => DOMContentLoaded,\n  GetElement: () => GetElement,\n  ParseXML: () => ParseXML,\n  RemoveFromDOM: () => RemoveFromDOM\n});\n\n// src/dom/AddToDOM.ts\nfunction AddToDOM(element, parent) {\n  const target = GetElement(parent);\n  target.appendChild(element);\n  return element;\n}\n\n// src/dom/DOMContentLoaded.ts\nfunction DOMContentLoaded(callback) {\n  const readyState = document.readyState;\n  if (readyState === \"complete\" || readyState === \"interactive\") {\n    callback();\n    return;\n  }\n  const check = () => {\n    document.removeEventListener(\"deviceready\", check, true);\n    document.removeEventListener(\"DOMContentLoaded\", check, true);\n    window.removeEventListener(\"load\", check, true);\n    callback();\n  };\n  if (!document.body) {\n    window.setTimeout(check, 20);\n  } else if (window.hasOwnProperty(\"cordova\")) {\n    document.addEventListener(\"deviceready\", check, true);\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", check, true);\n    window.addEventListener(\"load\", check, true);\n  }\n}\n\n// src/dom/ParseXML.ts\nfunction ParseXML(data) {\n  let xml;\n  try {\n    const parser = new DOMParser();\n    xml = parser.parseFromString(data, \"text/xml\");\n    if (!xml || !xml.documentElement || xml.getElementsByTagName(\"parsererror\").length) {\n      return null;\n    } else {\n      return xml;\n    }\n  } catch (error) {\n    return null;\n  }\n}\n\n// src/dom/RemoveFromDOM.ts\nfunction RemoveFromDOM(element) {\n  if (element.parentNode) {\n    element.parentNode.removeChild(element);\n  }\n}\n\n// src/device/index.ts\nvar device_exports = {};\n__export(device_exports, {\n  Audio: () => audio_exports,\n  Browser: () => browser_exports,\n  CanPlayAudioType: () => CanPlayAudioType,\n  CanPlayH264Video: () => CanPlayH264Video,\n  CanPlayHLSVideo: () => CanPlayHLSVideo,\n  CanPlayM4A: () => CanPlayM4A,\n  CanPlayMP3: () => CanPlayMP3,\n  CanPlayOGG: () => CanPlayOGG,\n  CanPlayOGGVideo: () => CanPlayOGGVideo,\n  CanPlayOpus: () => CanPlayOpus,\n  CanPlayVP9Video: () => CanPlayVP9Video,\n  CanPlayVideoType: () => CanPlayVideoType,\n  CanPlayWAV: () => CanPlayWAV,\n  CanPlayWebM: () => CanPlayWebM,\n  CanPlayWebMVideo: () => CanPlayWebMVideo,\n  GetAudio: () => GetAudio,\n  GetBrowser: () => GetBrowser,\n  GetOS: () => GetOS,\n  GetVideo: () => GetVideo,\n  HasAudio: () => HasAudio,\n  HasWebAudio: () => HasWebAudio,\n  IsAndroid: () => IsAndroid,\n  IsChrome: () => IsChrome,\n  IsChromeOS: () => IsChromeOS,\n  IsCordova: () => IsCordova,\n  IsCrosswalk: () => IsCrosswalk,\n  IsEdge: () => IsEdge,\n  IsEjecta: () => IsEjecta,\n  IsFirefox: () => IsFirefox,\n  IsKindle: () => IsKindle,\n  IsLinux: () => IsLinux,\n  IsMSIE: () => IsMSIE,\n  IsMacOS: () => IsMacOS,\n  IsMobileSafari: () => IsMobileSafari,\n  IsNode: () => IsNode,\n  IsNodeWebkit: () => IsNodeWebkit,\n  IsOpera: () => IsOpera,\n  IsSafari: () => IsSafari,\n  IsSilk: () => IsSilk,\n  IsTrident: () => IsTrident,\n  IsWebApp: () => IsWebApp,\n  IsWindows: () => IsWindows,\n  IsWindowsPhone: () => IsWindowsPhone,\n  IsiOS: () => IsiOS,\n  OS: () => os_exports,\n  Video: () => video_exports\n});\n\n// src/device/audio/index.ts\nvar audio_exports = {};\n__export(audio_exports, {\n  CanPlayAudioType: () => CanPlayAudioType,\n  CanPlayM4A: () => CanPlayM4A,\n  CanPlayMP3: () => CanPlayMP3,\n  CanPlayOGG: () => CanPlayOGG,\n  CanPlayOpus: () => CanPlayOpus,\n  CanPlayWAV: () => CanPlayWAV,\n  CanPlayWebM: () => CanPlayWebM,\n  GetAudio: () => GetAudio,\n  HasAudio: () => HasAudio,\n  HasWebAudio: () => HasWebAudio\n});\n\n// src/device/audio/CanPlayAudioType.ts\nvar _audioElement;\nfunction CanPlayAudioType(type, audioElement) {\n  if (!audioElement) {\n    if (!_audioElement) {\n      _audioElement = document.createElement(\"audio\");\n    }\n    audioElement = _audioElement;\n  }\n  return audioElement && audioElement.canPlayType(type) !== \"\";\n}\n\n// src/device/audio/CanPlayM4A.ts\nfunction CanPlayM4A(audioElement) {\n  return CanPlayAudioType(\"audio/x-m4a\", audioElement) || CanPlayAudioType(\"audio/aac\", audioElement);\n}\n\n// src/device/audio/CanPlayMP3.ts\nfunction CanPlayMP3(audioElement) {\n  return CanPlayAudioType('audio/mpeg; codecs=\"mp3\"', audioElement);\n}\n\n// src/device/audio/CanPlayOGG.ts\nfunction CanPlayOGG(audioElement) {\n  return CanPlayAudioType('audio/ogg; codecs=\"vorbis\"', audioElement);\n}\n\n// src/device/audio/CanPlayOpus.ts\nfunction CanPlayOpus(audioElement) {\n  return CanPlayAudioType('audio/ogg; codecs=\"opus\"', audioElement) || CanPlayAudioType('audio/webm; codecs=\"opus\"', audioElement);\n}\n\n// src/device/audio/CanPlayWAV.ts\nfunction CanPlayWAV(audioElement) {\n  return CanPlayAudioType('audio/wav; codecs=\"1\"', audioElement);\n}\n\n// src/device/audio/CanPlayWebM.ts\nfunction CanPlayWebM(audioElement) {\n  return CanPlayAudioType('audio/webm; codecs=\"vorbis\"', audioElement);\n}\n\n// src/device/audio/HasAudio.ts\nfunction HasAudio() {\n  return window && window.hasOwnProperty(\"Audio\");\n}\n\n// src/device/audio/HasWebAudio.ts\nfunction HasWebAudio() {\n  return window && (window.hasOwnProperty(\"AudioContext\") || window.hasOwnProperty(\"webkitAudioContext\"));\n}\n\n// src/device/audio/GetAudio.ts\nfunction GetAudio() {\n  const result = {\n    audioData: HasAudio(),\n    m4a: false,\n    mp3: false,\n    ogg: false,\n    opus: false,\n    wav: false,\n    webAudio: HasWebAudio(),\n    webm: false\n  };\n  if (result.audioData) {\n    result.m4a = CanPlayM4A();\n    result.mp3 = CanPlayMP3();\n    result.ogg = CanPlayOGG();\n    result.opus = CanPlayOpus();\n    result.wav = CanPlayWAV();\n    result.webm = CanPlayWebM();\n  }\n  return result;\n}\n\n// src/device/browser/index.ts\nvar browser_exports = {};\n__export(browser_exports, {\n  GetBrowser: () => GetBrowser,\n  IsChrome: () => IsChrome,\n  IsEdge: () => IsEdge,\n  IsFirefox: () => IsFirefox,\n  IsMSIE: () => IsMSIE,\n  IsMobileSafari: () => IsMobileSafari,\n  IsOpera: () => IsOpera,\n  IsSafari: () => IsSafari,\n  IsSilk: () => IsSilk,\n  IsTrident: () => IsTrident\n});\n\n// src/device/browser/IsChrome.ts\nfunction IsChrome() {\n  const chrome = /Chrome\\/(\\d+)/.test(navigator.userAgent);\n  const chromeVersion = chrome ? parseInt(RegExp.$1, 10) : 0;\n  return {\n    chrome,\n    chromeVersion\n  };\n}\n\n// src/device/browser/IsEdge.ts\nfunction IsEdge() {\n  const edge = /Edge\\/\\d+/.test(navigator.userAgent);\n  return {\n    edge\n  };\n}\n\n// src/device/browser/IsFirefox.ts\nfunction IsFirefox() {\n  const firefox = /Firefox\\D+(\\d+)/.test(navigator.userAgent);\n  const firefoxVersion = firefox ? parseInt(RegExp.$1, 10) : 0;\n  return {\n    firefox,\n    firefoxVersion\n  };\n}\n\n// src/device/browser/IsMSIE.ts\nfunction IsMSIE() {\n  const ie = /MSIE (\\d+\\.\\d+);/.test(navigator.userAgent);\n  const ieVersion = ie ? parseInt(RegExp.$1, 10) : 0;\n  return {\n    ie,\n    ieVersion\n  };\n}\n\n// src/device/os/IsiOS.ts\nfunction IsiOS() {\n  const ua = navigator.userAgent;\n  const result = {\n    iOS: false,\n    iOSVersion: 0,\n    iPhone: false,\n    iPad: false\n  };\n  if (/iP[ao]d|iPhone/i.test(ua)) {\n    const match = /OS (\\d+)/.exec(navigator.appVersion);\n    result.iOS = true;\n    result.iOSVersion = parseInt(match[0], 10);\n    result.iPhone = ua.toLowerCase().includes(\"iphone\");\n    result.iPad = ua.toLowerCase().includes(\"ipad\");\n  }\n  return result;\n}\n\n// src/device/browser/IsMobileSafari.ts\nfunction IsMobileSafari() {\n  const {iOS} = IsiOS();\n  const mobileSafari = navigator.userAgent.includes(\"AppleWebKit\") && iOS;\n  return {\n    mobileSafari\n  };\n}\n\n// src/device/browser/IsOpera.ts\nfunction IsOpera() {\n  const opera = navigator.userAgent.includes(\"Opera\");\n  return {\n    opera\n  };\n}\n\n// src/device/os/IsWindowsPhone.ts\nfunction IsWindowsPhone() {\n  const ua = navigator.userAgent;\n  return /Windows Phone/i.test(ua) || /IEMobile/i.test(ua);\n}\n\n// src/device/browser/IsSafari.ts\nfunction IsSafari() {\n  const ua = navigator.userAgent;\n  const safari = ua.includes(\"Safari\") && !IsWindowsPhone();\n  const safariVersion = /Version\\/(\\d+)\\./.test(ua) ? parseInt(RegExp.$1, 10) : 0;\n  return {\n    safari,\n    safariVersion\n  };\n}\n\n// src/device/browser/IsSilk.ts\nfunction IsSilk() {\n  const silk = navigator.userAgent.includes(\"Silk\");\n  return {\n    silk\n  };\n}\n\n// src/device/browser/IsTrident.ts\nfunction IsTrident() {\n  const trident = /Trident\\/(\\d+\\.\\d+)(.*)rv:(\\d+\\.\\d+)/.test(navigator.userAgent);\n  const tridentVersion = trident ? parseInt(RegExp.$1, 10) : 0;\n  const tridentIEVersion = trident ? parseInt(RegExp.$3, 10) : 0;\n  return {\n    trident,\n    tridentVersion,\n    tridentIEVersion\n  };\n}\n\n// src/device/browser/GetBrowser.ts\nfunction GetBrowser() {\n  const {chrome, chromeVersion} = IsChrome();\n  const {edge} = IsEdge();\n  const {firefox, firefoxVersion} = IsFirefox();\n  let {ie, ieVersion} = IsMSIE();\n  const {mobileSafari} = IsMobileSafari();\n  const {opera} = IsOpera();\n  const {safari, safariVersion} = IsSafari();\n  const {silk} = IsSilk();\n  const {trident, tridentVersion, tridentIEVersion} = IsTrident();\n  if (trident) {\n    ie = true;\n    ieVersion = tridentIEVersion;\n  }\n  const result = {\n    chrome,\n    chromeVersion,\n    edge,\n    firefox,\n    firefoxVersion,\n    ie,\n    ieVersion,\n    mobileSafari,\n    opera,\n    safari,\n    safariVersion,\n    silk,\n    trident,\n    tridentVersion\n  };\n  return result;\n}\n\n// src/device/os/index.ts\nvar os_exports = {};\n__export(os_exports, {\n  GetOS: () => GetOS,\n  IsAndroid: () => IsAndroid,\n  IsChromeOS: () => IsChromeOS,\n  IsCordova: () => IsCordova,\n  IsCrosswalk: () => IsCrosswalk,\n  IsEjecta: () => IsEjecta,\n  IsKindle: () => IsKindle,\n  IsLinux: () => IsLinux,\n  IsMacOS: () => IsMacOS,\n  IsNode: () => IsNode,\n  IsNodeWebkit: () => IsNodeWebkit,\n  IsWebApp: () => IsWebApp,\n  IsWindows: () => IsWindows,\n  IsWindowsPhone: () => IsWindowsPhone,\n  IsiOS: () => IsiOS\n});\n\n// src/device/os/IsAndroid.ts\nfunction IsAndroid() {\n  return navigator.userAgent.includes(\"Android\");\n}\n\n// src/device/os/IsChromeOS.ts\nfunction IsChromeOS() {\n  return navigator.userAgent.includes(\"CrOS\");\n}\n\n// src/device/os/IsCordova.ts\nfunction IsCordova() {\n  return window.hasOwnProperty(\"cordova\");\n}\n\n// src/device/os/IsCrosswalk.ts\nfunction IsCrosswalk() {\n  return navigator.userAgent.includes(\"Crosswalk\");\n}\n\n// src/device/os/IsEjecta.ts\nfunction IsEjecta() {\n  return window.hasOwnProperty(\"ejecta\");\n}\n\n// src/device/os/IsKindle.ts\nfunction IsKindle() {\n  const ua = navigator.userAgent;\n  return ua.includes(\"Kindle\") || /\\bKF[A-Z][A-Z]+/.test(ua) || /Silk.*Mobile Safari/.test(ua);\n}\n\n// src/device/os/IsLinux.ts\nfunction IsLinux() {\n  return navigator.userAgent.includes(\"Linux\");\n}\n\n// src/device/os/IsMacOS.ts\nfunction IsMacOS() {\n  const ua = navigator.userAgent;\n  return ua.includes(\"Mac OS\") && !ua.includes(\"like Mac OS\");\n}\n\n// src/device/os/IsNode.ts\nfunction IsNode() {\n  return typeof process !== \"undefined\" && typeof process.versions === \"object\" && process.versions.hasOwnProperty(\"node\");\n}\n\n// src/device/os/IsNodeWebkit.ts\nfunction IsNodeWebkit() {\n  return IsNode() && !!process.versions.hasOwnProperty(\"node-webkit\");\n}\n\n// src/device/os/IsWebApp.ts\nfunction IsWebApp() {\n  return navigator.hasOwnProperty(\"standalone\");\n}\n\n// src/device/os/IsWindows.ts\nfunction IsWindows() {\n  return navigator.userAgent.includes(\"Windows\");\n}\n\n// src/device/os/GetOS.ts\nfunction GetOS() {\n  const ua = navigator.userAgent;\n  const {iOS, iOSVersion, iPad, iPhone} = IsiOS();\n  const result = {\n    android: IsAndroid(),\n    chromeOS: IsChromeOS(),\n    cordova: IsCordova(),\n    crosswalk: IsCrosswalk(),\n    desktop: false,\n    ejecta: IsEjecta(),\n    iOS,\n    iOSVersion,\n    iPad,\n    iPhone,\n    kindle: IsKindle(),\n    linux: IsLinux(),\n    macOS: IsMacOS(),\n    node: IsNode(),\n    nodeWebkit: IsNodeWebkit(),\n    pixelRatio: 1,\n    webApp: IsWebApp(),\n    windows: IsWindows(),\n    windowsPhone: IsWindowsPhone()\n  };\n  if (result.windowsPhone) {\n    result.android = false;\n    result.iOS = false;\n    result.macOS = false;\n    result.windows = true;\n  }\n  const silk = ua.includes(\"Silk\");\n  if (result.windows || result.macOS || result.linux && !silk || result.chromeOS) {\n    result.desktop = true;\n  }\n  if (result.windowsPhone || /Windows NT/i.test(ua) && /Touch/i.test(ua)) {\n    result.desktop = false;\n  }\n  return result;\n}\n\n// src/device/video/index.ts\nvar video_exports = {};\n__export(video_exports, {\n  CanPlayH264Video: () => CanPlayH264Video,\n  CanPlayHLSVideo: () => CanPlayHLSVideo,\n  CanPlayOGGVideo: () => CanPlayOGGVideo,\n  CanPlayVP9Video: () => CanPlayVP9Video,\n  CanPlayVideoType: () => CanPlayVideoType,\n  CanPlayWebMVideo: () => CanPlayWebMVideo,\n  GetVideo: () => GetVideo\n});\n\n// src/device/video/CanPlayVideoType.ts\nvar _videoElement;\nfunction CanPlayVideoType(type, videoElement) {\n  if (!videoElement) {\n    if (!_videoElement) {\n      _videoElement = document.createElement(\"video\");\n    }\n    videoElement = _videoElement;\n  }\n  return videoElement && videoElement.canPlayType(type) !== \"\";\n}\n\n// src/device/video/CanPlayH264Video.ts\nfunction CanPlayH264Video(videoElement) {\n  return CanPlayVideoType('video/mp4; codecs=\"avc1.42E01E\"', videoElement);\n}\n\n// src/device/video/CanPlayHLSVideo.ts\nfunction CanPlayHLSVideo(videoElement) {\n  return CanPlayVideoType('application/x-mpegURL; codecs=\"avc1.42E01E\"', videoElement);\n}\n\n// src/device/video/CanPlayOGGVideo.ts\nfunction CanPlayOGGVideo(videoElement) {\n  return CanPlayVideoType('video/ogg; codecs=\"theora\"', videoElement);\n}\n\n// src/device/video/CanPlayVP9Video.ts\nfunction CanPlayVP9Video(videoElement) {\n  return CanPlayVideoType('video/webm; codecs=\"vp9\"', videoElement);\n}\n\n// src/device/video/CanPlayWebMVideo.ts\nfunction CanPlayWebMVideo(videoElement) {\n  return CanPlayVideoType('video/webm; codecs=\"vp8, vorbis\"', videoElement);\n}\n\n// src/device/video/GetVideo.ts\nfunction GetVideo() {\n  return {\n    h264Video: CanPlayH264Video(),\n    hlsVideo: CanPlayHLSVideo(),\n    oggVideo: CanPlayOGGVideo(),\n    vp9Video: CanPlayVP9Video(),\n    webmVideo: CanPlayWebMVideo()\n  };\n}\n\n// src/display/index.ts\nvar display_exports = {};\n__export(display_exports, {\n  AddChild: () => AddChild,\n  AddChildAt: () => AddChildAt,\n  AddChildren: () => AddChildren,\n  AddChildrenAt: () => AddChildrenAt,\n  AddPosition: () => AddPosition,\n  AddRotation: () => AddRotation,\n  AddScale: () => AddScale,\n  AddSkew: () => AddSkew,\n  BringChildToTop: () => BringChildToTop,\n  ConsoleTreeChildren: () => ConsoleTreeChildren,\n  CountMatchingChildren: () => CountMatchingChildren,\n  DepthFirstSearch: () => DepthFirstSearch,\n  DepthFirstSearchRecursive: () => DepthFirstSearchRecursive,\n  DepthFirstSearchRecursiveNested: () => DepthFirstSearchRecursiveNested,\n  DestroyChildren: () => DestroyChildren,\n  FindChildByName: () => FindChildByName,\n  FindChildrenByName: () => FindChildrenByName,\n  GetAllChildren: () => GetAllChildren,\n  GetChildAt: () => GetChildAt,\n  GetChildIndex: () => GetChildIndex,\n  GetChildren: () => GetChildren,\n  GetClosestChild: () => GetClosestChild,\n  GetFirstChild: () => GetFirstChild,\n  GetFurthestChild: () => GetFurthestChild,\n  GetLastChild: () => GetLastChild,\n  GetParents: () => GetParents,\n  GetRandomChild: () => GetRandomChild,\n  MoveChildDown: () => MoveChildDown,\n  MoveChildTo: () => MoveChildTo,\n  MoveChildUp: () => MoveChildUp,\n  Overlap: () => Overlap,\n  RemoveChild: () => RemoveChild,\n  RemoveChildAt: () => RemoveChildAt,\n  RemoveChildren: () => RemoveChildren,\n  RemoveChildrenAt: () => RemoveChildrenAt,\n  RemoveChildrenBetween: () => RemoveChildrenBetween,\n  ReparentChildren: () => ReparentChildren,\n  RotateChildrenLeft: () => RotateChildrenLeft,\n  RotateChildrenRight: () => RotateChildrenRight,\n  SendChildToBack: () => SendChildToBack,\n  SetBounds: () => SetBounds,\n  SetChildrenValue: () => SetChildrenValue,\n  SetName: () => SetName,\n  SetOrigin: () => SetOrigin,\n  SetParent: () => SetParent2,\n  SetPosition: () => SetPosition,\n  SetRotation: () => SetRotation,\n  SetScale: () => SetScale,\n  SetSize: () => SetSize2,\n  SetSkew: () => SetSkew,\n  SetType: () => SetType,\n  SetValue: () => SetValue,\n  SetVisible: () => SetVisible,\n  SetWorld: () => SetWorld,\n  ShuffleChildren: () => ShuffleChildren,\n  SwapChildren: () => SwapChildren\n});\n\n// src/display/DepthFirstSearch.ts\nfunction DepthFirstSearch(parent) {\n  const stack = [parent];\n  const output = [];\n  while (stack.length > 0) {\n    const node = stack.shift();\n    output.push(node);\n    const numChildren = node.numChildren;\n    if (numChildren > 0) {\n      for (let i = numChildren - 1; i >= 0; i--) {\n        stack.unshift(node.children[i]);\n      }\n    }\n  }\n  output.shift();\n  return output;\n}\n\n// src/display/GetChildIndex.ts\nfunction GetChildIndex(parent, child) {\n  return parent.children.indexOf(child);\n}\n\n// src/display/RemoveChildAt.ts\nfunction RemoveChildAt(parent, index) {\n  const children = parent.children;\n  let child;\n  if (index >= 0 && index < children.length) {\n    const removed = children.splice(index, 1);\n    if (removed[0]) {\n      child = removed[0];\n      child.parent = null;\n    }\n  }\n  return child;\n}\n\n// src/display/RemoveChild.ts\nfunction RemoveChild(parent, child) {\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex > -1) {\n    RemoveChildAt(parent, currentIndex);\n  }\n  return child;\n}\n\n// src/gameobjects/events/AddedToWorldEvent.ts\nvar AddedToWorldEvent = \"addedtoworld\";\n\n// src/gameobjects/events/DestroyEvent.ts\nvar DestroyEvent = \"destroy\";\n\n// src/gameobjects/events/PostUpdateEvent.ts\nvar PostUpdateEvent = \"postupdate\";\n\n// src/gameobjects/events/RemovedFromWorldEvent.ts\nvar RemovedFromWorldEvent = \"removedfromworld\";\n\n// src/gameobjects/events/UpdateEvent.ts\nvar UpdateEvent = \"update\";\n\n// src/events/Emit.ts\nfunction Emit(emitter, event, ...args) {\n  if (emitter.events.size === 0 || !emitter.events.has(event)) {\n    return false;\n  }\n  const listeners = emitter.events.get(event);\n  for (const ee of listeners) {\n    ee.callback.apply(ee.context, args);\n    if (ee.once) {\n      listeners.delete(ee);\n    }\n  }\n  if (listeners.size === 0) {\n    emitter.events.delete(event);\n  }\n  return true;\n}\n\n// src/display/SetWorld.ts\nfunction SetWorld(world, ...children) {\n  children.forEach((child) => {\n    if (child.world) {\n      Emit(child.world, RemovedFromWorldEvent, child, child.world);\n      Emit(child, RemovedFromWorldEvent, child, child.world);\n    }\n    child.world = world;\n    Emit(world, AddedToWorldEvent, child, world);\n    Emit(child, AddedToWorldEvent, child, world);\n  });\n  return children;\n}\n\n// src/display/SetParent.ts\nfunction SetParent2(parent, ...children) {\n  children.forEach((child) => {\n    if (child.parent) {\n      RemoveChild(child.parent, child);\n    }\n    child.parent = parent;\n  });\n  const parentWorld = parent.world;\n  if (parentWorld) {\n    SetWorld(parentWorld, ...DepthFirstSearch(parent));\n  }\n  return children;\n}\n\n// src/display/AddChild.ts\nfunction AddChild(parent, child) {\n  parent.children.push(child);\n  SetParent2(parent, child);\n  child.transform.updateWorld();\n  return child;\n}\n\n// src/display/AddChildAt.ts\nfunction AddChildAt(parent, index, child) {\n  const children = parent.children;\n  if (index >= 0 && index <= children.length) {\n    SetParent2(parent, child);\n    children.splice(index, 0, child);\n    child.transform.updateWorld();\n  }\n  return child;\n}\n\n// src/display/AddChildren.ts\nfunction AddChildren(parent, ...children) {\n  children.forEach((child) => {\n    AddChild(parent, child);\n  });\n  return children;\n}\n\n// src/display/AddChildrenAt.ts\nfunction AddChildrenAt(parent, index, ...children) {\n  const parentChildren = parent.children;\n  if (index >= 0 && index <= parentChildren.length) {\n    children.reverse().forEach((child) => {\n      children.splice(index, 0, child);\n      SetParent2(parent, child);\n      child.transform.updateWorld();\n    });\n  }\n  return children;\n}\n\n// src/display/AddPosition.ts\nfunction AddPosition(x, y, ...children) {\n  children.forEach((child) => {\n    child.x += x;\n    child.y += y;\n  });\n  return children;\n}\n\n// src/display/AddRotation.ts\nfunction AddRotation(rotation, ...children) {\n  children.forEach((child) => {\n    child.rotation += rotation;\n  });\n  return children;\n}\n\n// src/display/AddScale.ts\nfunction AddScale(scaleX, scaleY, ...children) {\n  children.forEach((child) => {\n    child.scaleX += scaleX;\n    child.scaleY += scaleY;\n  });\n  return children;\n}\n\n// src/display/AddSkew.ts\nfunction AddSkew(skewX, skewY, ...children) {\n  children.forEach((child) => {\n    child.skewX += skewX;\n    child.skewY += skewY;\n  });\n  return children;\n}\n\n// src/gameobjects/DIRTY_CONST.ts\nvar DIRTY_CONST = {\n  CLEAR: 0,\n  TRANSFORM: 1,\n  UPDATE: 2,\n  CHILD_CACHE: 4,\n  POST_RENDER: 8,\n  COLORS: 16,\n  BOUNDS: 32,\n  TEXTURE: 64,\n  FRAME: 128,\n  ALPHA: 256,\n  CHILD: 512,\n  DEFAULT: 1 + 2 + 16 + 32,\n  USER1: 536870912,\n  USER2: 1073741824,\n  USER3: 2147483648,\n  USER4: 4294967296\n};\n\n// src/display/BringChildToTop.ts\nfunction BringChildToTop(parent, child) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex !== -1 && currentIndex < parentChildren.length) {\n    parentChildren.splice(currentIndex, 1);\n    parentChildren.push(child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n\n// src/display/DepthFirstSearchRecursiveNested.ts\nfunction DepthFirstSearchRecursiveNested(parent, output = []) {\n  for (let i = 0; i < parent.numChildren; i++) {\n    const node = parent.children[i];\n    const children = [];\n    output.push({node, children});\n    if (node.numChildren > 0) {\n      DepthFirstSearchRecursiveNested(node, children);\n    }\n  }\n  return output;\n}\n\n// src/display/ConsoleTreeChildren.ts\nfunction GetInfo(entry) {\n  const legend = entry.numChildren > 0 ? \"Parent\" : \"Child\";\n  return `${legend} [ type=${entry.type}, name=${entry.name} ]`;\n}\nfunction LogChildren(entry) {\n  console.group(GetInfo(entry.node));\n  entry.children.forEach((child) => {\n    if (child.children.length > 0) {\n      LogChildren(child);\n    } else {\n      console.log(GetInfo(child.node));\n    }\n  });\n  console.groupEnd();\n}\nfunction ConsoleTreeChildren(parent) {\n  const entries = DepthFirstSearchRecursiveNested(parent);\n  if (parent.world === parent) {\n    console.group(\"World\");\n  } else {\n    console.group(GetInfo(parent));\n  }\n  entries.forEach((entry) => {\n    if (entry.children.length) {\n      LogChildren(entry);\n    } else {\n      console.log(GetInfo(entry.node));\n    }\n  });\n  console.groupEnd();\n}\n\n// src/display/CountMatchingChildren.ts\nfunction CountMatchingChildren(parent, property, value) {\n  const children = parent.children;\n  let total = 0;\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      total++;\n    }\n  });\n  return total;\n}\n\n// src/display/DepthFirstSearchRecursive.ts\nfunction DepthFirstSearchRecursive(parent, output = []) {\n  for (let i = 0; i < parent.numChildren; i++) {\n    const child = parent.children[i];\n    output.push(child);\n    if (child.numChildren > 0) {\n      DepthFirstSearchRecursive(child, output);\n    }\n  }\n  return output;\n}\n\n// src/display/RemoveChildrenBetween.ts\nfunction RemoveChildrenBetween(parent, beginIndex = 0, endIndex) {\n  const children = parent.children;\n  if (endIndex === void 0) {\n    endIndex = children.length;\n  }\n  const range = endIndex - beginIndex;\n  if (range > 0 && range <= endIndex) {\n    const removed = children.splice(beginIndex, range);\n    removed.forEach((child) => {\n      child.parent = null;\n    });\n    return removed;\n  } else {\n    return [];\n  }\n}\n\n// src/display/DestroyChildren.ts\nfunction DestroyChildren(parent, beginIndex = 0, endIndex) {\n  const removed = RemoveChildrenBetween(parent, beginIndex, endIndex);\n  removed.forEach((child) => {\n    child.destroy();\n  });\n}\n\n// src/display/FindChildByName.ts\nfunction FindChildByName(parent, searchString) {\n  const children = DepthFirstSearch(parent);\n  const regex = RegExp(searchString);\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (regex.test(child.name)) {\n      return child;\n    }\n  }\n}\n\n// src/display/FindChildrenByName.ts\nfunction FindChildrenByName(parent, searchString) {\n  const children = DepthFirstSearch(parent);\n  const regex = RegExp(searchString);\n  const results = [];\n  children.forEach((child) => {\n    if (regex.test(child.name)) {\n      results.push(child);\n    }\n  });\n  return results;\n}\n\n// src/display/GetAllChildren.ts\nfunction GetAllChildren(parent, property, value) {\n  const children = DepthFirstSearch(parent);\n  if (!property) {\n    return children;\n  }\n  const results = [];\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      results.push(child);\n    }\n  });\n  return results;\n}\n\n// src/display/GetChildAt.ts\nfunction GetChildAt(parent, index) {\n  const children = parent.children;\n  if (index < 0 || index > children.length) {\n    throw new Error(`Index out of bounds: ${index}`);\n  }\n  return children[index];\n}\n\n// src/display/GetChildren.ts\nfunction GetChildren(parent, property, value) {\n  const children = parent.children;\n  if (!property) {\n    return [...children];\n  }\n  const results = [];\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      results.push(child);\n    }\n  });\n  return results;\n}\n\n// src/display/GetClosestChild.ts\nfunction GetClosestChild(parent, point) {\n  const children = parent.children;\n  let closest = null;\n  let distance = 0;\n  children.forEach((child) => {\n    const childDistance = GetVec2Distance(point, child.transform.position);\n    if (!closest || childDistance < distance) {\n      closest = child;\n      distance = childDistance;\n    }\n  });\n  return closest;\n}\n\n// src/display/GetFirstChild.ts\nfunction GetFirstChild(parent, property, value) {\n  const children = parent.children;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      return child;\n    }\n  }\n}\n\n// src/display/GetFurthestChild.ts\nfunction GetFurthestChild(parent, point) {\n  const children = parent.children;\n  let furthest = null;\n  let distance = 0;\n  children.forEach((child) => {\n    const childDistance = GetVec2Distance(point, child.transform.position);\n    if (!furthest || childDistance > distance) {\n      furthest = child;\n      distance = childDistance;\n    }\n  });\n  return furthest;\n}\n\n// src/display/GetLastChild.ts\nfunction GetLastChild(parent, property, value) {\n  const children = parent.children;\n  for (let i = children.length - 1; i >= 0; i--) {\n    const child = children[i];\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      return child;\n    }\n  }\n}\n\n// src/display/GetParents.ts\nfunction GetParents(child) {\n  const parents = [];\n  while (child.parent) {\n    parents.push(child.parent);\n    child = child.parent;\n  }\n  return parents;\n}\n\n// src/display/GetRandomChild.ts\nfunction GetRandomChild(parent, startIndex = 0, length) {\n  const children = parent.children;\n  if (!length) {\n    length = children.length;\n  }\n  const randomIndex = startIndex + Math.floor(Math.random() * length);\n  return children[randomIndex];\n}\n\n// src/display/MoveChildDown.ts\nfunction MoveChildDown(parent, child) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex > 0) {\n    const child2 = parentChildren[currentIndex - 1];\n    const index2 = parentChildren.indexOf(child2);\n    parentChildren[currentIndex] = child2;\n    parentChildren[index2] = child;\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n    child2.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n\n// src/display/MoveChildTo.ts\nfunction MoveChildTo(parent, child, index) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex === -1 || index < 0 || index >= parentChildren.length) {\n    throw new Error(\"Index out of bounds\");\n  }\n  if (currentIndex !== index) {\n    parentChildren.splice(currentIndex, 1);\n    parentChildren.splice(index, 0, child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n\n// src/display/MoveChildUp.ts\nfunction MoveChildUp(parent, child) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex !== -1 && currentIndex > 0) {\n    const child2 = parentChildren[currentIndex + 1];\n    const index2 = parentChildren.indexOf(child2);\n    parentChildren[currentIndex] = child2;\n    parentChildren[index2] = child;\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n    child2.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n\n// src/geom/intersects/RectangleToRectangle.ts\nfunction RectangleToRectangle(rectA, rectB) {\n  if (rectA.width <= 0 || rectA.height <= 0 || rectB.width <= 0 || rectB.height <= 0) {\n    return false;\n  }\n  return !(rectA.right < rectB.x || rectA.bottom < rectB.y || rectA.x > rectB.right || rectA.y > rectB.bottom);\n}\n\n// src/display/Overlap.ts\nfunction Overlap(source, ...targets) {\n  const sourceBounds = source.bounds.get();\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i];\n    const targetBounds = target.bounds.get();\n    if (RectangleToRectangle(sourceBounds, targetBounds)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// src/display/RemoveChildren.ts\nfunction RemoveChildren(parent, ...children) {\n  children.forEach((child) => {\n    RemoveChild(parent, child);\n  });\n  return children;\n}\n\n// src/display/RemoveChildrenAt.ts\nfunction RemoveChildrenAt(parent, ...index) {\n  const removed = [];\n  index.sort((a, b) => a - b);\n  index.reverse().forEach((i) => {\n    const child = RemoveChildAt(parent, i);\n    if (child) {\n      removed.push(child);\n    }\n  });\n  return removed;\n}\n\n// src/display/ReparentChildren.ts\nfunction ReparentChildren(parent, newParent, beginIndex = 0, endIndex) {\n  const moved = RemoveChildrenBetween(parent, beginIndex, endIndex);\n  SetParent2(newParent, ...moved);\n  moved.forEach((child) => {\n    child.transform.updateWorld();\n  });\n  return moved;\n}\n\n// src/display/RotateChildrenLeft.ts\nfunction RotateChildrenLeft(parent, total = 1) {\n  const parentChildren = parent.children;\n  let child = null;\n  for (let i = 0; i < total; i++) {\n    child = parentChildren.shift();\n    parentChildren.push(child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n\n// src/display/RotateChildrenRight.ts\nfunction RotateChildrenRight(parent, total = 1) {\n  const parentChildren = parent.children;\n  let child = null;\n  for (let i = 0; i < total; i++) {\n    child = parentChildren.pop();\n    parentChildren.unshift(child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n\n// src/display/SendChildToBack.ts\nfunction SendChildToBack(parent, child) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChildIndex(parent, child);\n  if (currentIndex !== -1 && currentIndex > 0) {\n    parentChildren.splice(currentIndex, 1);\n    parentChildren.unshift(child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n\n// src/display/SetBounds.ts\nfunction SetBounds(x, y, width, height, ...children) {\n  children.forEach((child) => {\n    child.bounds.set(x, y, width, height);\n  });\n  return children;\n}\n\n// src/display/SetChildrenValue.ts\nfunction SetChildrenValue(parent, property, value) {\n  const children = DepthFirstSearch(parent);\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor) {\n      descriptor.set(value);\n    }\n  });\n  return children;\n}\n\n// src/display/SetName.ts\nfunction SetName(name, ...children) {\n  children.forEach((child) => {\n    child.name = name;\n  });\n  return children;\n}\n\n// src/display/SetOrigin.ts\nfunction SetOrigin(originX, originY, ...children) {\n  children.forEach((child) => {\n    child.setOrigin(originX, originY);\n  });\n  return children;\n}\n\n// src/display/SetPosition.ts\nfunction SetPosition(x, y, ...children) {\n  children.forEach((child) => {\n    child.setPosition(x, y);\n  });\n  return children;\n}\n\n// src/display/SetRotation.ts\nfunction SetRotation(rotation, ...children) {\n  children.forEach((child) => {\n    child.rotation = rotation;\n  });\n  return children;\n}\n\n// src/display/SetScale.ts\nfunction SetScale(scaleX, scaleY, ...children) {\n  children.forEach((child) => {\n    child.setScale(scaleX, scaleY);\n  });\n  return children;\n}\n\n// src/display/SetSize.ts\nfunction SetSize2(width, height, ...children) {\n  children.forEach((child) => {\n    child.setSize(width, height);\n  });\n  return children;\n}\n\n// src/display/SetSkew.ts\nfunction SetSkew(skewX, skewY, ...children) {\n  children.forEach((child) => {\n    child.setSkew(skewX, skewY);\n  });\n  return children;\n}\n\n// src/display/SetType.ts\nfunction SetType(type, ...children) {\n  children.forEach((child) => {\n    child.type = type;\n  });\n  return children;\n}\n\n// src/display/SetValue.ts\nfunction SetValue(property, value, ...children) {\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor) {\n      descriptor.set(value);\n    }\n  });\n  return children;\n}\n\n// src/display/SetVisible.ts\nfunction SetVisible(visible, ...children) {\n  children.forEach((child) => {\n    child.visible = visible;\n  });\n  return children;\n}\n\n// src/display/ShuffleChildren.ts\nfunction ShuffleChildren(parent) {\n  const children = parent.children;\n  for (let i = children.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = children[i];\n    children[i] = children[j];\n    children[j] = temp;\n    temp.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return children;\n}\n\n// src/display/SwapChildren.ts\nfunction SwapChildren(child1, child2) {\n  if (child1.parent === child2.parent) {\n    const children = child1.parent.children;\n    const index1 = GetChildIndex(child1.parent, child1);\n    const index2 = GetChildIndex(child2.parent, child2);\n    if (index1 !== index2) {\n      children[index1] = child2;\n      children[index2] = child1;\n    }\n  }\n}\n\n// src/display3d/index.ts\nvar display3d_exports = {};\n__export(display3d_exports, {\n  AddChild3D: () => AddChild3D,\n  AddChild3DAt: () => AddChild3DAt,\n  AddChildren3D: () => AddChildren3D,\n  AddChildren3DAt: () => AddChildren3DAt,\n  ConsoleTreeChildren3D: () => ConsoleTreeChildren3D,\n  CountMatchingChildren3D: () => CountMatchingChildren3D,\n  DepthFirstSearch3D: () => DepthFirstSearch3D,\n  DepthFirstSearchRecursive3D: () => DepthFirstSearchRecursive3D,\n  DepthFirstSearchRecursiveNested3D: () => DepthFirstSearchRecursiveNested3D,\n  DestroyChildren3D: () => DestroyChildren3D,\n  FindChild3DByName: () => FindChild3DByName,\n  FindChildren3DByName: () => FindChildren3DByName,\n  GetAllChildren3D: () => GetAllChildren3D,\n  GetChild3DAt: () => GetChild3DAt,\n  GetChild3DIndex: () => GetChild3DIndex,\n  GetChildren3D: () => GetChildren3D,\n  GetFirstChild3D: () => GetFirstChild3D,\n  GetLastChild3D: () => GetLastChild3D,\n  GetParents3D: () => GetParents3D,\n  GetRandomChild3D: () => GetRandomChild3D,\n  MoveChild3DTo: () => MoveChild3DTo,\n  RemoveChild3D: () => RemoveChild3D,\n  RemoveChild3DAt: () => RemoveChild3DAt,\n  RemoveChildren3D: () => RemoveChildren3D,\n  RemoveChildren3DAt: () => RemoveChildren3DAt,\n  RemoveChildren3DBetween: () => RemoveChildren3DBetween,\n  ReparentChildren3D: () => ReparentChildren3D,\n  ReplaceChild3D: () => ReplaceChild3D,\n  SetChildren3DValue: () => SetChildren3DValue,\n  SetParent3D: () => SetParent3D,\n  SetWorld3D: () => SetWorld3D,\n  SwapChildren3D: () => SwapChildren3D\n});\n\n// src/display3d/DepthFirstSearch3D.ts\nfunction DepthFirstSearch3D(parent) {\n  const stack = [parent];\n  const output = [];\n  while (stack.length > 0) {\n    const node = stack.shift();\n    output.push(node);\n    const numChildren = node.numChildren;\n    if (numChildren > 0) {\n      for (let i = numChildren - 1; i >= 0; i--) {\n        stack.unshift(node.children[i]);\n      }\n    }\n  }\n  output.shift();\n  return output;\n}\n\n// src/display3d/GetChild3DIndex.ts\nfunction GetChild3DIndex(parent, child) {\n  return parent.children.indexOf(child);\n}\n\n// src/display3d/RemoveChild3DAt.ts\nfunction RemoveChild3DAt(parent, index) {\n  const children = parent.children;\n  let child;\n  if (index >= 0 && index < children.length) {\n    const removed = children.splice(index, 1);\n    if (removed[0]) {\n      child = removed[0];\n      child.parent = null;\n    }\n  }\n  return child;\n}\n\n// src/display3d/RemoveChild3D.ts\nfunction RemoveChild3D(parent, child) {\n  const currentIndex = GetChild3DIndex(parent, child);\n  if (currentIndex > -1) {\n    RemoveChild3DAt(parent, currentIndex);\n  }\n  return child;\n}\n\n// src/display3d/SetWorld3D.ts\nfunction SetWorld3D(world, ...children) {\n  children.forEach((child) => {\n    if (child.world) {\n      Emit(child.world, RemovedFromWorldEvent, child, child.world);\n      Emit(child, RemovedFromWorldEvent, child, child.world);\n    }\n    child.world = world;\n    Emit(world, AddedToWorldEvent, child, world);\n    Emit(child, AddedToWorldEvent, child, world);\n  });\n  return children;\n}\n\n// src/display3d/SetParent3D.ts\nfunction SetParent3D(parent, ...children) {\n  children.forEach((child) => {\n    if (child.parent) {\n      RemoveChild3D(child.parent, child);\n    }\n    child.parent = parent;\n  });\n  const parentWorld = parent.world;\n  if (parentWorld) {\n    SetWorld3D(parentWorld, ...DepthFirstSearch3D(parent));\n  }\n  return children;\n}\n\n// src/display3d/AddChild3D.ts\nfunction AddChild3D(parent, child) {\n  parent.children.push(child);\n  SetParent3D(parent, child);\n  return child;\n}\n\n// src/display3d/AddChild3DAt.ts\nfunction AddChild3DAt(parent, index, child) {\n  const children = parent.children;\n  if (index >= 0 && index <= children.length) {\n    SetParent3D(parent, child);\n    children.splice(index, 0, child);\n  }\n  return child;\n}\n\n// src/display3d/AddChildren3D.ts\nfunction AddChildren3D(parent, ...children) {\n  children.forEach((child) => {\n    AddChild3D(parent, child);\n  });\n  return children;\n}\n\n// src/display3d/AddChildren3DAt.ts\nfunction AddChildren3DAt(parent, index, ...children) {\n  const parentChildren = parent.children;\n  if (index >= 0 && index <= parentChildren.length) {\n    children.reverse().forEach((child) => {\n      children.splice(index, 0, child);\n      SetParent3D(parent, child);\n    });\n  }\n  return children;\n}\n\n// src/display3d/DepthFirstSearchRecursiveNested3D.ts\nfunction DepthFirstSearchRecursiveNested3D(parent, output = []) {\n  for (let i = 0; i < parent.numChildren; i++) {\n    const node = parent.children[i];\n    const children = [];\n    output.push({node, children});\n    if (node.numChildren > 0) {\n      DepthFirstSearchRecursiveNested3D(node, children);\n    }\n  }\n  return output;\n}\n\n// src/display3d/ConsoleTreeChildren3D.ts\nfunction GetInfo2(entry) {\n  const legend = entry.numChildren > 0 ? \"Parent\" : \"Child\";\n  return `${legend} [ type=${entry.type}, name=${entry.name} ]`;\n}\nfunction LogChildren2(entry) {\n  console.group(GetInfo2(entry.node));\n  entry.children.forEach((child) => {\n    if (child.children.length > 0) {\n      LogChildren2(child);\n    } else {\n      console.log(GetInfo2(child.node));\n    }\n  });\n  console.groupEnd();\n}\nfunction ConsoleTreeChildren3D(parent) {\n  const entries = DepthFirstSearchRecursiveNested3D(parent);\n  if (parent.world === parent) {\n    console.group(\"World\");\n  } else {\n    console.group(GetInfo2(parent));\n  }\n  entries.forEach((entry) => {\n    if (entry.children.length) {\n      LogChildren2(entry);\n    } else {\n      console.log(GetInfo2(entry.node));\n    }\n  });\n  console.groupEnd();\n}\n\n// src/display3d/CountMatchingChildren3D.ts\nfunction CountMatchingChildren3D(parent, property, value) {\n  const children = parent.children;\n  let total = 0;\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      total++;\n    }\n  });\n  return total;\n}\n\n// src/display3d/DepthFirstSearchRecursive3D.ts\nfunction DepthFirstSearchRecursive3D(parent, output = []) {\n  for (let i = 0; i < parent.numChildren; i++) {\n    const child = parent.children[i];\n    output.push(child);\n    if (child.numChildren > 0) {\n      DepthFirstSearchRecursive3D(child, output);\n    }\n  }\n  return output;\n}\n\n// src/display3d/RemoveChildren3DBetween.ts\nfunction RemoveChildren3DBetween(parent, beginIndex = 0, endIndex) {\n  const children = parent.children;\n  if (endIndex === void 0) {\n    endIndex = children.length;\n  }\n  const range = endIndex - beginIndex;\n  if (range > 0 && range <= endIndex) {\n    const removed = children.splice(beginIndex, range);\n    removed.forEach((child) => {\n      child.parent = null;\n    });\n    return removed;\n  } else {\n    return [];\n  }\n}\n\n// src/display3d/DestroyChildren3D.ts\nfunction DestroyChildren3D(parent, beginIndex = 0, endIndex) {\n  const removed = RemoveChildren3DBetween(parent, beginIndex, endIndex);\n  removed.forEach((child) => {\n    child.destroy();\n  });\n}\n\n// src/display3d/FindChild3DByName.ts\nfunction FindChild3DByName(parent, searchString) {\n  const children = DepthFirstSearch3D(parent);\n  const regex = RegExp(searchString);\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (regex.test(child.name)) {\n      return child;\n    }\n  }\n}\n\n// src/display3d/FindChildren3DByName.ts\nfunction FindChildren3DByName(parent, searchString) {\n  const children = DepthFirstSearch3D(parent);\n  const regex = RegExp(searchString);\n  const results = [];\n  children.forEach((child) => {\n    if (regex.test(child.name)) {\n      results.push(child);\n    }\n  });\n  return results;\n}\n\n// src/display3d/GetAllChildren3D.ts\nfunction GetAllChildren3D(parent, property, value) {\n  const children = DepthFirstSearch3D(parent);\n  if (!property) {\n    return children;\n  }\n  const results = [];\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      results.push(child);\n    }\n  });\n  return results;\n}\n\n// src/display3d/GetChild3DAt.ts\nfunction GetChild3DAt(parent, index) {\n  const children = parent.children;\n  if (index < 0 || index > children.length) {\n    throw new Error(`Index out of bounds: ${index}`);\n  }\n  return children[index];\n}\n\n// src/display3d/GetChildren3D.ts\nfunction GetChildren3D(parent, property, value) {\n  const children = parent.children;\n  if (!property) {\n    return [...children];\n  }\n  const results = [];\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      results.push(child);\n    }\n  });\n  return results;\n}\n\n// src/display3d/GetFirstChild3D.ts\nfunction GetFirstChild3D(parent, property, value) {\n  const children = parent.children;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      return child;\n    }\n  }\n}\n\n// src/display3d/GetLastChild3D.ts\nfunction GetLastChild3D(parent, property, value) {\n  const children = parent.children;\n  for (let i = children.length - 1; i >= 0; i--) {\n    const child = children[i];\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor && (value === void 0 || value === descriptor.value)) {\n      return child;\n    }\n  }\n}\n\n// src/display3d/GetParents3D.ts\nfunction GetParents3D(child) {\n  const parents = [];\n  while (child.parent) {\n    parents.push(child.parent);\n    child = child.parent;\n  }\n  return parents;\n}\n\n// src/display3d/GetRandomChild3D.ts\nfunction GetRandomChild3D(parent, startIndex = 0, length) {\n  const children = parent.children;\n  if (!length) {\n    length = children.length;\n  }\n  const randomIndex = startIndex + Math.floor(Math.random() * length);\n  return children[randomIndex];\n}\n\n// src/display3d/MoveChild3DTo.ts\nfunction MoveChild3DTo(parent, child, index) {\n  const parentChildren = parent.children;\n  const currentIndex = GetChild3DIndex(parent, child);\n  if (currentIndex === -1 || index < 0 || index >= parentChildren.length) {\n    throw new Error(\"Index out of bounds\");\n  }\n  if (currentIndex !== index) {\n    parentChildren.splice(currentIndex, 1);\n    parentChildren.splice(index, 0, child);\n    child.setDirty(DIRTY_CONST.TRANSFORM);\n  }\n  return child;\n}\n\n// src/display3d/RemoveChildren3D.ts\nfunction RemoveChildren3D(parent, ...children) {\n  children.forEach((child) => {\n    RemoveChild3D(parent, child);\n  });\n  return children;\n}\n\n// src/display3d/RemoveChildren3DAt.ts\nfunction RemoveChildren3DAt(parent, ...index) {\n  const removed = [];\n  index.sort((a, b) => a - b);\n  index.reverse().forEach((i) => {\n    const child = RemoveChild3DAt(parent, i);\n    if (child) {\n      removed.push(child);\n    }\n  });\n  return removed;\n}\n\n// src/display3d/ReparentChildren3D.ts\nfunction ReparentChildren3D(parent, newParent, beginIndex = 0, endIndex) {\n  const moved = RemoveChildren3DBetween(parent, beginIndex, endIndex);\n  SetParent3D(newParent, ...moved);\n  moved.forEach((child) => {\n  });\n  return moved;\n}\n\n// src/display3d/ReplaceChild3D.ts\nfunction ReplaceChild3D(target, source) {\n  const targetParent = target.parent;\n  const sourceParent = source.parent;\n  const targetIndex = GetChild3DIndex(targetParent, target);\n  if (targetParent === sourceParent) {\n    MoveChild3DTo(targetParent, source, targetIndex);\n    RemoveChild3D(targetParent, target);\n  } else {\n    RemoveChild3D(targetParent, target);\n    RemoveChild3D(sourceParent, source);\n    AddChild3DAt(targetParent, targetIndex, source);\n  }\n  return target;\n}\n\n// src/display3d/SetChildren3DValue.ts\nfunction SetChildren3DValue(parent, property, value) {\n  const children = DepthFirstSearch3D(parent);\n  children.forEach((child) => {\n    const descriptor = Object.getOwnPropertyDescriptor(child, property);\n    if (descriptor) {\n      descriptor.set(value);\n    }\n  });\n  return children;\n}\n\n// src/display3d/SwapChildren3D.ts\nfunction SwapChildren3D(child1, child2) {\n  if (child1.parent === child2.parent) {\n    const children = child1.parent.children;\n    const index1 = GetChild3DIndex(child1.parent, child1);\n    const index2 = GetChild3DIndex(child2.parent, child2);\n    if (index1 !== index2) {\n      children[index1] = child2;\n      children[index2] = child1;\n    }\n  }\n}\n\n// src/events/index.ts\nvar events_exports = {};\n__export(events_exports, {\n  ClearEvent: () => ClearEvent,\n  Emit: () => Emit,\n  EventEmitter: () => EventEmitter,\n  EventInstance: () => EventInstance,\n  GetEventNames: () => GetEventNames,\n  GetListenerCount: () => GetListenerCount,\n  GetListeners: () => GetListeners,\n  Off: () => Off,\n  On: () => On,\n  Once: () => Once,\n  RemoveAllListeners: () => RemoveAllListeners\n});\n\n// src/events/ClearEvent.ts\nfunction ClearEvent(emitter, event) {\n  emitter.events.delete(event);\n  return emitter;\n}\n\n// src/events/EventEmitter.ts\nvar EventEmitter = class {\n  constructor() {\n    this.events = new Map();\n  }\n};\n\n// src/events/EventInstance.ts\nvar EventInstance = class {\n  constructor(callback, context, once = false) {\n    this.callback = callback;\n    this.context = context;\n    this.once = once;\n  }\n};\n\n// src/events/GetEventNames.ts\nfunction GetEventNames(emitter) {\n  return [...emitter.events.keys()];\n}\n\n// src/events/GetListenerCount.ts\nfunction GetListenerCount(emitter, event) {\n  const listeners = emitter.events.get(event);\n  return listeners ? listeners.size : 0;\n}\n\n// src/events/GetListeners.ts\nfunction GetListeners(emitter, event) {\n  const out = [];\n  const listeners = emitter.events.get(event);\n  listeners.forEach((listener) => {\n    out.push(listener.callback);\n  });\n  return out;\n}\n\n// src/events/Off.ts\nfunction Off(emitter, event, callback, context, once) {\n  const events = emitter.events;\n  const listeners = events.get(event);\n  if (!callback) {\n    events.delete(event);\n  } else if (callback instanceof EventInstance) {\n    listeners.delete(callback);\n  } else {\n    const hasContext = !context;\n    const hasOnce = once !== void 0;\n    for (const listener of listeners) {\n      if (listener.callback === callback && (hasContext && listener.context === context) && (hasOnce && listener.once === once)) {\n        listeners.delete(listener);\n      }\n    }\n  }\n  if (listeners.size === 0) {\n    events.delete(event);\n  }\n  return emitter;\n}\n\n// src/events/On.ts\nfunction On(emitter, event, callback, context = emitter, once = false) {\n  if (typeof callback !== \"function\") {\n    throw new TypeError(\"Listener not a function\");\n  }\n  const listener = new EventInstance(callback, context, once);\n  const listeners = emitter.events.get(event);\n  if (!listeners) {\n    emitter.events.set(event, new Set([listener]));\n  } else {\n    listeners.add(listener);\n  }\n  return listener;\n}\n\n// src/events/Once.ts\nfunction Once(emitter, event, callback, context = emitter) {\n  return On(emitter, event, callback, context, true);\n}\n\n// src/events/RemoveAllListeners.ts\nfunction RemoveAllListeners(emitter, event) {\n  if (!event) {\n    emitter.events.clear();\n  } else {\n    emitter.events.delete(event);\n  }\n}\n\n// src/gameobjects/index.ts\nvar gameobjects_exports = {};\n__export(gameobjects_exports, {\n  AnimatedSprite: () => AnimatedSprite,\n  Components: () => components_exports,\n  Container: () => Container,\n  EffectLayer: () => EffectLayer,\n  GameObject: () => GameObject,\n  Layer: () => Layer,\n  RenderLayer: () => RenderLayer,\n  Sprite: () => Sprite,\n  SpriteBatch: () => SpriteBatch,\n  Text: () => Text\n});\n\n// src/gameobjects/components/index.ts\nvar components_exports = {};\n__export(components_exports, {\n  Bounds: () => bounds_exports,\n  Input: () => input_exports,\n  Transform: () => transform_exports,\n  Vertex: () => Vertex\n});\n\n// src/gameobjects/components/bounds/index.ts\nvar bounds_exports = {};\n__export(bounds_exports, {\n  BoundsComponent: () => BoundsComponent\n});\n\n// src/gameobjects/components/transform/GetVertices.ts\nfunction GetVertices(transform) {\n  const {a, b, c, d, tx, ty} = transform.world;\n  const {x, y, right, bottom} = transform.extent;\n  const x0 = x * a + y * c + tx;\n  const y0 = x * b + y * d + ty;\n  const x1 = x * a + bottom * c + tx;\n  const y1 = x * b + bottom * d + ty;\n  const x2 = right * a + bottom * c + tx;\n  const y2 = right * b + bottom * d + ty;\n  const x3 = right * a + y * c + tx;\n  const y3 = right * b + y * d + ty;\n  return {x0, y0, x1, y1, x2, y2, x3, y3};\n}\n\n// src/gameobjects/components/bounds/BoundsComponent.ts\nvar BoundsComponent = class {\n  constructor(entity) {\n    this.fixed = false;\n    this.includeChildren = true;\n    this.visibleOnly = true;\n    this.entity = entity;\n    this.area = new Rectangle();\n  }\n  set(x, y, width, height) {\n    this.area.set(x, y, width, height);\n  }\n  get() {\n    if (this.entity.isDirty(DIRTY_CONST.BOUNDS) && !this.fixed) {\n      this.update();\n    }\n    return this.area;\n  }\n  updateLocal() {\n    const {x0, y0, x1, y1, x2, y2, x3, y3} = GetVertices(this.entity.transform);\n    const x = Math.min(x0, x1, x2, x3);\n    const y = Math.min(y0, y1, y2, y3);\n    const right = Math.max(x0, x1, x2, x3);\n    const bottom = Math.max(y0, y1, y2, y3);\n    return this.area.set(x, y, right - x, bottom - y);\n  }\n  update() {\n    const bounds = this.updateLocal();\n    this.entity.clearDirty(DIRTY_CONST.BOUNDS);\n    if (!this.includeChildren || !this.entity.numChildren) {\n      return bounds;\n    }\n    const visibleOnly = this.visibleOnly;\n    const children = this.entity.children;\n    let x = bounds.x;\n    let y = bounds.y;\n    let right = bounds.right;\n    let bottom = bounds.bottom;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (!child || visibleOnly && !child.visible) {\n        continue;\n      }\n      const childBounds = child.bounds.get();\n      if (childBounds.x < x) {\n        x = childBounds.x;\n      }\n      if (childBounds.y < y) {\n        y = childBounds.y;\n      }\n      if (childBounds.right > right) {\n        right = childBounds.right;\n      }\n      if (childBounds.bottom > bottom) {\n        bottom = childBounds.bottom;\n      }\n    }\n    return bounds.set(x, y, right - x, bottom - y);\n  }\n  destroy() {\n    this.entity = null;\n    this.area = null;\n  }\n};\n\n// src/gameobjects/components/input/index.ts\nvar input_exports = {};\n__export(input_exports, {\n  InputComponent: () => InputComponent\n});\n\n// src/gameobjects/components/input/InputComponent.ts\nvar InputComponent = class {\n  constructor(entity) {\n    this.enabled = false;\n    this.enabledChildren = true;\n    this.entity = entity;\n  }\n  destroy() {\n    this.entity = null;\n    this.hitArea = null;\n  }\n};\n\n// src/gameobjects/components/transform/index.ts\nvar transform_exports = {};\n__export(transform_exports, {\n  GetVertices: () => GetVertices,\n  TransformComponent: () => TransformComponent,\n  UpdateLocalTransform: () => UpdateLocalTransform,\n  UpdateWorldTransform: () => UpdateWorldTransform\n});\n\n// src/config/defaultorigin/GetDefaultOriginX.ts\nfunction GetDefaultOriginX() {\n  return ConfigStore.get(CONFIG_DEFAULTS.DEFAULT_ORIGIN).x;\n}\n\n// src/config/defaultorigin/GetDefaultOriginY.ts\nfunction GetDefaultOriginY() {\n  return ConfigStore.get(CONFIG_DEFAULTS.DEFAULT_ORIGIN).y;\n}\n\n// src/geom/rectangle/index.ts\nvar rectangle_exports = {};\n__export(rectangle_exports, {\n  CeilRectangle: () => CeilRectangle,\n  CeilRectanglePosition: () => CeilRectanglePosition,\n  CenterRectangleOn: () => CenterRectangleOn,\n  CloneRectangle: () => CloneRectangle,\n  CopyRectangleFrom: () => CopyRectangleFrom,\n  DecomposeRectangle: () => DecomposeRectangle,\n  FitRectangleInside: () => FitRectangleInside,\n  FitRectangleOutside: () => FitRectangleOutside,\n  FitRectangleToPoint: () => FitRectangleToPoint,\n  FitRectangleToPoints: () => FitRectangleToPoints,\n  FloorRectangle: () => FloorRectangle,\n  FloorRectanglePosition: () => FloorRectanglePosition,\n  GetRectangleArea: () => GetRectangleArea,\n  GetRectangleAspectRatio: () => GetRectangleAspectRatio,\n  GetRectangleCenter: () => GetRectangleCenter,\n  GetRectangleCenterX: () => GetRectangleCenterX,\n  GetRectangleCenterY: () => GetRectangleCenterY,\n  GetRectangleEdges: () => GetRectangleEdges,\n  GetRectangleIntersection: () => GetRectangleIntersection,\n  GetRectangleMarchingAnts: () => GetRectangleMarchingAnts,\n  GetRectangleOverlap: () => GetRectangleOverlap,\n  GetRectanglePerimeter: () => GetRectanglePerimeter,\n  GetRectanglePerimeterPoint: () => GetRectanglePerimeterPoint,\n  GetRectanglePoint: () => GetRectanglePoint,\n  GetRectanglePoints: () => GetRectanglePoints,\n  GetRectangleRandomPoint: () => GetRectangleRandomPoint,\n  GetRectangleRandomPointOutside: () => GetRectangleRandomPointOutside,\n  GetRectangleSize: () => GetRectangleSize,\n  GetRectangleUnion: () => GetRectangleUnion,\n  InflateRectangle: () => InflateRectangle,\n  MergeRectangle: () => MergeRectangle,\n  Rectangle: () => Rectangle,\n  RectangleContains: () => RectangleContains,\n  RectangleContainsPoint: () => RectangleContainsPoint,\n  RectangleContainsRectangle: () => RectangleContainsRectangle,\n  RectangleEquals: () => RectangleEquals,\n  RectangleFromPoints: () => RectangleFromPoints,\n  RectangleSizeEquals: () => RectangleSizeEquals,\n  ScaleRectangle: () => ScaleRectangle,\n  TranslateRectangle: () => TranslateRectangle,\n  TranslateRectanglePoint: () => TranslateRectanglePoint\n});\n\n// src/geom/rectangle/CeilRectangle.ts\nfunction CeilRectangle(rect) {\n  rect.x = Math.ceil(rect.x);\n  rect.y = Math.ceil(rect.y);\n  rect.width = Math.ceil(rect.width);\n  rect.height = Math.ceil(rect.height);\n  return rect;\n}\n\n// src/geom/rectangle/CeilRectanglePosition.ts\nfunction CeilRectanglePosition(rect) {\n  rect.x = Math.ceil(rect.x);\n  rect.y = Math.ceil(rect.y);\n  return rect;\n}\n\n// src/geom/rectangle/CenterRectangleOn.ts\nfunction CenterRectangleOn(rect, x, y) {\n  rect.x = x - rect.width / 2;\n  rect.y = y - rect.height / 2;\n  return rect;\n}\n\n// src/geom/rectangle/CloneRectangle.ts\nfunction CloneRectangle(source) {\n  return new Rectangle(source.x, source.y, source.width, source.height);\n}\n\n// src/geom/rectangle/CopyRectangleFrom.ts\nfunction CopyRectangleFrom(source, dest) {\n  return dest.set(source.x, source.y, source.width, source.height);\n}\n\n// src/geom/rectangle/DecomposeRectangle.ts\nfunction DecomposeRectangle(rect, out = []) {\n  out.push(new Vec2(rect.x, rect.y), new Vec2(rect.right, rect.y), new Vec2(rect.right, rect.bottom), new Vec2(rect.x, rect.bottom));\n  return out;\n}\n\n// src/geom/rectangle/GetRectangleAspectRatio.ts\nfunction GetRectangleAspectRatio(rect) {\n  return rect.height === 0 ? NaN : rect.width / rect.height;\n}\n\n// src/geom/rectangle/GetRectangleCenterX.ts\nfunction GetRectangleCenterX(rect) {\n  return rect.x + rect.width / 2;\n}\n\n// src/geom/rectangle/GetRectangleCenterY.ts\nfunction GetRectangleCenterY(rect) {\n  return rect.y + rect.height / 2;\n}\n\n// src/geom/rectangle/FitRectangleInside.ts\nfunction FitRectangleInside(target, source) {\n  const ratio = GetRectangleAspectRatio(target);\n  let width = source.width;\n  let height = source.height;\n  if (ratio < GetRectangleAspectRatio(source)) {\n    width = source.height * ratio;\n  } else {\n    height = source.width / ratio;\n  }\n  return target.set(GetRectangleCenterX(source) - target.width / 2, GetRectangleCenterY(source) - target.height / 2, width, height);\n}\n\n// src/geom/rectangle/FitRectangleOutside.ts\nfunction FitRectangleOutside(target, source) {\n  const ratio = GetRectangleAspectRatio(target);\n  let width = source.width;\n  let height = source.height;\n  if (ratio > GetRectangleAspectRatio(source)) {\n    width = source.height * ratio;\n  } else {\n    height = source.width / ratio;\n  }\n  return target.set(GetRectangleCenterX(source) - target.width / 2, GetRectangleCenterY(source) - target.height / 2, width, height);\n}\n\n// src/geom/rectangle/FitRectangleToPoint.ts\nfunction FitRectangleToPoint(target, x, y) {\n  const minX = Math.min(target.x, x);\n  const maxX = Math.max(target.right, x);\n  const minY = Math.min(target.y, y);\n  const maxY = Math.max(target.bottom, y);\n  return target.set(minX, minY, maxX - minX, maxY - minY);\n}\n\n// src/geom/rectangle/FitRectangleToPoints.ts\nfunction FitRectangleToPoints(target, points) {\n  let minX = target.x;\n  let maxX = target.right;\n  let minY = target.y;\n  let maxY = target.bottom;\n  for (let i = 0; i < points.length; i++) {\n    minX = Math.min(minX, points[i].x);\n    maxX = Math.max(maxX, points[i].x);\n    minY = Math.min(minY, points[i].y);\n    maxY = Math.max(maxY, points[i].y);\n  }\n  return target.set(minX, minY, maxX - minX, maxY - minY);\n}\n\n// src/geom/rectangle/FloorRectangle.ts\nfunction FloorRectangle(rect) {\n  rect.x = Math.floor(rect.x);\n  rect.y = Math.floor(rect.y);\n  rect.width = Math.floor(rect.width);\n  rect.height = Math.floor(rect.height);\n  return rect;\n}\n\n// src/geom/rectangle/FloorRectanglePosition.ts\nfunction FloorRectanglePosition(rect) {\n  rect.x = Math.floor(rect.x);\n  rect.y = Math.floor(rect.y);\n  return rect;\n}\n\n// src/geom/rectangle/GetRectangleArea.ts\nfunction GetRectangleArea(rect) {\n  return rect.width * rect.height;\n}\n\n// src/geom/rectangle/GetRectangleCenter.ts\nfunction GetRectangleCenter(rect, out = new Vec2()) {\n  return out.set(GetRectangleCenterX(rect), GetRectangleCenterY(rect));\n}\n\n// src/geom/line/Line.ts\nvar Line = class {\n  constructor(x1 = 0, y1 = 0, x2 = 0, y2 = 0) {\n    this.set(x1, y1, x2, y2);\n  }\n  set(x1 = 0, y1 = 0, x2 = 0, y2 = 0) {\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n    return this;\n  }\n  get left() {\n    return Math.min(this.x1, this.x2);\n  }\n  set left(value) {\n    if (this.x1 <= this.x2) {\n      this.x1 = value;\n    } else {\n      this.x2 = value;\n    }\n  }\n  get right() {\n    return Math.max(this.x1, this.x2);\n  }\n  set right(value) {\n    if (this.x1 > this.x2) {\n      this.x1 = value;\n    } else {\n      this.x2 = value;\n    }\n  }\n  get top() {\n    return Math.min(this.y1, this.y2);\n  }\n  set top(value) {\n    if (this.y1 <= this.y2) {\n      this.y1 = value;\n    } else {\n      this.y2 = value;\n    }\n  }\n  get bottom() {\n    return Math.max(this.y1, this.y2);\n  }\n  set bottom(value) {\n    if (this.y1 > this.y2) {\n      this.y1 = value;\n    } else {\n      this.y2 = value;\n    }\n  }\n};\n\n// src/geom/rectangle/GetRectangleEdges.ts\nfunction GetRectangleEdges(rectangle) {\n  const {x, y, right, bottom} = rectangle;\n  const line1 = new Line(x, y, right, y);\n  const line2 = new Line(right, y, right, bottom);\n  const line3 = new Line(right, bottom, x, bottom);\n  const line4 = new Line(x, bottom, x, y);\n  return [line1, line2, line3, line4];\n}\n\n// src/geom/rectangle/GetRectangleIntersection.ts\nfunction GetRectangleIntersection(rectA, rectB, out = new Rectangle()) {\n  if (RectangleToRectangle(rectA, rectB)) {\n    out.set(Math.max(rectA.x, rectB.x), Math.max(rectA.y, rectB.y), Math.min(rectA.right, rectB.right) - out.x, Math.min(rectA.bottom, rectB.bottom) - out.y);\n  } else {\n    out.set();\n  }\n  return out;\n}\n\n// src/geom/rectangle/GetRectanglePerimeter.ts\nfunction GetRectanglePerimeter(rect) {\n  return 2 * (rect.width + rect.height);\n}\n\n// src/geom/rectangle/GetRectangleMarchingAnts.ts\nfunction GetRectangleMarchingAnts(rect, step, quantity, out = []) {\n  if (!step && !quantity) {\n    return out;\n  }\n  if (!step) {\n    step = GetRectanglePerimeter(rect) / quantity;\n  } else {\n    quantity = Math.round(GetRectanglePerimeter(rect) / step);\n  }\n  let x = rect.x;\n  let y = rect.y;\n  let face = 0;\n  for (let i = 0; i < quantity; i++) {\n    out.push(new Vec2(x, y));\n    switch (face) {\n      case 0:\n        x += step;\n        if (x >= rect.right) {\n          face = 1;\n          y += x - rect.right;\n          x = rect.right;\n        }\n        break;\n      case 1:\n        y += step;\n        if (y >= rect.bottom) {\n          face = 2;\n          x -= y - rect.bottom;\n          y = rect.bottom;\n        }\n        break;\n      case 2:\n        x -= step;\n        if (x <= rect.x) {\n          face = 3;\n          y -= rect.x - x;\n          x = rect.x;\n        }\n        break;\n      case 3:\n        y -= step;\n        if (y <= rect.y) {\n          face = 0;\n          y = rect.y;\n        }\n        break;\n    }\n  }\n  return out;\n}\n\n// src/geom/rectangle/GetRectangleOverlap.ts\nfunction GetRectangleOverlap(rectA, rectB) {\n  return rectA.x < rectB.right && rectA.right > rectB.x && rectA.y < rectB.bottom && rectA.bottom > rectB.y;\n}\n\n// src/geom/rectangle/GetRectanglePerimeterPoint.ts\nfunction GetRectanglePerimeterPoint(rectangle, angle, out = new Vec2()) {\n  angle = DegToRad(angle);\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n  let dx = c > 0 ? rectangle.width / 2 : rectangle.width / -2;\n  let dy = s > 0 ? rectangle.height / 2 : rectangle.height / -2;\n  if (Math.abs(dx * s) < Math.abs(dy * c)) {\n    dy = dx * s / c;\n  } else {\n    dx = dy * c / s;\n  }\n  return out.set(dx + GetRectangleCenterX(rectangle), dy + GetRectangleCenterY(rectangle));\n}\n\n// src/geom/rectangle/GetRectanglePoint.ts\nfunction GetRectanglePoint(rectangle, position, out = new Vec2()) {\n  if (position <= 0 || position >= 1) {\n    return out.set(rectangle.x, rectangle.y);\n  }\n  let p = GetRectanglePerimeter(rectangle) * position;\n  if (position > 0.5) {\n    p -= rectangle.width + rectangle.height;\n    if (p <= rectangle.width) {\n      return out.set(rectangle.right - p, rectangle.bottom);\n    } else {\n      return out.set(rectangle.x, rectangle.bottom - (p - rectangle.width));\n    }\n  } else if (p <= rectangle.width) {\n    return out.set(rectangle.x + p, rectangle.y);\n  } else {\n    return out.set(rectangle.right, rectangle.y + (p - rectangle.width));\n  }\n}\n\n// src/geom/rectangle/GetRectanglePoints.ts\nfunction GetRectanglePoints(rectangle, step, quantity = 0, out = []) {\n  if (!quantity) {\n    quantity = GetRectanglePerimeter(rectangle) / step;\n  }\n  for (let i = 0; i < quantity; i++) {\n    out.push(GetRectanglePoint(rectangle, i / quantity));\n  }\n  return out;\n}\n\n// src/geom/rectangle/GetRectangleRandomPoint.ts\nfunction GetRectangleRandomPoint(rect, out = new Vec2()) {\n  return out.set(rect.x + Math.random() * rect.width, rect.y + Math.random() * rect.height);\n}\n\n// src/geom/rectangle/RectangleContainsRectangle.ts\nfunction RectangleContainsRectangle(rectA, rectB) {\n  if (rectB.width * rectB.height > rectA.width * rectA.height) {\n    return false;\n  }\n  return rectB.x > rectA.x && rectB.x < rectA.right && (rectB.right > rectA.x && rectB.right < rectA.right) && (rectB.y > rectA.y && rectB.y < rectA.bottom) && (rectB.bottom > rectA.y && rectB.bottom < rectA.bottom);\n}\n\n// src/geom/rectangle/GetRectangleRandomPointOutside.ts\nfunction GetRectangleRandomPointOutside(outer, inner, out = new Vec2()) {\n  if (RectangleContainsRectangle(outer, inner)) {\n    switch (Between(0, 3)) {\n      case 0:\n        out.x = outer.x + Math.random() * (inner.right - outer.x);\n        out.y = outer.y + Math.random() * (inner.y - outer.y);\n        break;\n      case 1:\n        out.x = inner.x + Math.random() * (outer.right - inner.x);\n        out.y = inner.bottom + Math.random() * (outer.bottom - inner.bottom);\n        break;\n      case 2:\n        out.x = outer.x + Math.random() * (inner.x - outer.x);\n        out.y = inner.y + Math.random() * (outer.bottom - inner.y);\n        break;\n      case 3:\n        out.x = inner.right + Math.random() * (outer.right - inner.right);\n        out.y = outer.y + Math.random() * (inner.bottom - outer.y);\n        break;\n    }\n  }\n  return out;\n}\n\n// src/geom/rectangle/GetRectangleSize.ts\nfunction GetRectangleSize(rect, out = new Vec2()) {\n  return out.set(rect.width, rect.height);\n}\n\n// src/geom/rectangle/GetRectangleUnion.ts\nfunction GetRectangleUnion(rectA, rectB, out = new Rectangle()) {\n  const x = Math.min(rectA.x, rectB.x);\n  const y = Math.min(rectA.y, rectB.y);\n  const w = Math.max(rectA.right, rectB.right) - x;\n  const h = Math.max(rectA.bottom, rectB.bottom) - y;\n  return out.set(x, y, w, h);\n}\n\n// src/geom/rectangle/InflateRectangle.ts\nfunction InflateRectangle(rect, x, y) {\n  const cx = GetRectangleCenterX(rect);\n  const cy = GetRectangleCenterY(rect);\n  rect.width = rect.width + x * 2;\n  rect.height = rect.height + y * 2;\n  return CenterRectangleOn(rect, cx, cy);\n}\n\n// src/geom/rectangle/MergeRectangle.ts\nfunction MergeRectangle(target, source) {\n  const minX = Math.min(target.x, source.x);\n  const maxX = Math.max(target.right, source.right);\n  const minY = Math.min(target.y, source.y);\n  const maxY = Math.max(target.bottom, source.bottom);\n  return target.set(minX, minY, maxX - minX, maxY - minY);\n}\n\n// src/geom/rectangle/RectangleContainsPoint.ts\nfunction RectangleContainsPoint(rect, point) {\n  return RectangleContains(rect, point.x, point.y);\n}\n\n// src/geom/rectangle/RectangleEquals.ts\nfunction RectangleEquals(rect, toCompare) {\n  return rect.x === toCompare.x && rect.y === toCompare.y && rect.width === toCompare.width && rect.height === toCompare.height;\n}\n\n// src/geom/rectangle/RectangleFromPoints.ts\nfunction RectangleFromPoints(points, out = new Rectangle()) {\n  if (points.length === 0) {\n    return out;\n  }\n  let minX = Number.MAX_VALUE;\n  let minY = Number.MAX_VALUE;\n  let maxX = MATH_CONST.MIN_SAFE_INTEGER;\n  let maxY = MATH_CONST.MIN_SAFE_INTEGER;\n  for (let i = 0; i < points.length; i++) {\n    const px = points[i].x;\n    const py = points[i].y;\n    minX = Math.min(minX, px);\n    minY = Math.min(minY, py);\n    maxX = Math.max(maxX, px);\n    maxY = Math.max(maxY, py);\n  }\n  return out.set(minX, minY, maxX - minX, maxY - minY);\n}\n\n// src/geom/rectangle/RectangleSizeEquals.ts\nfunction RectangleSizeEquals(rect, toCompare) {\n  return rect.width === toCompare.width && rect.height === toCompare.height;\n}\n\n// src/geom/rectangle/ScaleRectangle.ts\nfunction ScaleRectangle(rect, x, y = x) {\n  rect.width *= x;\n  rect.height *= y;\n  return rect;\n}\n\n// src/geom/rectangle/TranslateRectangle.ts\nfunction TranslateRectangle(rect, x, y) {\n  rect.x += x;\n  rect.y += y;\n  return rect;\n}\n\n// src/geom/rectangle/TranslateRectanglePoint.ts\nfunction TranslateRectanglePoint(rect, point) {\n  rect.x += point.x;\n  rect.y += point.y;\n  return rect;\n}\n\n// src/gameobjects/components/transform/UpdateLocalTransform.ts\nfunction UpdateLocalTransform(transform) {\n  const local = transform.local;\n  const x = transform.position.x;\n  const y = transform.position.y;\n  const rotation = transform.rotation;\n  const scaleX = transform.scale.x;\n  const scaleY = transform.scale.y;\n  const skewX = transform.skew.x;\n  const skewY = transform.skew.y;\n  local.set(Math.cos(rotation + skewY) * scaleX, Math.sin(rotation + skewY) * scaleX, -Math.sin(rotation - skewX) * scaleY, Math.cos(rotation - skewX) * scaleY, x, y);\n}\n\n// src/gameobjects/components/transform/UpdateWorldTransform.ts\nfunction UpdateWorldTransform(gameObject) {\n  const parent = gameObject.parent;\n  const transform = gameObject.transform;\n  const lt = transform.local;\n  const wt = transform.world;\n  if (!parent) {\n    Mat2dCopyFrom(lt, wt);\n  } else if (transform.passthru) {\n    Mat2dCopyFrom(parent.transform.world, wt);\n  } else {\n    const {a, b, c, d, tx, ty} = lt;\n    const {a: pa, b: pb, c: pc, d: pd, tx: ptx, ty: pty} = parent.transform.world;\n    wt.set(a * pa + b * pc, a * pb + b * pd, c * pa + d * pc, c * pb + d * pd, tx * pa + ty * pc + ptx, tx * pb + ty * pd + pty);\n  }\n}\n\n// src/gameobjects/components/transform/TransformComponent.ts\nvar TransformComponent = class {\n  constructor(entity, x = 0, y = 0) {\n    this.passthru = false;\n    this._rotation = 0;\n    this.entity = entity;\n    this.local = new Matrix2D();\n    this.world = new Matrix2D();\n    const update = () => this.update();\n    const updateExtent = () => this.updateExtent();\n    this.position = new Vec2Callback(update, x, y);\n    this.scale = new Vec2Callback(update, 1, 1);\n    this.skew = new Vec2Callback(update);\n    this.origin = new Vec2Callback(updateExtent, GetDefaultOriginX(), GetDefaultOriginY());\n    this.extent = new Rectangle();\n  }\n  update() {\n    this.updateLocal();\n    this.updateWorld();\n  }\n  updateLocal() {\n    this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n    UpdateLocalTransform(this);\n  }\n  updateWorld() {\n    const entity = this.entity;\n    entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n    UpdateWorldTransform(entity);\n    if (entity.numChildren) {\n      this.updateChildren();\n    }\n  }\n  updateChildren() {\n    const children = this.entity.children;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      child.transform.updateWorld();\n    }\n  }\n  globalToLocal(x, y, out = new Vec2()) {\n    const {a, b, c, d, tx, ty} = this.world;\n    const id = 1 / (a * d + c * -b);\n    out.x = d * id * x + -c * id * y + (ty * c - tx * d) * id;\n    out.y = a * id * y + -b * id * x + (-ty * a + tx * b) * id;\n    return out;\n  }\n  localToGlobal(x, y, out = new Vec2()) {\n    const {a, b, c, d, tx, ty} = this.world;\n    out.x = a * x + c * y + tx;\n    out.y = b * x + d * y + ty;\n    return out;\n  }\n  setExtent(x, y, width, height) {\n    this.extent.set(x, y, width, height);\n    this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n  }\n  updateExtent(width, height) {\n    const extent = this.extent;\n    const entity = this.entity;\n    if (width !== void 0) {\n      extent.width = width;\n    }\n    if (height !== void 0) {\n      extent.height = height;\n    }\n    extent.x = -this.origin.x * extent.width;\n    extent.y = -this.origin.y * extent.height;\n    entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n  }\n  set rotation(value) {\n    if (value !== this._rotation) {\n      this._rotation = value;\n      this.update();\n    }\n  }\n  get rotation() {\n    return this._rotation;\n  }\n  destroy() {\n    this.position.destroy();\n    this.scale.destroy();\n    this.skew.destroy();\n    this.origin.destroy();\n    this.entity = null;\n    this.local = null;\n    this.world = null;\n    this.position = null;\n    this.scale = null;\n    this.skew = null;\n    this.origin = null;\n    this.extent = null;\n  }\n};\n\n// src/renderer/webgl1/colors/PackColor.ts\nfunction PackColor(rgb, alpha) {\n  const ua = (alpha * 255 | 0) & 255;\n  return (ua << 24 | rgb) >>> 0;\n}\n\n// src/gameobjects/components/Vertex.ts\nvar Vertex = class {\n  constructor(x = 0, y = 0, z = 0) {\n    this.x = 0;\n    this.y = 0;\n    this.z = 0;\n    this.u = 0;\n    this.v = 0;\n    this.texture = 0;\n    this.tint = 16777215;\n    this.alpha = 1;\n    this.color = 4294967295;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n  setPosition(x, y, z = 0) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  }\n  setUV(u, v) {\n    this.u = u;\n    this.v = v;\n    return this;\n  }\n  setColor(color, alpha = 1) {\n    this.tint = color;\n    this.alpha = alpha;\n    this.packColor();\n    return this;\n  }\n  setAlpha(value) {\n    this.alpha = value;\n    return this;\n  }\n  setTint(value) {\n    this.tint = value;\n    return this;\n  }\n  packColor() {\n    this.color = PackColor(this.tint, this.alpha);\n  }\n};\n\n// src/renderer/webgl1/draw/BatchTexturedQuad.ts\nfunction BatchTexturedQuad(sprite, renderPass) {\n  const {F32, U32, offset} = GetVertexBufferEntry(renderPass, 1);\n  const textureIndex = SetTexture(renderPass, sprite.texture);\n  let vertOffset = offset;\n  sprite.vertices.forEach((vertex) => {\n    F32[vertOffset + 0] = vertex.x;\n    F32[vertOffset + 1] = vertex.y;\n    F32[vertOffset + 2] = vertex.u;\n    F32[vertOffset + 3] = vertex.v;\n    F32[vertOffset + 4] = textureIndex;\n    U32[vertOffset + 5] = vertex.color;\n    vertOffset += 6;\n  });\n}\n\n// src/gameobjects/GameObject.ts\nvar GameObject = class {\n  constructor(x = 0, y = 0) {\n    this.type = \"GameObject\";\n    this.name = \"\";\n    this.willUpdate = true;\n    this.willUpdateChildren = true;\n    this.willRender = true;\n    this.willRenderChildren = true;\n    this.willCacheChildren = false;\n    this.dirty = 0;\n    this.dirtyFrame = 0;\n    this.visible = true;\n    this.children = [];\n    this.events = new Map();\n    this.transform = new TransformComponent(this, x, y);\n    this.bounds = new BoundsComponent(this);\n    this.input = new InputComponent(this);\n    this.dirty = DIRTY_CONST.DEFAULT;\n    this.transform.update();\n  }\n  isRenderable() {\n    return this.visible && this.willRender;\n  }\n  isDirty(flag) {\n    return (this.dirty & flag) !== 0;\n  }\n  clearDirty(flag) {\n    if (this.isDirty(flag)) {\n      this.dirty ^= flag;\n    }\n    return this;\n  }\n  setDirty(flag, flag2) {\n    if (!this.isDirty(flag)) {\n      this.dirty ^= flag;\n      this.dirtyFrame = GameInstance.getFrame();\n    }\n    if (!this.isDirty(flag2)) {\n      this.dirty ^= flag2;\n    }\n    return this;\n  }\n  update(delta, time) {\n    if (this.willUpdateChildren) {\n      const children = this.children;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child && child.willUpdate) {\n          child.update(delta, time);\n        }\n      }\n    }\n    this.postUpdate(delta, time);\n  }\n  postUpdate(delta, time) {\n  }\n  renderGL(renderPass) {\n  }\n  renderCanvas(renderer) {\n  }\n  postRenderGL(renderPass) {\n  }\n  postRenderCanvas(renderer) {\n  }\n  get numChildren() {\n    return this.children.length;\n  }\n  destroy(reparentChildren) {\n    if (reparentChildren) {\n      ReparentChildren(this, reparentChildren);\n    } else {\n      DestroyChildren(this);\n    }\n    Emit(this, DestroyEvent, this);\n    this.transform.destroy();\n    this.bounds.destroy();\n    this.input.destroy();\n    this.events.clear();\n    this.world = null;\n    this.parent = null;\n    this.children = null;\n  }\n};\n\n// src/gameobjects/container/Container.ts\nvar Container = class extends GameObject {\n  constructor(x = 0, y = 0) {\n    super(x, y);\n    this._alpha = 1;\n    this.type = \"Container\";\n  }\n  setSize(width, height = width) {\n    this.transform.updateExtent(width, height);\n    return this;\n  }\n  setPosition(x, y) {\n    this.transform.position.set(x, y);\n    return this;\n  }\n  setOrigin(x, y = x) {\n    this.transform.origin.set(x, y);\n    return this;\n  }\n  setSkew(x, y = x) {\n    this.transform.skew.set(x, y);\n    return this;\n  }\n  setScale(x, y = x) {\n    this.transform.scale.set(x, y);\n    return this;\n  }\n  setRotation(value) {\n    this.transform.rotation = value;\n    return this;\n  }\n  set width(value) {\n    this.transform.updateExtent(value);\n  }\n  get width() {\n    return this.transform.extent.width;\n  }\n  set height(value) {\n    this.transform.updateExtent(void 0, value);\n  }\n  get height() {\n    return this.transform.extent.height;\n  }\n  set x(value) {\n    this.transform.position.x = value;\n  }\n  get x() {\n    return this.transform.position.x;\n  }\n  set y(value) {\n    this.transform.position.y = value;\n  }\n  get y() {\n    return this.transform.position.y;\n  }\n  set originX(value) {\n    this.transform.origin.x = value;\n  }\n  get originX() {\n    return this.transform.origin.x;\n  }\n  set originY(value) {\n    this.transform.origin.y = value;\n  }\n  get originY() {\n    return this.transform.origin.y;\n  }\n  set skewX(value) {\n    this.transform.skew.x = value;\n  }\n  get skewX() {\n    return this.transform.skew.x;\n  }\n  set skewY(value) {\n    this.transform.skew.y = value;\n  }\n  get skewY() {\n    return this.transform.skew.y;\n  }\n  set scaleX(value) {\n    this.transform.scale.x = value;\n  }\n  get scaleX() {\n    return this.transform.scale.x;\n  }\n  set scaleY(value) {\n    this.transform.scale.y = value;\n  }\n  get scaleY() {\n    return this.transform.scale.y;\n  }\n  set rotation(value) {\n    this.transform.rotation = value;\n  }\n  get rotation() {\n    return this.transform.rotation;\n  }\n  get alpha() {\n    return this._alpha;\n  }\n  set alpha(value) {\n    if (value !== this._alpha) {\n      this._alpha = value;\n      this.setDirty(DIRTY_CONST.TRANSFORM);\n    }\n  }\n};\n\n// src/renderer/canvas/draw/DrawTexturedQuad.ts\nfunction DrawTexturedQuad(sprite, renderer) {\n  const frame2 = sprite.frame;\n  if (!frame2) {\n    return;\n  }\n  const ctx = renderer.ctx;\n  const transform = sprite.transform;\n  const {a, b, c, d, tx, ty} = transform.world;\n  const {x, y} = transform.extent;\n  ctx.save();\n  ctx.setTransform(a, b, c, d, tx, ty);\n  ctx.globalAlpha = sprite.alpha;\n  ctx.drawImage(frame2.texture.image, frame2.x, frame2.y, frame2.width, frame2.height, x, y, frame2.width, frame2.height);\n  ctx.restore();\n}\n\n// src/renderer/webgl1/colors/PackColors.ts\nfunction PackColors(sprite) {\n  sprite.vertices.forEach((vertex) => {\n    vertex.packColor();\n  });\n  return sprite;\n}\n\n// src/gameobjects/sprite/SetFrame.ts\nfunction SetFrame(texture, key, ...children) {\n  const frame2 = texture.getFrame(key);\n  const {u0, u1, v0, v1, pivot} = frame2;\n  children.forEach((child) => {\n    if (!child || frame2 === child.frame) {\n      return;\n    }\n    child.frame = frame2;\n    if (pivot) {\n      child.setOrigin(pivot.x, pivot.y);\n    }\n    child.frame.setExtent(child);\n    child.hasTexture = true;\n    const vertices = child.vertices;\n    vertices[0].setUV(u0, v0);\n    vertices[1].setUV(u0, v1);\n    vertices[2].setUV(u1, v1);\n    vertices[3].setUV(u1, v0);\n  });\n  return children;\n}\n\n// src/textures/TextureManagerInstance.ts\nvar instance3;\nvar TextureManagerInstance = {\n  get: () => {\n    return instance3;\n  },\n  set: (manager) => {\n    instance3 = manager;\n  }\n};\n\n// src/gameobjects/sprite/SetTexture.ts\nfunction SetTexture2(key, frame2, ...children) {\n  if (!key) {\n    children.forEach((child) => {\n      child.texture = null;\n      child.frame = null;\n      child.hasTexture = false;\n    });\n  } else {\n    let texture;\n    if (key instanceof Texture) {\n      texture = key;\n    } else {\n      texture = TextureManagerInstance.get().get(key);\n    }\n    if (!texture) {\n      console.warn(`Invalid Texture key: ${key}`);\n    } else {\n      children.forEach((child) => {\n        child.texture = texture;\n      });\n      SetFrame(texture, frame2, ...children);\n    }\n  }\n  return children;\n}\n\n// src/gameobjects/sprite/UpdateVertices.ts\nfunction UpdateVertices(sprite) {\n  const vertices = sprite.vertices;\n  const {x0, y0, x1, y1, x2, y2, x3, y3} = GetVertices(sprite.transform);\n  vertices[0].setPosition(x0, y0);\n  vertices[1].setPosition(x1, y1);\n  vertices[2].setPosition(x2, y2);\n  vertices[3].setPosition(x3, y3);\n  return sprite;\n}\n\n// src/gameobjects/sprite/Sprite.ts\nvar Sprite = class extends Container {\n  constructor(x, y, texture, frame2) {\n    super(x, y);\n    this.hasTexture = false;\n    this._tint = 16777215;\n    this.type = \"Sprite\";\n    this.vertices = [new Vertex(), new Vertex(), new Vertex(), new Vertex()];\n    this.setTexture(texture, frame2);\n  }\n  setTexture(key, frame2) {\n    SetTexture2(key, frame2, this);\n    return this;\n  }\n  setFrame(key) {\n    SetFrame(this.texture, key, this);\n    return this;\n  }\n  isRenderable() {\n    return this.visible && this.willRender && this.hasTexture && this.alpha > 0;\n  }\n  preRender() {\n    if (this.isDirty(DIRTY_CONST.COLORS)) {\n      PackColors(this);\n      this.clearDirty(DIRTY_CONST.COLORS);\n    }\n    if (this.isDirty(DIRTY_CONST.TRANSFORM)) {\n      UpdateVertices(this);\n      this.clearDirty(DIRTY_CONST.TRANSFORM);\n    }\n  }\n  renderGL(renderPass) {\n    this.preRender();\n    BatchTexturedQuad(this, renderPass);\n  }\n  renderCanvas(renderer) {\n    this.preRender();\n    DrawTexturedQuad(this, renderer);\n  }\n  get alpha() {\n    return this._alpha;\n  }\n  set alpha(value) {\n    if (value !== this._alpha) {\n      this._alpha = value;\n      this.vertices.forEach((vertex) => {\n        vertex.setAlpha(value);\n      });\n      this.setDirty(DIRTY_CONST.COLORS);\n    }\n  }\n  get tint() {\n    return this._tint;\n  }\n  set tint(value) {\n    if (value !== this._tint) {\n      this._tint = value;\n      this.vertices.forEach((vertex) => {\n        vertex.setTint(value);\n      });\n      this.setDirty(DIRTY_CONST.COLORS);\n    }\n  }\n  destroy(reparentChildren) {\n    super.destroy(reparentChildren);\n    this.texture = null;\n    this.frame = null;\n    this.hasTexture = false;\n    this.vertices = [];\n  }\n};\n\n// src/gameobjects/animatedsprite/AnimatedSprite.ts\nvar AnimatedSprite = class extends Sprite {\n  constructor(x, y, texture, frame2) {\n    super(x, y, texture, frame2);\n    this.type = \"AnimatedSprite\";\n    this.anims = new Map();\n    this.animData = {\n      currentAnim: \"\",\n      currentFrames: [],\n      frameIndex: 0,\n      animSpeed: 0,\n      nextFrameTime: 0,\n      repeatCount: 0,\n      isPlaying: false,\n      yoyo: false,\n      pendingStart: false,\n      playingForward: true,\n      delay: 0,\n      repeatDelay: 0,\n      onStart: null,\n      onRepeat: null,\n      onComplete: null\n    };\n  }\n  stop() {\n    const data = this.animData;\n    data.isPlaying = false;\n    data.currentAnim = \"\";\n    if (data.onComplete) {\n      data.onComplete(this, data.currentAnim);\n    }\n  }\n  nextFrame() {\n    const data = this.animData;\n    data.frameIndex++;\n    if (data.frameIndex === data.currentFrames.length) {\n      if (data.yoyo) {\n        data.frameIndex--;\n        data.playingForward = false;\n      } else if (data.repeatCount === -1 || data.repeatCount > 0) {\n        data.frameIndex = 0;\n        if (data.repeatCount !== -1) {\n          data.repeatCount--;\n        }\n        if (data.onRepeat) {\n          data.onRepeat(this, data.currentAnim);\n        }\n        data.nextFrameTime += data.repeatDelay;\n      } else {\n        data.frameIndex--;\n        return this.stop();\n      }\n    }\n    this.setFrame(data.currentFrames[data.frameIndex]);\n    data.nextFrameTime += data.animSpeed;\n  }\n  prevFrame() {\n    const data = this.animData;\n    data.frameIndex--;\n    if (data.frameIndex === -1) {\n      if (data.repeatCount === -1 || data.repeatCount > 0) {\n        data.frameIndex = 0;\n        data.playingForward = true;\n        if (data.repeatCount !== -1) {\n          data.repeatCount--;\n        }\n        if (data.onRepeat) {\n          data.onRepeat(this, data.currentAnim);\n        }\n        data.nextFrameTime += data.repeatDelay;\n      } else {\n        data.frameIndex = 0;\n        return this.stop();\n      }\n    }\n    this.setFrame(data.currentFrames[data.frameIndex]);\n    data.nextFrameTime += data.animSpeed;\n  }\n  update(delta, now) {\n    super.update(delta, now);\n    const data = this.animData;\n    if (!data.isPlaying) {\n      return;\n    }\n    data.nextFrameTime -= delta * 1e3;\n    data.nextFrameTime = Math.max(data.nextFrameTime, 0);\n    if (data.nextFrameTime === 0) {\n      if (data.pendingStart) {\n        if (data.onStart) {\n          data.onStart(this, data.currentAnim);\n        }\n        data.pendingStart = false;\n        data.nextFrameTime = data.animSpeed;\n      } else if (data.playingForward) {\n        this.nextFrame();\n      } else {\n        this.prevFrame();\n      }\n    }\n  }\n  get isPlaying() {\n    return this.animData.isPlaying;\n  }\n  get isPlayingForward() {\n    return this.animData.isPlaying && this.animData.playingForward;\n  }\n  get currentAnimation() {\n    return this.animData.currentAnim;\n  }\n  destroy(reparentChildren) {\n    super.destroy(reparentChildren);\n    this.anims.clear();\n    this.animData = null;\n  }\n};\n\n// src/renderer/webgl1/draw/BatchSingleQuad.ts\nfunction BatchSingleQuad(renderPass, x, y, width, height, u0, v0, u1, v1, textureIndex = 0, packedColor = 4294967295) {\n  const {F32, U32, offset} = GetVertexBufferEntry(renderPass, 1);\n  F32[offset + 0] = x;\n  F32[offset + 1] = y;\n  F32[offset + 2] = u0;\n  F32[offset + 3] = v1;\n  F32[offset + 4] = textureIndex;\n  U32[offset + 5] = packedColor;\n  F32[offset + 6] = x;\n  F32[offset + 7] = y + height;\n  F32[offset + 8] = u0;\n  F32[offset + 9] = v0;\n  F32[offset + 10] = textureIndex;\n  U32[offset + 11] = packedColor;\n  F32[offset + 12] = x + width;\n  F32[offset + 13] = y + height;\n  F32[offset + 14] = u1;\n  F32[offset + 15] = v0;\n  F32[offset + 16] = textureIndex;\n  U32[offset + 17] = packedColor;\n  F32[offset + 18] = x + width;\n  F32[offset + 19] = y;\n  F32[offset + 20] = u1;\n  F32[offset + 21] = v1;\n  F32[offset + 22] = textureIndex;\n  U32[offset + 23] = packedColor;\n}\n\n// src/renderer/webgl1/draw/DrawTexturedQuad.ts\nfunction DrawTexturedQuad2(renderPass, texture, shader) {\n  if (!shader) {\n    shader = renderPass.quadShader;\n  }\n  const {u0, v0, u1, v1} = texture.firstFrame;\n  BindTexture(texture, 0);\n  SetVertexBuffer(renderPass, renderPass.quadBuffer);\n  SetShader(renderPass, shader, 0);\n  BatchSingleQuad(renderPass, 0, 0, texture.width, texture.height, u0, v0, u1, v1, 0);\n  Flush(renderPass);\n  PopVertexBuffer(renderPass);\n  PopShader(renderPass);\n  UnbindTexture(renderPass);\n}\n\n// src/gameobjects/layer/Layer.ts\nvar Layer = class extends GameObject {\n  constructor() {\n    super();\n    this.type = \"Layer\";\n    this.transform.passthru = true;\n    this.willRender = false;\n  }\n};\n\n// src/gameobjects/renderlayer/RenderLayer.ts\nvar RenderLayer = class extends Layer {\n  constructor() {\n    super();\n    this.type = \"RenderLayer\";\n    this.willRender = true;\n    this.willRenderChildren = true;\n    this.willCacheChildren = true;\n    this.setDirty(DIRTY_CONST.CHILD_CACHE);\n    const width = GetWidth();\n    const height = GetHeight();\n    const resolution = GetResolution();\n    const texture = new Texture(null, width * resolution, height * resolution);\n    const binding = new GLTextureBinding(texture);\n    texture.binding = binding;\n    binding.framebuffer = CreateFramebuffer(binding.texture);\n    this.texture = texture;\n    this.framebuffer = binding.framebuffer;\n  }\n  renderGL(renderPass) {\n    if (this.numChildren > 0) {\n      Flush(renderPass);\n      if (!this.willCacheChildren || this.isDirty(DIRTY_CONST.CHILD_CACHE)) {\n        SetFramebuffer(renderPass, this.framebuffer, true);\n        this.clearDirty(DIRTY_CONST.CHILD_CACHE);\n      } else {\n        SetFramebuffer(renderPass, this.framebuffer, false);\n        this.postRenderGL(renderPass);\n      }\n    }\n  }\n  postRenderGL(renderPass) {\n    Flush(renderPass);\n    PopFramebuffer(renderPass);\n    DrawTexturedQuad2(renderPass, this.texture);\n    this.clearDirty(DIRTY_CONST.TRANSFORM);\n  }\n};\n\n// src/gameobjects/effectlayer/EffectLayer.ts\nvar EffectLayer = class extends RenderLayer {\n  constructor(...shaders) {\n    super();\n    this.shaders = [];\n    this.type = \"EffectLayer\";\n    if (Array.isArray(shaders)) {\n      this.shaders = shaders;\n    }\n  }\n  postRenderGL(renderPass) {\n    const shaders = this.shaders;\n    const texture = this.texture;\n    Flush(renderPass);\n    PopFramebuffer(renderPass);\n    if (shaders.length === 0) {\n      DrawTexturedQuad2(renderPass, texture);\n    } else {\n      let prevTexture = texture;\n      for (let i = 0; i < shaders.length; i++) {\n        const shader = shaders[i];\n        DrawTexturedQuad2(renderPass, prevTexture, shader);\n        prevTexture = shader.texture;\n      }\n      DrawTexturedQuad2(renderPass, prevTexture);\n    }\n    this.clearDirty(DIRTY_CONST.TRANSFORM);\n  }\n};\n\n// src/renderer/webgl1/draw/BatchTexturedQuadBuffer.ts\nfunction BatchTexturedQuadBuffer(batch, renderPass) {\n}\n\n// src/gameobjects/components/transform/GetVerticesFromValues.ts\nfunction GetVerticesFromValues(left, right, top, bottom, x, y, rotation = 0, scaleX = 1, scaleY = 1, skewX = 0, skewY = 0) {\n  const a = Math.cos(rotation + skewY) * scaleX;\n  const b = Math.sin(rotation + skewY) * scaleX;\n  const c = -Math.sin(rotation - skewX) * scaleY;\n  const d = Math.cos(rotation - skewX) * scaleY;\n  const x0 = left * a + top * c + x;\n  const y0 = left * b + top * d + y;\n  const x1 = left * a + bottom * c + x;\n  const y1 = left * b + bottom * d + y;\n  const x2 = right * a + bottom * c + x;\n  const y2 = right * b + bottom * d + y;\n  const x3 = right * a + top * c + x;\n  const y3 = right * b + top * d + y;\n  return {x0, y0, x1, y1, x2, y2, x3, y3};\n}\n\n// src/gameobjects/spritebatch/SpriteBatch.ts\nvar SpriteBatch = class extends Layer {\n  constructor(maxSize, texture) {\n    super();\n    this.glTextureIndex = 0;\n    this.hasTexture = false;\n    this.type = \"SpriteBatch\";\n    this.willRender = true;\n    this.setTexture(texture);\n    this.setMaxSize(maxSize);\n  }\n  resetBuffers() {\n    let ibo = [];\n    for (let i = 0; i < this.maxSize * 4; i += 4) {\n      ibo.push(i + 0, i + 1, i + 2, i + 2, i + 3, i + 0);\n    }\n    this.data = new ArrayBuffer(this.maxSize * 96);\n    this.index = new Uint16Array(ibo);\n    this.vertexViewF32 = new Float32Array(this.data);\n    this.vertexViewU32 = new Uint32Array(this.data);\n    if (gl) {\n      DeleteFramebuffer(this.vertexBuffer);\n      DeleteFramebuffer(this.indexBuffer);\n      this.vertexBuffer = gl.createBuffer();\n      this.indexBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.data, gl.STATIC_DRAW);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.index, gl.STATIC_DRAW);\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    }\n    ibo = [];\n    this.count = 0;\n  }\n  setMaxSize(value) {\n    this.maxSize = Clamp(value, 0, 65535);\n    this.resetBuffers();\n    return this;\n  }\n  setTexture(key) {\n    let texture;\n    if (key instanceof Texture) {\n      texture = key;\n    } else {\n      texture = TextureManagerInstance.get().get(key);\n    }\n    if (!texture) {\n      console.warn(`Invalid Texture key: ${key}`);\n    } else {\n      this.texture = texture;\n      this.hasTexture = true;\n      this.glTextureIndex = -1;\n    }\n    return this;\n  }\n  isRenderable() {\n    return this.visible && this.willRender && this.hasTexture && this.count > 0;\n  }\n  clear() {\n    this.count = 0;\n    return this;\n  }\n  addToBatch(frame2, color, x0, y0, x1, y1, x2, y2, x3, y3) {\n    if (this.count >= this.maxSize) {\n      console.warn(\"SpriteBatch full\");\n      return this;\n    }\n    const {u0, u1, v0, v1} = frame2;\n    const F32 = this.vertexViewF32;\n    const U32 = this.vertexViewU32;\n    const offset = this.count * 24;\n    const textureIndex = this.texture.binding ? this.texture.binding.index : 0;\n    F32[offset + 0] = x0;\n    F32[offset + 1] = y0;\n    F32[offset + 2] = u0;\n    F32[offset + 3] = v0;\n    F32[offset + 4] = textureIndex;\n    U32[offset + 5] = color;\n    F32[offset + 6] = x1;\n    F32[offset + 7] = y1;\n    F32[offset + 8] = u0;\n    F32[offset + 9] = v1;\n    F32[offset + 10] = textureIndex;\n    U32[offset + 11] = color;\n    F32[offset + 12] = x2;\n    F32[offset + 13] = y2;\n    F32[offset + 14] = u1;\n    F32[offset + 15] = v1;\n    F32[offset + 16] = textureIndex;\n    U32[offset + 17] = color;\n    F32[offset + 18] = x3;\n    F32[offset + 19] = y3;\n    F32[offset + 20] = u1;\n    F32[offset + 21] = v0;\n    F32[offset + 22] = textureIndex;\n    U32[offset + 23] = color;\n    this.setDirty(DIRTY_CONST.TRANSFORM);\n    this.count++;\n    return this;\n  }\n  add(config) {\n    const {\n      frame: frame2 = null,\n      x = 0,\n      y = 0,\n      rotation = 0,\n      scaleX = 1,\n      scaleY = 1,\n      skewX = 0,\n      skewY = 0,\n      originX = 0,\n      originY = 0,\n      alpha = 1,\n      tint = 16777215\n    } = config;\n    const textureFrame = this.texture.getFrame(frame2);\n    const {left, right, top, bottom} = textureFrame.getExtent(originX, originY);\n    const {x0, y0, x1, y1, x2, y2, x3, y3} = GetVerticesFromValues(left, right, top, bottom, x, y, rotation, scaleX, scaleY, skewX, skewY);\n    const packedColor = PackColor(tint, alpha);\n    return this.addToBatch(textureFrame, packedColor, x0, y0, x1, y1, x2, y2, x3, y3);\n  }\n  addXY(x, y, frame2) {\n    const textureFrame = this.texture.getFrame(frame2);\n    const {left, right, top, bottom} = textureFrame.getExtent(0, 0);\n    const {x0, y0, x1, y1, x2, y2, x3, y3} = GetVerticesFromValues(left, right, top, bottom, x, y);\n    return this.addToBatch(textureFrame, 4294967295, x0, y0, x1, y1, x2, y2, x3, y3);\n  }\n  updateTextureIndex() {\n    const textureIndex = this.texture.binding.index;\n    if (textureIndex === this.glTextureIndex) {\n      return;\n    }\n    const F32 = this.vertexViewF32;\n    this.glTextureIndex = textureIndex;\n    for (let i = 0; i < this.count; i++) {\n      F32[i * 24 + 4] = textureIndex;\n      F32[i * 24 + 10] = textureIndex;\n      F32[i * 24 + 16] = textureIndex;\n      F32[i * 24 + 22] = textureIndex;\n    }\n  }\n  renderGL(renderPass) {\n    BatchTexturedQuadBuffer(this, renderPass);\n  }\n  destroy() {\n    super.destroy();\n    DeleteFramebuffer(this.vertexBuffer);\n    DeleteFramebuffer(this.indexBuffer);\n    this.data = null;\n    this.vertexViewF32 = null;\n    this.vertexViewU32 = null;\n    this.index = null;\n    this.texture = null;\n    this.hasTexture = false;\n  }\n};\n\n// src/textures/CreateCanvas.ts\nfunction CreateCanvas(width, height) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width;\n  canvas.height = height;\n  return canvas.getContext(\"2d\");\n}\n\n// src/textures/types/CanvasTexture.ts\nfunction CanvasTexture(width = 32, height = 32) {\n  const ctx = CreateCanvas(width, height);\n  return new Texture(ctx.canvas);\n}\n\n// src/gameobjects/text/Text.ts\nvar Text = class extends Sprite {\n  constructor(x, y, text = \"\", font, fillStyle) {\n    super(x, y, CanvasTexture());\n    this.splitRegExp = /(?:\\r\\n|\\r|\\n)/;\n    this.padding = {left: 0, right: 0, top: 0, bottom: 0};\n    this.verticalAlign = \"ascent\";\n    this.lineSpacing = 0;\n    this.font = \"16px monospace\";\n    this.fillStyle = \"#fff\";\n    this.strokeStyle = \"\";\n    this.backgroundStyle = \"\";\n    this.cornerRadius = 0;\n    this.textAlign = \"left\";\n    this.textBaseline = \"alphabetic\";\n    this.lineWidth = 0;\n    this.lineDash = [];\n    this.antialias = false;\n    this.type = \"Text\";\n    const game = GameInstance.get();\n    this.resolution = game.renderer.resolution;\n    this.canvas = this.texture.image;\n    this.context = this.canvas.getContext(\"2d\");\n    if (font) {\n      this.font = font;\n    }\n    if (fillStyle) {\n      this.fillStyle = fillStyle;\n    }\n    this.setText(text);\n  }\n  syncContext(canvas, ctx) {\n    if (this.preRenderCallback) {\n      this.preRenderCallback(canvas, ctx);\n    }\n    ctx.font = this.font;\n    ctx.textBaseline = this.textBaseline;\n    ctx.textAlign = this.textAlign;\n    ctx.fillStyle = this.fillStyle;\n    ctx.strokeStyle = this.strokeStyle;\n    ctx.lineWidth = this.lineWidth;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.setLineDash(this.lineDash);\n    ctx.imageSmoothingEnabled = this.antialias;\n  }\n  updateText() {\n    const canvas = this.canvas;\n    const ctx = this.context;\n    const resolution = this.resolution;\n    const lines = this._text.split(this.splitRegExp);\n    const padding = this.padding;\n    const fillStyle = this.fillStyle;\n    const strokeStyle = this.strokeStyle;\n    const strokeWidth = this.lineWidth;\n    const lineSpacing = this.lineSpacing;\n    const strokeWidthHalf = strokeWidth > 0 ? strokeWidth / 2 : 0;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.syncContext(canvas, ctx);\n    ctx.textAlign = \"start\";\n    let maxWidth = 0;\n    let maxHeight = 0;\n    let y = 0;\n    const lineMetrics = [];\n    const vAlignAscent = this.verticalAlign === \"ascent\";\n    const metrics = ctx.measureText(\"|M\\xC9q\");\n    const averageLineHeight = Math.ceil(Math.abs(metrics.actualBoundingBoxAscent) + Math.abs(metrics.actualBoundingBoxDescent)) + strokeWidth;\n    for (let i = 0; i < lines.length; i++) {\n      const metrics2 = ctx.measureText(lines[i]);\n      const left = metrics2.actualBoundingBoxLeft;\n      const right = metrics2.actualBoundingBoxRight;\n      let ascent = metrics2.actualBoundingBoxAscent;\n      let descent = metrics2.actualBoundingBoxDescent;\n      if (!ascent && !descent || lines[i] === \"\") {\n        ascent = averageLineHeight;\n        descent = 0;\n      }\n      const lineWidth = Math.ceil(Math.abs(left) + Math.abs(right)) + strokeWidth;\n      const lineHeight = Math.ceil(Math.abs(ascent) + Math.abs(descent)) + strokeWidth;\n      if (vAlignAscent) {\n        y += ascent + strokeWidthHalf;\n        if (i > 0) {\n          y += lineSpacing + strokeWidthHalf;\n        }\n        maxHeight = y + descent + strokeWidthHalf;\n      } else {\n        y = maxHeight + (lineHeight - descent - strokeWidthHalf);\n        maxHeight += lineHeight;\n        if (i < lines.length - 1) {\n          maxHeight += lineSpacing;\n        }\n      }\n      maxWidth = Math.max(maxWidth, lineWidth);\n      lineMetrics.push({lineWidth, lineHeight, ascent, descent, left, right, y});\n    }\n    maxWidth += padding.left + padding.right;\n    maxHeight += padding.top + padding.bottom;\n    const displayWidth = this.fixedWidth ? this.fixedWidth : maxWidth;\n    const displayHeight = this.fixedHeight ? this.fixedHeight : maxHeight;\n    const canvasWidth = Math.ceil(displayWidth * resolution);\n    const canvasHeight = Math.ceil(displayHeight * resolution);\n    if (canvas.width !== canvasWidth || canvas.height !== canvasHeight) {\n      canvas.width = canvasWidth;\n      canvas.height = canvasHeight;\n      this.texture.setSize(displayWidth, displayHeight);\n      this.setSize(displayWidth, displayHeight);\n    }\n    ctx.save();\n    ctx.scale(resolution, resolution);\n    this.syncContext(canvas, ctx);\n    const backgroundStyle = this.backgroundStyle;\n    if (backgroundStyle) {\n      ctx.save();\n      ctx.fillStyle = backgroundStyle;\n      ctx.strokeStyle = backgroundStyle;\n      const cornerRadius = this.cornerRadius;\n      const halfRadius = cornerRadius > 0 ? cornerRadius / 2 : 0;\n      if (cornerRadius) {\n        ctx.lineWidth = cornerRadius;\n        ctx.strokeRect(halfRadius, halfRadius, displayWidth - cornerRadius, displayHeight - cornerRadius);\n      }\n      ctx.fillRect(halfRadius, halfRadius, displayWidth - cornerRadius, displayHeight - cornerRadius);\n      ctx.restore();\n    }\n    const textAlign = this.textAlign;\n    const isCenter = textAlign === \"center\";\n    const isRight = textAlign === \"right\" || textAlign === \"end\";\n    const yOffset = (displayHeight - maxHeight) / 2 + padding.top;\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      const metrics2 = lineMetrics[i];\n      let tx = padding.left + metrics2.left + strokeWidthHalf;\n      const ty = yOffset + metrics2.y;\n      if (isCenter) {\n        tx = displayWidth / 2;\n      } else if (isRight) {\n        tx = displayWidth - strokeWidthHalf;\n      }\n      if (strokeStyle) {\n        ctx.strokeText(line, tx, ty);\n      }\n      if (fillStyle) {\n        ctx.fillText(line, tx, ty);\n      }\n    }\n    ctx.restore();\n    if (this.texture.binding) {\n      this.texture.binding.update();\n    }\n    this.setDirty(DIRTY_CONST.TEXTURE);\n    return this;\n  }\n  get text() {\n    return this._text;\n  }\n  set text(value) {\n    this.setText(value);\n  }\n  setText(value = \"\") {\n    if (Array.isArray(value)) {\n      value = value.join(\"\\n\");\n    }\n    if (value !== this._text) {\n      this._text = value.toString();\n      this.updateText();\n    }\n    return this;\n  }\n  destroy(reparentChildren) {\n    this.texture.destroy();\n    this.fillStyle = null;\n    this.strokeStyle = null;\n    this.backgroundStyle = null;\n    this.canvas = null;\n    this.context = null;\n    super.destroy(reparentChildren);\n  }\n};\n\n// src/gameobjects3d/index.ts\nvar gameobjects3d_exports = {};\n__export(gameobjects3d_exports, {\n  Box: () => Box,\n  Components: () => components_exports2,\n  Cone: () => Cone,\n  GameObject3D: () => GameObject3D,\n  Geometry: () => geometry_exports,\n  Light: () => Light,\n  Material: () => Material,\n  Mesh: () => Mesh,\n  Plane: () => Plane,\n  RenderLayer3D: () => RenderLayer3D,\n  Sphere: () => Sphere\n});\n\n// src/gameobjects3d/components/index.ts\nvar components_exports2 = {};\n__export(components_exports2, {\n  Transform3DComponent: () => Transform3DComponent\n});\n\n// src/gameobjects3d/components/transform3d/Transform3DComponent.ts\nvar Transform3DComponent = class {\n  constructor(entity, x = 0, y = 0, z = 0) {\n    this.passthru = false;\n    this.entity = entity;\n    this.local = new Matrix4();\n    this.world = new Matrix4();\n    this.normal = new Matrix4();\n    this.position = new Vec3Callback(() => this.update(), x, y, z);\n    this.scale = new Vec3Callback(() => this.update(), 1, 1, 1);\n    this.origin = new Vec3Callback(() => this.update());\n    this.rotation = new Quaternion();\n    this.rotation.onChange = () => this.update();\n    this.forward = Vec3Forward();\n    this.up = Vec3Up();\n    this.right = Vec3Right();\n    this.update();\n  }\n  rotateX(angle) {\n    QuatRotateX(this.rotation, angle, this.rotation);\n  }\n  rotateY(angle) {\n    QuatRotateY(this.rotation, angle, this.rotation);\n  }\n  rotateZ(angle) {\n    QuatRotateZ(this.rotation, angle, this.rotation);\n  }\n  update() {\n    const model = this.local;\n    const normal = this.normal;\n    Mat4FromRotationTranslationScale(this.rotation, this.position, this.scale, model);\n    Mat4Invert(model, normal);\n    Mat4Transpose(normal, normal);\n  }\n  updateLocal() {\n    this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n  }\n  updateWorld() {\n    const entity = this.entity;\n    entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\n    if (entity.numChildren) {\n      this.updateChildren();\n    }\n  }\n  updateChildren() {\n    const children = this.entity.children;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n    }\n  }\n  destroy() {\n    this.position.destroy();\n    this.scale.destroy();\n    this.origin.destroy();\n    this.rotation.destroy();\n    this.entity = null;\n    this.local = null;\n    this.world = null;\n    this.position = null;\n    this.scale = null;\n    this.origin = null;\n    this.rotation = null;\n  }\n};\n\n// src/gameobjects3d/geometry/index.ts\nvar geometry_exports = {};\n__export(geometry_exports, {\n  CreateVertexSet: () => CreateVertexSet,\n  FaceUVNormalTexture: () => FaceUVNormalTexture,\n  Geometry: () => Geometry,\n  GetBufferFromObj: () => GetBufferFromObj,\n  GetBufferFromVertexSet: () => GetBufferFromVertexSet,\n  GetFacesFromVertexSet: () => GetFacesFromVertexSet,\n  ParseObj: () => ParseObj\n});\n\n// src/gameobjects3d/geometry/CreateVertexSet.ts\nfunction CreateVertexSet() {\n  return {\n    vertices: [],\n    normals: [],\n    uvs: [],\n    indices: [],\n    numberOfVertices: 0\n  };\n}\n\n// src/renderer/webgl1/index.ts\nvar webgl1_exports = {};\n__export(webgl1_exports, {\n  CreateFramebuffer: () => CreateFramebuffer,\n  CreateGLTexture: () => CreateGLTexture,\n  DeleteFramebuffer: () => DeleteFramebuffer,\n  DeleteGLBuffer: () => DeleteGLBuffer,\n  DeleteGLTexture: () => DeleteGLTexture,\n  GL: () => GL,\n  PackColor: () => PackColor,\n  PackColors: () => PackColors,\n  SetGLTextureFilterMode: () => SetGLTextureFilterMode,\n  UpdateGLTexture: () => UpdateGLTexture,\n  WebGLRenderer: () => WebGLRenderer\n});\n\n// src/gameobjects3d/geometry/FaceUVNormalTexture.ts\nvar FaceUVNormalTexture = class {\n  constructor(v1, v2, v3, n1, n2, n3, uv1, uv2, uv3, scale = 1) {\n    this.color = 16777215;\n    this.alpha = 1;\n    this.size = 30;\n    this.vertex1 = new Vertex(v1.x * scale, v1.y * scale, v1.z * scale);\n    this.vertex2 = new Vertex(v2.x * scale, v2.y * scale, v2.z * scale);\n    this.vertex3 = new Vertex(v3.x * scale, v3.y * scale, v3.z * scale);\n    this.vertex1.setUV(uv1.x, uv1.y);\n    this.vertex2.setUV(uv2.x, uv2.y);\n    this.vertex3.setUV(uv3.x, uv3.y);\n    this.normal1 = n1;\n    this.normal2 = n2;\n    this.normal3 = n3;\n    this._packedColor = PackColor(this.color, this.alpha);\n  }\n  setColor(color, alpha = 1) {\n    this.color = color;\n    this.alpha = alpha;\n    this._packedColor = PackColor(color, alpha);\n  }\n  addToBuffer(F32, U32, textureID, offset) {\n    const v1 = this.vertex1;\n    const v2 = this.vertex2;\n    const v3 = this.vertex3;\n    const n1 = this.normal1;\n    const n2 = this.normal2;\n    const n3 = this.normal3;\n    const color = this._packedColor;\n    F32[offset++] = v1.x;\n    F32[offset++] = v1.y;\n    F32[offset++] = v1.z;\n    F32[offset++] = n1.x;\n    F32[offset++] = n1.y;\n    F32[offset++] = n1.z;\n    F32[offset++] = v1.u;\n    F32[offset++] = v1.v;\n    F32[offset++] = textureID;\n    U32[offset++] = color;\n    F32[offset++] = v2.x;\n    F32[offset++] = v2.y;\n    F32[offset++] = v2.z;\n    F32[offset++] = n2.x;\n    F32[offset++] = n2.y;\n    F32[offset++] = n2.z;\n    F32[offset++] = v2.u;\n    F32[offset++] = v2.v;\n    F32[offset++] = textureID;\n    U32[offset++] = color;\n    F32[offset++] = v3.x;\n    F32[offset++] = v3.y;\n    F32[offset++] = v3.z;\n    F32[offset++] = n3.x;\n    F32[offset++] = n3.y;\n    F32[offset++] = n3.z;\n    F32[offset++] = v3.u;\n    F32[offset++] = v3.v;\n    F32[offset++] = textureID;\n    U32[offset++] = color;\n    return offset;\n  }\n};\n\n// src/gameobjects3d/geometry/GetBufferFromVertexSet.ts\nfunction GetVec3(data, index) {\n  const x = data[index * 3 + 0];\n  const y = data[index * 3 + 1];\n  const z = data[index * 3 + 2];\n  return [x, y, z];\n}\nfunction GetVec2(data, index) {\n  const x = data[index * 2 + 0];\n  const y = data[index * 2 + 1];\n  return [x, y];\n}\nfunction CreateNonIndexedVertexBuffer(data) {\n  const {\n    vertices,\n    normals,\n    uvs\n  } = data;\n  const total = vertices.length;\n  const count = total / 3;\n  const batchSize = count / 3;\n  const buffer = new VertexBuffer({batchSize, isDynamic: false, vertexElementSize: 8, elementsPerEntry: 3});\n  const F32 = buffer.vertexViewF32;\n  let offset = 0;\n  let uvIndex = 0;\n  for (let i = 0; i < total; i += 3) {\n    F32[offset++] = vertices[i + 0];\n    F32[offset++] = vertices[i + 1];\n    F32[offset++] = vertices[i + 2];\n    F32[offset++] = normals[i + 0];\n    F32[offset++] = normals[i + 1];\n    F32[offset++] = normals[i + 2];\n    F32[offset++] = uvs[uvIndex + 0];\n    F32[offset++] = uvs[uvIndex + 1];\n    uvIndex += 2;\n  }\n  buffer.count = count;\n  return buffer;\n}\nfunction CreateVertexBuffer(data) {\n  const {\n    vertices,\n    normals,\n    uvs,\n    indices\n  } = data;\n  const buffer = new VertexBuffer({batchSize: indices.length / 3, isDynamic: false, vertexElementSize: 8, elementsPerEntry: 3});\n  const F32 = buffer.vertexViewF32;\n  let offset = 0;\n  for (let i = 0; i < indices.length; i += 3) {\n    const i1 = indices[i + 0];\n    const i2 = indices[i + 1];\n    const i3 = indices[i + 2];\n    const v1 = GetVec3(vertices, i1);\n    const v2 = GetVec3(vertices, i2);\n    const v3 = GetVec3(vertices, i3);\n    const n1 = GetVec3(normals, i1);\n    const n2 = GetVec3(normals, i2);\n    const n3 = GetVec3(normals, i3);\n    const uv1 = GetVec2(uvs, i1);\n    const uv2 = GetVec2(uvs, i2);\n    const uv3 = GetVec2(uvs, i3);\n    F32[offset++] = v1[0];\n    F32[offset++] = v1[1];\n    F32[offset++] = v1[2];\n    F32[offset++] = n1[0];\n    F32[offset++] = n1[1];\n    F32[offset++] = n1[2];\n    F32[offset++] = uv1[0];\n    F32[offset++] = uv1[1];\n    F32[offset++] = v2[0];\n    F32[offset++] = v2[1];\n    F32[offset++] = v2[2];\n    F32[offset++] = n2[0];\n    F32[offset++] = n2[1];\n    F32[offset++] = n2[2];\n    F32[offset++] = uv2[0];\n    F32[offset++] = uv2[1];\n    F32[offset++] = v3[0];\n    F32[offset++] = v3[1];\n    F32[offset++] = v3[2];\n    F32[offset++] = n3[0];\n    F32[offset++] = n3[1];\n    F32[offset++] = n3[2];\n    F32[offset++] = uv3[0];\n    F32[offset++] = uv3[1];\n  }\n  buffer.count = indices.length;\n  return buffer;\n}\nfunction GetBufferFromVertexSet(data) {\n  if (data.indices && data.indices.length > 0) {\n    return CreateVertexBuffer(data);\n  } else {\n    return CreateNonIndexedVertexBuffer(data);\n  }\n}\n\n// src/gameobjects3d/geometry/Geometry.ts\nvar Geometry = class {\n  constructor(data) {\n    if (data) {\n      if (data.hasOwnProperty(\"vertices\")) {\n        this.buffer = GetBufferFromVertexSet(data);\n      } else {\n        this.buffer = data;\n      }\n    }\n  }\n  destroy() {\n    this.buffer.destroy();\n  }\n};\n\n// src/gameobjects3d/geometry/ParseObj.ts\nvar ParseObj = class {\n  constructor(fileContents, flipUVs = true, defaultModelName = \"untitled\") {\n    this.currentMaterial = \"\";\n    this.currentGroup = \"\";\n    this.smoothingGroup = 0;\n    this.result = {\n      materialLibraries: [],\n      models: []\n    };\n    this.fileContents = fileContents;\n    this.defaultModelName = defaultModelName;\n    this.flipUVs = flipUVs;\n  }\n  parseAsync() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(this.parse());\n      } catch (theError) {\n        reject(theError);\n      }\n    });\n  }\n  parse() {\n    const stripComments = (line) => {\n      const commentIndex = line.indexOf(\"#\");\n      if (commentIndex > -1) {\n        return line.substring(0, commentIndex);\n      }\n      return line;\n    };\n    const lines = this.fileContents.split(\"\\n\");\n    for (const line of lines) {\n      const strippedline = stripComments(line);\n      const lineItems = strippedline.replace(/\\s\\s+/g, \" \").trim().split(\" \");\n      switch (lineItems[0].toLowerCase()) {\n        case \"o\":\n          this.parseObject(lineItems);\n          break;\n        case \"g\":\n          this.parseGroup(lineItems);\n          break;\n        case \"v\":\n          this.parseVertexCoords(lineItems);\n          break;\n        case \"vt\":\n          this.parseTextureCoords(lineItems);\n          break;\n        case \"vn\":\n          this.parseVertexNormal(lineItems);\n          break;\n        case \"s\":\n          this.parseSmoothShadingStatement(lineItems);\n          break;\n        case \"f\":\n          this.parsePolygon(lineItems);\n          break;\n        case \"mtllib\":\n          this.parseMtlLib(lineItems);\n          break;\n        case \"usemtl\":\n          this.parseUseMtl(lineItems);\n          break;\n      }\n    }\n    this.fileContents = \"\";\n    return this.result;\n  }\n  currentModel() {\n    if (this.result.models.length === 0) {\n      this.result.models.push({\n        faces: [],\n        name: this.defaultModelName,\n        textureCoords: [],\n        vertexNormals: [],\n        vertices: []\n      });\n      this.currentGroup = \"\";\n      this.smoothingGroup = 0;\n    }\n    return this.result.models[this.result.models.length - 1];\n  }\n  parseObject(lineItems) {\n    const modelName = lineItems.length >= 2 ? lineItems[1] : this.defaultModelName;\n    this.result.models.push({\n      faces: [],\n      name: modelName,\n      textureCoords: [],\n      vertexNormals: [],\n      vertices: []\n    });\n    this.currentGroup = \"\";\n    this.smoothingGroup = 0;\n  }\n  parseGroup(lineItems) {\n    if (lineItems.length !== 2) {\n      throw \"Group statements must have exactly 1 argument (eg. g group_1)\";\n    }\n    this.currentGroup = lineItems[1];\n  }\n  parseVertexCoords(lineItems) {\n    const len = lineItems.length;\n    const x = len >= 2 ? parseFloat(lineItems[1]) : 0;\n    const y = len >= 3 ? parseFloat(lineItems[2]) : 0;\n    const z = len >= 4 ? parseFloat(lineItems[3]) : 0;\n    this.currentModel().vertices.push({x, y, z});\n  }\n  parseTextureCoords(lineItems) {\n    const len = lineItems.length;\n    let u = len >= 2 ? parseFloat(lineItems[1]) : 0;\n    let v = len >= 3 ? parseFloat(lineItems[2]) : 0;\n    let w = len >= 4 ? parseFloat(lineItems[3]) : 0;\n    if (isNaN(u)) {\n      u = 0;\n    }\n    if (isNaN(v)) {\n      v = 0;\n    }\n    if (isNaN(w)) {\n      w = 0;\n    }\n    if (this.flipUVs) {\n      v = 1 - v;\n    }\n    this.currentModel().textureCoords.push({u, v, w});\n  }\n  parseVertexNormal(lineItems) {\n    const len = lineItems.length;\n    const x = len >= 2 ? parseFloat(lineItems[1]) : 0;\n    const y = len >= 3 ? parseFloat(lineItems[2]) : 0;\n    const z = len >= 4 ? parseFloat(lineItems[3]) : 0;\n    this.currentModel().vertexNormals.push({x, y, z});\n  }\n  parsePolygon(lineItems) {\n    const totalVertices = lineItems.length - 1;\n    if (totalVertices < 3) {\n      throw \"Face < 3 vertices\";\n    }\n    const face = {\n      group: this.currentGroup,\n      material: this.currentMaterial,\n      smoothingGroup: this.smoothingGroup,\n      vertices: []\n    };\n    for (let i = 0; i < totalVertices; i++) {\n      const vertexString = lineItems[i + 1];\n      const vertexValues = vertexString.split(\"/\");\n      const vvLen = vertexValues.length;\n      if (vvLen < 1 || vvLen > 3) {\n        throw \"Too many / values for single vertex\";\n      }\n      let vertexIndex = 0;\n      let textureCoordsIndex = 0;\n      let vertexNormalIndex = 0;\n      vertexIndex = parseInt(vertexValues[0], 10);\n      if (vvLen > 1 && vertexValues[1] !== \"\") {\n        textureCoordsIndex = parseInt(vertexValues[1], 10);\n      }\n      if (vvLen > 2) {\n        vertexNormalIndex = parseInt(vertexValues[2], 10);\n      }\n      if (vertexIndex === 0) {\n        throw \"Faces uses invalid vertex index of 0\";\n      }\n      if (vertexIndex < 0) {\n        vertexIndex = this.currentModel().vertices.length + 1 + vertexIndex;\n      }\n      textureCoordsIndex -= 1;\n      vertexIndex -= 1;\n      vertexNormalIndex -= 1;\n      face.vertices.push({\n        textureCoordsIndex,\n        vertexIndex,\n        vertexNormalIndex\n      });\n    }\n    this.currentModel().faces.push(face);\n  }\n  parseMtlLib(lineItems) {\n    if (lineItems.length >= 2) {\n      this.result.materialLibraries.push(lineItems[1]);\n    }\n  }\n  parseUseMtl(lineItems) {\n    if (lineItems.length >= 2) {\n      this.currentMaterial = lineItems[1];\n    }\n  }\n  parseSmoothShadingStatement(lineItems) {\n    if (lineItems.length !== 2) {\n      throw \"Smoothing group statements must have exactly 1 argument (eg. s <number|off>)\";\n    }\n    const groupNumber = lineItems[1].toLowerCase() === \"off\" ? 0 : parseInt(lineItems[1], 10);\n    this.smoothingGroup = groupNumber;\n  }\n};\n\n// src/gameobjects3d/geometry/GetBufferFromObj.ts\nfunction GetBufferFromObj(data, flipUVs = true) {\n  const parser = new ParseObj(data, flipUVs);\n  const result = parser.parse();\n  const output = [];\n  result.models.forEach((model) => {\n    const {\n      faces,\n      textureCoords,\n      vertexNormals,\n      vertices\n    } = model;\n    let totalFaces = 0;\n    for (let i = 0; i < faces.length; i++) {\n      totalFaces += faces[i].vertices.length === 4 ? 6 : 3;\n    }\n    const buffer = new VertexBuffer({batchSize: totalFaces, isDynamic: false, vertexElementSize: 8, elementsPerEntry: 3});\n    const F32 = buffer.vertexViewF32;\n    let offset = 0;\n    for (let i = 0; i < faces.length; i++) {\n      const face = faces[i];\n      const i1 = face.vertices[0];\n      const i2 = face.vertices[1];\n      const i3 = face.vertices[2];\n      const v1 = vertices[i1.vertexIndex];\n      const v2 = vertices[i2.vertexIndex];\n      const v3 = vertices[i3.vertexIndex];\n      const n1 = vertexNormals[i1.vertexNormalIndex];\n      const n2 = vertexNormals[i2.vertexNormalIndex];\n      const n3 = vertexNormals[i3.vertexNormalIndex];\n      const uv1 = textureCoords[i1.textureCoordsIndex];\n      const uv2 = textureCoords[i2.textureCoordsIndex];\n      const uv3 = textureCoords[i3.textureCoordsIndex];\n      F32[offset++] = v1.x;\n      F32[offset++] = v1.y;\n      F32[offset++] = v1.z;\n      F32[offset++] = n1.x;\n      F32[offset++] = n1.y;\n      F32[offset++] = n1.z;\n      F32[offset++] = uv1.u;\n      F32[offset++] = uv1.v;\n      F32[offset++] = v2.x;\n      F32[offset++] = v2.y;\n      F32[offset++] = v2.z;\n      F32[offset++] = n2.x;\n      F32[offset++] = n2.y;\n      F32[offset++] = n2.z;\n      F32[offset++] = uv2.u;\n      F32[offset++] = uv2.v;\n      F32[offset++] = v3.x;\n      F32[offset++] = v3.y;\n      F32[offset++] = v3.z;\n      F32[offset++] = n3.x;\n      F32[offset++] = n3.y;\n      F32[offset++] = n3.z;\n      F32[offset++] = uv3.u;\n      F32[offset++] = uv3.v;\n      buffer.count += 3;\n      if (face.vertices.length === 4) {\n        const i4 = face.vertices[3];\n        const v4 = vertices[i4.vertexIndex];\n        const n4 = vertexNormals[i4.vertexNormalIndex];\n        const uv4 = textureCoords[i4.textureCoordsIndex];\n        F32[offset++] = v1.x;\n        F32[offset++] = v1.y;\n        F32[offset++] = v1.z;\n        F32[offset++] = n1.x;\n        F32[offset++] = n1.y;\n        F32[offset++] = n1.z;\n        F32[offset++] = uv1.u;\n        F32[offset++] = uv1.v;\n        F32[offset++] = v3.x;\n        F32[offset++] = v3.y;\n        F32[offset++] = v3.z;\n        F32[offset++] = n3.x;\n        F32[offset++] = n3.y;\n        F32[offset++] = n3.z;\n        F32[offset++] = uv3.u;\n        F32[offset++] = uv3.v;\n        F32[offset++] = v4.x;\n        F32[offset++] = v4.y;\n        F32[offset++] = v4.z;\n        F32[offset++] = n4.x;\n        F32[offset++] = n4.y;\n        F32[offset++] = n4.z;\n        F32[offset++] = uv4.u;\n        F32[offset++] = uv4.v;\n        buffer.count += 3;\n      }\n    }\n    output.push({name: model.name, buffer});\n  });\n  return output;\n}\n\n// src/gameobjects3d/geometry/GetFacesFromVertexSet.ts\nfunction GetVec32(data, index) {\n  const x = data[index * 3 + 0];\n  const y = data[index * 3 + 1];\n  const z = data[index * 3 + 2];\n  return [x, y, z];\n}\nfunction GetVec22(data, index) {\n  const x = data[index * 2 + 0];\n  const y = data[index * 2 + 1];\n  return [x, y];\n}\nfunction GetFacesFromVertexSet(data) {\n  const {\n    vertices,\n    normals,\n    uvs,\n    indices\n  } = data;\n  const faces = [];\n  for (let i = 0; i < indices.length; i += 3) {\n    const i1 = indices[i + 0];\n    const i2 = indices[i + 1];\n    const i3 = indices[i + 2];\n    const v1 = GetVec32(vertices, i1);\n    const v2 = GetVec32(vertices, i2);\n    const v3 = GetVec32(vertices, i3);\n    const n1 = GetVec32(normals, i1);\n    const n2 = GetVec32(normals, i2);\n    const n3 = GetVec32(normals, i3);\n    const uv1 = GetVec22(uvs, i1);\n    const uv2 = GetVec22(uvs, i2);\n    const uv3 = GetVec22(uvs, i3);\n    const f = new FaceUVNormalTexture({x: v1[0], y: v1[1], z: v1[2]}, {x: v2[0], y: v2[1], z: v2[2]}, {x: v3[0], y: v3[1], z: v3[2]}, {x: n1[0], y: n1[1], z: n1[2]}, {x: n2[0], y: n2[1], z: n2[2]}, {x: n3[0], y: n3[1], z: n3[2]}, {x: uv1[0], y: uv1[1]}, {x: uv2[0], y: uv2[1]}, {x: uv3[0], y: uv3[1]}, 1);\n    faces.push(f);\n  }\n  return faces;\n}\n\n// src/geom3d/PlaneGeometry.ts\nfunction PlaneGeometry(data, x = 0, y = 0, z = 0, u = 0, v = 1, w = 2, udir = 1, vdir = -1, width = 1, height = 1, depth = 1, gridX = 1, gridY = 1) {\n  if (!data) {\n    data = CreateVertexSet();\n  }\n  const {\n    vertices,\n    normals,\n    uvs,\n    indices,\n    numberOfVertices\n  } = data;\n  const segmentWidth = width / gridX;\n  const segmentHeight = height / gridY;\n  const widthHalf = width / 2;\n  const heightHalf = height / 2;\n  const depthHalf = depth / 2;\n  const gridX1 = gridX + 1;\n  const gridY1 = gridY + 1;\n  let vertexCounter = 0;\n  const vector = [];\n  for (let iy = 0; iy < gridY1; iy++) {\n    const by = iy * segmentHeight - heightHalf;\n    for (let ix = 0; ix < gridX1; ix++) {\n      const bx = ix * segmentWidth - widthHalf;\n      vector[u] = bx * udir;\n      vector[v] = by * vdir;\n      vector[w] = depthHalf;\n      vertices.push(x + vector[0], y + vector[1], z + vector[2]);\n      vector[u] = 0;\n      vector[v] = 0;\n      vector[w] = depth > 0 ? 1 : -1;\n      normals.push(vector[0], vector[1], vector[2]);\n      uvs.push(ix / gridX);\n      uvs.push(1 - iy / gridY);\n      vertexCounter += 1;\n    }\n  }\n  for (let iy = 0; iy < gridY; iy++) {\n    for (let ix = 0; ix < gridX; ix++) {\n      const a = numberOfVertices + ix + gridX1 * iy;\n      const b = numberOfVertices + ix + gridX1 * (iy + 1);\n      const c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n      const d = numberOfVertices + (ix + 1) + gridX1 * iy;\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  }\n  data.numberOfVertices += vertexCounter;\n  return data;\n}\n\n// src/geom3d/BoxGeometry.ts\nfunction BoxGeometry(x = 0, y = 0, z = 0, width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1) {\n  const data = CreateVertexSet();\n  PlaneGeometry(data, x, y, z, 2, 1, 0, -1, -1, depth, height, width, depthSegments, heightSegments);\n  PlaneGeometry(data, x, y, z, 2, 1, 0, 1, -1, depth, height, -width, depthSegments, heightSegments);\n  PlaneGeometry(data, x, y, z, 0, 2, 1, 1, 1, width, depth, height, widthSegments, depthSegments);\n  PlaneGeometry(data, x, y, z, 0, 2, 1, 1, -1, width, depth, -height, widthSegments, depthSegments);\n  PlaneGeometry(data, x, y, z, 0, 1, 2, 1, -1, width, height, depth, widthSegments, heightSegments);\n  PlaneGeometry(data, x, y, z, 0, 1, 2, -1, -1, width, height, -depth, widthSegments, heightSegments);\n  return data;\n}\n\n// src/gameobjects3d/GameObject3D.ts\nvar GameObject3D = class {\n  constructor(x = 0, y = 0, z = 0) {\n    this.type = \"GameObject3D\";\n    this.name = \"\";\n    this.willUpdate = true;\n    this.willUpdateChildren = true;\n    this.willRender = true;\n    this.willRenderChildren = true;\n    this.willCacheChildren = false;\n    this.dirty = 0;\n    this.dirtyFrame = 0;\n    this.visible = true;\n    this.children = [];\n    this.events = new Map();\n    this.transform = new Transform3DComponent(this, x, y, z);\n    this.dirty = DIRTY_CONST.DEFAULT;\n  }\n  isRenderable() {\n    return this.visible && this.willRender;\n  }\n  isDirty(flag) {\n    return (this.dirty & flag) !== 0;\n  }\n  clearDirty(flag) {\n    if (this.isDirty(flag)) {\n      this.dirty ^= flag;\n    }\n    return this;\n  }\n  setDirty(flag, flag2) {\n    if (!this.isDirty(flag)) {\n      this.dirty ^= flag;\n      this.dirtyFrame = GameInstance.getFrame();\n    }\n    if (!this.isDirty(flag2)) {\n      this.dirty ^= flag2;\n    }\n    return this;\n  }\n  update(delta, time) {\n    if (this.willUpdateChildren) {\n      const children = this.children;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child && child.willUpdate) {\n          child.update(delta, time);\n        }\n      }\n    }\n    this.postUpdate(delta, time);\n  }\n  postUpdate(delta, time) {\n  }\n  renderGL(renderPass) {\n  }\n  postRenderGL(renderPass) {\n  }\n  get numChildren() {\n    return this.children.length;\n  }\n  destroy(reparentChildren) {\n    if (reparentChildren) {\n    } else {\n    }\n    Emit(this, DestroyEvent, this);\n    this.transform.destroy();\n    this.events.clear();\n    this.world = null;\n    this.parent = null;\n    this.children = null;\n  }\n};\n\n// src/gameobjects3d/material/Material.ts\nvar Material = class {\n  constructor(config = {}) {\n    this.isDirty = false;\n    const {\n      ambient = [1, 1, 1],\n      diffuse = [1, 1, 1],\n      specular = [1, 1, 1],\n      shine = 0.25\n    } = config;\n    const onChange = () => this.update();\n    this.ambient = new RGBCallback(onChange).fromArray(ambient);\n    this.diffuse = new RGBCallback(onChange).fromArray(diffuse);\n    this.specular = new RGBCallback(onChange).fromArray(specular);\n    this._shine = shine;\n  }\n  get shine() {\n    return this._shine;\n  }\n  set shine(value) {\n    this._shine = Clamp(value, 0, 1);\n    this.isDirty = true;\n  }\n  update() {\n    this.isDirty = true;\n  }\n  setUniforms(shader) {\n    shader.setUniform(\"uMaterialAmbient\", this.ambient.toArray());\n    shader.setUniform(\"uMaterialDiffuse\", this.diffuse.toArray());\n    shader.setUniform(\"uMaterialSpecular\", this.specular.toArray());\n    shader.setUniform(\"uMaterialShine\", this._shine * 256);\n  }\n  destroy() {\n    this.ambient.destroy();\n    this.diffuse.destroy();\n    this.specular.destroy();\n  }\n};\n\n// src/gameobjects3d/mesh/SetFrame.ts\nfunction SetFrame2(texture, key, ...children) {\n  const frame2 = texture.getFrame(key);\n  children.forEach((child) => {\n    if (!child || frame2 === child.frame) {\n      return;\n    }\n    child.frame = frame2;\n    child.hasTexture = true;\n  });\n  return children;\n}\n\n// src/gameobjects3d/mesh/SetTexture.ts\nfunction SetTexture3(key, frame2, ...children) {\n  if (!key) {\n    children.forEach((child) => {\n      child.texture = null;\n      child.frame = null;\n      child.hasTexture = false;\n    });\n  } else {\n    let texture;\n    if (key instanceof Texture) {\n      texture = key;\n    } else {\n      texture = TextureManagerInstance.get().get(key);\n    }\n    if (!texture) {\n      console.warn(`Invalid Texture key: ${key}`);\n    } else {\n      children.forEach((child) => {\n        child.texture = texture;\n      });\n      SetFrame2(texture, frame2, ...children);\n    }\n  }\n  return children;\n}\n\n// src/gameobjects3d/mesh/Mesh.ts\nvar Mesh = class extends GameObject3D {\n  constructor(x = 0, y = 0, z = 0, geometry, material = new Material()) {\n    super(x, y, z);\n    this.hasTexture = false;\n    this.cullFaces = true;\n    this.geometry = geometry;\n    this.material = material;\n    this.setTexture(\"__WHITE\");\n  }\n  setTexture(key, frame2) {\n    SetTexture3(key, frame2, this);\n    return this;\n  }\n  setFrame(key) {\n    SetFrame2(this.texture, key, this);\n    return this;\n  }\n  setMaterial(material) {\n    this.material = material;\n    return this;\n  }\n  renderGL(renderPass) {\n    const shader = renderPass.currentShader.shader;\n    shader.setUniform(\"uModelMatrix\", this.transform.local.data);\n    shader.setUniform(\"uNormalMatrix\", this.transform.normal.data);\n    if (this.hasTexture) {\n      const textureIndex = SetTexture(renderPass, this.texture);\n      shader.setUniform(\"uTexture\", textureIndex);\n    }\n    this.material.setUniforms(shader);\n    FlushBuffer(renderPass, this.geometry.buffer);\n  }\n  destroy(reparentChildren) {\n    super.destroy(reparentChildren);\n    this.geometry = null;\n    this.material = null;\n    this.texture = null;\n    this.frame = null;\n    this.hasTexture = false;\n  }\n};\n\n// src/gameobjects3d/box/Box.ts\nvar Box = class extends Mesh {\n  constructor(x = 0, y = 0, z = 0, width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1) {\n    const data = BoxGeometry(0, 0, 0, width, height, depth, widthSegments, heightSegments, depthSegments);\n    const geometry = new Geometry(data);\n    super(x, y, z, geometry);\n  }\n};\n\n// src/geom3d/CylinderGeometry.ts\nfunction GenerateCap(top, data, index, halfHeight, radiusTop, radiusBottom, radialSegments, thetaStart, thetaLength) {\n  const {\n    vertices,\n    normals,\n    uvs,\n    indices\n  } = data;\n  const uv = new Vec2();\n  const vertex = new Vec3();\n  const radius = top === true ? radiusTop : radiusBottom;\n  const sign = top === true ? 1 : -1;\n  const centerIndexStart = index;\n  for (let x = 1; x <= radialSegments; x++) {\n    vertices.push(0, halfHeight * sign, 0);\n    normals.push(0, sign, 0);\n    uvs.push(0.5, 0.5);\n    index++;\n  }\n  const centerIndexEnd = index;\n  for (let x = 0; x <= radialSegments; x++) {\n    const u = x / radialSegments;\n    const theta = u * thetaLength + thetaStart;\n    const cosTheta = Math.cos(theta);\n    const sinTheta = Math.sin(theta);\n    vertex.x = radius * sinTheta;\n    vertex.y = halfHeight * sign;\n    vertex.z = radius * cosTheta;\n    vertices.push(vertex.x, vertex.y, vertex.z);\n    normals.push(0, sign, 0);\n    uv.x = cosTheta * 0.5 + 0.5;\n    uv.y = sinTheta * 0.5 * sign + 0.5;\n    uvs.push(uv.x, uv.y);\n    index++;\n  }\n  for (let x = 0; x < radialSegments; x++) {\n    const c = centerIndexStart + x;\n    const i = centerIndexEnd + x;\n    if (top) {\n      indices.push(i, i + 1, c);\n    } else {\n      indices.push(i + 1, i, c);\n    }\n  }\n  return index;\n}\nfunction CylinderGeometry(radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n  const data = CreateVertexSet();\n  const {\n    vertices,\n    normals,\n    uvs,\n    indices\n  } = data;\n  let index = 0;\n  const indexArray = [];\n  const halfHeight = height / 2;\n  const normal = new Vec3();\n  const vertex = new Vec3();\n  const slope = (radiusBottom - radiusTop) / height;\n  for (let y = 0; y <= heightSegments; y++) {\n    const indexRow = [];\n    const v = y / heightSegments;\n    const radius = v * (radiusBottom - radiusTop) + radiusTop;\n    for (let x = 0; x <= radialSegments; x++) {\n      const u = x / radialSegments;\n      const theta = u * thetaLength + thetaStart;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      vertex.x = radius * sinTheta;\n      vertex.y = -v * height + halfHeight;\n      vertex.z = radius * cosTheta;\n      vertices.push(vertex.x, vertex.y, vertex.z);\n      normal.set(sinTheta, slope, cosTheta);\n      Vec3Normalize(normal, normal);\n      normals.push(normal.x, normal.y, normal.z);\n      uvs.push(u, 1 - v);\n      indexRow.push(index++);\n    }\n    indexArray.push(indexRow);\n  }\n  for (let x = 0; x < radialSegments; x++) {\n    for (let y = 0; y < heightSegments; y++) {\n      const a = indexArray[y][x];\n      const b = indexArray[y + 1][x];\n      const c = indexArray[y + 1][x + 1];\n      const d = indexArray[y][x + 1];\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  }\n  if (!openEnded) {\n    if (radiusTop > 0) {\n      index = GenerateCap(true, data, index, halfHeight, radiusTop, radiusBottom, radialSegments, thetaStart, thetaLength);\n    }\n    if (radiusBottom > 0) {\n      GenerateCap(false, data, index, halfHeight, radiusTop, radiusBottom, radialSegments, thetaStart, thetaLength);\n    }\n  }\n  data.numberOfVertices = vertices.length;\n  return data;\n}\n\n// src/geom3d/ConeGeometry.ts\nfunction ConeGeometry(radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n  return CylinderGeometry(0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n}\n\n// src/gameobjects3d/cone/Cone.ts\nvar Cone = class extends Mesh {\n  constructor(x = 0, y = 0, z = 0, radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n    const data = ConeGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    const geometry = new Geometry(data);\n    super(x, y, z, geometry);\n  }\n};\n\n// src/gameobjects3d/light/Light.ts\nvar Light = class {\n  constructor(config = {}) {\n    this.isDirty = false;\n    const {\n      x = 0,\n      y = 0,\n      z = 0.1,\n      ambient = [1, 1, 1],\n      diffuse = [1, 1, 1],\n      specular = [1, 1, 1]\n    } = config;\n    const onChange = () => this.update();\n    this.position = new Vec3Callback(onChange, x, y, z);\n    this.ambient = new RGBCallback(onChange).fromArray(ambient);\n    this.diffuse = new RGBCallback(onChange).fromArray(diffuse);\n    this.specular = new RGBCallback(onChange).fromArray(specular);\n  }\n  setUniforms(shader) {\n    shader.setUniform(\"uLightPosition\", this.position.toArray());\n    shader.setUniform(\"uLightAmbient\", this.ambient.toArray());\n    shader.setUniform(\"uLightDiffuse\", this.diffuse.toArray());\n    shader.setUniform(\"uLightSpecular\", this.specular.toArray());\n  }\n  update() {\n    this.isDirty = true;\n  }\n  destroy() {\n    this.position.destroy();\n    this.ambient.destroy();\n    this.diffuse.destroy();\n    this.specular.destroy();\n  }\n};\n\n// src/gameobjects3d/plane/Plane.ts\nvar Plane = class extends Mesh {\n  constructor(x = 0, y = 0, z = 0, width = 1, height = 1, widthSegments = 1, heightSegments = 1) {\n    const data = PlaneGeometry(null, 0, 0, 0, 0, 1, 2, 1, -1, width, height, 1, widthSegments, heightSegments);\n    const geometry = new Geometry(data);\n    super(x, y, z, geometry);\n  }\n};\n\n// src/gameobjects3d/renderlayer3d/RenderLayer3D.ts\nvar RenderLayer3D = class extends Layer {\n  constructor() {\n    super();\n    this.type = \"RenderLayer\";\n    this.willRender = true;\n    this.willRenderChildren = true;\n    this.willCacheChildren = true;\n    this.setDirty(DIRTY_CONST.CHILD_CACHE);\n    const width = GetWidth();\n    const height = GetHeight();\n    const resolution = GetResolution();\n    const texture = new Texture(null, width * resolution, height * resolution);\n    const binding = new GLTextureBinding(texture);\n    texture.binding = binding;\n    binding.framebuffer = CreateFramebuffer(binding.texture);\n    binding.depthbuffer = CreateDepthBuffer(binding.framebuffer, texture.width, texture.height);\n    this.texture = texture;\n    this.framebuffer = binding.framebuffer;\n  }\n  renderGL(renderPass) {\n    if (this.numChildren > 0) {\n      Flush(renderPass);\n      if (!this.willCacheChildren || this.isDirty(DIRTY_CONST.CHILD_CACHE)) {\n        SetFramebuffer(renderPass, this.framebuffer, true);\n        this.clearDirty(DIRTY_CONST.CHILD_CACHE);\n      } else {\n        SetFramebuffer(renderPass, this.framebuffer, false);\n        this.postRenderGL(renderPass);\n      }\n    }\n  }\n  postRenderGL(renderPass) {\n    Flush(renderPass);\n    PopFramebuffer(renderPass);\n    DrawTexturedQuad2(renderPass, this.texture);\n    this.clearDirty(DIRTY_CONST.TRANSFORM);\n  }\n};\n\n// src/geom3d/SphereGeometry.ts\nfunction SphereGeometry(radius = 1, widthSegments = 3, heightSegments = 3, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI) {\n  widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\n  heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\n  const thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n  const data = CreateVertexSet();\n  const {\n    vertices,\n    normals,\n    uvs,\n    indices\n  } = data;\n  let index = 0;\n  const grid = [];\n  const vertex = new Vec3();\n  const normal = new Vec3();\n  for (let iy = 0; iy <= heightSegments; iy++) {\n    const verticesRow = [];\n    const v = iy / heightSegments;\n    let uOffset = 0;\n    if (iy === 0 && thetaStart === 0) {\n      uOffset = 0.5 / widthSegments;\n    } else if (iy === heightSegments && thetaEnd == Math.PI) {\n      uOffset = -0.5 / widthSegments;\n    }\n    for (let ix = 0; ix <= widthSegments; ix++) {\n      const u = ix / widthSegments;\n      vertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n      vertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      vertices.push(vertex.x, vertex.y, vertex.z);\n      Vec3Normalize(vertex, normal);\n      normals.push(normal.x, normal.y, normal.z);\n      uvs.push(u + uOffset, 1 - v);\n      verticesRow.push(index++);\n    }\n    grid.push(verticesRow);\n  }\n  for (let iy = 0; iy < heightSegments; iy++) {\n    for (let ix = 0; ix < widthSegments; ix++) {\n      const a = grid[iy][ix + 1];\n      const b = grid[iy][ix];\n      const c = grid[iy + 1][ix];\n      const d = grid[iy + 1][ix + 1];\n      if (iy !== 0 || thetaStart > 0) {\n        indices.push(a, b, d);\n      }\n      if (iy !== heightSegments - 1 || thetaEnd < Math.PI) {\n        indices.push(b, c, d);\n      }\n    }\n  }\n  data.numberOfVertices = vertices.length;\n  return data;\n}\n\n// src/gameobjects3d/sphere/Sphere.ts\nvar Sphere = class extends Mesh {\n  constructor(x = 0, y = 0, z = 0, radius = 1, widthSegments = 3, heightSegments = 3, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI) {\n    const data = SphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength);\n    const geometry = new Geometry(data);\n    super(x, y, z, geometry);\n  }\n};\n\n// src/geom/index.ts\nvar geom_exports = {};\n__export(geom_exports, {\n  Circle: () => circle_exports,\n  Ellipse: () => ellipse_exports,\n  Intersects: () => intersects_exports,\n  Line: () => line_exports,\n  Rectangle: () => rectangle_exports,\n  Triangle: () => triangle_exports\n});\n\n// src/geom/circle/index.ts\nvar circle_exports = {};\n__export(circle_exports, {\n  Circle: () => Circle,\n  CircleContains: () => CircleContains,\n  CircleContainsPoint: () => CircleContainsPoint,\n  CircleContainsRect: () => CircleContainsRect,\n  CircleEquals: () => CircleEquals,\n  CloneCircle: () => CloneCircle,\n  CopyCircleFrom: () => CopyCircleFrom,\n  GetCircleArea: () => GetCircleArea,\n  GetCircleBounds: () => GetCircleBounds,\n  GetCircleCircumference: () => GetCircleCircumference,\n  GetCircleCircumferencePoint: () => GetCircleCircumferencePoint,\n  GetCirclePoint: () => GetCirclePoint,\n  GetCirclePoints: () => GetCirclePoints,\n  GetCircleRandomPoint: () => GetCircleRandomPoint,\n  TranslateCircle: () => TranslateCircle,\n  TranslateCirclePoint: () => TranslateCirclePoint\n});\n\n// src/geom/circle/CircleContains.ts\nfunction CircleContains(circle, x, y) {\n  if (circle.radius > 0 && x >= circle.left && x <= circle.right && y >= circle.top && y <= circle.bottom) {\n    const dx = (circle.x - x) * (circle.x - x);\n    const dy = (circle.y - y) * (circle.y - y);\n    return dx + dy <= circle.radius * circle.radius;\n  } else {\n    return false;\n  }\n}\n\n// src/geom/circle/Circle.ts\nvar Circle = class {\n  constructor(x = 0, y = 0, radius = 0) {\n    this.set(x, y, radius);\n  }\n  set(x = 0, y = 0, radius = 0) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    return this;\n  }\n  contains(x, y) {\n    return CircleContains(this, x, y);\n  }\n  get radius() {\n    return this._radius;\n  }\n  set radius(value) {\n    this._radius = value;\n    this._diameter = value * 2;\n  }\n  get diameter() {\n    return this._diameter;\n  }\n  set diameter(value) {\n    this._diameter = value;\n    this._radius = value * 0.5;\n  }\n  get left() {\n    return this.x - this._radius;\n  }\n  set left(value) {\n    this.x = value + this._radius;\n  }\n  get right() {\n    return this.x + this._radius;\n  }\n  set right(value) {\n    this.x = value - this._radius;\n  }\n  get top() {\n    return this.y - this._radius;\n  }\n  set top(value) {\n    this.y = value + this._radius;\n  }\n  get bottom() {\n    return this.y + this._radius;\n  }\n  set bottom(value) {\n    this.y = value - this._radius;\n  }\n};\n\n// src/geom/circle/CircleContainsPoint.ts\nfunction CircleContainsPoint(circle, point) {\n  return CircleContains(circle, point.x, point.y);\n}\n\n// src/geom/circle/CircleContainsRect.ts\nfunction CircleContainsRect(circle, rect) {\n  return CircleContains(circle, rect.x, rect.y) && CircleContains(circle, rect.right, rect.y) && CircleContains(circle, rect.x, rect.bottom) && CircleContains(circle, rect.right, rect.bottom);\n}\n\n// src/geom/circle/CircleEquals.ts\nfunction CircleEquals(circle, toCompare) {\n  return circle.x === toCompare.x && circle.y === toCompare.y && circle.radius === toCompare.radius;\n}\n\n// src/geom/circle/CloneCircle.ts\nfunction CloneCircle(source) {\n  return new Circle(source.x, source.y, source.radius);\n}\n\n// src/geom/circle/CopyCircleFrom.ts\nfunction CopyCircleFrom(source, dest) {\n  return dest.set(source.x, source.y, source.radius);\n}\n\n// src/geom/circle/GetCircleArea.ts\nfunction GetCircleArea(circle) {\n  return circle.radius > 0 ? Math.PI * circle.radius * circle.radius : 0;\n}\n\n// src/geom/circle/GetCircleBounds.ts\nfunction GetCircleBounds(circle, out = new Rectangle()) {\n  return out.set(circle.left, circle.top, circle.diameter, circle.diameter);\n}\n\n// src/geom/circle/GetCircleCircumference.ts\nfunction GetCircleCircumference(circle) {\n  return 2 * (Math.PI * circle.radius);\n}\n\n// src/geom/circle/GetCircleCircumferencePoint.ts\nfunction GetCircleCircumferencePoint(circle, angle, out = new Vec2()) {\n  return out.set(circle.x + circle.radius * Math.cos(angle), circle.y + circle.radius * Math.sin(angle));\n}\n\n// src/geom/circle/GetCirclePoint.ts\nfunction GetCirclePoint(circle, position, out = new Vec2()) {\n  const angle = FromPercent(position, 0, MATH_CONST.PI2);\n  return GetCircleCircumferencePoint(circle, angle, out);\n}\n\n// src/geom/circle/GetCirclePoints.ts\nfunction GetCirclePoints(circle, step, quantity = 0, out = []) {\n  if (!quantity) {\n    quantity = GetCircleCircumference(circle) / step;\n  }\n  for (let i = 0; i < quantity; i++) {\n    const angle = FromPercent(i / quantity, 0, MATH_CONST.PI2);\n    out.push(GetCircleCircumferencePoint(circle, angle));\n  }\n  return out;\n}\n\n// src/geom/circle/GetCircleRandomPoint.ts\nfunction GetCircleRandomPoint(circle, out = new Vec2()) {\n  const t = 2 * Math.PI * Math.random();\n  const u = Math.random() + Math.random();\n  const r = u > 1 ? 2 - u : u;\n  const x = r * Math.cos(t);\n  const y = r * Math.sin(t);\n  return out.set(circle.x + x * circle.radius, circle.y + y * circle.radius);\n}\n\n// src/geom/circle/TranslateCircle.ts\nfunction TranslateCircle(circle, x, y) {\n  circle.x += x;\n  circle.y += y;\n  return circle;\n}\n\n// src/geom/circle/TranslateCirclePoint.ts\nfunction TranslateCirclePoint(circle, point) {\n  circle.x += point.x;\n  circle.y += point.y;\n  return circle;\n}\n\n// src/geom/ellipse/index.ts\nvar ellipse_exports = {};\n__export(ellipse_exports, {\n  CloneEllipse: () => CloneEllipse,\n  CopyEllipseFrom: () => CopyEllipseFrom,\n  Ellipse: () => Ellipse,\n  EllipseContains: () => EllipseContains,\n  EllipseContainsPoint: () => EllipseContainsPoint,\n  EllipseContainsRect: () => EllipseContainsRect,\n  EllipseEquals: () => EllipseEquals,\n  GetEllipseArea: () => GetEllipseArea,\n  GetEllipseBounds: () => GetEllipseBounds,\n  GetEllipseCircumference: () => GetEllipseCircumference,\n  GetEllipseCircumferencePoint: () => GetEllipseCircumferencePoint,\n  GetEllipsePoint: () => GetEllipsePoint,\n  GetEllipsePoints: () => GetEllipsePoints,\n  GetEllipseRandomPoint: () => GetEllipseRandomPoint,\n  TranslateEllipse: () => TranslateEllipse,\n  TranslateEllipsePoint: () => TranslateEllipsePoint\n});\n\n// src/geom/ellipse/EllipseContains.ts\nfunction EllipseContains(ellipse, x, y) {\n  if (ellipse.width <= 0 || ellipse.height <= 0) {\n    return false;\n  }\n  let normx = (x - ellipse.x) / ellipse.width;\n  let normy = (y - ellipse.y) / ellipse.height;\n  normx *= normx;\n  normy *= normy;\n  return normx + normy < 0.25;\n}\n\n// src/geom/ellipse/Ellipse.ts\nvar Ellipse = class {\n  constructor(x = 0, y = 0, width = 0, height = 0) {\n    this.set(x, y, width, height);\n  }\n  set(x = 0, y = 0, width = 0, height = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    return this;\n  }\n  contains(x, y) {\n    return EllipseContains(this, x, y);\n  }\n  getMinorRadius() {\n    return Math.min(this.width, this.height) / 2;\n  }\n  getMajorRadius() {\n    return Math.max(this.width, this.height) / 2;\n  }\n  get left() {\n    return this.x - this.width / 2;\n  }\n  set left(value) {\n    this.x = value + this.width / 2;\n  }\n  get right() {\n    return this.x + this.width / 2;\n  }\n  set right(value) {\n    this.x = value - this.width / 2;\n  }\n  get top() {\n    return this.y - this.height / 2;\n  }\n  set top(value) {\n    this.y = value + this.height / 2;\n  }\n  get bottom() {\n    return this.y + this.height / 2;\n  }\n  set bottom(value) {\n    this.y = value - this.height / 2;\n  }\n};\n\n// src/geom/ellipse/CloneEllipse.ts\nfunction CloneEllipse(source) {\n  return new Ellipse(source.x, source.y, source.width, source.height);\n}\n\n// src/geom/ellipse/CopyEllipseFrom.ts\nfunction CopyEllipseFrom(source, dest) {\n  return dest.set(source.x, source.y, source.width, source.height);\n}\n\n// src/geom/ellipse/EllipseContainsPoint.ts\nfunction EllipseContainsPoint(ellipse, point) {\n  return EllipseContains(ellipse, point.x, point.y);\n}\n\n// src/geom/ellipse/EllipseContainsRect.ts\nfunction EllipseContainsRect(ellipse, rect) {\n  return EllipseContains(ellipse, rect.x, rect.y) && EllipseContains(ellipse, rect.right, rect.y) && EllipseContains(ellipse, rect.x, rect.bottom) && EllipseContains(ellipse, rect.right, rect.bottom);\n}\n\n// src/geom/ellipse/EllipseEquals.ts\nfunction EllipseEquals(ellipse, toCompare) {\n  return ellipse.x === toCompare.x && ellipse.y === toCompare.y && ellipse.width === toCompare.width && ellipse.height === toCompare.height;\n}\n\n// src/geom/ellipse/GetEllipseArea.ts\nfunction GetEllipseArea(ellipse) {\n  if (ellipse.width <= 0 || ellipse.height <= 0) {\n    return 0;\n  }\n  return ellipse.getMajorRadius() * ellipse.getMinorRadius() * Math.PI;\n}\n\n// src/geom/ellipse/GetEllipseBounds.ts\nfunction GetEllipseBounds(ellipse, out = new Rectangle()) {\n  return out.set(ellipse.left, ellipse.top, ellipse.width, ellipse.height);\n}\n\n// src/geom/ellipse/GetEllipseCircumference.ts\nfunction GetEllipseCircumference(ellipse) {\n  const rx = ellipse.width / 2;\n  const ry = ellipse.height / 2;\n  const h = Math.pow(rx - ry, 2) / Math.pow(rx + ry, 2);\n  return Math.PI * (rx + ry) * (1 + 3 * h / (10 + Math.sqrt(4 - 3 * h)));\n}\n\n// src/geom/ellipse/GetEllipseCircumferencePoint.ts\nfunction GetEllipseCircumferencePoint(ellipse, angle, out = new Vec2()) {\n  const halfWidth = ellipse.width / 2;\n  const halfHeight = ellipse.height / 2;\n  return out.set(ellipse.x + halfWidth * Math.cos(angle), ellipse.y + halfHeight * Math.sin(angle));\n}\n\n// src/geom/ellipse/GetEllipsePoint.ts\nfunction GetEllipsePoint(ellipse, position, out = new Vec2()) {\n  const angle = FromPercent(position, 0, MATH_CONST.PI2);\n  return GetEllipseCircumferencePoint(ellipse, angle, out);\n}\n\n// src/geom/ellipse/GetEllipsePoints.ts\nfunction GetEllipsePoints(ellipse, step, quantity = 0, out = []) {\n  if (!quantity) {\n    quantity = GetEllipseCircumference(ellipse) / step;\n  }\n  for (let i = 0; i < quantity; i++) {\n    const angle = FromPercent(i / quantity, 0, MATH_CONST.PI2);\n    out.push(GetEllipseCircumferencePoint(ellipse, angle));\n  }\n  return out;\n}\n\n// src/geom/ellipse/GetEllipseRandomPoint.ts\nfunction GetEllipseRandomPoint(ellipse, out = new Vec2()) {\n  const p = Math.random() * Math.PI * 2;\n  const s = Math.sqrt(Math.random());\n  out.x = ellipse.x + s * Math.cos(p) * ellipse.width / 2;\n  out.y = ellipse.y + s * Math.sin(p) * ellipse.height / 2;\n  return out;\n}\n\n// src/geom/ellipse/TranslateEllipse.ts\nfunction TranslateEllipse(ellipse, x, y) {\n  ellipse.x += x;\n  ellipse.y += y;\n  return ellipse;\n}\n\n// src/geom/ellipse/TranslateEllipsePoint.ts\nfunction TranslateEllipsePoint(ellipse, point) {\n  ellipse.x += point.x;\n  ellipse.y += point.y;\n  return ellipse;\n}\n\n// src/geom/intersects/index.ts\nvar intersects_exports = {};\n__export(intersects_exports, {\n  CircleToCircle: () => CircleToCircle,\n  CircleToRectangle: () => CircleToRectangle,\n  GetCircleToCircle: () => GetCircleToCircle,\n  GetCircleToRectangle: () => GetCircleToRectangle,\n  GetLineToCircle: () => GetLineToCircle,\n  GetLineToRectangle: () => GetLineToRectangle,\n  GetRectangleIntersection: () => GetRectangleIntersection2,\n  GetRectangleToRectangle: () => GetRectangleToRectangle,\n  GetRectangleToTriangle: () => GetRectangleToTriangle,\n  GetTriangleToCircle: () => GetTriangleToCircle,\n  GetTriangleToLine: () => GetTriangleToLine,\n  GetTriangleToTriangle: () => GetTriangleToTriangle,\n  LineToCircle: () => LineToCircle,\n  LineToLine: () => LineToLine,\n  LineToRectangle: () => LineToRectangle,\n  PointToLine: () => PointToLine,\n  PointToLineSegment: () => PointToLineSegment,\n  RectangleToRectangle: () => RectangleToRectangle,\n  RectangleToTriangle: () => RectangleToTriangle,\n  TriangleToCircle: () => TriangleToCircle,\n  TriangleToLine: () => TriangleToLine,\n  TriangleToTriangle: () => TriangleToTriangle\n});\n\n// src/geom/intersects/CircleToCircle.ts\nfunction CircleToCircle(circleA, circleB) {\n  return GetVec2Distance(circleA, circleB) <= circleA.radius + circleB.radius;\n}\n\n// src/geom/intersects/CircleToRectangle.ts\nfunction CircleToRectangle(circle, rect) {\n  const halfWidth = rect.width / 2;\n  const halfHeight = rect.height / 2;\n  const cx = Math.abs(circle.x - rect.x - halfWidth);\n  const cy = Math.abs(circle.y - rect.y - halfHeight);\n  const xDist = halfWidth + circle.radius;\n  const yDist = halfHeight + circle.radius;\n  if (cx > xDist || cy > yDist) {\n    return false;\n  } else if (cx <= halfWidth || cy <= halfHeight) {\n    return true;\n  } else {\n    const xCornerDist = cx - halfWidth;\n    const yCornerDist = cy - halfHeight;\n    const xCornerDistSq = xCornerDist * xCornerDist;\n    const yCornerDistSq = yCornerDist * yCornerDist;\n    const maxCornerDistSq = circle.radius * circle.radius;\n    return xCornerDistSq + yCornerDistSq <= maxCornerDistSq;\n  }\n}\n\n// src/geom/intersects/GetCircleToCircle.ts\nfunction GetCircleToCircle(circleA, circleB, out = []) {\n  if (CircleToCircle(circleA, circleB)) {\n    const x0 = circleA.x;\n    const y0 = circleA.y;\n    const r0 = circleA.radius;\n    const x1 = circleB.x;\n    const y1 = circleB.y;\n    const r1 = circleB.radius;\n    let coefficientA;\n    let coefficientB;\n    let coefficientC;\n    let lambda;\n    let x;\n    if (y0 === y1) {\n      x = (r1 * r1 - r0 * r0 - x1 * x1 + x0 * x0) / (2 * (x0 - x1));\n      coefficientA = 1;\n      coefficientB = -2 * y1;\n      coefficientC = x1 * x1 + x * x - 2 * x1 * x + y1 * y1 - r1 * r1;\n      lambda = coefficientB * coefficientB - 4 * coefficientA * coefficientC;\n      if (lambda === 0) {\n        out.push(new Vec2(x, -coefficientB / (2 * coefficientA)));\n      } else if (lambda > 0) {\n        out.push(new Vec2(x, (-coefficientB + Math.sqrt(lambda)) / (2 * coefficientA)));\n        out.push(new Vec2(x, (-coefficientB - Math.sqrt(lambda)) / (2 * coefficientA)));\n      }\n    } else {\n      const v1 = (x0 - x1) / (y0 - y1);\n      const n = (r1 * r1 - r0 * r0 - x1 * x1 + x0 * x0 - y1 * y1 + y0 * y0) / (2 * (y0 - y1));\n      coefficientA = v1 * v1 + 1;\n      coefficientB = 2 * y0 * v1 - 2 * n * v1 - 2 * x0;\n      coefficientC = x0 * x0 + y0 * y0 + n * n - r0 * r0 - 2 * y0 * n;\n      lambda = coefficientB * coefficientB - 4 * coefficientA * coefficientC;\n      if (lambda === 0) {\n        x = -coefficientB / (2 * coefficientA);\n        out.push(new Vec2(x, n - x * v1));\n      } else if (lambda > 0) {\n        x = (-coefficientB + Math.sqrt(lambda)) / (2 * coefficientA);\n        out.push(new Vec2(x, n - x * v1));\n        x = (-coefficientB - Math.sqrt(lambda)) / (2 * coefficientA);\n        out.push(new Vec2(x, n - x * v1));\n      }\n    }\n  }\n  return out;\n}\n\n// src/geom/intersects/LineToCircle.ts\nvar tmp = new Vec2();\nfunction LineToCircle(line, circle, nearest) {\n  if (!nearest) {\n    nearest = tmp;\n  }\n  const {x1, y1, x2, y2} = line;\n  if (CircleContains(circle, x1, y1)) {\n    nearest.set(x1, y1);\n    return true;\n  }\n  if (CircleContains(circle, x2, y2)) {\n    nearest.set(x2, y2);\n    return true;\n  }\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const lcx = circle.x - x1;\n  const lcy = circle.y - y1;\n  const dLen2 = dx * dx + dy * dy;\n  let px = dx;\n  let py = dy;\n  if (dLen2 > 0) {\n    const dp = (lcx * dx + lcy * dy) / dLen2;\n    px *= dp;\n    py *= dp;\n  }\n  nearest.set(x1 + px, y1 + py);\n  const pLen2 = px * px + py * py;\n  return pLen2 <= dLen2 && px * dx + py * dy >= 0 && CircleContains(circle, nearest.x, nearest.y);\n}\n\n// src/geom/intersects/GetLineToCircle.ts\nfunction GetLineToCircle(line, circle, out = []) {\n  if (LineToCircle(line, circle)) {\n    const {x1, y1, x2, y2} = line;\n    const cr = circle.radius;\n    const lDirX = x2 - x1;\n    const lDirY = y2 - y1;\n    const oDirX = x1 - circle.x;\n    const oDirY = y1 - circle.y;\n    const coefficientA = lDirX * lDirX + lDirY * lDirY;\n    const coefficientB = 2 * (lDirX * oDirX + lDirY * oDirY);\n    const coefficientC = oDirX * oDirX + oDirY * oDirY - cr * cr;\n    const lambda = coefficientB * coefficientB - 4 * coefficientA * coefficientC;\n    let x;\n    let y;\n    if (lambda === 0) {\n      const root = -coefficientB / (2 * coefficientA);\n      x = x1 + root * lDirX;\n      y = y1 + root * lDirY;\n      if (root >= 0 && root <= 1) {\n        out.push(new Vec2(x, y));\n      }\n    } else if (lambda > 0) {\n      const root1 = (-coefficientB - Math.sqrt(lambda)) / (2 * coefficientA);\n      x = x1 + root1 * lDirX;\n      y = y1 + root1 * lDirY;\n      if (root1 >= 0 && root1 <= 1) {\n        out.push(new Vec2(x, y));\n      }\n      const root2 = (-coefficientB + Math.sqrt(lambda)) / (2 * coefficientA);\n      x = x1 + root2 * lDirX;\n      y = y1 + root2 * lDirY;\n      if (root2 >= 0 && root2 <= 1) {\n        out.push(new Vec2(x, y));\n      }\n    }\n  }\n  return out;\n}\n\n// src/geom/intersects/GetCircleToRectangle.ts\nfunction GetCircleToRectangle(circle, rect, out = []) {\n  if (CircleToRectangle(circle, rect)) {\n    const [line1, line2, line3, line4] = GetRectangleEdges(rect);\n    GetLineToCircle(line1, circle, out);\n    GetLineToCircle(line2, circle, out);\n    GetLineToCircle(line3, circle, out);\n    GetLineToCircle(line4, circle, out);\n  }\n  return out;\n}\n\n// src/geom/intersects/LineToLine.ts\nfunction LineToLine(line1, line2, out) {\n  const {x1, y1, x2, y2} = line1;\n  const {x1: x3, y1: y3, x2: x4, y2: y4} = line2;\n  const numA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n  const numB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n  const deNom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n  if (deNom === 0) {\n    return false;\n  }\n  const uA = numA / deNom;\n  const uB = numB / deNom;\n  if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n    if (out) {\n      out.set(x1 + uA * (x2 - x1), y1 + uA * (y2 - y1));\n    }\n    return true;\n  }\n  return false;\n}\n\n// src/geom/intersects/LineToRectangle.ts\nfunction LineToRectangle(line, rect) {\n  const {x1, y1, x2, y2} = line;\n  const {x, y, right, bottom} = rect;\n  let t = 0;\n  if (x1 >= x && x1 <= right && y1 >= y && y1 <= bottom || x2 >= x && x2 <= right && y2 >= y && y2 <= bottom) {\n    return true;\n  }\n  if (x1 < x && x2 >= x) {\n    t = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n    if (t > y && t <= bottom) {\n      return true;\n    }\n  } else if (x1 > right && x2 <= right) {\n    t = y1 + (y2 - y1) * (right - x1) / (x2 - x1);\n    if (t >= y && t <= bottom) {\n      return true;\n    }\n  }\n  if (y1 < y && y2 >= y) {\n    t = x1 + (x2 - x1) * (y - y1) / (y2 - y1);\n    if (t >= x && t <= right) {\n      return true;\n    }\n  } else if (y1 > bottom && y2 <= bottom) {\n    t = x1 + (x2 - x1) * (bottom - y1) / (y2 - y1);\n    if (t >= x && t <= right) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// src/geom/intersects/GetLineToRectangle.ts\nfunction GetLineToRectangle(line, rect, out = []) {\n  if (LineToRectangle(line, rect)) {\n    const [lineA, lineB, lineC, lineD] = GetRectangleEdges(rect);\n    const points = [new Vec2(), new Vec2(), new Vec2(), new Vec2()];\n    const results = [\n      LineToLine(lineA, line, points[0]),\n      LineToLine(lineB, line, points[1]),\n      LineToLine(lineC, line, points[2]),\n      LineToLine(lineD, line, points[3])\n    ];\n    for (let i = 0; i < results.length; i++) {\n      if (results[i]) {\n        out.push(points[i]);\n      }\n    }\n  }\n  return out;\n}\n\n// src/geom/intersects/GetRectangleIntersection.ts\nfunction GetRectangleIntersection2(rectA, rectB, out = new Rectangle()) {\n  if (RectangleToRectangle(rectA, rectB)) {\n    const x = Math.max(rectA.x, rectB.x);\n    const y = Math.max(rectA.y, rectB.y);\n    return out.set(x, y, Math.min(rectA.right, rectB.right) - x, Math.min(rectA.bottom, rectB.bottom) - y);\n  }\n}\n\n// src/geom/intersects/GetRectangleToRectangle.ts\nfunction GetRectangleToRectangle(rectA, rectB, out = []) {\n  if (RectangleToRectangle(rectA, rectB)) {\n    const [lineA, lineB, lineC, lineD] = GetRectangleEdges(rectA);\n    GetLineToRectangle(lineA, rectB, out);\n    GetLineToRectangle(lineB, rectB, out);\n    GetLineToRectangle(lineC, rectB, out);\n    GetLineToRectangle(lineD, rectB, out);\n  }\n  return out;\n}\n\n// src/geom/triangle/GetTriangleEdges.ts\nfunction GetTriangleEdges(triangle) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const edge1 = new Line(x1, y1, x2, y2);\n  const edge2 = new Line(x2, y2, x3, y3);\n  const edge3 = new Line(x3, y3, x1, y1);\n  return [edge1, edge2, edge3];\n}\n\n// src/geom/triangle/TriangleContains.ts\nfunction TriangleContains(triangle, x, y) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const v0x = x3 - x1;\n  const v0y = y3 - y1;\n  const v1x = x2 - x1;\n  const v1y = y2 - y1;\n  const v2x = x - x1;\n  const v2y = y - y1;\n  const dot00 = v0x * v0x + v0y * v0y;\n  const dot01 = v0x * v1x + v0y * v1y;\n  const dot02 = v0x * v2x + v0y * v2y;\n  const dot11 = v1x * v1x + v1y * v1y;\n  const dot12 = v1x * v2x + v1y * v2y;\n  const b = dot00 * dot11 - dot01 * dot01;\n  const inv = b === 0 ? 0 : 1 / b;\n  const u = (dot11 * dot02 - dot01 * dot12) * inv;\n  const v = (dot00 * dot12 - dot01 * dot02) * inv;\n  return u >= 0 && v >= 0 && u + v < 1;\n}\n\n// src/geom/triangle/TriangleContainsPoints.ts\nfunction TriangleContainsPoints(triangle, points, returnFirst = false, out = []) {\n  let skip = false;\n  points.forEach((point) => {\n    if (skip) {\n      return;\n    }\n    const {x, y} = point;\n    if (TriangleContains(triangle, x, y)) {\n      out.push(new Vec2(x, y));\n      if (returnFirst) {\n        skip = true;\n      }\n    }\n  });\n  return out;\n}\n\n// src/geom/intersects/RectangleToTriangle.ts\nfunction RectangleToTriangle(rect, triangle) {\n  if (triangle.left > rect.right || triangle.right < rect.x || triangle.top > rect.bottom || triangle.bottom < rect.y) {\n    return false;\n  }\n  const [triA, triB, triC] = GetTriangleEdges(triangle);\n  if (RectangleContains(rect, triA.x1, triA.y1) || RectangleContains(rect, triA.x2, triA.y2)) {\n    return true;\n  }\n  if (RectangleContains(rect, triB.x1, triB.y1) || RectangleContains(rect, triB.x2, triB.y2)) {\n    return true;\n  }\n  if (RectangleContains(rect, triC.x1, triC.y1) || RectangleContains(rect, triC.x2, triC.y2)) {\n    return true;\n  }\n  const [rectA, rectB, rectC, rectD] = GetRectangleEdges(rect);\n  if (LineToLine(triA, rectA) || LineToLine(triA, rectB) || LineToLine(triA, rectC) || LineToLine(triA, rectD)) {\n    return true;\n  }\n  if (LineToLine(triB, rectA) || LineToLine(triB, rectB) || LineToLine(triB, rectC) || LineToLine(triB, rectD)) {\n    return true;\n  }\n  if (LineToLine(triC, rectA) || LineToLine(triC, rectB) || LineToLine(triC, rectC) || LineToLine(triC, rectD)) {\n    return true;\n  }\n  const within = TriangleContainsPoints(triangle, DecomposeRectangle(rect), true);\n  return within.length > 0;\n}\n\n// src/geom/intersects/GetRectangleToTriangle.ts\nfunction GetRectangleToTriangle(rect, triangle, out = []) {\n  if (RectangleToTriangle(rect, triangle)) {\n    const [lineA, lineB, lineC] = GetTriangleEdges(triangle);\n    GetLineToRectangle(lineA, rect, out);\n    GetLineToRectangle(lineB, rect, out);\n    GetLineToRectangle(lineC, rect, out);\n  }\n  return out;\n}\n\n// src/geom/intersects/TriangleToCircle.ts\nfunction TriangleToCircle(triangle, circle) {\n  if (triangle.left > circle.right || triangle.right < circle.left || triangle.top > circle.bottom || triangle.bottom < circle.top) {\n    return false;\n  }\n  if (TriangleContains(triangle, circle.x, circle.y)) {\n    return true;\n  }\n  const [line1, line2, line3] = GetTriangleEdges(triangle);\n  return LineToCircle(line1, circle) || LineToCircle(line2, circle) || LineToCircle(line3, circle);\n}\n\n// src/geom/intersects/GetTriangleToCircle.ts\nfunction GetTriangleToCircle(triangle, circle, out = []) {\n  if (TriangleToCircle(triangle, circle)) {\n    const [lineA, lineB, lineC] = GetTriangleEdges(triangle);\n    GetLineToCircle(lineA, circle, out);\n    GetLineToCircle(lineB, circle, out);\n    GetLineToCircle(lineC, circle, out);\n  }\n  return out;\n}\n\n// src/geom/intersects/TriangleToLine.ts\nfunction TriangleToLine(triangle, line) {\n  const {x1, y1, x2, y2} = line;\n  if (TriangleContains(triangle, x1, y1) || TriangleContains(triangle, x2, y2)) {\n    return true;\n  }\n  const [line1, line2, line3] = GetTriangleEdges(triangle);\n  return LineToLine(line1, line) || LineToLine(line2, line) || LineToLine(line3, line);\n}\n\n// src/geom/intersects/GetTriangleToLine.ts\nfunction GetTriangleToLine(triangle, line, out = []) {\n  if (TriangleToLine(triangle, line)) {\n    const [lineA, lineB, lineC] = GetTriangleEdges(triangle);\n    const points = [new Vec2(), new Vec2(), new Vec2()];\n    const results = [\n      LineToLine(lineA, line, points[0]),\n      LineToLine(lineB, line, points[1]),\n      LineToLine(lineC, line, points[2])\n    ];\n    for (let i = 0; i < results.length; i++) {\n      if (results[i]) {\n        out.push(points[i]);\n      }\n    }\n  }\n  return out;\n}\n\n// src/geom/triangle/DecomposeTriangle.ts\nfunction DecomposeTriangle(triangle, out = []) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  out.push(new Vec2(x1, y1), new Vec2(x2, y2), new Vec2(x3, y3));\n  return out;\n}\n\n// src/geom/intersects/TriangleToTriangle.ts\nfunction TriangleToTriangle(triangleA, triangleB) {\n  if (triangleA.left > triangleB.right || triangleA.right < triangleB.left || triangleA.top > triangleB.bottom || triangleA.bottom < triangleB.top) {\n    return false;\n  }\n  const [lineAA, lineAB, lineAC] = GetTriangleEdges(triangleA);\n  const [lineBA, lineBB, lineBC] = GetTriangleEdges(triangleB);\n  if (LineToLine(lineAA, lineBA) || LineToLine(lineAA, lineBB) || LineToLine(lineAA, lineBC) || LineToLine(lineAB, lineBA) || LineToLine(lineAB, lineBB) || LineToLine(lineAB, lineBC) || LineToLine(lineAC, lineBA) || LineToLine(lineAC, lineBB) || LineToLine(lineAC, lineBC)) {\n    return true;\n  }\n  const withinA = TriangleContainsPoints(triangleB, DecomposeTriangle(triangleA), true);\n  if (withinA.length > 0) {\n    return true;\n  }\n  const withinB = TriangleContainsPoints(triangleA, DecomposeTriangle(triangleB), true);\n  return withinB.length > 0;\n}\n\n// src/geom/intersects/GetTriangleToTriangle.ts\nfunction GetTriangleToTriangle(triangleA, triangleB, out = []) {\n  if (TriangleToTriangle(triangleA, triangleB)) {\n    const [lineA, lineB, lineC] = GetTriangleEdges(triangleB);\n    GetTriangleToLine(triangleA, lineA, out);\n    GetTriangleToLine(triangleA, lineB, out);\n    GetTriangleToLine(triangleA, lineC, out);\n  }\n  return out;\n}\n\n// src/geom/intersects/PointToLine.ts\nfunction PointToLine(point, line, lineThickness = 1) {\n  const {x1, y1, x2, y2} = line;\n  const {x: px, y: py} = point;\n  const L2 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n  if (L2 === 0) {\n    return false;\n  }\n  const r = ((px - x1) * (x2 - x1) + (py - y1) * (y2 - y1)) / L2;\n  if (r < 0) {\n    return Math.sqrt((x1 - px) * (x1 - px) + (y1 - py) * (y1 - py)) <= lineThickness;\n  } else if (r >= 0 && r <= 1) {\n    const s = ((y1 - py) * (x2 - x1) - (x1 - px) * (y2 - y1)) / L2;\n    return Math.abs(s) * Math.sqrt(L2) <= lineThickness;\n  } else {\n    return Math.sqrt((x2 - px) * (x2 - px) + (y2 - py) * (y2 - py)) <= lineThickness;\n  }\n}\n\n// src/geom/intersects/PointToLineSegment.ts\nfunction PointToLineSegment(point, line) {\n  if (!PointToLine(point, line)) {\n    return false;\n  }\n  const {x1, y1, x2, y2} = line;\n  const {x, y} = point;\n  const xMin = Math.min(x1, x2);\n  const xMax = Math.max(x1, x2);\n  const yMin = Math.min(y1, y2);\n  const yMax = Math.max(y1, y2);\n  return x >= xMin && x <= xMax && (y >= yMin && y <= yMax);\n}\n\n// src/geom/line/index.ts\nvar line_exports = {};\n__export(line_exports, {\n  CenterLineOn: () => CenterLineOn,\n  CloneLine: () => CloneLine,\n  CopyLineFrom: () => CopyLineFrom,\n  ExtendLine: () => ExtendLine,\n  GetLineAngle: () => GetLineAngle,\n  GetLineBresenhamPoints: () => GetLineBresenhamPoints,\n  GetLineHeight: () => GetLineHeight,\n  GetLineLength: () => GetLineLength,\n  GetLineMidPoint: () => GetLineMidPoint,\n  GetLineNearestPoint: () => GetLineNearestPoint,\n  GetLineNormal: () => GetLineNormal,\n  GetLineNormalAngle: () => GetLineNormalAngle,\n  GetLineNormalX: () => GetLineNormalX,\n  GetLineNormalY: () => GetLineNormalY,\n  GetLinePerpSlope: () => GetLinePerpSlope,\n  GetLinePoint: () => GetLinePoint,\n  GetLinePoints: () => GetLinePoints,\n  GetLineRandomPoint: () => GetLineRandomPoint,\n  GetLineReflectAngle: () => GetLineReflectAngle,\n  GetLineSlope: () => GetLineSlope,\n  GetLineWidth: () => GetLineWidth,\n  GetShortestLineDistance: () => GetShortestLineDistance,\n  Line: () => Line,\n  LineEquals: () => LineEquals,\n  LineSetToAngle: () => LineSetToAngle,\n  RotateLine: () => RotateLine,\n  RotateLineAround: () => RotateLineAround,\n  RotateLineAroundPoint: () => RotateLineAroundPoint,\n  TranslateLine: () => TranslateLine,\n  TranslateLinePoint: () => TranslateLinePoint\n});\n\n// src/geom/line/CenterLineOn.ts\nfunction CenterLineOn(line, x, y) {\n  const tx = x - (line.x1 + line.x2) / 2;\n  const ty = y - (line.y1 + line.y2) / 2;\n  line.x1 += tx;\n  line.y1 += ty;\n  line.x2 += tx;\n  line.y2 += ty;\n  return line;\n}\n\n// src/geom/line/CloneLine.ts\nfunction CloneLine(source) {\n  return new Line(source.x1, source.y1, source.x2, source.y2);\n}\n\n// src/geom/line/CopyLineFrom.ts\nfunction CopyLineFrom(source, dest) {\n  return dest.set(source.x1, source.y1, source.x2, source.y2);\n}\n\n// src/geom/line/GetLineLength.ts\nfunction GetLineLength(line) {\n  const {x1, y1, x2, y2} = line;\n  return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n}\n\n// src/geom/line/ExtendLine.ts\nfunction ExtendLine(line, left, right = left) {\n  const length = GetLineLength(line);\n  const slopX = line.x2 - line.x1;\n  const slopY = line.y2 - line.y1;\n  if (left) {\n    line.x1 = line.x1 - slopX / length * left;\n    line.y1 = line.y1 - slopY / length * left;\n  }\n  if (right) {\n    line.x2 = line.x2 + slopX / length * right;\n    line.y2 = line.y2 + slopY / length * right;\n  }\n  return line;\n}\n\n// src/geom/line/GetLineAngle.ts\nfunction GetLineAngle(line) {\n  return Math.atan2(line.y2 - line.y1, line.x2 - line.x1);\n}\n\n// src/geom/line/GetLineBresenhamPoints.ts\nfunction GetLineBresenhamPoints(line, stepRate = 1, results = []) {\n  let x1 = Math.round(line.x1);\n  let y1 = Math.round(line.y1);\n  const x2 = Math.round(line.x2);\n  const y2 = Math.round(line.y2);\n  const dx = Math.abs(x2 - x1);\n  const dy = Math.abs(y2 - y1);\n  const sx = x1 < x2 ? 1 : -1;\n  const sy = y1 < y2 ? 1 : -1;\n  let err = dx - dy;\n  results.push(new Vec2(x1, y1));\n  let i = 1;\n  while (!(x1 === x2 && y1 === y2)) {\n    const e2 = err << 1;\n    if (e2 > -dy) {\n      err -= dy;\n      x1 += sx;\n    }\n    if (e2 < dx) {\n      err += dx;\n      y1 += sy;\n    }\n    if (i % stepRate === 0) {\n      results.push(new Vec2(x1, y1));\n    }\n    i++;\n  }\n  return results;\n}\n\n// src/geom/line/GetLineHeight.ts\nfunction GetLineHeight(line) {\n  return Math.abs(line.y1 - line.y2);\n}\n\n// src/geom/line/GetLineMidPoint.ts\nfunction GetLineMidPoint(line, out = new Vec2()) {\n  out.x = (line.x1 + line.x2) / 2;\n  out.y = (line.y1 + line.y2) / 2;\n  return out;\n}\n\n// src/geom/line/GetLineNearestPoint.ts\nfunction GetLineNearestPoint(line, point, out = new Vec2()) {\n  const {x1, y1, x2, y2} = line;\n  const L2 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n  if (L2 === 0) {\n    return out;\n  }\n  const r = ((point.x - x1) * (x2 - x1) + (point.y - y1) * (y2 - y1)) / L2;\n  out.x = x1 + r * (x2 - x1);\n  out.y = y1 + r * (y2 - y1);\n  return out;\n}\n\n// src/geom/line/GetLineNormal.ts\nfunction GetLineNormal(line, out = new Vec2()) {\n  const a = GetLineAngle(line) - MATH_CONST.HALF_PI;\n  out.x = Math.cos(a);\n  out.y = Math.sin(a);\n  return out;\n}\n\n// src/geom/line/GetLineNormalAngle.ts\nfunction GetLineNormalAngle(line) {\n  const angle = GetLineAngle(line) - MATH_CONST.HALF_PI;\n  return Wrap(angle, -Math.PI, Math.PI);\n}\n\n// src/geom/line/GetLineNormalX.ts\nfunction GetLineNormalX(line) {\n  return Math.cos(GetLineAngle(line) - MATH_CONST.HALF_PI);\n}\n\n// src/geom/line/GetLineNormalY.ts\nfunction GetLineNormalY(line) {\n  return Math.sin(GetLineAngle(line) - MATH_CONST.HALF_PI);\n}\n\n// src/geom/line/GetLinePerpSlope.ts\nfunction GetLinePerpSlope(line) {\n  const {x1, y1, x2, y2} = line;\n  return -((x2 - x1) / (y2 - y1));\n}\n\n// src/geom/line/GetLinePoint.ts\nfunction GetLinePoint(line, position, out = new Vec2()) {\n  out.x = line.x1 + (line.x2 - line.x1) * position;\n  out.y = line.y1 + (line.y2 - line.y1) * position;\n  return out;\n}\n\n// src/geom/line/GetLinePoints.ts\nfunction GetLinePoints(line, quantity, stepRate = 0, out = []) {\n  if (!quantity) {\n    quantity = GetLineLength(line) / stepRate;\n  }\n  const {x1, y1, x2, y2} = line;\n  for (let i = 0; i < quantity; i++) {\n    const position = i / quantity;\n    const x = x1 + (x2 - x1) * position;\n    const y = y1 + (y2 - y1) * position;\n    out.push(new Vec2(x, y));\n  }\n  return out;\n}\n\n// src/geom/line/GetLineRandomPoint.ts\nfunction GetLineRandomPoint(line, out = new Vec2()) {\n  const t = Math.random();\n  out.x = line.x1 + t * (line.x2 - line.x1);\n  out.y = line.y1 + t * (line.y2 - line.y1);\n  return out;\n}\n\n// src/geom/line/GetLineReflectAngle.ts\nfunction GetLineReflectAngle(lineA, lineB) {\n  return 2 * GetLineNormalAngle(lineB) - Math.PI - GetLineAngle(lineA);\n}\n\n// src/geom/line/GetLineSlope.ts\nfunction GetLineSlope(line) {\n  const {x1, y1, x2, y2} = line;\n  return (y2 - y1) / (x2 - x1);\n}\n\n// src/geom/line/GetLineWidth.ts\nfunction GetLineWidth(line) {\n  return Math.abs(line.x1 - line.x2);\n}\n\n// src/geom/line/GetShortestLineDistance.ts\nfunction GetShortestLineDistance(line, point) {\n  const {x1, y1, x2, y2} = line;\n  const L2 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n  if (L2 === 0) {\n    return 0;\n  }\n  const s = ((y1 - point.y) * (x2 - x1) - (x1 - point.x) * (y2 - y1)) / L2;\n  return Math.abs(s) * Math.sqrt(L2);\n}\n\n// src/geom/line/LineEquals.ts\nfunction LineEquals(line, toCompare) {\n  return line.x1 === toCompare.x1 && line.y1 === toCompare.y1 && line.x2 === toCompare.x2 && line.y2 === toCompare.y2;\n}\n\n// src/geom/line/SetLineToAngle.ts\nfunction LineSetToAngle(line, x, y, angle, length) {\n  line.x1 = x;\n  line.y1 = y;\n  line.x2 = x + Math.cos(angle) * length;\n  line.y2 = y + Math.sin(angle) * length;\n  return line;\n}\n\n// src/geom/line/RotateLineAround.ts\nfunction RotateLineAround(line, x, y, angle) {\n  const c = Math.cos(angle);\n  const s = Math.sin(angle);\n  let tx = line.x1 - x;\n  let ty = line.y1 - y;\n  line.x1 = tx * c - ty * s + x;\n  line.y1 = tx * s + ty * c + y;\n  tx = line.x2 - x;\n  ty = line.y2 - y;\n  line.x2 = tx * c - ty * s + x;\n  line.y2 = tx * s + ty * c + y;\n  return line;\n}\n\n// src/geom/line/RotateLine.ts\nfunction RotateLine(line, angle) {\n  const x = (line.x1 + line.x2) / 2;\n  const y = (line.y1 + line.y2) / 2;\n  return RotateLineAround(line, x, y, angle);\n}\n\n// src/geom/line/RotateLineAroundPoint.ts\nfunction RotateLineAroundPoint(line, point, angle) {\n  return RotateLineAround(line, point.x, point.y, angle);\n}\n\n// src/geom/line/TranslateLine.ts\nfunction TranslateLine(line, x, y) {\n  line.x1 += x;\n  line.y1 += y;\n  line.x2 += x;\n  line.y2 += y;\n  return line;\n}\n\n// src/geom/line/TranslateLinePoint.ts\nfunction TranslateLinePoint(line, v) {\n  return TranslateLine(line, v.x, v.y);\n}\n\n// src/geom/triangle/index.ts\nvar triangle_exports = {};\n__export(triangle_exports, {\n  BuildEquilateralTriangle: () => BuildEquilateralTriangle,\n  BuildRightTriangle: () => BuildRightTriangle,\n  CenterTriangleOn: () => CenterTriangleOn,\n  CloneTriangle: () => CloneTriangle,\n  CopyTriangleFrom: () => CopyTriangleFrom,\n  DecomposeTriangle: () => DecomposeTriangle,\n  GetTriangleArea: () => GetTriangleArea,\n  GetTriangleCentroid: () => GetTriangleCentroid,\n  GetTriangleCircumCenter: () => GetTriangleCircumCenter,\n  GetTriangleCircumCircle: () => GetTriangleCircumCircle,\n  GetTriangleEdges: () => GetTriangleEdges,\n  GetTriangleInCenter: () => GetTriangleInCenter,\n  GetTrianglePerimeter: () => GetTrianglePerimeter,\n  GetTrianglePoint: () => GetTrianglePoint,\n  GetTrianglePoints: () => GetTrianglePoints,\n  GetTriangleRandomPoint: () => GetTriangleRandomPoint,\n  RotateTriangle: () => RotateTriangle,\n  RotateTriangleAround: () => RotateTriangleAround,\n  RotateTriangleAroundPoint: () => RotateTriangleAroundPoint,\n  TranslateTriangle: () => TranslateTriangle,\n  Triangle: () => Triangle,\n  TriangleContains: () => TriangleContains,\n  TriangleContainsPoint: () => TriangleContainsPoint,\n  TriangleContainsPoints: () => TriangleContainsPoints,\n  TriangleEquals: () => TriangleEquals\n});\n\n// src/geom/triangle/Triangle.ts\nvar Triangle = class {\n  constructor(x1 = 0, y1 = 0, x2 = 0, y2 = 0, x3 = 0, y3 = 0) {\n    this.set(x1, y1, x2, y2, x3, y3);\n  }\n  set(x1 = 0, y1 = 0, x2 = 0, y2 = 0, x3 = 0, y3 = 0) {\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n    this.x3 = x3;\n    this.y3 = y3;\n    return this;\n  }\n  contains(x, y) {\n    return TriangleContains(this, x, y);\n  }\n  get left() {\n    return Math.min(this.x1, this.x2, this.x3);\n  }\n  set left(value) {\n    let diff = 0;\n    if (this.x1 <= this.x2 && this.x1 <= this.x3) {\n      diff = this.x1 - value;\n    } else if (this.x2 <= this.x1 && this.x2 <= this.x3) {\n      diff = this.x2 - value;\n    } else {\n      diff = this.x3 - value;\n    }\n    this.x1 -= diff;\n    this.x2 -= diff;\n    this.x3 -= diff;\n  }\n  get right() {\n    return Math.max(this.x1, this.x2, this.x3);\n  }\n  set right(value) {\n    let diff = 0;\n    if (this.x1 >= this.x2 && this.x1 >= this.x3) {\n      diff = this.x1 - value;\n    } else if (this.x2 >= this.x1 && this.x2 >= this.x3) {\n      diff = this.x2 - value;\n    } else {\n      diff = this.x3 - value;\n    }\n    this.x1 -= diff;\n    this.x2 -= diff;\n    this.x3 -= diff;\n  }\n  get top() {\n    return Math.min(this.y1, this.y2, this.y3);\n  }\n  set top(value) {\n    let diff = 0;\n    if (this.y1 <= this.y2 && this.y1 <= this.y3) {\n      diff = this.y1 - value;\n    } else if (this.y2 <= this.y1 && this.y2 <= this.y3) {\n      diff = this.y2 - value;\n    } else {\n      diff = this.y3 - value;\n    }\n    this.y1 -= diff;\n    this.y2 -= diff;\n    this.y3 -= diff;\n  }\n  get bottom() {\n    return Math.max(this.y1, this.y2, this.y3);\n  }\n  set bottom(value) {\n    let diff = 0;\n    if (this.y1 >= this.y2 && this.y1 >= this.y3) {\n      diff = this.y1 - value;\n    } else if (this.y2 >= this.y1 && this.y2 >= this.y3) {\n      diff = this.y2 - value;\n    } else {\n      diff = this.y3 - value;\n    }\n    this.y1 -= diff;\n    this.y2 -= diff;\n    this.y3 -= diff;\n  }\n};\n\n// src/geom/triangle/BuildEquilateralTriangle.ts\nfunction BuildEquilateralTriangle(x, y, length) {\n  const height = length * (Math.sqrt(3) / 2);\n  const x1 = x;\n  const y1 = y;\n  const x2 = x + length / 2;\n  const y2 = y + height;\n  const x3 = x - length / 2;\n  const y3 = y + height;\n  return new Triangle(x1, y1, x2, y2, x3, y3);\n}\n\n// src/geom/triangle/BuildRightTriangle.ts\nfunction BuildRightTriangle(x, y, width, height = width) {\n  const x1 = x;\n  const y1 = y;\n  const x2 = x;\n  const y2 = y - height;\n  const x3 = x + width;\n  const y3 = y;\n  return new Triangle(x1, y1, x2, y2, x3, y3);\n}\n\n// src/geom/triangle/GetTriangleCentroid.ts\nfunction GetTriangleCentroid(triangle, out = new Vec2()) {\n  return out.set((triangle.x1 + triangle.x2 + triangle.x3) / 3, (triangle.y1 + triangle.y2 + triangle.y3) / 3);\n}\n\n// src/geom/triangle/TranslateTriangle.ts\nfunction TranslateTriangle(triangle, x, y) {\n  triangle.x1 += x;\n  triangle.y1 += y;\n  triangle.x2 += x;\n  triangle.y2 += y;\n  triangle.x3 += x;\n  triangle.y3 += y;\n  return triangle;\n}\n\n// src/geom/triangle/CenterTriangleOn.ts\nfunction CenterTriangleOn(triangle, x, y, centerFunc = GetTriangleCentroid) {\n  const center = centerFunc(triangle);\n  const diffX = x - center.x;\n  const diffY = y - center.y;\n  return TranslateTriangle(triangle, diffX, diffY);\n}\n\n// src/geom/triangle/CloneTriangle.ts\nfunction CloneTriangle(source) {\n  const {x1, y1, x2, y2, x3, y3} = source;\n  return new Triangle(x1, y1, x2, y2, x3, y3);\n}\n\n// src/geom/triangle/CopyTriangleFrom.ts\nfunction CopyTriangleFrom(source, dest) {\n  const {x1, y1, x2, y2, x3, y3} = source;\n  return dest.set(x1, y1, x2, y2, x3, y3);\n}\n\n// src/geom/triangle/GetTriangleArea.ts\nfunction GetTriangleArea(triangle) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  return Math.abs(((x3 - x1) * (y2 - y1) - (x2 - x1) * (y3 - y1)) / 2);\n}\n\n// src/geom/triangle/GetTriangleCircumCenter.ts\nfunction Det(m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10;\n}\nfunction GetTriangleCircumCenter(triangle, out = new Vec2()) {\n  const cx = triangle.x3;\n  const cy = triangle.y3;\n  const ax = triangle.x1 - cx;\n  const ay = triangle.y1 - cy;\n  const bx = triangle.x2 - cx;\n  const by = triangle.y2 - cy;\n  const denom = 2 * Det(ax, ay, bx, by);\n  const numx = Det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  const numy = Det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  return out.set(cx - numx / denom, cy + numy / denom);\n}\n\n// src/geom/triangle/GetTriangleCircumCircle.ts\nfunction GetTriangleCircumCircle(triangle, out = new Circle()) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const A = x2 - x1;\n  const B = y2 - y1;\n  const C = x3 - x1;\n  const D = y3 - y1;\n  const E = A * (x1 + x2) + B * (y1 + y2);\n  const F = C * (x1 + x3) + D * (y1 + y3);\n  const G = 2 * (A * (y3 - y2) - B * (x3 - x2));\n  if (Math.abs(G) < 1e-6) {\n    const minX = Math.min(x1, x2, x3);\n    const minY = Math.min(y1, y2, y3);\n    const dx = (Math.max(x1, x2, x3) - minX) * 0.5;\n    const dy = (Math.max(y1, y2, y3) - minY) * 0.5;\n    return out.set(minX + dx, minY + dy, Math.sqrt(dx * dx + dy * dy));\n  } else {\n    const cx = (D * E - B * F) / G;\n    const cy = (A * F - C * E) / G;\n    const dx = cx - x1;\n    const dy = cy - y1;\n    return out.set(cx, cy, Math.sqrt(dx * dx + dy * dy));\n  }\n}\n\n// src/geom/triangle/GetTriangleInCenter.ts\nfunction GetLength(x1, y1, x2, y2) {\n  const x = x1 - x2;\n  const y = y1 - y2;\n  return Math.sqrt(x * x + y * y);\n}\nfunction GetTriangleInCenter(triangle, out = new Vec2()) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const d1 = GetLength(x3, y3, x2, y2);\n  const d2 = GetLength(x1, y1, x3, y3);\n  const d3 = GetLength(x2, y2, x1, y1);\n  const p = d1 + d2 + d3;\n  return out.set((x1 * d1 + x2 * d2 + x3 * d3) / p, (y1 * d1 + y2 * d2 + y3 * d3) / p);\n}\n\n// src/geom/triangle/GetTrianglePerimeter.ts\nfunction GetTrianglePerimeter(triangle) {\n  const [line1, line2, line3] = GetTriangleEdges(triangle);\n  return GetLineLength(line1) + GetLineLength(line2) + GetLineLength(line3);\n}\n\n// src/geom/triangle/GetTrianglePoint.ts\nfunction GetTrianglePoint(triangle, position, out = new Vec2()) {\n  const [line1, line2, line3] = GetTriangleEdges(triangle);\n  if (position <= 0 || position >= 1) {\n    return out.set(line1.x1, line1.y1);\n  }\n  const length1 = GetLineLength(line1);\n  const length2 = GetLineLength(line2);\n  const length3 = GetLineLength(line3);\n  const perimeter = length1 + length2 + length3;\n  let p = perimeter * position;\n  let localPosition = 0;\n  if (p < length1) {\n    localPosition = p / length1;\n    const {x1, y1, x2, y2} = line1;\n    return out.set(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n  } else if (p > length1 + length2) {\n    p -= length1 + length2;\n    localPosition = p / length3;\n    const {x1, y1, x2, y2} = line3;\n    return out.set(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n  } else {\n    p -= length1;\n    localPosition = p / length2;\n    const {x1, y1, x2, y2} = line2;\n    return out.set(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n  }\n}\n\n// src/geom/triangle/GetTrianglePoints.ts\nfunction GetTrianglePoints(triangle, quantity, stepRate, out = []) {\n  const [line1, line2, line3] = GetTriangleEdges(triangle);\n  const length1 = GetLineLength(line1);\n  const length2 = GetLineLength(line2);\n  const length3 = GetLineLength(line3);\n  const perimeter = length1 + length2 + length3;\n  if (!quantity) {\n    quantity = perimeter / stepRate;\n  }\n  for (let i = 0; i < quantity; i++) {\n    let p = perimeter * (i / quantity);\n    let localPosition = 0;\n    let point;\n    if (p < length1) {\n      localPosition = p / length1;\n      const {x1, y1, x2, y2} = line1;\n      point = new Vec2(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n    } else if (p > length1 + length2) {\n      p -= length1 + length2;\n      localPosition = p / length3;\n      const {x1, y1, x2, y2} = line3;\n      point = new Vec2(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n    } else {\n      p -= length1;\n      localPosition = p / length2;\n      const {x1, y1, x2, y2} = line2;\n      point = new Vec2(x1 + (x2 - x1) * localPosition, y1 + (y2 - y1) * localPosition);\n    }\n    out.push(point);\n  }\n  return out;\n}\n\n// src/geom/triangle/GetTriangleRandomPoint.ts\nfunction GetTriangleRandomPoint(triangle, out = new Vec2()) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const ux = x2 - x1;\n  const uy = y2 - y1;\n  const vx = x3 - x1;\n  const vy = y3 - y1;\n  let r = Math.random();\n  let s = Math.random();\n  if (r + s >= 1) {\n    r = 1 - r;\n    s = 1 - s;\n  }\n  return out.set(x1 + (ux * r + vx * s), y1 + (uy * r + vy * s));\n}\n\n// src/geom/triangle/RotateTriangleAround.ts\nfunction RotateTriangleAround(triangle, x, y, angle) {\n  const {x1, y1, x2, y2, x3, y3} = triangle;\n  const c = Math.cos(angle);\n  const s = Math.sin(angle);\n  return triangle.set((x1 - x) * c - (y1 - y) * s + x, (x1 - x) * s + (y1 - y) * c + y, (x2 - x) * c - (y2 - y) * s + x, (x2 - x) * s + (y2 - y) * c + y, (x3 - x) * c - (y3 - y) * s + x, (x3 - x) * s + (y3 - y) * c + y);\n}\n\n// src/geom/triangle/RotateTriangle.ts\nfunction RotateTriangle(triangle, angle) {\n  const point = GetTriangleInCenter(triangle);\n  return RotateTriangleAround(triangle, point.x, point.y, angle);\n}\n\n// src/geom/triangle/RotateTriangleAroundPoint.ts\nfunction RotateTriangleAroundPoint(triangle, point, angle) {\n  return RotateTriangleAround(triangle, point.x, point.y, angle);\n}\n\n// src/geom/triangle/TriangleContainsPoint.ts\nfunction TriangleContainsPoint(triangle, point) {\n  return TriangleContains(triangle, point.x, point.y);\n}\n\n// src/geom/triangle/TriangleEquals.ts\nfunction TriangleEquals(src, dest) {\n  return src.x1 === dest.x1 && src.y1 === dest.y1 && src.x2 === dest.x2 && src.y2 === dest.y2 && src.x3 === dest.x3 && src.y3 === dest.y3;\n}\n\n// src/geom3d/index.ts\nvar geom3d_exports = {};\n__export(geom3d_exports, {\n  BoxGeometry: () => BoxGeometry,\n  ConeGeometry: () => ConeGeometry,\n  CylinderGeometry: () => CylinderGeometry,\n  PlaneGeometry: () => PlaneGeometry,\n  SphereGeometry: () => SphereGeometry,\n  TorusGeometry: () => TorusGeometry\n});\n\n// src/geom3d/TorusGeometry.ts\nfunction TorusGeometry(radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2) {\n  const data = CreateVertexSet();\n  const {\n    vertices,\n    normals,\n    uvs,\n    indices\n  } = data;\n  const center = new Vec3();\n  const vertex = new Vec3();\n  const normal = new Vec3();\n  for (let j = 0; j <= radialSegments; j++) {\n    for (let i = 0; i <= tubularSegments; i++) {\n      const u = i / tubularSegments * arc;\n      const v = j / radialSegments * Math.PI * 2;\n      vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n      vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n      vertex.z = tube * Math.sin(v);\n      vertices.push(vertex.x, vertex.y, vertex.z);\n      center.x = radius * Math.cos(u);\n      center.y = radius * Math.sin(u);\n      Vec3Subtract(vertex, center, normal);\n      Vec3Normalize(normal, normal);\n      normals.push(normal.x, normal.y, normal.z);\n      uvs.push(i / tubularSegments);\n      uvs.push(j / radialSegments);\n    }\n  }\n  for (let j = 1; j <= radialSegments; j++) {\n    for (let i = 1; i <= tubularSegments; i++) {\n      const a = (tubularSegments + 1) * j + i - 1;\n      const b = (tubularSegments + 1) * (j - 1) + i - 1;\n      const c = (tubularSegments + 1) * (j - 1) + i;\n      const d = (tubularSegments + 1) * j + i;\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  }\n  data.numberOfVertices = vertices.length;\n  return data;\n}\n\n// src/input/index.ts\nvar input_exports2 = {};\n__export(input_exports2, {\n  Keyboard: () => keyboard_exports,\n  Mouse: () => mouse_exports,\n  SetInteractive: () => SetInteractive\n});\n\n// src/input/keyboard/index.ts\nvar keyboard_exports = {};\n__export(keyboard_exports, {\n  GetKeyDownDuration: () => GetKeyDownDuration,\n  Key: () => Key,\n  Keyboard: () => Keyboard,\n  Keys: () => keys_exports,\n  SetKeyRepeatRate: () => SetKeyRepeatRate\n});\n\n// src/input/keyboard/keys/index.ts\nvar keys_exports = {};\n__export(keys_exports, {\n  AKey: () => AKey,\n  ArrowKeys: () => ArrowKeys,\n  BKey: () => BKey,\n  CKey: () => CKey,\n  DKey: () => DKey,\n  DownKey: () => DownKey,\n  EKey: () => EKey,\n  FKey: () => FKey,\n  GKey: () => GKey,\n  HKey: () => HKey,\n  IKey: () => IKey,\n  JKey: () => JKey,\n  KKey: () => KKey,\n  LKey: () => LKey,\n  LeftKey: () => LeftKey,\n  MKey: () => MKey,\n  NKey: () => NKey,\n  OKey: () => OKey,\n  PKey: () => PKey,\n  QKey: () => QKey,\n  RKey: () => RKey,\n  RightKey: () => RightKey,\n  SKey: () => SKey,\n  SpaceKey: () => SpaceKey,\n  TKey: () => TKey,\n  UKey: () => UKey,\n  UpKey: () => UpKey,\n  VKey: () => VKey,\n  WASDKeys: () => WASDKeys,\n  WKey: () => WKey,\n  XKey: () => XKey,\n  YKey: () => YKey,\n  ZKey: () => ZKey\n});\n\n// src/input/keyboard/Key.ts\nvar Key = class {\n  constructor(value) {\n    this.capture = true;\n    this.isDown = false;\n    this.enabled = true;\n    this.repeatRate = 0;\n    this.canRepeat = true;\n    this.timeDown = 0;\n    this.timeUpdated = 0;\n    this.timeUp = 0;\n    this.value = value;\n    this.events = new Map();\n  }\n  getValue() {\n    return this.value;\n  }\n  down(event) {\n    if (!this.enabled) {\n      return;\n    }\n    if (this.capture) {\n      event.preventDefault();\n    }\n    this.shiftKey = event.shiftKey;\n    this.ctrlKey = event.ctrlKey;\n    this.altKey = event.altKey;\n    if (this.isDown && this.canRepeat) {\n      this.timeUpdated = event.timeStamp;\n      const delay = this.timeUpdated - this.timeDown;\n      if (delay >= this.repeatRate) {\n        Emit(this, \"keydown\", this);\n        if (this.downCallback) {\n          this.downCallback(this);\n        }\n      }\n    } else {\n      this.isDown = true;\n      this.timeDown = event.timeStamp;\n      this.timeUpdated = event.timeStamp;\n      Emit(this, \"keydown\", this);\n      if (this.downCallback) {\n        this.downCallback(this);\n      }\n    }\n  }\n  up(event) {\n    if (!this.enabled) {\n      return;\n    }\n    if (this.capture) {\n      event.preventDefault();\n    }\n    this.shiftKey = event.shiftKey;\n    this.ctrlKey = event.ctrlKey;\n    this.altKey = event.altKey;\n    if (this.isDown) {\n      this.isDown = false;\n      this.timeUp = event.timeStamp;\n      this.timeUpdated = event.timeStamp;\n      Emit(this, \"keyup\", this);\n      if (this.upCallback) {\n        this.upCallback(this);\n      }\n    }\n  }\n  reset() {\n    this.isDown = false;\n    this.timeUpdated = this.timeDown;\n    this.timeUp = this.timeDown;\n  }\n  destroy() {\n    this.downCallback = null;\n    this.upCallback = null;\n    this.events.clear();\n  }\n};\n\n// src/input/keyboard/keys/AKey.ts\nvar AKey = class extends Key {\n  constructor() {\n    super(\"a\");\n  }\n};\n\n// src/input/keyboard/keys/ArrowKeys.ts\nvar ArrowKeys = class {\n  constructor(keyboardManager, config) {\n    const {\n      left = true,\n      right = true,\n      up = true,\n      down = true,\n      space = true\n    } = config;\n    const keys = keyboardManager.keys;\n    if (left) {\n      this.left = new Key(\"ArrowLeft\");\n      keys.set(this.left.value, this.left);\n    }\n    if (right) {\n      this.right = new Key(\"ArrowRight\");\n      keys.set(this.right.value, this.right);\n    }\n    if (up) {\n      this.up = new Key(\"ArrowUp\");\n      keys.set(this.up.value, this.up);\n    }\n    if (down) {\n      this.down = new Key(\"ArrowDown\");\n      keys.set(this.down.value, this.down);\n    }\n    if (space) {\n      this.space = new Key(\" \");\n      keys.set(this.space.value, this.space);\n    }\n  }\n};\n\n// src/input/keyboard/keys/BKey.ts\nvar BKey = class extends Key {\n  constructor() {\n    super(\"b\");\n  }\n};\n\n// src/input/keyboard/keys/CKey.ts\nvar CKey = class extends Key {\n  constructor() {\n    super(\"c\");\n  }\n};\n\n// src/input/keyboard/keys/DKey.ts\nvar DKey = class extends Key {\n  constructor() {\n    super(\"d\");\n  }\n};\n\n// src/input/keyboard/keys/DownKey.ts\nvar DownKey = class extends Key {\n  constructor() {\n    super(\"ArrowDown\");\n  }\n};\n\n// src/input/keyboard/keys/EKey.ts\nvar EKey = class extends Key {\n  constructor() {\n    super(\"e\");\n  }\n};\n\n// src/input/keyboard/keys/FKey.ts\nvar FKey = class extends Key {\n  constructor() {\n    super(\"f\");\n  }\n};\n\n// src/input/keyboard/keys/GKey.ts\nvar GKey = class extends Key {\n  constructor() {\n    super(\"g\");\n  }\n};\n\n// src/input/keyboard/keys/HKey.ts\nvar HKey = class extends Key {\n  constructor() {\n    super(\"h\");\n  }\n};\n\n// src/input/keyboard/keys/IKey.ts\nvar IKey = class extends Key {\n  constructor() {\n    super(\"i\");\n  }\n};\n\n// src/input/keyboard/keys/JKey.ts\nvar JKey = class extends Key {\n  constructor() {\n    super(\"j\");\n  }\n};\n\n// src/input/keyboard/keys/KKey.ts\nvar KKey = class extends Key {\n  constructor() {\n    super(\"k\");\n  }\n};\n\n// src/input/keyboard/keys/LKey.ts\nvar LKey = class extends Key {\n  constructor() {\n    super(\"l\");\n  }\n};\n\n// src/input/keyboard/keys/LeftKey.ts\nvar LeftKey = class extends Key {\n  constructor() {\n    super(\"ArrowLeft\");\n  }\n};\n\n// src/input/keyboard/keys/MKey.ts\nvar MKey = class extends Key {\n  constructor() {\n    super(\"m\");\n  }\n};\n\n// src/input/keyboard/keys/NKey.ts\nvar NKey = class extends Key {\n  constructor() {\n    super(\"n\");\n  }\n};\n\n// src/input/keyboard/keys/OKey.ts\nvar OKey = class extends Key {\n  constructor() {\n    super(\"o\");\n  }\n};\n\n// src/input/keyboard/keys/PKey.ts\nvar PKey = class extends Key {\n  constructor() {\n    super(\"p\");\n  }\n};\n\n// src/input/keyboard/keys/QKey.ts\nvar QKey = class extends Key {\n  constructor() {\n    super(\"q\");\n  }\n};\n\n// src/input/keyboard/keys/RKey.ts\nvar RKey = class extends Key {\n  constructor() {\n    super(\"r\");\n  }\n};\n\n// src/input/keyboard/keys/RightKey.ts\nvar RightKey = class extends Key {\n  constructor() {\n    super(\"ArrowRight\");\n  }\n};\n\n// src/input/keyboard/keys/SKey.ts\nvar SKey = class extends Key {\n  constructor() {\n    super(\"s\");\n  }\n};\n\n// src/input/keyboard/keys/SpaceKey.ts\nvar SpaceKey = class extends Key {\n  constructor() {\n    super(\" \");\n  }\n};\n\n// src/input/keyboard/keys/TKey.ts\nvar TKey = class extends Key {\n  constructor() {\n    super(\"t\");\n  }\n};\n\n// src/input/keyboard/keys/UKey.ts\nvar UKey = class extends Key {\n  constructor() {\n    super(\"u\");\n  }\n};\n\n// src/input/keyboard/keys/UpKey.ts\nvar UpKey = class extends Key {\n  constructor() {\n    super(\"ArrowUp\");\n  }\n};\n\n// src/input/keyboard/keys/VKey.ts\nvar VKey = class extends Key {\n  constructor() {\n    super(\"v\");\n  }\n};\n\n// src/input/keyboard/keys/WASDKeys.ts\nvar WASDKeys = class {\n  constructor(keyboardManager, config) {\n    const {\n      W = true,\n      A = true,\n      S = true,\n      D = true,\n      space = true\n    } = config;\n    const keys = keyboardManager.keys;\n    if (W) {\n      this.W = new Key(\"w\");\n      keys.set(this.W.value, this.W);\n    }\n    if (A) {\n      this.A = new Key(\"a\");\n      keys.set(this.A.value, this.A);\n    }\n    if (S) {\n      this.S = new Key(\"s\");\n      keys.set(this.S.value, this.S);\n    }\n    if (D) {\n      this.D = new Key(\"d\");\n      keys.set(this.D.value, this.D);\n    }\n    if (space) {\n      this.space = new Key(\" \");\n      keys.set(this.space.value, this.space);\n    }\n  }\n};\n\n// src/input/keyboard/keys/WKey.ts\nvar WKey = class extends Key {\n  constructor() {\n    super(\"w\");\n  }\n};\n\n// src/input/keyboard/keys/XKey.ts\nvar XKey = class extends Key {\n  constructor() {\n    super(\"x\");\n  }\n};\n\n// src/input/keyboard/keys/YKey.ts\nvar YKey = class extends Key {\n  constructor() {\n    super(\"y\");\n  }\n};\n\n// src/input/keyboard/keys/ZKey.ts\nvar ZKey = class extends Key {\n  constructor() {\n    super(\"z\");\n  }\n};\n\n// src/input/keyboard/GetKeyDownDuration.ts\nfunction GetKeyDownDuration(key) {\n  if (key.isDown) {\n    return key.timeUpdated - key.timeDown;\n  } else {\n    return key.timeUp - key.timeDown;\n  }\n}\n\n// src/input/keyboard/Keyboard.ts\nvar Keyboard = class extends EventEmitter {\n  constructor() {\n    super();\n    this.keyConversion = {\n      Up: \"ArrowUp\",\n      Down: \"ArrowDown\",\n      Left: \"ArrowLeft\",\n      Right: \"ArrowRight\",\n      Spacebar: \" \",\n      Win: \"Meta\",\n      Scroll: \"ScrollLock\",\n      Del: \"Delete\",\n      Apps: \"ContextMenu\",\n      Esc: \"Escape\",\n      Add: \"+\",\n      Subtract: \"-\",\n      Multiply: \"*\",\n      Decimal: \".\",\n      Divide: \"/\"\n    };\n    this.keydownHandler = (event) => this.onKeyDown(event);\n    this.keyupHandler = (event) => this.onKeyUp(event);\n    this.blurHandler = () => this.onBlur();\n    window.addEventListener(\"keydown\", this.keydownHandler);\n    window.addEventListener(\"keyup\", this.keyupHandler);\n    window.addEventListener(\"blur\", this.blurHandler);\n    this.keys = new Map();\n  }\n  addKeys(...keys) {\n    keys.forEach((key) => {\n      this.keys.set(key.getValue(), key);\n    });\n  }\n  clearKeys() {\n    this.keys.clear();\n  }\n  onBlur() {\n    this.keys.forEach((key) => {\n      key.reset();\n    });\n  }\n  getKeyValue(key) {\n    if (this.keyConversion.hasOwnProperty(key)) {\n      return this.keyConversion[key];\n    } else {\n      return key;\n    }\n  }\n  onKeyDown(event) {\n    const value = this.getKeyValue(event.key);\n    if (this.keys.has(value)) {\n      const key = this.keys.get(value);\n      key.down(event);\n    }\n    Emit(this, \"keydown-\" + value, event);\n    Emit(this, \"keydown\", event);\n  }\n  onKeyUp(event) {\n    const value = this.getKeyValue(event.key);\n    if (this.keys.has(value)) {\n      const key = this.keys.get(value);\n      key.up(event);\n    }\n    Emit(this, \"keyup-\" + value, event);\n    Emit(this, \"keyup\", event);\n  }\n  destroy() {\n    window.removeEventListener(\"keydown\", this.keydownHandler);\n    window.removeEventListener(\"keyup\", this.keyupHandler);\n    window.removeEventListener(\"blur\", this.blurHandler);\n    Emit(this, \"destroy\");\n  }\n};\n\n// src/input/keyboard/SetKeyRepeatRate.ts\nfunction SetKeyRepeatRate(rate, ...keys) {\n  keys.forEach((key) => {\n    key.repeatRate = rate;\n  });\n  return keys;\n}\n\n// src/input/mouse/index.ts\nvar mouse_exports = {};\n__export(mouse_exports, {\n  Mouse: () => Mouse\n});\n\n// src/input/mouse/Mouse.ts\nvar Mouse = class extends EventEmitter {\n  constructor(target) {\n    super();\n    this.primaryDown = false;\n    this.auxDown = false;\n    this.secondaryDown = false;\n    this.blockContextMenu = true;\n    this.resolution = 1;\n    this.mousedownHandler = (event) => this.onMouseDown(event);\n    this.mouseupHandler = (event) => this.onMouseUp(event);\n    this.mousemoveHandler = (event) => this.onMouseMove(event);\n    this.mousewheelHandler = (event) => this.onMouseWheel(event);\n    this.contextmenuHandler = (event) => this.onContextMenuEvent(event);\n    this.blurHandler = () => this.onBlur();\n    this.localPoint = new Vec2();\n    this.hitPoint = new Vec2();\n    this.transPoint = new Vec2();\n    if (!target) {\n      target = GameInstance.get().renderer.canvas;\n    }\n    target.addEventListener(\"mousedown\", this.mousedownHandler);\n    target.addEventListener(\"mouseup\", this.mouseupHandler);\n    target.addEventListener(\"wheel\", this.mousewheelHandler, {passive: false});\n    target.addEventListener(\"contextmenu\", this.contextmenuHandler);\n    window.addEventListener(\"mouseup\", this.mouseupHandler);\n    window.addEventListener(\"mousemove\", this.mousemoveHandler);\n    window.addEventListener(\"blur\", this.blurHandler);\n    this.target = target;\n  }\n  onBlur() {\n  }\n  onMouseDown(event) {\n    this.positionToPoint(event);\n    this.primaryDown = event.button === 0;\n    this.auxDown = event.button === 1;\n    this.secondaryDown = event.button === 2;\n    Emit(this, \"pointerdown\", this.localPoint.x, this.localPoint.y, event.button, event);\n  }\n  onMouseUp(event) {\n    this.positionToPoint(event);\n    this.primaryDown = !(event.button === 0);\n    this.auxDown = !(event.button === 1);\n    this.secondaryDown = !(event.button === 2);\n    Emit(this, \"pointerup\", this.localPoint.x, this.localPoint.y, event.button, event);\n  }\n  onMouseMove(event) {\n    this.positionToPoint(event);\n    Emit(this, \"pointermove\", this.localPoint.x, this.localPoint.y, event);\n  }\n  onMouseWheel(event) {\n    Emit(this, \"wheel\", event.deltaX, event.deltaY, event.deltaZ, event);\n  }\n  onContextMenuEvent(event) {\n    if (this.blockContextMenu) {\n      event.preventDefault();\n    }\n    Emit(this, \"contextmenu\", event);\n  }\n  positionToPoint(event) {\n    return this.localPoint.set(event.offsetX, event.offsetY);\n  }\n  getInteractiveChildren(parent, results) {\n    const children = parent.children;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (!child.visible || !child.input.enabled) {\n        continue;\n      }\n      results.push(child);\n      if (child.input.enabledChildren && child.numChildren) {\n        this.getInteractiveChildren(child, results);\n      }\n    }\n  }\n  checkHitArea(entity, px, py) {\n    if (entity.input.hitArea) {\n      if (entity.input.hitArea.contains(px, py)) {\n        return true;\n      }\n    } else {\n      return entity.transform.extent.contains(px, py);\n    }\n    return false;\n  }\n  hitTest(...entities) {\n    const localX = this.localPoint.x;\n    const localY = this.localPoint.y;\n    const point = this.transPoint;\n    for (let i = 0; i < entities.length; i++) {\n      const entity = entities[i];\n      if (!entity.world) {\n        continue;\n      }\n      const mat = Mat2dAppend(entity.world.camera.worldTransform, entity.transform.world);\n      Mat2dGlobalToLocal(mat, localX, localY, point);\n      if (this.checkHitArea(entity, point.x, point.y)) {\n        this.hitPoint.set(point.x, point.y);\n        return true;\n      }\n    }\n    return false;\n  }\n  hitTestChildren(parent, topOnly = true) {\n    const output = [];\n    if (!parent.visible) {\n      return output;\n    }\n    const candidates = [];\n    const parentInput = parent.input;\n    if (parentInput && parentInput.enabled) {\n      candidates.push(parent);\n    }\n    if (parentInput.enabledChildren && parent.numChildren) {\n      this.getInteractiveChildren(parent, candidates);\n    }\n    for (let i = candidates.length - 1; i >= 0; i--) {\n      const entity = candidates[i];\n      if (this.hitTest(entity)) {\n        output.push(entity);\n        if (topOnly) {\n          break;\n        }\n      }\n    }\n    return output;\n  }\n  shutdown() {\n    const target = this.target;\n    target.removeEventListener(\"mousedown\", this.mousedownHandler);\n    target.removeEventListener(\"mouseup\", this.mouseupHandler);\n    target.removeEventListener(\"wheel\", this.mousewheelHandler);\n    target.removeEventListener(\"contextmenu\", this.contextmenuHandler);\n    window.removeEventListener(\"mouseup\", this.mouseupHandler);\n    window.removeEventListener(\"mousemove\", this.mousemoveHandler);\n    window.removeEventListener(\"blur\", this.blurHandler);\n  }\n};\n\n// src/input/SetInteractive.ts\nfunction SetInteractive(...children) {\n  children.forEach((child) => {\n    child.input.enabled = true;\n  });\n  return children;\n}\n\n// src/loader/index.ts\nvar loader_exports = {};\n__export(loader_exports, {\n  File: () => File,\n  Files: () => files_exports,\n  Loader: () => Loader\n});\n\n// src/loader/files/index.ts\nvar files_exports = {};\n__export(files_exports, {\n  AtlasFile: () => AtlasFile,\n  BitmapTextFile: () => BitmapTextFile,\n  CSVFile: () => CSVFile,\n  ImageFile: () => ImageFile,\n  JSONFile: () => JSONFile,\n  JSONGeometryFile: () => JSONGeometryFile,\n  OBJFile: () => OBJFile,\n  OBJGeometryFile: () => OBJGeometryFile,\n  SpriteSheetFile: () => SpriteSheetFile,\n  XMLFile: () => XMLFile\n});\n\n// src/textures/parsers/AtlasParser.ts\nfunction AtlasParser(texture, data) {\n  let frames;\n  if (Array.isArray(data.textures)) {\n    frames = data.textures[0].frames;\n  } else if (Array.isArray(data.frames)) {\n    frames = data.frames;\n  } else if (data.hasOwnProperty(\"frames\")) {\n    frames = Object.values(data.frames);\n  } else {\n    console.warn(\"Invalid Texture Atlas JSON\");\n  }\n  if (frames) {\n    let newFrame;\n    for (let i = 0; i < frames.length; i++) {\n      const src = frames[i];\n      newFrame = texture.addFrame(src.filename, src.frame.x, src.frame.y, src.frame.w, src.frame.h);\n      if (src.trimmed) {\n        newFrame.setTrim(src.sourceSize.w, src.sourceSize.h, src.spriteSourceSize.x, src.spriteSourceSize.y, src.spriteSourceSize.w, src.spriteSourceSize.h);\n      } else {\n        newFrame.setSourceSize(src.sourceSize.w, src.sourceSize.h);\n      }\n      if (src.rotated) {\n      }\n      if (src.anchor) {\n        newFrame.setPivot(src.anchor.x, src.anchor.y);\n      }\n    }\n  }\n}\n\n// src/loader/File.ts\nvar File = class {\n  constructor(key, url, config) {\n    this.responseType = \"text\";\n    this.crossOrigin = void 0;\n    this.skipCache = false;\n    this.hasLoaded = false;\n    this.key = key;\n    this.url = url;\n    this.config = config;\n  }\n};\n\n// src/loader/GetURL.ts\nfunction GetURL(key, url, extension, loader) {\n  if (!url) {\n    url = key + extension;\n  }\n  if (/^(?:blob:|data:|http:\\/\\/|https:\\/\\/|\\/\\/)/.exec(url)) {\n    return url;\n  } else if (loader) {\n    return loader.baseURL + loader.path + url;\n  } else {\n    return url;\n  }\n}\n\n// src/loader/ImageTagLoader.ts\nfunction ImageTagLoader(file) {\n  file.data = new Image();\n  if (file.crossOrigin) {\n    file.data.crossOrigin = file.crossOrigin;\n  }\n  return new Promise((resolve, reject) => {\n    file.data.onload = () => {\n      if (file.data.onload) {\n        file.data.onload = null;\n        file.data.onerror = null;\n        resolve(file);\n      }\n    };\n    file.data.onerror = (event) => {\n      if (file.data.onload) {\n        file.data.onload = null;\n        file.data.onerror = null;\n        file.error = event;\n        reject(file);\n      }\n    };\n    file.data.src = file.url;\n    if (file.data.complete && file.data.width && file.data.height) {\n      file.data.onload = null;\n      file.data.onerror = null;\n      resolve(file);\n    }\n  });\n}\n\n// src/loader/files/ImageFile.ts\nfunction ImageFile(key, url, glConfig) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".png\", file.loader);\n    if (file.loader) {\n      file.crossOrigin = file.loader.crossOrigin;\n    }\n    return new Promise((resolve, reject) => {\n      const textureManager = TextureManagerInstance.get();\n      if (textureManager.has(file.key)) {\n        resolve(file);\n      } else {\n        ImageTagLoader(file).then((file2) => {\n          textureManager.add(file2.key, file2.data, glConfig);\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n\n// src/cache/Cache.ts\nvar caches = new Map();\nvar Cache = {\n  get: (type) => {\n    if (!caches.has(type)) {\n      caches.set(type, new Map());\n    }\n    return caches.get(type);\n  },\n  getEntry: (cache, entry) => {\n    if (caches.has(cache)) {\n      return caches.get(cache).get(entry);\n    }\n  }\n};\n\n// src/loader/XHRLoader.ts\nfunction XHRLoader(file) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", file.url, true);\n  xhr.responseType = file.responseType;\n  return new Promise((resolve, reject) => {\n    xhr.onload = () => {\n      file.data = xhr.responseText;\n      file.hasLoaded = true;\n      resolve(file);\n    };\n    xhr.onerror = () => {\n      file.hasLoaded = true;\n      reject(file);\n    };\n    xhr.send();\n  });\n}\n\n// src/loader/files/JSONFile.ts\nfunction JSONFile(key, url) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".json\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"JSON\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          file2.data = JSON.parse(file2.data);\n          if (!file2.skipCache) {\n            cache.set(file2.key, file2.data);\n          }\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n\n// src/loader/files/AtlasFile.ts\nfunction AtlasFile(key, textureURL, atlasURL, glConfig) {\n  const json = JSONFile(key, atlasURL);\n  const image = ImageFile(key, textureURL, glConfig);\n  const file = new File(key, \"\");\n  file.load = () => {\n    json.url = GetURL(json.key, json.url, \".json\", file.loader);\n    image.url = GetURL(image.key, image.url, \".png\", file.loader);\n    return new Promise((resolve, reject) => {\n      json.skipCache = true;\n      json.load().then(() => {\n        image.load().then(() => {\n          AtlasParser(TextureManagerInstance.get().get(key), json.data);\n          resolve(file);\n        }).catch(() => {\n          reject(file);\n        });\n      }).catch(() => {\n        reject(file);\n      });\n    });\n  };\n  return file;\n}\n\n// src/textures/parsers/BitmapTextParser.ts\nfunction GetValue(node, attribute) {\n  return parseInt(node.getAttribute(attribute), 10);\n}\nfunction BitmapTextParser(texture, xml, frame2) {\n  const xSpacing = 0;\n  const ySpacing = 0;\n  const info = xml.getElementsByTagName(\"info\")[0];\n  const common = xml.getElementsByTagName(\"common\")[0];\n  const data = {\n    font: info.getAttribute(\"face\"),\n    size: GetValue(info, \"size\"),\n    lineHeight: GetValue(common, \"lineHeight\") + ySpacing,\n    chars: {}\n  };\n  const letters = xml.getElementsByTagName(\"char\");\n  for (let i = 0; i < letters.length; i++) {\n    const node = letters[i];\n    const charCode = GetValue(node, \"id\");\n    const x = GetValue(node, \"x\");\n    const y = GetValue(node, \"y\");\n    const width = GetValue(node, \"width\");\n    const height = GetValue(node, \"height\");\n    data.chars[charCode] = {\n      x,\n      y,\n      width,\n      height,\n      xOffset: GetValue(node, \"xoffset\"),\n      yOffset: GetValue(node, \"yoffset\"),\n      xAdvance: GetValue(node, \"xadvance\") + xSpacing,\n      kerning: {}\n    };\n    texture.addFrame(charCode, x, y, width, height);\n  }\n  const kernings = xml.getElementsByTagName(\"kerning\");\n  for (let i = 0; i < kernings.length; i++) {\n    const kern = kernings[i];\n    const first = GetValue(kern, \"first\");\n    const second = GetValue(kern, \"second\");\n    const amount = GetValue(kern, \"amount\");\n    data.chars[second].kerning[first] = amount;\n  }\n  return data;\n}\n\n// src/loader/files/XMLFile.ts\nfunction XMLFile(key, url) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".xml\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"XML\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          const xml = ParseXML(file2.data);\n          if (xml !== null) {\n            file2.data = xml;\n            if (!file2.skipCache) {\n              cache.set(file2.key, xml);\n            }\n            resolve(file2);\n          } else {\n            reject(file2);\n          }\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n\n// src/loader/files/BitmapTextFile.ts\nfunction BitmapTextFile(key, textureURL, fontDataURL, glConfig) {\n  const xml = XMLFile(key, fontDataURL);\n  const image = ImageFile(key, textureURL, glConfig);\n  const file = new File(key, \"\");\n  file.load = () => {\n    xml.url = GetURL(xml.key, xml.url, \".xml\", file.loader);\n    image.url = GetURL(image.key, image.url, \".png\", file.loader);\n    return new Promise((resolve, reject) => {\n      xml.skipCache = true;\n      xml.load().then(() => {\n        image.load().then(() => {\n          const texture = TextureManagerInstance.get().get(key);\n          const fontData = BitmapTextParser(texture, xml.data);\n          texture.data = fontData;\n          resolve(file);\n        }).catch(() => {\n          reject(file);\n        });\n      }).catch(() => {\n        reject(file);\n      });\n    });\n  };\n  return file;\n}\n\n// src/loader/files/CSVFile.ts\nfunction CSVFile(key, url) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".csv\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"CSV\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          if (!file2.skipCache) {\n            cache.set(file2.key, file2.data);\n          }\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n\n// src/loader/files/JSONGeometryFile.ts\nfunction JSONGeometryFile(key, url, mappingConfig) {\n  const file = new File(key, url);\n  const {\n    vertices = \"verts\",\n    normals = \"normals\",\n    uvs = \"uvs\",\n    numberOfVertices = 0\n  } = mappingConfig;\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".json\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"Geometry\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          const data = JSON.parse(file2.data);\n          const geom = new Geometry({\n            vertices: data[vertices],\n            normals: data[normals],\n            uvs: data[uvs],\n            numberOfVertices\n          });\n          file2.data = geom;\n          if (!file2.skipCache) {\n            cache.set(file2.key, geom);\n          }\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n\n// src/loader/files/OBJFile.ts\nfunction OBJFile(key, url) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".obj\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"Obj\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          if (!file2.skipCache) {\n            cache.set(file2.key, file2.data);\n          }\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n\n// src/loader/files/OBJGeometryFile.ts\nfunction OBJGeometryFile(key, url, flipUVs = true) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".obj\", file.loader);\n    return new Promise((resolve, reject) => {\n      const cache = Cache.get(\"Geometry\");\n      if (!file.skipCache && cache.has(file.key)) {\n        resolve(file);\n      } else {\n        XHRLoader(file).then((file2) => {\n          const models = GetBufferFromObj(file2.data, flipUVs);\n          file2.data = models;\n          if (!file2.skipCache) {\n            let key2 = file2.key;\n            models.forEach((model, index) => {\n              if (index > 0) {\n                key2 = file2.key + index.toString();\n              }\n              const geom = new Geometry(model.buffer);\n              cache.set(key2, geom);\n            });\n          }\n          resolve(file2);\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n\n// src/textures/parsers/SpriteSheetParser.ts\nfunction SpriteSheetParser(texture, x, y, width, height, frameConfig) {\n  const {\n    frameWidth = null,\n    endFrame = -1,\n    margin = 0,\n    spacing = 0\n  } = frameConfig;\n  let {\n    frameHeight = null,\n    startFrame = 0\n  } = frameConfig;\n  if (!frameHeight) {\n    frameHeight = frameWidth;\n  }\n  if (frameWidth === null) {\n    throw new Error(\"SpriteSheetParser: Invalid frameWidth\");\n  }\n  const row = Math.floor((width - margin + spacing) / (frameWidth + spacing));\n  const column = Math.floor((height - margin + spacing) / (frameHeight + spacing));\n  let total = row * column;\n  if (total === 0) {\n    console.warn(\"SpriteSheetParser: Frame config will result in zero frames\");\n  }\n  if (startFrame > total || startFrame < -total) {\n    startFrame = 0;\n  }\n  if (startFrame < 0) {\n    startFrame = total + startFrame;\n  }\n  if (endFrame !== -1) {\n    total = startFrame + (endFrame + 1);\n  }\n  let fx = margin;\n  let fy = margin;\n  let ax = 0;\n  let ay = 0;\n  for (let i = 0; i < total; i++) {\n    ax = 0;\n    ay = 0;\n    const w = fx + frameWidth;\n    const h = fy + frameHeight;\n    if (w > width) {\n      ax = w - width;\n    }\n    if (h > height) {\n      ay = h - height;\n    }\n    texture.addFrame(i, x + fx, y + fy, frameWidth - ax, frameHeight - ay);\n    fx += frameWidth + spacing;\n    if (fx + frameWidth > width) {\n      fx = margin;\n      fy += frameHeight + spacing;\n    }\n  }\n}\n\n// src/loader/files/SpriteSheetFile.ts\nfunction SpriteSheetFile(key, url, frameConfig, glConfig) {\n  const file = new File(key, url);\n  file.load = () => {\n    file.url = GetURL(file.key, file.url, \".png\", file.loader);\n    if (file.loader) {\n      file.crossOrigin = file.loader.crossOrigin;\n    }\n    return new Promise((resolve, reject) => {\n      const textureManager = TextureManagerInstance.get();\n      if (textureManager.has(file.key)) {\n        resolve(file);\n      } else {\n        ImageTagLoader(file).then((file2) => {\n          const texture = textureManager.add(file2.key, file2.data, glConfig);\n          if (texture) {\n            SpriteSheetParser(texture, 0, 0, texture.width, texture.height, frameConfig);\n            resolve(file2);\n          } else {\n            reject(file2);\n          }\n        }).catch((file2) => {\n          reject(file2);\n        });\n      }\n    });\n  };\n  return file;\n}\n\n// src/loader/Loader.ts\nvar Loader = class extends EventEmitter {\n  constructor() {\n    super();\n    this.baseURL = \"\";\n    this.path = \"\";\n    this.crossOrigin = \"anonymous\";\n    this.maxParallelDownloads = -1;\n    this.isLoading = false;\n    this.reset();\n  }\n  reset() {\n    this.isLoading = false;\n    this.queue = new Set();\n    this.inflight = new Set();\n    this.completed = new Set();\n    this.progress = 0;\n  }\n  add(...file) {\n    file.forEach((entity) => {\n      entity.loader = this;\n      this.queue.add(entity);\n    });\n    return this;\n  }\n  start() {\n    if (this.isLoading) {\n      return null;\n    }\n    return new Promise((resolve, reject) => {\n      this.completed.clear();\n      this.progress = 0;\n      if (this.queue.size > 0) {\n        this.isLoading = true;\n        this.onComplete = resolve;\n        this.onError = reject;\n        Emit(this, \"start\");\n        this.nextFile();\n      } else {\n        this.progress = 1;\n        Emit(this, \"complete\");\n        resolve(this);\n      }\n    });\n  }\n  nextFile() {\n    let limit = this.queue.size;\n    if (this.maxParallelDownloads !== -1) {\n      limit = Math.min(limit, this.maxParallelDownloads) - this.inflight.size;\n    }\n    if (limit) {\n      const iterator = this.queue.values();\n      while (limit > 0) {\n        const file = iterator.next().value;\n        this.inflight.add(file);\n        this.queue.delete(file);\n        file.load().then((file2) => this.fileComplete(file2)).catch((file2) => this.fileError(file2));\n        limit--;\n      }\n    } else if (this.inflight.size === 0) {\n      this.stop();\n    }\n  }\n  stop() {\n    if (!this.isLoading) {\n      return;\n    }\n    this.isLoading = false;\n    Emit(this, \"complete\", this.completed);\n    this.onComplete();\n    this.completed.clear();\n  }\n  updateProgress(file) {\n    this.inflight.delete(file);\n    this.completed.add(file);\n    const totalCompleted = this.completed.size;\n    const totalQueued = this.queue.size + this.inflight.size;\n    if (totalCompleted > 0) {\n      this.progress = totalCompleted / (totalCompleted + totalQueued);\n    }\n    Emit(this, \"progress\", this.progress, totalCompleted, totalQueued);\n    this.nextFile();\n  }\n  fileComplete(file) {\n    Emit(this, \"filecomplete\", file);\n    this.updateProgress(file);\n  }\n  fileError(file) {\n    Emit(this, \"fileerror\", file);\n    this.updateProgress(file);\n  }\n  totalFilesToLoad() {\n    return this.queue.size + this.inflight.size;\n  }\n  setBaseURL(url = \"\") {\n    if (url !== \"\" && url.substr(-1) !== \"/\") {\n      url = url.concat(\"/\");\n    }\n    this.baseURL = url;\n    return this;\n  }\n  setPath(path = \"\") {\n    if (path !== \"\" && path.substr(-1) !== \"/\") {\n      path = path.concat(\"/\");\n    }\n    this.path = path;\n    return this;\n  }\n  setCORS(crossOrigin) {\n    this.crossOrigin = crossOrigin;\n    return this;\n  }\n  setMaxParallelDownloads(max) {\n    this.maxParallelDownloads = max;\n    return this;\n  }\n};\n\n// src/materials3d/index.ts\nvar materials3d_exports = {};\n__export(materials3d_exports, {\n  BlackPlastic: () => BlackPlastic,\n  BlackRubber: () => BlackRubber,\n  Brass: () => Brass,\n  Bronze: () => Bronze,\n  Chrome: () => Chrome,\n  Copper: () => Copper,\n  CyanPlastic: () => CyanPlastic,\n  CyanRubber: () => CyanRubber,\n  Emerald: () => Emerald,\n  Gold: () => Gold,\n  GreenPlastic: () => GreenPlastic,\n  GreenRubber: () => GreenRubber,\n  Jade: () => Jade,\n  Obsidian: () => Obsidian,\n  Pearl: () => Pearl,\n  RedPlastic: () => RedPlastic,\n  RedRubber: () => RedRubber,\n  Ruby: () => Ruby,\n  Silver: () => Silver,\n  Turquoise: () => Turquoise,\n  WhitePlastic: () => WhitePlastic,\n  WhiteRubber: () => WhiteRubber,\n  YellowPlastic: () => YellowPlastic,\n  YellowRubber: () => YellowRubber\n});\n\n// src/materials3d/BlackPlastic.ts\nvar BlackPlastic = new Material({\n  ambient: [0, 0, 0],\n  diffuse: [0.01, 0.01, 0.01],\n  specular: [0.5, 0.5, 0.5],\n  shine: 0.25\n});\n\n// src/materials3d/BlackRubber.ts\nvar BlackRubber = new Material({\n  ambient: [0.02, 0.02, 0.02],\n  diffuse: [0.01, 0.01, 0.01],\n  specular: [0.4, 0.4, 0.4],\n  shine: 0.078125\n});\n\n// src/materials3d/Brass.ts\nvar Brass = new Material({\n  ambient: [0.329412, 0.223529, 0.027451],\n  diffuse: [0.780392, 0.568627, 0.113725],\n  specular: [0.992157, 0.941176, 0.807843],\n  shine: 0.21794872\n});\n\n// src/materials3d/Bronze.ts\nvar Bronze = new Material({\n  ambient: [0.2125, 0.1275, 0.054],\n  diffuse: [0.714, 0.4284, 0.18144],\n  specular: [0.393548, 0.271906, 0.166721],\n  shine: 0.2\n});\n\n// src/materials3d/Chrome.ts\nvar Chrome = new Material({\n  ambient: [0.25, 0.25, 0.25],\n  diffuse: [0.4, 0.4, 0.4],\n  specular: [0.774597, 0.774597, 0.774597],\n  shine: 0.6\n});\n\n// src/materials3d/Copper.ts\nvar Copper = new Material({\n  ambient: [0.19125, 0.0735, 0.0225],\n  diffuse: [0.7038, 0.27048, 0.0828],\n  specular: [0.256777, 0.137622, 0.086014],\n  shine: 0.1\n});\n\n// src/materials3d/CyanPlastic.ts\nvar CyanPlastic = new Material({\n  ambient: [0, 0.1, 0.06],\n  diffuse: [0, 0.50980392, 0.50980392],\n  specular: [0.50196078, 0.50196078, 0.50196078],\n  shine: 0.25\n});\n\n// src/materials3d/CyanRubber.ts\nvar CyanRubber = new Material({\n  ambient: [0, 0.05, 0.05],\n  diffuse: [0.4, 0.5, 0.5],\n  specular: [0.04, 0.7, 0.7],\n  shine: 0.078125\n});\n\n// src/materials3d/Emerald.ts\nvar Emerald = new Material({\n  ambient: [0.0215, 0.1745, 0.0215],\n  diffuse: [0.07568, 0.61424, 0.07568],\n  specular: [0.633, 0.727811, 0.633],\n  shine: 0.6\n});\n\n// src/materials3d/Gold.ts\nvar Gold = new Material({\n  ambient: [0.24725, 0.1995, 0.0745],\n  diffuse: [0.75164, 0.60648, 0.22648],\n  specular: [0.628281, 0.555802, 0.366065],\n  shine: 0.4\n});\n\n// src/materials3d/GreenPlastic.ts\nvar GreenPlastic = new Material({\n  ambient: [0, 0, 0],\n  diffuse: [0.1, 0.35, 0.1],\n  specular: [0.45, 0.55, 0.45],\n  shine: 0.25\n});\n\n// src/materials3d/GreenRubber.ts\nvar GreenRubber = new Material({\n  ambient: [0, 0.05, 0],\n  diffuse: [0.4, 0.5, 0.4],\n  specular: [0.04, 0.7, 0.04],\n  shine: 0.078125\n});\n\n// src/materials3d/Jade.ts\nvar Jade = new Material({\n  ambient: [0.135, 0.2225, 0.1575],\n  diffuse: [0.54, 0.89, 0.63],\n  specular: [0.316228, 0.316228, 0.316228],\n  shine: 0.1\n});\n\n// src/materials3d/Obsidian.ts\nvar Obsidian = new Material({\n  ambient: [0.05375, 0.05, 0.06625],\n  diffuse: [0.18275, 0.17, 0.22525],\n  specular: [0.332741, 0.328634, 0.346435],\n  shine: 0.3\n});\n\n// src/materials3d/Pearl.ts\nvar Pearl = new Material({\n  ambient: [0.25, 0.20725, 0.20725],\n  diffuse: [1, 0.829, 0.829],\n  specular: [0.296648, 0.296648, 0.296648],\n  shine: 0.088\n});\n\n// src/materials3d/RedPlastic.ts\nvar RedPlastic = new Material({\n  ambient: [0, 0, 0],\n  diffuse: [0.5, 0, 0],\n  specular: [0.7, 0.6, 0.6],\n  shine: 0.25\n});\n\n// src/materials3d/RedRubber.ts\nvar RedRubber = new Material({\n  ambient: [0.05, 0, 0],\n  diffuse: [0.5, 0.4, 0.4],\n  specular: [0.7, 0.04, 0.04],\n  shine: 0.078125\n});\n\n// src/materials3d/Ruby.ts\nvar Ruby = new Material({\n  ambient: [0.1745, 0.01175, 0.01175],\n  diffuse: [0.61424, 0.04136, 0.04136],\n  specular: [0.727811, 0.626959, 0.626959],\n  shine: 0.6\n});\n\n// src/materials3d/Silver.ts\nvar Silver = new Material({\n  ambient: [0.19225, 0.19225, 0.19225],\n  diffuse: [0.50754, 0.50754, 0.50754],\n  specular: [0.508273, 0.508273, 0.508273],\n  shine: 0.4\n});\n\n// src/materials3d/Turquoise.ts\nvar Turquoise = new Material({\n  ambient: [0.1, 0.18725, 0.1745],\n  diffuse: [0.396, 0.74151, 0.69102],\n  specular: [0.297254, 0.30829, 0.306678],\n  shine: 0.1\n});\n\n// src/materials3d/WhitePlastic.ts\nvar WhitePlastic = new Material({\n  ambient: [0, 0, 0],\n  diffuse: [0.55, 0.55, 0.55],\n  specular: [0.7, 0.7, 0.7],\n  shine: 0.25\n});\n\n// src/materials3d/WhiteRubber.ts\nvar WhiteRubber = new Material({\n  ambient: [0.05, 0.05, 0.05],\n  diffuse: [0.5, 0.5, 0.5],\n  specular: [0.7, 0.7, 0.7],\n  shine: 0.078125\n});\n\n// src/materials3d/YellowPlastic.ts\nvar YellowPlastic = new Material({\n  ambient: [0, 0, 0],\n  diffuse: [0.5, 0.5, 0],\n  specular: [0.6, 0.6, 0.5],\n  shine: 0.25\n});\n\n// src/materials3d/YellowRubber.ts\nvar YellowRubber = new Material({\n  ambient: [0.05, 0.05, 0],\n  diffuse: [0.5, 0.5, 0.4],\n  specular: [0.7, 0.7, 0.04],\n  shine: 0.078125\n});\n\n// src/textures/index.ts\nvar textures_exports = {};\n__export(textures_exports, {\n  CreateCanvas: () => CreateCanvas,\n  Frame: () => Frame,\n  GetFrames: () => GetFrames,\n  GetFramesInRange: () => GetFramesInRange,\n  Palettes: () => palettes_exports,\n  Parsers: () => parsers_exports,\n  SetFilter: () => SetFilter,\n  Texture: () => Texture,\n  TextureManager: () => TextureManager,\n  Types: () => types_exports\n});\n\n// src/textures/palettes/index.ts\nvar palettes_exports = {};\n__export(palettes_exports, {\n  Arne16: () => Arne16,\n  C64: () => C64,\n  CGA: () => CGA,\n  JMP: () => JMP,\n  MSX: () => MSX,\n  PICO8: () => PICO8\n});\n\n// src/textures/palettes/Arne16.ts\nvar Arne16 = [\n  \"#000\",\n  \"#9D9D9D\",\n  \"#FFF\",\n  \"#BE2633\",\n  \"#E06F8B\",\n  \"#493C2B\",\n  \"#A46422\",\n  \"#EB8931\",\n  \"#F7E26B\",\n  \"#2F484E\",\n  \"#44891A\",\n  \"#A3CE27\",\n  \"#1B2632\",\n  \"#005784\",\n  \"#31A2F2\",\n  \"#B2DCEF\"\n];\n\n// src/textures/palettes/C64.ts\nvar C64 = [\n  \"#000\",\n  \"#fff\",\n  \"#8b4131\",\n  \"#7bbdc5\",\n  \"#8b41ac\",\n  \"#6aac41\",\n  \"#3931a4\",\n  \"#d5de73\",\n  \"#945a20\",\n  \"#5a4100\",\n  \"#bd736a\",\n  \"#525252\",\n  \"#838383\",\n  \"#acee8b\",\n  \"#7b73de\",\n  \"#acacac\"\n];\n\n// src/textures/palettes/CGA.ts\nvar CGA = [\n  \"#000\",\n  \"#2234d1\",\n  \"#0c7e45\",\n  \"#44aacc\",\n  \"#8a3622\",\n  \"#5c2e78\",\n  \"#aa5c3d\",\n  \"#b5b5b5\",\n  \"#5e606e\",\n  \"#4c81fb\",\n  \"#6cd947\",\n  \"#7be2f9\",\n  \"#eb8a60\",\n  \"#e23d69\",\n  \"#ffd93f\",\n  \"#fff\"\n];\n\n// src/textures/palettes/JMP.ts\nvar JMP = [\n  \"#000\",\n  \"#191028\",\n  \"#46af45\",\n  \"#a1d685\",\n  \"#453e78\",\n  \"#7664fe\",\n  \"#833129\",\n  \"#9ec2e8\",\n  \"#dc534b\",\n  \"#e18d79\",\n  \"#d6b97b\",\n  \"#e9d8a1\",\n  \"#216c4b\",\n  \"#d365c8\",\n  \"#afaab9\",\n  \"#f5f4eb\"\n];\n\n// src/textures/palettes/MSX.ts\nvar MSX = [\n  \"#000\",\n  \"#191028\",\n  \"#46af45\",\n  \"#a1d685\",\n  \"#453e78\",\n  \"#7664fe\",\n  \"#833129\",\n  \"#9ec2e8\",\n  \"#dc534b\",\n  \"#e18d79\",\n  \"#d6b97b\",\n  \"#e9d8a1\",\n  \"#216c4b\",\n  \"#d365c8\",\n  \"#afaab9\",\n  \"#fff\"\n];\n\n// src/textures/palettes/PICO8.ts\nvar PICO8 = [\n  \"#000\",\n  \"#1D2B53\",\n  \"#7E2553\",\n  \"#008751\",\n  \"#AB5236\",\n  \"#5F574F\",\n  \"#C2C3C7\",\n  \"#FFF1E8\",\n  \"#FF004D\",\n  \"#FFA300\",\n  \"#FFEC27\",\n  \"#00E436\",\n  \"#29ADFF\",\n  \"#83769C\",\n  \"#FF77A8\",\n  \"#FFCCAA\"\n];\n\n// src/textures/parsers/index.ts\nvar parsers_exports = {};\n__export(parsers_exports, {\n  AtlasParser: () => AtlasParser,\n  BitmapTextParser: () => BitmapTextParser,\n  SpriteSheetParser: () => SpriteSheetParser\n});\n\n// src/textures/types/index.ts\nvar types_exports = {};\n__export(types_exports, {\n  CanvasTexture: () => CanvasTexture,\n  GridTexture: () => GridTexture,\n  PixelTexture: () => PixelTexture,\n  RenderTexture: () => RenderTexture,\n  SolidColorTexture: () => SolidColorTexture\n});\n\n// src/textures/types/GridTexture.ts\nfunction GridTexture(color1, color2, width = 32, height = 32, cols = 2, rows = 2) {\n  const ctx = CreateCanvas(width, height);\n  const colWidth = width / cols;\n  const rowHeight = height / rows;\n  ctx.fillStyle = color1;\n  ctx.fillRect(0, 0, width, height);\n  ctx.fillStyle = color2;\n  for (let y = 0; y < rows; y++) {\n    for (let x = y % 2; x < cols; x += 2) {\n      ctx.fillRect(x * colWidth, y * rowHeight, colWidth, rowHeight);\n    }\n  }\n  return new Texture(ctx.canvas);\n}\n\n// src/textures/types/PixelTexture.ts\nfunction PixelTexture(config) {\n  const {\n    data = [],\n    palette = Arne16,\n    pixelWidth = 1,\n    pixelHeight = pixelWidth,\n    preRender = null,\n    postRender = null\n  } = config;\n  let {\n    canvas = null,\n    resizeCanvas = true,\n    clearCanvas = true\n  } = config;\n  const width = Math.floor(Math.abs(data[0].length * pixelWidth));\n  const height = Math.floor(Math.abs(data.length * pixelHeight));\n  if (!canvas) {\n    canvas = CreateCanvas(width, height).canvas;\n    resizeCanvas = false;\n    clearCanvas = false;\n  }\n  if (resizeCanvas) {\n    canvas.width = width;\n    canvas.height = height;\n  }\n  const ctx = canvas.getContext(\"2d\");\n  if (clearCanvas) {\n    ctx.clearRect(0, 0, width, height);\n  }\n  if (preRender) {\n    preRender(canvas, ctx);\n  }\n  for (let y = 0; y < data.length; y++) {\n    const row = data[y];\n    for (let x = 0; x < row.length; x++) {\n      const d = row[x];\n      if (d !== \".\" && d !== \" \") {\n        ctx.fillStyle = palette[parseInt(\"0x\" + d.toUpperCase())];\n        ctx.fillRect(x * pixelWidth, y * pixelHeight, pixelWidth, pixelHeight);\n      }\n    }\n  }\n  if (postRender) {\n    postRender(canvas, ctx);\n  }\n  return new Texture(canvas);\n}\n\n// src/textures/types/RenderTexture.ts\nvar RenderTexture = class extends Texture {\n  constructor(renderer, width = 256, height = width) {\n    super(null, width, height);\n    this.renderer = renderer;\n  }\n  cls() {\n    return this;\n  }\n  batchStart() {\n    return this;\n  }\n  batchDraw(sprites) {\n    for (let i = 0, len = sprites.length; i < len; i++) {\n    }\n    return this;\n  }\n  batchEnd() {\n    const renderer = this.renderer;\n    renderer.reset();\n    return this;\n  }\n  draw(...sprites) {\n    this.batchStart();\n    this.batchDraw(sprites);\n    this.batchEnd();\n    return this;\n  }\n};\n\n// src/textures/types/SolidColorTexture.ts\nfunction SolidColorTexture(color = \"rgba(0,0,0,0)\", width = 32, height = 32) {\n  const ctx = CreateCanvas(width, height);\n  ctx.fillStyle = color;\n  ctx.fillRect(0, 0, width, height);\n  return new Texture(ctx.canvas);\n}\n\n// src/textures/GetFrames.ts\nfunction GetFrames(texture, frames) {\n  const output = [];\n  frames.forEach((key) => {\n    output.push(texture.getFrame(key));\n  });\n  return output;\n}\n\n// src/textures/GetFramesInRange.ts\nfunction GetFramesInRange(texture, config) {\n  const {\n    prefix = \"\",\n    start = 0,\n    zeroPad = 0,\n    suffix = \"\"\n  } = config;\n  let end = config.end;\n  const output = [];\n  const diff = start < end ? 1 : -1;\n  end += diff;\n  for (let i = start; i !== end; i += diff) {\n    const frameKey = prefix + i.toString().padStart(zeroPad, \"0\") + suffix;\n    output.push(texture.getFrame(frameKey));\n  }\n  return output;\n}\n\n// src/textures/SetFilter.ts\nfunction SetFilter(linear, ...textures) {\n  textures.forEach((texture) => {\n    if (texture.binding) {\n      texture.binding.setFilter(linear);\n    }\n  });\n  return textures;\n}\n\n// src/textures/TextureManager.ts\nvar TextureManager = class {\n  constructor() {\n    this.textures = new Map();\n    this.createDefaultTextures();\n    TextureManagerInstance.set(this);\n  }\n  createDefaultTextures() {\n    this.add(\"__BLANK\", new Texture(CreateCanvas(32, 32).canvas));\n    const missing = CreateCanvas(32, 32);\n    missing.strokeStyle = \"#0f0\";\n    missing.moveTo(0, 0);\n    missing.lineTo(32, 32);\n    missing.stroke();\n    missing.strokeRect(0.5, 0.5, 31, 31);\n    this.add(\"__MISSING\", new Texture(missing.canvas));\n    const white = CreateCanvas(32, 32);\n    white.fillStyle = \"#fff\";\n    white.fillRect(0, 0, 32, 32);\n    this.add(\"__WHITE\", new Texture(white.canvas));\n  }\n  get(key) {\n    const textures = this.textures;\n    if (textures.has(key)) {\n      return textures.get(key);\n    } else {\n      return textures.get(\"__MISSING\");\n    }\n  }\n  has(key) {\n    return this.textures.has(key);\n  }\n  add(key, source, glConfig) {\n    let texture;\n    const textures = this.textures;\n    if (!textures.has(key)) {\n      if (source instanceof Texture) {\n        texture = source;\n      } else {\n        texture = new Texture(source, 0, 0, glConfig);\n      }\n      texture.key = key;\n      textures.set(key, texture);\n    }\n    return texture;\n  }\n};\n\n// src/time/index.ts\nvar time_exports = {};\n__export(time_exports, {\n  AddDelayedCall: () => AddDelayedCall,\n  AddTimer: () => AddTimer,\n  Clock: () => Clock,\n  NOOP: () => NOOP2\n});\n\n// src/time/NOOP.ts\nfunction NOOP2() {\n}\n\n// src/time/AddTimer.ts\nfunction AddTimer(clock, config) {\n  const {\n    duration = 0,\n    repeat = 0,\n    delay = -1,\n    onStart = NOOP2,\n    onUpdate = NOOP2,\n    onRepeat = NOOP2,\n    onComplete = NOOP2\n  } = config;\n  const timer = {\n    elapsed: duration,\n    duration,\n    repeat,\n    delay,\n    update: null,\n    onStart,\n    onUpdate,\n    onRepeat,\n    onComplete\n  };\n  timer.update = (delta) => {\n    if (timer.delay > 0) {\n      timer.delay -= delta;\n      if (timer.delay < 0) {\n        timer.delay = 0;\n      } else {\n        return false;\n      }\n    }\n    if (timer.delay === 0) {\n      timer.onStart();\n      timer.delay = -1;\n    }\n    if (timer.delay === -1) {\n      timer.elapsed -= delta;\n      timer.onUpdate(delta, timer.elapsed / timer.duration);\n      if (timer.elapsed <= 0) {\n        if (timer.repeat > 0) {\n          timer.repeat--;\n          timer.elapsed = timer.duration;\n          timer.onRepeat(timer.repeat);\n        } else {\n          timer.elapsed = 0;\n          timer.onComplete();\n        }\n      }\n    }\n    return timer.elapsed === 0;\n  };\n  clock.events.add(timer);\n}\n\n// src/time/AddDelayedCall.ts\nfunction AddDelayedCall(clock, delay, callback) {\n  AddTimer(clock, {\n    duration: 0,\n    delay,\n    onComplete: callback\n  });\n}\n\n// src/time/Clock.ts\nvar Clock = class {\n  constructor(world) {\n    this.world = world;\n    this.timeScale = 1;\n    this.events = new Set();\n  }\n  update(delta, time) {\n    this.now = time;\n    delta *= this.timeScale;\n    this.events.forEach((timer) => {\n      if (timer.update(delta)) {\n        this.events.delete(timer);\n      }\n    });\n  }\n};\n\n// src/world/index.ts\nvar world_exports = {};\n__export(world_exports, {\n  BaseWorld: () => BaseWorld,\n  BuildRenderList: () => BuildRenderList,\n  CalculateTotalRenderable: () => CalculateTotalRenderable,\n  CreateWorldRenderData: () => CreateWorldRenderData,\n  Events: () => events_exports2,\n  HasDirtyChildren: () => HasDirtyChildren,\n  MergeRenderData: () => MergeRenderData,\n  ResetWorldRenderData: () => ResetWorldRenderData,\n  StaticWorld: () => StaticWorld,\n  UpdateCachedLayers: () => UpdateCachedLayers,\n  World: () => World,\n  WorldDepthFirstSearch: () => WorldDepthFirstSearch\n});\n\n// src/world/events/index.ts\nvar events_exports2 = {};\n__export(events_exports2, {\n  WorldRenderEvent: () => WorldRenderEvent,\n  WorldShutdownEvent: () => WorldShutdownEvent\n});\n\n// src/world/events/WorldRenderEvent.ts\nvar WorldRenderEvent = \"worldrender\";\n\n// src/world/events/WorldShutdownEvent.ts\nvar WorldShutdownEvent = \"worldshutdown\";\n\n// src/world/CalculateTotalRenderable.ts\nfunction CalculateTotalRenderable(entry, renderData) {\n  renderData.numRendered++;\n  renderData.numRenderable++;\n  if (entry.node.dirtyFrame >= renderData.gameFrame) {\n    renderData.dirtyFrame++;\n  }\n  entry.children.forEach((child) => {\n    if (child.children.length > 0) {\n      CalculateTotalRenderable(child, renderData);\n    }\n  });\n}\n\n// src/world/HasDirtyChildren.ts\nfunction HasDirtyChildren(parent) {\n  if (parent.node.isDirty(DIRTY_CONST.CHILD_CACHE)) {\n    return true;\n  }\n  const stack = [parent];\n  while (stack.length > 0) {\n    const entry = stack.pop();\n    if (entry.node.isDirty(DIRTY_CONST.TRANSFORM)) {\n      return true;\n    }\n    const numChildren = entry.children.length;\n    if (numChildren > 0) {\n      for (let i = 0; i < numChildren; i++) {\n        stack.push(entry.children[i]);\n      }\n    }\n  }\n  stack.length = 0;\n  return false;\n}\n\n// src/world/UpdateCachedLayers.ts\nfunction UpdateCachedLayers(cachedLayers, dirtyCamera) {\n  cachedLayers.forEach((layer) => {\n    if (dirtyCamera || HasDirtyChildren(layer)) {\n      layer.node.setDirty(DIRTY_CONST.CHILD_CACHE);\n    } else {\n      layer.children.length = 0;\n    }\n  });\n}\n\n// src/world/WorldDepthFirstSearch.ts\nfunction WorldDepthFirstSearch(cachedLayers, parent, output = []) {\n  for (let i = 0; i < parent.numChildren; i++) {\n    const node = parent.children[i];\n    if (node.isRenderable()) {\n      const children = [];\n      const entry = {node, children};\n      output.push(entry);\n      if (node.willRenderChildren && node.numChildren > 0) {\n        if (node.willCacheChildren) {\n          cachedLayers.push(entry);\n        }\n        WorldDepthFirstSearch(cachedLayers, node, children);\n      }\n    }\n  }\n  return output;\n}\n\n// src/world/BuildRenderList.ts\nfunction BuildRenderList(world) {\n  const cachedLayers = [];\n  const stack = [];\n  const entries = WorldDepthFirstSearch(cachedLayers, world, stack);\n  const renderData = world.renderData;\n  if (cachedLayers.length > 0) {\n    UpdateCachedLayers(cachedLayers, world.camera.dirtyRender);\n  }\n  entries.forEach((entry) => {\n    if (entry.children.length > 0) {\n      CalculateTotalRenderable(entry, renderData);\n    } else {\n      renderData.numRendered++;\n      renderData.numRenderable++;\n      if (entry.node.dirtyFrame >= renderData.gameFrame) {\n        renderData.dirtyFrame++;\n      }\n    }\n  });\n  world.renderList = entries;\n  if (world.forceRefresh) {\n    renderData.dirtyFrame++;\n    world.forceRefresh = false;\n  }\n}\n\n// src/world/MergeRenderData.ts\nfunction MergeRenderData(sceneRenderData, worldRenderData) {\n  sceneRenderData.numDirtyFrames += worldRenderData.dirtyFrame;\n  sceneRenderData.numTotalFrames += worldRenderData.numRendered;\n  if (worldRenderData.camera.dirtyRender) {\n    sceneRenderData.numDirtyCameras++;\n  }\n  sceneRenderData.worldData.push(worldRenderData);\n}\n\n// src/world/ResetWorldRenderData.ts\nfunction ResetWorldRenderData(renderData, gameFrame) {\n  renderData.gameFrame = gameFrame;\n  renderData.dirtyFrame = 0;\n  renderData.numRendered = 0;\n  renderData.numRenderable = 0;\n}\n\n// src/world/BaseWorld.ts\nvar BaseWorld = class extends GameObject {\n  constructor(scene) {\n    super();\n    this.forceRefresh = false;\n    this.is3D = false;\n    this.type = \"BaseWorld\";\n    this.scene = scene;\n    this.world = this;\n    this.events = new Map();\n    this.renderList = [];\n    this._updateListener = On(scene, \"update\", (delta, time) => this.update(delta, time));\n    this._renderListener = On(scene, \"render\", (renderData) => this.render(renderData));\n    this._shutdownListener = On(scene, \"shutdown\", () => this.shutdown());\n    Once(scene, \"destroy\", () => this.destroy());\n  }\n  update(delta, time) {\n    if (!this.willUpdate) {\n      return;\n    }\n    Emit(this, UpdateEvent, delta, time, this);\n    super.update(delta, time);\n  }\n  postUpdate(delta, time) {\n    Emit(this, PostUpdateEvent, delta, time, this);\n  }\n  render(sceneRenderData) {\n    const renderData = this.renderData;\n    ResetWorldRenderData(renderData, sceneRenderData.gameFrame);\n    if (!this.willRender || !this.visible) {\n      return;\n    }\n    BuildRenderList(this);\n    Emit(this, WorldRenderEvent, renderData, this);\n    MergeRenderData(sceneRenderData, renderData);\n    this.camera.dirtyRender = false;\n  }\n  renderGL(renderPass) {\n    const currentCamera = renderPass.current2DCamera;\n    const camera = this.camera;\n    if (!currentCamera || !Mat2dEquals(camera.worldTransform, currentCamera.worldTransform)) {\n      Flush(renderPass);\n    }\n    Begin(renderPass, camera);\n    this.renderList.forEach((entry) => {\n      if (entry.children.length > 0) {\n        this.renderNode(entry, renderPass);\n      } else {\n        entry.node.renderGL(renderPass);\n      }\n    });\n  }\n  renderNode(entry, renderPass) {\n    entry.node.renderGL(renderPass);\n    entry.children.forEach((child) => {\n      if (child.children.length > 0) {\n        this.renderNode(child, renderPass);\n      } else {\n        child.node.renderGL(renderPass);\n      }\n    });\n    entry.node.postRenderGL(renderPass);\n  }\n  postRenderGL(renderPass) {\n  }\n  shutdown() {\n    const scene = this.scene;\n    Off(scene, \"update\", this._updateListener);\n    Off(scene, \"render\", this._renderListener);\n    Off(scene, \"shutdown\", this._shutdownListener);\n    RemoveChildren(this);\n    Emit(this, WorldShutdownEvent, this);\n    ResetWorldRenderData(this.renderData, 0);\n    if (this.camera) {\n      this.camera.reset();\n    }\n  }\n  destroy(reparentChildren) {\n    super.destroy(reparentChildren);\n    Emit(this, DestroyEvent, this);\n    ResetWorldRenderData(this.renderData, 0);\n    if (this.camera) {\n      this.camera.destroy();\n    }\n    this.events.clear();\n    this.camera = null;\n    this.renderData = null;\n    this.events = null;\n  }\n};\n\n// src/world/CreateWorldRenderData.ts\nfunction CreateWorldRenderData(world, camera) {\n  return {\n    world,\n    camera,\n    gameFrame: 0,\n    dirtyFrame: 0,\n    numRendered: 0,\n    numRenderable: 0\n  };\n}\n\n// src/world/StaticWorld.ts\nvar StaticWorld = class extends BaseWorld {\n  constructor(scene) {\n    super(scene);\n    this.type = \"StaticWorld\";\n    this.camera = new StaticCamera();\n    this.renderData = CreateWorldRenderData(this, this.camera);\n  }\n};\n\n// src/world/World.ts\nvar World = class extends BaseWorld {\n  constructor(scene) {\n    super(scene);\n    this.enableCameraCull = true;\n    this.type = \"World\";\n    this.camera = new Camera();\n    this.renderData = CreateWorldRenderData(this, this.camera);\n  }\n};\n\n// src/world3d/index.ts\nvar world3d_exports = {};\n__export(world3d_exports, {\n  BaseWorld3D: () => BaseWorld3D,\n  BuildRenderList: () => BuildRenderList2,\n  CalculateTotalRenderable: () => CalculateTotalRenderable2,\n  CreateWorld3DRenderData: () => CreateWorld3DRenderData,\n  Events: () => events_exports3,\n  HasDirtyChildren: () => HasDirtyChildren2,\n  MergeRenderData: () => MergeRenderData2,\n  ResetWorld3DRenderData: () => ResetWorld3DRenderData,\n  UpdateCachedLayers: () => UpdateCachedLayers2,\n  World3D: () => World3D,\n  WorldDepthFirstSearch: () => WorldDepthFirstSearch2\n});\n\n// src/world3d/events/index.ts\nvar events_exports3 = {};\n__export(events_exports3, {\n  World3DRenderEvent: () => World3DRenderEvent,\n  World3DShutdownEvent: () => World3DShutdownEvent\n});\n\n// src/world3d/events/World3DRenderEvent.ts\nvar World3DRenderEvent = \"worldrender\";\n\n// src/world3d/events/World3DShutdownEvent.ts\nvar World3DShutdownEvent = \"worldshutdown\";\n\n// src/world3d/CalculateTotalRenderable.ts\nfunction CalculateTotalRenderable2(entry, renderData) {\n  renderData.numRendered++;\n  renderData.numRenderable++;\n  if (entry.node.dirtyFrame >= renderData.gameFrame) {\n    renderData.dirtyFrame++;\n  }\n  entry.children.forEach((child) => {\n    if (child.children.length > 0) {\n      CalculateTotalRenderable2(child, renderData);\n    }\n  });\n}\n\n// src/world3d/HasDirtyChildren.ts\nfunction HasDirtyChildren2(parent) {\n  if (parent.node.isDirty(DIRTY_CONST.CHILD_CACHE)) {\n    return true;\n  }\n  const stack = [parent];\n  while (stack.length > 0) {\n    const entry = stack.pop();\n    if (entry.node.isDirty(DIRTY_CONST.TRANSFORM)) {\n      return true;\n    }\n    const numChildren = entry.children.length;\n    if (numChildren > 0) {\n      for (let i = 0; i < numChildren; i++) {\n        stack.push(entry.children[i]);\n      }\n    }\n  }\n  stack.length = 0;\n  return false;\n}\n\n// src/world3d/UpdateCachedLayers.ts\nfunction UpdateCachedLayers2(cachedLayers, dirtyCamera) {\n  cachedLayers.forEach((layer) => {\n    if (dirtyCamera || HasDirtyChildren2(layer)) {\n      layer.node.setDirty(DIRTY_CONST.CHILD_CACHE);\n    } else {\n      layer.children.length = 0;\n    }\n  });\n}\n\n// src/world3d/WorldDepthFirstSearch.ts\nfunction WorldDepthFirstSearch2(cachedLayers, parent, output = []) {\n  for (let i = 0; i < parent.numChildren; i++) {\n    const node = parent.children[i];\n    if (node.isRenderable()) {\n      const children = [];\n      const entry = {node, children};\n      output.push(entry);\n      if (node.willRenderChildren && node.numChildren > 0) {\n        if (node.willCacheChildren) {\n          cachedLayers.push(entry);\n        }\n        WorldDepthFirstSearch2(cachedLayers, node, children);\n      }\n    }\n  }\n  return output;\n}\n\n// src/world3d/BuildRenderList.ts\nfunction BuildRenderList2(world) {\n  const cachedLayers = [];\n  const stack = [];\n  const entries = WorldDepthFirstSearch2(cachedLayers, world, stack);\n  const renderData = world.renderData;\n  if (cachedLayers.length > 0) {\n    UpdateCachedLayers2(cachedLayers, world.camera.dirtyRender);\n  }\n  entries.forEach((entry) => {\n    if (entry.children.length > 0) {\n      CalculateTotalRenderable2(entry, renderData);\n    } else {\n      renderData.numRendered++;\n      renderData.numRenderable++;\n      if (entry.node.dirtyFrame >= renderData.gameFrame) {\n        renderData.dirtyFrame++;\n      }\n    }\n  });\n  world.renderList = entries;\n  if (world.forceRefresh) {\n    renderData.dirtyFrame++;\n    world.forceRefresh = false;\n  }\n}\n\n// src/world3d/MergeRenderData.ts\nfunction MergeRenderData2(sceneRenderData, worldRenderData) {\n  sceneRenderData.numDirtyFrames += worldRenderData.dirtyFrame;\n  sceneRenderData.numTotalFrames += worldRenderData.numRendered;\n  if (worldRenderData.camera.dirtyRender) {\n    sceneRenderData.numDirtyCameras++;\n  }\n  sceneRenderData.worldData.push(worldRenderData);\n}\n\n// src/world3d/ResetWorld3DRenderData.ts\nfunction ResetWorld3DRenderData(renderData, gameFrame) {\n  renderData.gameFrame = gameFrame;\n  renderData.dirtyFrame = 0;\n  renderData.numRendered = 0;\n  renderData.numRenderable = 0;\n}\n\n// src/world3d/BaseWorld3D.ts\nvar BaseWorld3D = class extends GameObject3D {\n  constructor(scene) {\n    super();\n    this.forceRefresh = false;\n    this.is3D = true;\n    this.type = \"BaseWorld\";\n    this.scene = scene;\n    this.world = this;\n    this.events = new Map();\n    this.renderList = [];\n    this._updateListener = On(scene, \"update\", (delta, time) => this.update(delta, time));\n    this._renderListener = On(scene, \"render\", (renderData) => this.render(renderData));\n    this._shutdownListener = On(scene, \"shutdown\", () => this.shutdown());\n    Once(scene, \"destroy\", () => this.destroy());\n  }\n  update(delta, time) {\n    if (!this.willUpdate) {\n      return;\n    }\n    Emit(this, UpdateEvent, delta, time, this);\n    super.update(delta, time);\n  }\n  postUpdate(delta, time) {\n    Emit(this, PostUpdateEvent, delta, time, this);\n  }\n  render(sceneRenderData) {\n    const renderData = this.renderData;\n    ResetWorld3DRenderData(renderData, sceneRenderData.gameFrame);\n    if (!this.willRender || !this.visible) {\n      return;\n    }\n    BuildRenderList2(this);\n    Emit(this, World3DRenderEvent, renderData, this);\n    MergeRenderData2(sceneRenderData, renderData);\n  }\n  renderNode(entry, renderPass) {\n    entry.node.renderGL(renderPass);\n    entry.children.forEach((child) => {\n      if (child.children.length > 0) {\n        this.renderNode(child, renderPass);\n      } else {\n        child.node.renderGL(renderPass);\n      }\n    });\n    entry.node.postRenderGL(renderPass);\n  }\n  shutdown() {\n    const scene = this.scene;\n    Off(scene, \"update\", this._updateListener);\n    Off(scene, \"render\", this._renderListener);\n    Off(scene, \"shutdown\", this._shutdownListener);\n    RemoveChildren3D(this);\n    Emit(this, World3DShutdownEvent, this);\n    ResetWorld3DRenderData(this.renderData, 0);\n  }\n  destroy(reparentChildren) {\n    super.destroy(reparentChildren);\n    Emit(this, DestroyEvent, this);\n    ResetWorld3DRenderData(this.renderData, 0);\n    this.events.clear();\n    this.camera = null;\n    this.renderData = null;\n    this.events = null;\n  }\n};\n\n// src/world3d/CreateWorld3DRenderData.ts\nfunction CreateWorld3DRenderData(world, camera) {\n  return {\n    world,\n    camera,\n    gameFrame: 0,\n    dirtyFrame: 0,\n    numRendered: 0,\n    numRenderable: 0\n  };\n}\n\n// src/renderer/webgl1/glsl/AMBIENT_LIGHT_FRAG.ts\nvar AMBIENT_LIGHT_FRAG = `#define SHADER_NAME AMBIENT_LIGHT_FRAG\n\nprecision highp float;\n\nuniform vec3 uLightPosition;\nuniform vec3 uLightAmbient;\nuniform vec3 uLightDiffuse;\nuniform vec3 uLightSpecular;\n\nuniform vec3 uMaterialAmbient;\nuniform vec3 uMaterialDiffuse;\nuniform vec3 uMaterialSpecular;\nuniform float uMaterialShine;\n\nuniform vec3 uCameraPosition;\n\nuniform sampler2D uTexture;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vNormal;\nvarying vec3 vPosition;\n\nvoid main (void)\n{\n    vec4 color = texture2D(uTexture, vTextureCoord);\n\n    vec3 ambient = uLightAmbient * uMaterialAmbient;\n\n    vec3 norm = normalize(vNormal);\n    vec3 lightDir = normalize(uLightPosition - vPosition);\n    float diff = max(dot(norm, lightDir), 0.0);\n    vec3 diffuse = uLightDiffuse * (diff * uMaterialDiffuse);\n\n    vec3 viewDir = normalize(uCameraPosition - vPosition);\n    vec3 reflectDir = reflect(-lightDir, norm);\n    float spec = pow(max(dot(viewDir, reflectDir), 0.0), uMaterialShine);\n    vec3 specular = uLightSpecular * (spec * uMaterialSpecular);\n\n    vec3 result = (ambient + diffuse + specular) * color.rgb;\n\n    gl_FragColor = vec4(result, color.a);\n}`;\n\n// src/renderer/webgl1/glsl/AMBIENT_LIGHT_VERT.ts\nvar AMBIENT_LIGHT_VERT = `\n#define SHADER_NAME AMBIENT_LIGHT_VERT\n\nprecision highp float;\n\nattribute vec3 aVertexPosition;\nattribute vec3 aVertexNormal;\nattribute vec2 aTextureCoord;\n\nuniform mat4 uViewProjectionMatrix;\nuniform mat4 uModelMatrix;\nuniform mat4 uNormalMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vNormal;\nvarying vec3 vPosition;\n\nvoid main(void)\n{\n    vTextureCoord = aTextureCoord;\n\n    vPosition = vec3(uModelMatrix * vec4(aVertexPosition, 1.0));\n\n    vNormal = vec3(uNormalMatrix * vec4(aVertexNormal, 1.0));\n\n    gl_Position = uViewProjectionMatrix * uModelMatrix * vec4(aVertexPosition, 1.0);\n}\n`;\n\n// src/renderer/webgl1/shaders/AmbientLightShader.ts\nvar AmbientLightShader = class extends Shader {\n  constructor() {\n    super();\n    const tempMat4 = new Float32Array(16).fill(0);\n    const tempVec3 = [0, 0, 0];\n    const config = {\n      fragmentShader: AMBIENT_LIGHT_FRAG,\n      vertexShader: AMBIENT_LIGHT_VERT,\n      attributes: {\n        aVertexPosition: {size: 3, type: FLOAT, normalized: false, offset: 0},\n        aVertexNormal: {size: 3, type: FLOAT, normalized: false, offset: 12},\n        aTextureCoord: {size: 2, type: FLOAT, normalized: false, offset: 24}\n      },\n      uniforms: {\n        uViewProjectionMatrix: tempMat4,\n        uNormalMatrix: tempMat4,\n        uModelMatrix: tempMat4,\n        uCameraPosition: tempVec3,\n        uTexture: 0,\n        uLightPosition: tempVec3,\n        uLightAmbient: tempVec3,\n        uLightDiffuse: tempVec3,\n        uLightSpecular: tempVec3,\n        uMaterialAmbient: tempVec3,\n        uMaterialDiffuse: tempVec3,\n        uMaterialSpecular: tempVec3,\n        uMaterialShine: 0\n      }\n    };\n    this.fromConfig(config);\n  }\n};\n\n// src/camera3d/NewCamera3D.ts\nvar NewCamera3D = class {\n  constructor(fov = 45, near = 0.1, far = 1e3) {\n    this.isOrbit = false;\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n    this.minPolarAngle = 0;\n    this.maxPolarAngle = Math.PI;\n    this.minAzimuthAngle = -Infinity;\n    this.maxAzimuthAngle = Infinity;\n    this.dirtyRender = true;\n    this.panRate = 5;\n    this.zoomRate = 200;\n    this.rotateRate = -3;\n    this._yaw = 0;\n    this._pitch = 0;\n    this._roll = 0;\n    this.type = \"Camera3D\";\n    this._fov = fov;\n    this._near = near;\n    this._far = far;\n    this.matrix = new Matrix4();\n    this.viewMatrix = new Matrix4();\n    this.projectionMatrix = new Matrix4();\n    this.viewProjectionMatrix = new Matrix4();\n    this.position = new Vec3Callback(() => this.update());\n    this.rotation = new Quaternion();\n    const game = GameInstance.get();\n    const renderer = game.renderer;\n    this.viewport = new Rectangle(0, 0, renderer.width, renderer.height);\n    this.renderer = renderer;\n    this.forward = Vec3Forward();\n    this.up = Vec3Up();\n    this.right = Vec3Right();\n    this.start = new Vec3();\n    this.setAspectRatio();\n  }\n  update() {\n    const matrix2 = this.matrix;\n    const view = this.viewMatrix;\n    Mat4FromRotationXYTranslation(this.rotation, this.position, !this.isOrbit, matrix2);\n    Vec3TransformMat4Zero(FORWARD, matrix2, this.forward);\n    Vec3TransformMat4Zero(UP, matrix2, this.up);\n    Vec3TransformMat4Zero(RIGHT, matrix2, this.right);\n    Mat4Invert(matrix2, view);\n    Mat4Multiply(this.projectionMatrix, view, this.viewProjectionMatrix);\n    return this;\n  }\n  panX(amount) {\n    const pos = this.position;\n    if (!this.isOrbit) {\n      Vec3ScaleAndAdd(pos, this.right, amount, pos);\n    }\n    return this;\n  }\n  panY(amount) {\n    const pos = this.position;\n    const up = this.up;\n    if (this.isOrbit) {\n      pos.y += up.y * amount;\n    } else {\n      Vec3ScaleAndAdd(pos, up, amount, pos);\n    }\n    return this;\n  }\n  panZ(amount) {\n    const pos = this.position;\n    if (this.isOrbit) {\n      pos.z += amount;\n    } else {\n      Vec3ScaleAndAdd(pos, this.forward, amount, pos);\n    }\n    return this;\n  }\n  begin(x, y) {\n    this.start.set(x, y);\n  }\n  pan(x, y) {\n    const dx = x - this.start.x;\n    const dy = y - this.start.y;\n    const viewport = this.viewport;\n    this.panX(-dx * (this.panRate / viewport.width));\n    this.panY(dy * (this.panRate / viewport.height));\n    this.start.set(x, y);\n  }\n  rotate(x, y) {\n    const dx = x - this.start.x;\n    const dy = y - this.start.y;\n    const viewport = this.viewport;\n    this.rotation.x += dy * (this.rotateRate / viewport.height);\n    this.rotation.y += dx * (this.rotateRate / viewport.width);\n    this.start.set(x, y);\n    this.update();\n  }\n  zoom(delta) {\n    this.panZ(Clamp(delta, -1, 1) * (this.zoomRate / this.viewport.height));\n  }\n  setAspectRatio(value) {\n    if (!value) {\n      const renderer = this.renderer;\n      value = renderer.width / renderer.height;\n    }\n    this.aspect = value;\n    return this.updateProjectionMatrix();\n  }\n  updateProjectionMatrix() {\n    Mat4Perspective(DegToRad(this._fov), this.aspect, this._near, this._far, this.projectionMatrix);\n    return this;\n  }\n  get fov() {\n    return this._fov;\n  }\n  set fov(value) {\n    this._fov = Clamp(value, 0, 180);\n    this.updateProjectionMatrix();\n  }\n  get near() {\n    return this._near;\n  }\n  set near(value) {\n    if (value > 0) {\n      this._near = value;\n      this.updateProjectionMatrix();\n    }\n  }\n  get far() {\n    return this._far;\n  }\n  set far(value) {\n    if (value > 0) {\n      this._far = value;\n      this.updateProjectionMatrix();\n    }\n  }\n  get yaw() {\n    return this._yaw;\n  }\n  set yaw(value) {\n    this._yaw = value;\n    QuatRotationYawPitchRoll(value, this._pitch, this._roll, this.rotation);\n  }\n  get pitch() {\n    return this._pitch;\n  }\n  set pitch(value) {\n    this._pitch = value;\n    QuatRotationYawPitchRoll(this._yaw, value, this._roll, this.rotation);\n  }\n  get roll() {\n    return this._roll;\n  }\n  set roll(value) {\n    this._roll = value;\n    QuatRotationYawPitchRoll(this._yaw, this._pitch, value, this.rotation);\n  }\n};\n\n// src/world3d/World3D.ts\nvar World3D = class extends BaseWorld3D {\n  constructor(scene, x = 0, y = 0, z = 0, lightConfig) {\n    super(scene);\n    this.enableCameraCull = true;\n    this.type = \"World3D\";\n    this.camera = new NewCamera3D();\n    this.camera.position.set(x, y, z);\n    this.light = new Light(lightConfig);\n    this.shader = new AmbientLightShader();\n    this.renderData = CreateWorld3DRenderData(this, this.camera);\n  }\n  renderGL(renderPass) {\n    Flush(renderPass);\n    const shader = this.shader;\n    const camera = this.camera;\n    const gl2 = renderPass.renderer.gl;\n    SetShader(renderPass, shader, 0);\n    shader.setUniform(\"uViewProjectionMatrix\", camera.viewProjectionMatrix.data);\n    shader.setUniform(\"uCameraPosition\", camera.position.toArray());\n    this.light.setUniforms(shader);\n    gl2.enable(gl2.DEPTH_TEST);\n    this.renderList.forEach((entry) => {\n      if (entry.children.length > 0) {\n        this.renderNode(entry, renderPass);\n      } else {\n        entry.node.renderGL(renderPass);\n      }\n    });\n  }\n  postRenderGL(renderPass) {\n    const gl2 = renderPass.renderer.gl;\n    gl2.disable(gl2.DEPTH_TEST);\n    gl2.disable(gl2.CULL_FACE);\n    PopShader(renderPass);\n  }\n};\n\n// src/config/banner/GetBanner.ts\nfunction GetBanner() {\n  const {title, version, url, color, background} = ConfigStore.get(CONFIG_DEFAULTS.BANNER);\n  if (title !== \"\") {\n    const str = version !== \"\" ? title + \" \" + version : title;\n    console.log(`%c${str}%c ${url}`, `padding: 4px 16px; color: ${color}; background: ${background}`, \"\");\n  }\n}\n\n// src/config/parent/GetParent.ts\nfunction GetParent() {\n  return ConfigStore.get(CONFIG_DEFAULTS.PARENT);\n}\n\n// src/config/renderer/GetRenderer.ts\nfunction GetRenderer() {\n  return ConfigStore.get(CONFIG_DEFAULTS.RENDERER);\n}\n\n// src/scenes/CreateSceneRenderData.ts\nfunction CreateSceneRenderData() {\n  return {\n    gameFrame: 0,\n    numTotalFrames: 0,\n    numDirtyFrames: 0,\n    numDirtyCameras: 0,\n    worldData: []\n  };\n}\n\n// src/config/scenes/GetScenes.ts\nfunction GetScenes() {\n  return ConfigStore.get(CONFIG_DEFAULTS.SCENES);\n}\n\n// src/scenes/ResetSceneRenderData.ts\nfunction ResetSceneRenderData(renderData, gameFrame = 0) {\n  renderData.gameFrame = gameFrame;\n  renderData.numTotalFrames = 0;\n  renderData.numDirtyFrames = 0;\n  renderData.numDirtyCameras = 0;\n  renderData.worldData.length = 0;\n}\n\n// src/scenes/SceneManagerInstance.ts\nvar instance4;\nvar SceneManagerInstance = {\n  get: () => {\n    return instance4;\n  },\n  set: (manager) => {\n    instance4 = manager;\n  }\n};\n\n// src/scenes/SceneManager.ts\nvar SceneManager = class {\n  constructor() {\n    this.scenes = new Map();\n    this.sceneIndex = 0;\n    this.flush = false;\n    this.renderResult = CreateSceneRenderData();\n    this.game = GameInstance.get();\n    SceneManagerInstance.set(this);\n    Once(this.game, \"boot\", () => this.boot());\n  }\n  boot() {\n    GetScenes().forEach((scene) => new scene());\n  }\n  update(delta, time) {\n    for (const scene of this.scenes.values()) {\n      Emit(scene, \"update\", delta, time);\n    }\n  }\n  render(gameFrame) {\n    const results = this.renderResult;\n    ResetSceneRenderData(results, gameFrame);\n    for (const scene of this.scenes.values()) {\n      Emit(scene, \"render\", results);\n    }\n    if (this.flush) {\n      results.numDirtyFrames++;\n      this.flush = false;\n    }\n    return results;\n  }\n};\n\n// src/config/SetConfigDefaults.ts\nfunction SetConfigDefaults() {\n  SetBackgroundColor(0);\n  SetBatchSize(4096);\n  SetBanner(\"Phaser\", \"4.0.0\", \"https://phaser4.io\");\n  SetMaxTextures(0);\n  SetDefaultOrigin(0.5, 0.5);\n  SetSize(800, 600, 1);\n}\n\n// src/Game.ts\nvar Game = class extends EventEmitter {\n  constructor(...settings) {\n    super();\n    this.VERSION = \"4.0.0-beta1\";\n    this.isBooted = false;\n    this.isPaused = false;\n    this.willUpdate = true;\n    this.willRender = true;\n    this.lastTick = 0;\n    this.elapsed = 0;\n    this.frame = 0;\n    GameInstance.set(this);\n    SetConfigDefaults();\n    DOMContentLoaded(() => this.boot(settings));\n  }\n  boot(settings) {\n    settings.forEach((setting) => setting());\n    const renderer = GetRenderer();\n    this.renderer = new renderer();\n    this.textureManager = new TextureManager();\n    this.sceneManager = new SceneManager();\n    const parent = GetParent();\n    if (parent) {\n      AddToDOM(this.renderer.canvas, parent);\n    }\n    this.isBooted = true;\n    GetBanner();\n    Emit(this, \"boot\");\n    this.lastTick = performance.now();\n    this.step(this.lastTick);\n  }\n  pause() {\n    this.isPaused = true;\n  }\n  resume() {\n    this.isPaused = false;\n    this.lastTick = performance.now();\n  }\n  step(time) {\n    const delta = time - this.lastTick;\n    this.lastTick = time;\n    this.elapsed += delta;\n    if (!this.isPaused) {\n      if (this.willUpdate) {\n        this.sceneManager.update(delta, time);\n        Emit(this, \"update\", delta, time);\n      }\n      if (this.willRender) {\n        this.renderer.render(this.sceneManager.render(this.frame));\n      }\n    }\n    this.frame++;\n    GameInstance.setFrame(this.frame);\n    GameInstance.setElapsed(this.elapsed);\n    requestAnimationFrame((now) => this.step(now));\n  }\n  destroy() {\n  }\n};\n\n// src/scenes/GetConfigValue.ts\nfunction GetConfigValue(config, property, defaultValue) {\n  if (Object.prototype.hasOwnProperty.call(config, property)) {\n    return config[property];\n  } else {\n    return defaultValue;\n  }\n}\n\n// src/scenes/Install.ts\nfunction Install(scene, config = {}) {\n  const sceneManager = SceneManagerInstance.get();\n  const size = sceneManager.scenes.size;\n  const sceneIndex = sceneManager.sceneIndex;\n  const firstScene = size === 0;\n  if (typeof config === \"string\") {\n    scene.key = config;\n  } else if (config || !config && firstScene) {\n    scene.key = GetConfigValue(config, \"key\", \"scene\" + sceneIndex.toString());\n  }\n  if (sceneManager.scenes.has(scene.key)) {\n    console.warn(\"Scene key already in use: \" + scene.key);\n  } else {\n    sceneManager.scenes.set(scene.key, scene);\n    sceneManager.flush = true;\n    sceneManager.sceneIndex++;\n  }\n}\n\n// src/scenes/Scene.ts\nvar Scene = class {\n  constructor(config) {\n    this.game = GameInstance.get();\n    this.events = new Map();\n    Install(this, config);\n  }\n};\nexport {\n  camera_exports as Camera,\n  camera3d_exports as Camera3D,\n  config_exports as Config,\n  dom_exports as DOM,\n  device_exports as Device,\n  display_exports as Display,\n  display3d_exports as Display3D,\n  events_exports as Events,\n  Game,\n  gameobjects_exports as GameObjects,\n  gameobjects3d_exports as GameObjects3D,\n  geom_exports as Geom,\n  geom3d_exports as Geom3D,\n  input_exports2 as Input,\n  loader_exports as Loader,\n  materials3d_exports as Materials3D,\n  math_exports as Math,\n  Scene,\n  textures_exports as Textures,\n  time_exports as Time,\n  webgl1_exports as WebGL1,\n  world_exports as World,\n  world3d_exports as World3D\n};\n/**\n * @author       Florian Vazelle\n * @author       Geoffrey Glaive\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n/**\n * @author       Niklas von Hertzen (https://github.com/niklasvh/base64-arraybuffer)\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @author       Florian Mertens\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n", "import * as Phaser from '../../phaser-genesis/dist/Phaser';\n\nclass Demo extends Phaser.Scene\n{\n    constructor ()\n    {\n        super();\n\n        const world = new Phaser.World.StaticWorld(this);\n\n        const loader = new Phaser.Loader.Loader();\n\n        if (window.location.href.includes('192.168.0.100/phaser-genesis/'))\n        {\n            loader.setPath('/phaser4-examples/public/assets/');\n        }\n        else\n        {\n            loader.setPath('/examples/public/assets/');\n        }\n\n        loader.add(Phaser.Loader.ImageFile('logo', 'logo.png'));\n\n        loader.start().then(() => {\n\n            const logo = new Phaser.GameObjects.Sprite(400, 300, 'logo').setRotation(0.3);\n\n            // AddTween(logo).to(3000, { y: 500, rotation: 0 }).easing(Easing.Bounce.Out);\n\n            Phaser.Display.AddChildren(world, logo);\n\n        });\n    }\n}\n\nnew Phaser.Game(\n    Phaser.Config.WebGL(),\n    Phaser.Config.Parent('gameParent'),\n    Phaser.Config.BackgroundColor(0x2d2d2d),\n    Phaser.Config.Scenes(Demo)\n);\n"],
  "mappings": "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",
  "names": []
}
